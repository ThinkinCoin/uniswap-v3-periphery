{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "pool",
						"type": "address"
					},
					{
						"internalType": "int16",
						"name": "tickBitmapIndex",
						"type": "int16"
					}
				],
				"name": "getPopulatedTicksInWord",
				"outputs": [
					{
						"components": [
							{
								"internalType": "int24",
								"name": "tick",
								"type": "int24"
							},
							{
								"internalType": "int128",
								"name": "liquidityNet",
								"type": "int128"
							},
							{
								"internalType": "uint128",
								"name": "liquidityGross",
								"type": "uint128"
							}
						],
						"internalType": "struct ITickLens.PopulatedTick[]",
						"name": "populatedTicks",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "This avoids the waterfall of fetching the tick bitmap, parsing the bitmap to know which ticks to fetch, and then sending additional multicalls to fetch the tick data",
			"kind": "dev",
			"methods": {
				"getPopulatedTicksInWord(address,int16)": {
					"params": {
						"pool": "The address of the pool for which to fetch populated tick data",
						"tickBitmapIndex": "The index of the word in the tick bitmap for which to parse the bitmap and fetch all the populated ticks"
					},
					"returns": {
						"populatedTicks": "An array of tick data for the given word in the tick bitmap"
					}
				}
			},
			"title": "Tick Lens",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"getPopulatedTicksInWord(address,int16)": {
					"notice": "Get all the tick data for the populated ticks from a word of the tick bitmap of a pool"
				}
			},
			"notice": "Provides functions for fetching chunks of tick data for a pool",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/lens/TickLens_flattened.sol": "ITickLens"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 500
		},
		"remappings": []
	},
	"sources": {
		"contracts/lens/TickLens_flattened.sol": {
			"keccak256": "0x87c6e1ed5b3d4ef09315238918ac6efa363546310d1eaaaece7e1c76a76391fe",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://99efde654da9866ffa961084a458e6559f1522cdf2c4219acf0f14ac9d090939",
				"dweb:/ipfs/QmYgzf7KLQq9fCrLE32eSzhXFbLD2xmRpxf5eigUzJjubp"
			]
		}
	},
	"version": 1
}