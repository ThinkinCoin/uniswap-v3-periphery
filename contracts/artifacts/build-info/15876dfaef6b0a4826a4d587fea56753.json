{
	"id": "15876dfaef6b0a4826a4d587fea56753",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/V3Migrator_flattened.sol": {
				"content": "\n// SPDX-License-Identifier: GPL-2.0-or-later\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\n\n\npragma solidity >=0.5.0;\n\n\n\n\n\n\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n\n// File: contracts/interfaces/external/IERC20PermitAllowed.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Interface for permit\n/// @notice Interface used by DAI/CHAI for permit\ninterface IERC20PermitAllowed {\n    /// @notice Approve the spender to spend some tokens via the holder signature\n    /// @dev This is the permit interface used by DAI and CHAI\n    /// @param holder The address of the token holder, the token owner\n    /// @param spender The address of the token spender\n    /// @param nonce The holder's nonce, increases at each call to permit\n    /// @param expiry The timestamp at which the permit is no longer valid\n    /// @param allowed Boolean that sets approval amount, true for type(uint256).max and false for 0\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function permit(\n        address holder,\n        address spender,\n        uint256 nonce,\n        uint256 expiry,\n        bool allowed,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n}\n\n// File: @openzeppelin/contracts/drafts/IERC20Permit.sol\n\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(address owner, address spender, uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n\n// File: contracts/interfaces/ISelfPermit.sol\n\n\npragma solidity >=0.7.5;\n\n/// @title Self Permit\n/// @notice Functionality to call permit on any EIP-2612-compliant token for use in the route\ninterface ISelfPermit {\n    /// @notice Permits this contract to spend a given token from `msg.sender`\n    /// @dev The `owner` is always msg.sender and the `spender` is always address(this).\n    /// @param token The address of the token spent\n    /// @param value The amount that can be spent of token\n    /// @param deadline A timestamp, the current blocktime must be less than or equal to this timestamp\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function selfPermit(\n        address token,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n\n    /// @notice Permits this contract to spend a given token from `msg.sender`\n    /// @dev The `owner` is always msg.sender and the `spender` is always address(this).\n    /// Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\n    /// @param token The address of the token spent\n    /// @param value The amount that can be spent of token\n    /// @param deadline A timestamp, the current blocktime must be less than or equal to this timestamp\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function selfPermitIfNecessary(\n        address token,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n\n    /// @notice Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\n    /// @dev The `owner` is always msg.sender and the `spender` is always address(this)\n    /// @param token The address of the token spent\n    /// @param nonce The current nonce of the owner\n    /// @param expiry The timestamp at which the permit is no longer valid\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function selfPermitAllowed(\n        address token,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n\n    /// @notice Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\n    /// @dev The `owner` is always msg.sender and the `spender` is always address(this)\n    /// Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\n    /// @param token The address of the token spent\n    /// @param nonce The current nonce of the owner\n    /// @param expiry The timestamp at which the permit is no longer valid\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function selfPermitAllowedIfNecessary(\n        address token,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n}\n\n// File: contracts/interfaces/IMulticall.sol\n\n\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Multicall interface\n/// @notice Enables calling multiple methods in a single call to the contract\ninterface IMulticall {\n    /// @notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n    /// @dev The `msg.value` should not be trusted for any method callable from multicall.\n    /// @param data The encoded function data for each of the calls to make to this contract\n    /// @return results The results from each of the calls passed in via data\n    function multicall(bytes[] calldata data) external payable returns (bytes[] memory results);\n}\n\n// File: contracts/base/Multicall.sol\n\n\npragma solidity =0.7.6;\n\n\n/// @title Multicall\n/// @notice Enables calling multiple methods in a single call to the contract\nabstract contract Multicall is IMulticall {\n    /// @inheritdoc IMulticall\n    function multicall(bytes[] calldata data) public payable override returns (bytes[] memory results) {\n        results = new bytes[](data.length);\n        for (uint256 i = 0; i < data.length; i++) {\n            (bool success, bytes memory result) = address(this).delegatecall(data[i]);\n\n            if (!success) {\n                // Next 5 lines from https://ethereum.stackexchange.com/a/83577\n                if (result.length < 68) revert();\n                assembly {\n                    result := add(result, 0x04)\n                }\n                revert(abi.decode(result, (string)));\n            }\n\n            results[i] = result;\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: contracts/interfaces/external/IWETH9.sol\n\n\npragma solidity =0.7.6;\n\n\n/// @title Interface for WETH9\ninterface IWETH9 is IERC20 {\n    /// @notice Deposit ether to get wrapped ether\n    function deposit() external payable;\n\n    /// @notice Withdraw wrapped ether to get ether\n    function withdraw(uint256) external;\n}\n\n// File: contracts/base/SelfPermit.sol\n\n\npragma solidity >=0.5.0;\n\n\n\n\n\n/// @title Self Permit\n/// @notice Functionality to call permit on any EIP-2612-compliant token for use in the route\n/// @dev These functions are expected to be embedded in multicalls to allow EOAs to approve a contract and call a function\n/// that requires an approval in a single transaction.\nabstract contract SelfPermit is ISelfPermit {\n    /// @inheritdoc ISelfPermit\n    function selfPermit(\n        address token,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public payable override {\n        IERC20Permit(token).permit(msg.sender, address(this), value, deadline, v, r, s);\n    }\n\n    /// @inheritdoc ISelfPermit\n    function selfPermitIfNecessary(\n        address token,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable override {\n        if (IERC20(token).allowance(msg.sender, address(this)) < value) selfPermit(token, value, deadline, v, r, s);\n    }\n\n    /// @inheritdoc ISelfPermit\n    function selfPermitAllowed(\n        address token,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) public payable override {\n        IERC20PermitAllowed(token).permit(msg.sender, address(this), nonce, expiry, true, v, r, s);\n    }\n\n    /// @inheritdoc ISelfPermit\n    function selfPermitAllowedIfNecessary(\n        address token,\n        uint256 nonce,\n        uint256 expiry,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable override {\n        if (IERC20(token).allowance(msg.sender, address(this)) < type(uint256).max)\n            selfPermitAllowed(token, nonce, expiry, v, r, s);\n    }\n}\n\n// File: contracts/libraries/TransferHelper.sol\n\n\npragma solidity >=0.6.0;\n\n\nlibrary TransferHelper {\n    /// @notice Transfers tokens from the targeted address to the given destination\n    /// @notice Errors with 'STF' if transfer fails\n    /// @param token The contract address of the token to be transferred\n    /// @param from The originating address from which the tokens will be transferred\n    /// @param to The destination address of the transfer\n    /// @param value The amount to be transferred\n    function safeTransferFrom(\n        address token,\n        address from,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) =\n            token.call(abi.encodeWithSelector(IERC20.transferFrom.selector, from, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'STF');\n    }\n\n    /// @notice Transfers tokens from msg.sender to a recipient\n    /// @dev Errors with ST if transfer fails\n    /// @param token The contract address of the token which will be transferred\n    /// @param to The recipient of the transfer\n    /// @param value The value of the transfer\n    function safeTransfer(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST');\n    }\n\n    /// @notice Approves the stipulated contract to spend the given allowance in the given token\n    /// @dev Errors with 'SA' if transfer fails\n    /// @param token The contract address of the token to be approved\n    /// @param to The target of the approval\n    /// @param value The amount of the given token the target will be allowed to spend\n    function safeApprove(\n        address token,\n        address to,\n        uint256 value\n    ) internal {\n        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value));\n        require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA');\n    }\n\n    /// @notice Transfers ETH to the recipient address\n    /// @dev Fails with `STE`\n    /// @param to The destination of the transfer\n    /// @param value The value to be transferred\n    function safeTransferETH(address to, uint256 value) internal {\n        (bool success, ) = to.call{value: value}(new bytes(0));\n        require(success, 'STE');\n    }\n}\n\n// File: contracts/libraries/PoolAddress.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\nlibrary PoolAddress {\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\n\n    /// @notice The identifying key of the pool\n    struct PoolKey {\n        address token0;\n        address token1;\n        uint24 fee;\n    }\n\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\n    /// @param tokenA The first token of a pool, unsorted\n    /// @param tokenB The second token of a pool, unsorted\n    /// @param fee The fee level of the pool\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\n    function getPoolKey(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal pure returns (PoolKey memory) {\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\n    }\n\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\n    /// @param factory The Uniswap V3 factory contract address\n    /// @param key The PoolKey\n    /// @return pool The contract address of the V3 pool\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\n        require(key.token0 < key.token1);\n        pool = address(\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        hex'ff',\n                        factory,\n                        keccak256(abi.encode(key.token0, key.token1, key.fee)),\n                        POOL_INIT_CODE_HASH\n                    )\n                )\n            )\n        );\n    }\n}\n\n// File: contracts/interfaces/IPeripheryImmutableState.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n\n// File: contracts/base/PeripheryImmutableState.sol\n\n\npragma solidity =0.7.6;\n\n\n/// @title Immutable state\n/// @notice Immutable state used by periphery contracts\nabstract contract PeripheryImmutableState is IPeripheryImmutableState {\n    /// @inheritdoc IPeripheryImmutableState\n    address public immutable override factory;\n    /// @inheritdoc IPeripheryImmutableState\n    address public immutable override WETH9;\n\n    constructor(address _factory, address _WETH9) {\n        factory = _factory;\n        WETH9 = _WETH9;\n    }\n}\n\n// File: contracts/interfaces/IPeripheryPayments.sol\n\n\npragma solidity >=0.7.5;\n\n/// @title Periphery Payments\n/// @notice Functions to ease deposits and withdrawals of ETH\ninterface IPeripheryPayments {\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\n    /// @param recipient The address receiving ETH\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\n\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n    /// that use ether for the input amount\n    function refundETH() external payable;\n\n    /// @notice Transfers the full amount of a token held by this contract to recipient\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n    /// @param token The contract address of the token which will be transferred to `recipient`\n    /// @param amountMinimum The minimum amount of token required for a transfer\n    /// @param recipient The destination address of the token\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) external payable;\n}\n\n// File: contracts/interfaces/IPoolInitializer.sol\n\n\npragma solidity >=0.7.5;\n\n/// @title Creates and initializes V3 Pools\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n/// require the pool to exist.\ninterface IPoolInitializer {\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n    /// @param token0 The contract address of token0 of the pool\n    /// @param token1 The contract address of token1 of the pool\n    /// @param fee The fee amount of the v3 pool for the specified token pair\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\n    function createAndInitializePoolIfNecessary(\n        address token0,\n        address token1,\n        uint24 fee,\n        uint160 sqrtPriceX96\n    ) external payable returns (address pool);\n}\n\n// File: contracts/base/PoolInitializer.sol\n\n\npragma solidity =0.7.6;\n\n\n\n\n\n/// @title Creates and initializes V3 Pools\nabstract contract PoolInitializer is IPoolInitializer, PeripheryImmutableState {\n    /// @inheritdoc IPoolInitializer\n    function createAndInitializePoolIfNecessary(\n        address token0,\n        address token1,\n        uint24 fee,\n        uint160 sqrtPriceX96\n    ) external payable override returns (address pool) {\n        require(token0 < token1);\n        pool = IUniswapV3Factory(factory).getPool(token0, token1, fee);\n\n        if (pool == address(0)) {\n            pool = IUniswapV3Factory(factory).createPool(token0, token1, fee);\n            IUniswapV3Pool(pool).initialize(sqrtPriceX96);\n        } else {\n            (uint160 sqrtPriceX96Existing, , , , , , ) = IUniswapV3Pool(pool).slot0();\n            if (sqrtPriceX96Existing == 0) {\n                IUniswapV3Pool(pool).initialize(sqrtPriceX96);\n            }\n        }\n    }\n}\n\n// File: contracts/interfaces/IV3Migrator.sol\n\n\npragma solidity >=0.7.5;\n\n\n\n\n/// @title V3 Migrator\n/// @notice Enables migration of liqudity from Uniswap v2-compatible pairs into Uniswap v3 pools\ninterface IV3Migrator is IMulticall, ISelfPermit, IPoolInitializer {\n    struct MigrateParams {\n        address pair; // the Uniswap v2-compatible pair\n        uint256 liquidityToMigrate; // expected to be balanceOf(msg.sender)\n        uint8 percentageToMigrate; // represented as a numerator over 100\n        address token0;\n        address token1;\n        uint24 fee;\n        int24 tickLower;\n        int24 tickUpper;\n        uint256 amount0Min; // must be discounted by percentageToMigrate\n        uint256 amount1Min; // must be discounted by percentageToMigrate\n        address recipient;\n        uint256 deadline;\n        bool refundAsETH;\n    }\n\n    /// @notice Migrates liquidity to v3 by burning v2 liquidity and minting a new position for v3\n    /// @dev Slippage protection is enforced via `amount{0,1}Min`, which should be a discount of the expected values of\n    /// the maximum amount of v3 liquidity that the v2 liquidity can get. For the special case of migrating to an\n    /// out-of-range position, `amount{0,1}Min` may be set to 0, enforcing that the position remains out of range\n    /// @param params The params necessary to migrate v2 liquidity, encoded as `MigrateParams` in calldata\n    function migrate(MigrateParams calldata params) external;\n}\n\n// File: @openzeppelin/contracts/introspection/IERC165.sol\n\n\n\npragma solidity ^0.7.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721.sol\n\n\n\npragma solidity ^0.7.0;\n\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\n      *\n      * Requirements:\n      *\n      * - `from` cannot be the zero address.\n      * - `to` cannot be the zero address.\n      * - `tokenId` token must exist and be owned by `from`.\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n      *\n      * Emits a {Transfer} event.\n      */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n}\n\n// File: contracts/interfaces/IERC721Permit.sol\n\n\npragma solidity >=0.7.5;\n\n\n/// @title ERC721 with permit\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\ninterface IERC721Permit is IERC721 {\n    /// @notice The permit typehash used in the permit signature\n    /// @return The typehash for the permit\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    /// @notice The domain separator used in the permit signature\n    /// @return The domain seperator used in encoding of permit signature\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    /// @notice Approve of a specific token ID for spending by spender via signature\n    /// @param spender The account that is being approved\n    /// @param tokenId The ID of the token that is being approved for spending\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function permit(\n        address spender,\n        uint256 tokenId,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\n\n\n\npragma solidity ^0.7.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n\n// File: @openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\n\n\n\npragma solidity ^0.7.0;\n\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n\n// File: contracts/interfaces/INonfungiblePositionManager.sol\n\n\npragma solidity >=0.7.5;\n\n\n\n\n\n\n\n\n/// @title Non-fungible token for positions\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n/// and authorized.\ninterface INonfungiblePositionManager is\n    IPoolInitializer,\n    IPeripheryPayments,\n    IPeripheryImmutableState,\n    IERC721Metadata,\n    IERC721Enumerable,\n    IERC721Permit\n{\n    /// @notice Emitted when liquidity is increased for a position NFT\n    /// @dev Also emitted when a token is minted\n    /// @param tokenId The ID of the token for which liquidity was increased\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when liquidity is decreased for a position NFT\n    /// @param tokenId The ID of the token for which liquidity was decreased\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when tokens are collected for a position NFT\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n    /// @param tokenId The ID of the token for which underlying tokens were collected\n    /// @param recipient The address of the account that received the collected tokens\n    /// @param amount0 The amount of token0 owed to the position that was collected\n    /// @param amount1 The amount of token1 owed to the position that was collected\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\n\n    /// @notice Returns the position information associated with a given token ID.\n    /// @dev Throws if the token ID is not valid.\n    /// @param tokenId The ID of the token that represents the position\n    /// @return nonce The nonce for permits\n    /// @return operator The address that is approved for spending\n    /// @return token0 The address of the token0 for a specific pool\n    /// @return token1 The address of the token1 for a specific pool\n    /// @return fee The fee associated with the pool\n    /// @return tickLower The lower end of the tick range for the position\n    /// @return tickUpper The higher end of the tick range for the position\n    /// @return liquidity The liquidity of the position\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\n    function positions(uint256 tokenId)\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            uint24 fee,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    struct MintParams {\n        address token0;\n        address token1;\n        uint24 fee;\n        int24 tickLower;\n        int24 tickUpper;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        address recipient;\n        uint256 deadline;\n    }\n\n    /// @notice Creates a new position wrapped in a NFT\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n    /// @return tokenId The ID of the token that represents the minted position\n    /// @return liquidity The amount of liquidity for this position\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function mint(MintParams calldata params)\n        external\n        payable\n        returns (\n            uint256 tokenId,\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct IncreaseLiquidityParams {\n        uint256 tokenId;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\n    /// amount0Desired The desired amount of token0 to be spent,\n    /// amount1Desired The desired amount of token1 to be spent,\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return liquidity The new liquidity amount as a result of the increase\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct DecreaseLiquidityParams {\n        uint256 tokenId;\n        uint128 liquidity;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\n    /// amount The amount by which liquidity will be decreased,\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (uint256 amount0, uint256 amount1);\n\n    struct CollectParams {\n        uint256 tokenId;\n        address recipient;\n        uint128 amount0Max;\n        uint128 amount1Max;\n    }\n\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\n    /// recipient The account that should receive the tokens,\n    /// amount0Max The maximum amount of token0 to collect,\n    /// amount1Max The maximum amount of token1 to collect\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n    /// must be collected first.\n    /// @param tokenId The ID of the token that is being burned\n    function burn(uint256 tokenId) external payable;\n}\n\n// File: @uniswap/v2-core/contracts/interfaces/IUniswapV2Pair.sol\n\npragma solidity >=0.5.0;\n\ninterface IUniswapV2Pair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n    function factory() external view returns (address);\n    function token0() external view returns (address);\n    function token1() external view returns (address);\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n    function price0CumulativeLast() external view returns (uint);\n    function price1CumulativeLast() external view returns (uint);\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n    function burn(address to) external returns (uint amount0, uint amount1);\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n    function skim(address to) external;\n    function sync() external;\n\n    function initialize(address, address) external;\n}\n\n// File: @uniswap/v3-core/contracts/libraries/LowGasSafeMath.sol\n\n\npragma solidity >=0.7.0;\n\n/// @title Optimized overflow and underflow safe math operations\n/// @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\nlibrary LowGasSafeMath {\n    /// @notice Returns x + y, reverts if sum overflows uint256\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x + y) >= x);\n    }\n\n    /// @notice Returns x - y, reverts if underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require((z = x - y) <= x);\n    }\n\n    /// @notice Returns x * y, reverts if overflows\n    /// @param x The multiplicand\n    /// @param y The multiplier\n    /// @return z The product of x and y\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(x == 0 || (z = x * y) / x == y);\n    }\n\n    /// @notice Returns x + y, reverts if overflows or underflows\n    /// @param x The augend\n    /// @param y The addend\n    /// @return z The sum of x and y\n    function add(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x + y) >= x == (y >= 0));\n    }\n\n    /// @notice Returns x - y, reverts if overflows or underflows\n    /// @param x The minuend\n    /// @param y The subtrahend\n    /// @return z The difference of x and y\n    function sub(int256 x, int256 y) internal pure returns (int256 z) {\n        require((z = x - y) <= x == (y >= 0));\n    }\n}\n\n// File: contracts/V3Migrator.sol\n\n\npragma solidity =0.7.6;\n\n\n\n\n\n\n\n\n\n\n\n/// @title Uniswap V3 Migrator\ncontract V3Migrator is IV3Migrator, PeripheryImmutableState, PoolInitializer, Multicall, SelfPermit {\n    using LowGasSafeMath for uint256;\n\n    address public immutable nonfungiblePositionManager;\n\n    constructor(\n        address _factory,\n        address _WETH9,\n        address _nonfungiblePositionManager\n    ) PeripheryImmutableState(_factory, _WETH9) {\n        nonfungiblePositionManager = _nonfungiblePositionManager;\n    }\n\n    receive() external payable {\n        require(msg.sender == WETH9, 'Not WETH9');\n    }\n\n    function migrate(MigrateParams calldata params) external override {\n        require(params.percentageToMigrate > 0, 'Percentage too small');\n        require(params.percentageToMigrate <= 100, 'Percentage too large');\n\n        // burn v2 liquidity to this address\n        IUniswapV2Pair(params.pair).transferFrom(msg.sender, params.pair, params.liquidityToMigrate);\n        (uint256 amount0V2, uint256 amount1V2) = IUniswapV2Pair(params.pair).burn(address(this));\n\n        // calculate the amounts to migrate to v3\n        uint256 amount0V2ToMigrate = amount0V2.mul(params.percentageToMigrate) / 100;\n        uint256 amount1V2ToMigrate = amount1V2.mul(params.percentageToMigrate) / 100;\n\n        // approve the position manager up to the maximum token amounts\n        TransferHelper.safeApprove(params.token0, nonfungiblePositionManager, amount0V2ToMigrate);\n        TransferHelper.safeApprove(params.token1, nonfungiblePositionManager, amount1V2ToMigrate);\n\n        // mint v3 position\n        (, , uint256 amount0V3, uint256 amount1V3) =\n            INonfungiblePositionManager(nonfungiblePositionManager).mint(\n                INonfungiblePositionManager.MintParams({\n                    token0: params.token0,\n                    token1: params.token1,\n                    fee: params.fee,\n                    tickLower: params.tickLower,\n                    tickUpper: params.tickUpper,\n                    amount0Desired: amount0V2ToMigrate,\n                    amount1Desired: amount1V2ToMigrate,\n                    amount0Min: params.amount0Min,\n                    amount1Min: params.amount1Min,\n                    recipient: params.recipient,\n                    deadline: params.deadline\n                })\n            );\n\n        // if necessary, clear allowance and refund dust\n        if (amount0V3 < amount0V2) {\n            if (amount0V3 < amount0V2ToMigrate) {\n                TransferHelper.safeApprove(params.token0, nonfungiblePositionManager, 0);\n            }\n\n            uint256 refund0 = amount0V2 - amount0V3;\n            if (params.refundAsETH && params.token0 == WETH9) {\n                IWETH9(WETH9).withdraw(refund0);\n                TransferHelper.safeTransferETH(msg.sender, refund0);\n            } else {\n                TransferHelper.safeTransfer(params.token0, msg.sender, refund0);\n            }\n        }\n        if (amount1V3 < amount1V2) {\n            if (amount1V3 < amount1V2ToMigrate) {\n                TransferHelper.safeApprove(params.token1, nonfungiblePositionManager, 0);\n            }\n\n            uint256 refund1 = amount1V2 - amount1V3;\n            if (params.refundAsETH && params.token1 == WETH9) {\n                IWETH9(WETH9).withdraw(refund1);\n                TransferHelper.safeTransferETH(msg.sender, refund1);\n            } else {\n                TransferHelper.safeTransfer(params.token1, msg.sender, refund1);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 1000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/V3Migrator_flattened.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20PermitAllowed": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "holder",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "allowed",
									"type": "bool"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": {
								"details": "This is the permit interface used by DAI and CHAI",
								"params": {
									"allowed": "Boolean that sets approval amount, true for type(uint256).max and false for 0",
									"expiry": "The timestamp at which the permit is no longer valid",
									"holder": "The address of the token holder, the token owner",
									"nonce": "The holder's nonce, increases at each call to permit",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The address of the token spender",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							}
						},
						"title": "Interface for permit",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": "8fcbaf0c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"holder\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"allowed\",\"type\":\"bool\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"details\":\"This is the permit interface used by DAI and CHAI\",\"params\":{\"allowed\":\"Boolean that sets approval amount, true for type(uint256).max and false for 0\",\"expiry\":\"The timestamp at which the permit is no longer valid\",\"holder\":\"The address of the token holder, the token owner\",\"nonce\":\"The holder's nonce, increases at each call to permit\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The address of the token spender\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}}},\"title\":\"Interface for permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)\":{\"notice\":\"Approve the spender to spend some tokens via the holder signature\"}},\"notice\":\"Interface used by DAI/CHAI for permit\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IERC20PermitAllowed\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"permit(address,address,uint256,uint256,bool,uint8,bytes32,bytes32)": {
								"notice": "Approve the spender to spend some tokens via the holder signature"
							}
						},
						"notice": "Interface used by DAI/CHAI for permit",
						"version": 1
					}
				},
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Enumerable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional enumeration extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "See https://eips.ethereum.org/EIPS/eip-721",
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC-721 Non-Fungible Token Standard, optional metadata extension",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IERC721Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Permit": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721 with permit",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721 with permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"}},\"notice\":\"Extension to ERC721 that includes a permit function for signature based approvals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IERC721Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							}
						},
						"notice": "Extension to ERC721 that includes a permit function for signature based approvals",
						"version": 1
					}
				},
				"IMulticall": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "multicall",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"multicall(bytes[])": {
								"details": "The `msg.value` should not be trusted for any method callable from multicall.",
								"params": {
									"data": "The encoded function data for each of the calls to make to this contract"
								},
								"returns": {
									"results": "The results from each of the calls passed in via data"
								}
							}
						},
						"title": "Multicall interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"multicall(bytes[])": "ac9650d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}}},\"title\":\"Multicall interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"notice\":\"Enables calling multiple methods in a single call to the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IMulticall\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"multicall(bytes[])": {
								"notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
							}
						},
						"notice": "Enables calling multiple methods in a single call to the contract",
						"version": 1
					}
				},
				"INonfungiblePositionManager": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "DecreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "IncreaseLiquidity",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint128",
											"name": "amount0Max",
											"type": "uint128"
										},
										{
											"internalType": "uint128",
											"name": "amount1Max",
											"type": "uint128"
										}
									],
									"internalType": "struct INonfungiblePositionManager.CollectParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint128",
											"name": "liquidity",
											"type": "uint128"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.DecreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "decreaseLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "uint256",
											"name": "tokenId",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.IncreaseLiquidityParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "increaseLiquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Desired",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										}
									],
									"internalType": "struct INonfungiblePositionManager.MintParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "nonce",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "tokenOfOwnerByIndex",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"details": "The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior",
								"params": {
									"amount0": "The amount of token0 owed to the position that was collected",
									"amount1": "The amount of token1 owed to the position that was collected",
									"recipient": "The address of the account that received the collected tokens",
									"tokenId": "The ID of the token for which underlying tokens were collected"
								}
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was accounted for the decrease in liquidity",
									"amount1": "The amount of token1 that was accounted for the decrease in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was decreased",
									"tokenId": "The ID of the token for which liquidity was decreased"
								}
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"details": "Also emitted when a token is minted",
								"params": {
									"amount0": "The amount of token0 that was paid for the increase in liquidity",
									"amount1": "The amount of token1 that was paid for the increase in liquidity",
									"liquidity": "The amount by which liquidity for the NFT position was increased",
									"tokenId": "The ID of the token for which liquidity was increased"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"returns": {
									"_0": "The domain seperator used in encoding of permit signature"
								}
							},
							"PERMIT_TYPEHASH()": {
								"returns": {
									"_0": "The typehash for the permit"
								}
							},
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"burn(uint256)": {
								"params": {
									"tokenId": "The ID of the token that is being burned"
								}
							},
							"collect((uint256,address,uint128,uint128))": {
								"params": {
									"params": "tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 accounted to the position's tokens owed",
									"amount1": "The amount of token1 accounted to the position's tokens owed"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"params": {
									"params": "tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"
								},
								"returns": {
									"amount0": "The amount of token0 to acheive resulting liquidity",
									"amount1": "The amount of token1 to acheive resulting liquidity",
									"liquidity": "The new liquidity amount as a result of the increase"
								}
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"details": "Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.",
								"params": {
									"params": "The params necessary to mint a position, encoded as `MintParams` in calldata"
								},
								"returns": {
									"amount0": "The amount of token0",
									"amount1": "The amount of token1",
									"liquidity": "The amount of liquidity for this position",
									"tokenId": "The ID of the token that represents the minted position"
								}
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"params": {
									"deadline": "The deadline timestamp by which the call must be mined for the approve to work",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"spender": "The account that is being approved",
									"tokenId": "The ID of the token that is being approved for spending",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"positions(uint256)": {
								"details": "Throws if the token ID is not valid.",
								"params": {
									"tokenId": "The ID of the token that represents the position"
								},
								"returns": {
									"fee": "The fee associated with the pool",
									"feeGrowthInside0LastX128": "The fee growth of token0 as of the last action on the individual position",
									"feeGrowthInside1LastX128": "The fee growth of token1 as of the last action on the individual position",
									"liquidity": "The liquidity of the position",
									"nonce": "The nonce for permits",
									"operator": "The address that is approved for spending",
									"tickLower": "The lower end of the tick range for the position",
									"tickUpper": "The higher end of the tick range for the position",
									"token0": "The address of the token0 for a specific pool",
									"token1": "The address of the token1 for a specific pool",
									"tokensOwed0": "The uncollected amount of token0 owed to the position as of the last computation",
									"tokensOwed1": "The uncollected amount of token1 owed to the position as of the last computation"
								}
							},
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenByIndex(uint256)": {
								"details": "Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."
							},
							"tokenOfOwnerByIndex(address,uint256)": {
								"details": "Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total amount of tokens stored by the contract."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Non-fungible token for positions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"WETH9()": "4aa4a4fc",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"collect((uint256,address,uint128,uint128))": "fc6f7865",
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562",
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": "0c49ccbe",
							"factory()": "c45a0155",
							"getApproved(uint256)": "081812fc",
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": "219f5d17",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": "88316456",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": "7ac2ff7b",
							"positions(uint256)": "99fbab88",
							"refundETH()": "12210e8a",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"symbol()": "95d89b41",
							"tokenByIndex(uint256)": "4f6ccce7",
							"tokenOfOwnerByIndex(address,uint256)": "2f745c59",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Collect(uint256,address,uint256,uint256)": {
								"notice": "Emitted when tokens are collected for a position NFT"
							},
							"DecreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is decreased for a position NFT"
							},
							"IncreaseLiquidity(uint256,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is increased for a position NFT"
							}
						},
						"kind": "user",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"notice": "The domain separator used in the permit signature"
							},
							"PERMIT_TYPEHASH()": {
								"notice": "The permit typehash used in the permit signature"
							},
							"burn(uint256)": {
								"notice": "Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."
							},
							"collect((uint256,address,uint128,uint128))": {
								"notice": "Collects up to a maximum amount of fees owed to a specific position to the recipient"
							},
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							},
							"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))": {
								"notice": "Decreases the amount of liquidity in a position and accounts it to the position"
							},
							"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))": {
								"notice": "Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"
							},
							"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))": {
								"notice": "Creates a new position wrapped in a NFT"
							},
							"permit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Approve of a specific token ID for spending by spender via signature"
							},
							"positions(uint256)": {
								"notice": "Returns the position information associated with a given token ID."
							},
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.",
						"version": 1
					}
				},
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				},
				"IPeripheryPayments": {
					"abi": [
						{
							"inputs": [],
							"name": "refundETH",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "sweepToken",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountMinimum",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "unwrapWETH9",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"refundETH()": {
								"details": "Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"
							},
							"sweepToken(address,uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing the token from users",
								"params": {
									"amountMinimum": "The minimum amount of token required for a transfer",
									"recipient": "The destination address of the token",
									"token": "The contract address of the token which will be transferred to `recipient`"
								}
							},
							"unwrapWETH9(uint256,address)": {
								"details": "The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.",
								"params": {
									"amountMinimum": "The minimum amount of WETH9 to unwrap",
									"recipient": "The address receiving ETH"
								}
							}
						},
						"title": "Periphery Payments",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"refundETH()": "12210e8a",
							"sweepToken(address,uint256,address)": "df2ab5bb",
							"unwrapWETH9(uint256,address)": "49404b7c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"refundETH()": {
								"notice": "Refunds any ETH balance held by this contract to the `msg.sender`"
							},
							"sweepToken(address,uint256,address)": {
								"notice": "Transfers the full amount of a token held by this contract to recipient"
							},
							"unwrapWETH9(uint256,address)": {
								"notice": "Unwraps the contract's WETH9 balance and sends it to recipient as ETH."
							}
						},
						"notice": "Functions to ease deposits and withdrawals of ETH",
						"version": 1
					}
				},
				"IPoolInitializer": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							}
						},
						"title": "Creates and initializes V3 Pools",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}}},\"title\":\"Creates and initializes V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"}},\"notice\":\"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IPoolInitializer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							}
						},
						"notice": "Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.",
						"version": 1
					}
				},
				"ISelfPermit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermitAllowed",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermitAllowedIfNecessary",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermitIfNecessary",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this).",
								"params": {
									"deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
									"value": "The amount that can be spent of token"
								}
							},
							"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this)",
								"params": {
									"expiry": "The timestamp at which the permit is no longer valid",
									"nonce": "The current nonce of the owner",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.",
								"params": {
									"expiry": "The timestamp at which the permit is no longer valid",
									"nonce": "The current nonce of the owner",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit",
								"params": {
									"deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
									"value": "The amount that can be spent of token"
								}
							}
						},
						"title": "Self Permit",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
							"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "4659a494",
							"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "a4a78f0c",
							"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "c2e3140a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this).\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this)\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}}},\"title\":\"Self Permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"}},\"notice\":\"Functionality to call permit on any EIP-2612-compliant token for use in the route\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"ISelfPermit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend a given token from `msg.sender`"
							},
							"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
							},
							"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
							},
							"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend a given token from `msg.sender`"
							}
						},
						"notice": "Functionality to call permit on any EIP-2612-compliant token for use in the route",
						"version": 1
					}
				},
				"IUniswapV2Pair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IUniswapV2Pair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IUniswapV3Factory": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "FeeAmountEnabled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "oldOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnerChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"name": "PoolCreated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "createPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "int24",
									"name": "tickSpacing",
									"type": "int24"
								}
							],
							"name": "enableFeeAmount",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "feeAmountTickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenA",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenB",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								}
							],
							"name": "getPool",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								}
							],
							"name": "setOwner",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip",
									"tickSpacing": "The minimum number of ticks between initialized ticks for pools created with the given fee"
								}
							},
							"OwnerChanged(address,address)": {
								"params": {
									"newOwner": "The owner after the owner was changed",
									"oldOwner": "The owner before the owner was changed"
								}
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"pool": "The address of the created pool",
									"tickSpacing": "The minimum number of ticks between initialized ticks",
									"token0": "The first token of the pool by address sort order",
									"token1": "The second token of the pool by address sort order"
								}
							}
						},
						"kind": "dev",
						"methods": {
							"createPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.",
								"params": {
									"fee": "The desired fee for the pool",
									"tokenA": "One of the two tokens in the desired pool",
									"tokenB": "The other of the two tokens in the desired pool"
								},
								"returns": {
									"pool": "The address of the newly created pool"
								}
							},
							"enableFeeAmount(uint24,int24)": {
								"details": "Fee amounts may never be removed once enabled",
								"params": {
									"fee": "The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)",
									"tickSpacing": "The spacing between ticks to be enforced for all pools created with the given fee amount"
								}
							},
							"feeAmountTickSpacing(uint24)": {
								"details": "A fee amount can never be removed, so this value should be hard coded or cached in the calling context",
								"params": {
									"fee": "The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"
								},
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"getPool(address,address,uint24)": {
								"details": "tokenA and tokenB may be passed in either token0/token1 or token1/token0 order",
								"params": {
									"fee": "The fee collected upon every swap in the pool, denominated in hundredths of a bip",
									"tokenA": "The contract address of either token0 or token1",
									"tokenB": "The contract address of the other token"
								},
								"returns": {
									"pool": "The pool address"
								}
							},
							"owner()": {
								"details": "Can be changed by the current owner via setOwner",
								"returns": {
									"_0": "The address of the factory owner"
								}
							},
							"setOwner(address)": {
								"details": "Must be called by the current owner",
								"params": {
									"_owner": "The new owner of the factory"
								}
							}
						},
						"title": "The interface for the Uniswap V3 Factory",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createPool(address,address,uint24)": "a1671295",
							"enableFeeAmount(uint24,int24)": "8a7c195f",
							"feeAmountTickSpacing(uint24)": "22afcccb",
							"getPool(address,address,uint24)": "1698ee82",
							"owner()": "8da5cb5b",
							"setOwner(address)": "13af4035"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"FeeAmountEnabled(uint24,int24)": {
								"notice": "Emitted when a new fee amount is enabled for pool creation via the factory"
							},
							"OwnerChanged(address,address)": {
								"notice": "Emitted when the owner of the factory is changed"
							},
							"PoolCreated(address,address,uint24,int24,address)": {
								"notice": "Emitted when a pool is created"
							}
						},
						"kind": "user",
						"methods": {
							"createPool(address,address,uint24)": {
								"notice": "Creates a pool for the given two tokens and fee"
							},
							"enableFeeAmount(uint24,int24)": {
								"notice": "Enables a fee amount with the given tickSpacing"
							},
							"feeAmountTickSpacing(uint24)": {
								"notice": "Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"
							},
							"getPool(address,address,uint24)": {
								"notice": "Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"
							},
							"owner()": {
								"notice": "Returns the current owner of the factory"
							},
							"setOwner(address)": {
								"notice": "Updates the owner of the factory"
							}
						},
						"notice": "The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees",
						"version": 1
					}
				},
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				},
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				},
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				},
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				},
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				},
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				},
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				},
				"IV3Migrator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "pair",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "liquidityToMigrate",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "percentageToMigrate",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "refundAsETH",
											"type": "bool"
										}
									],
									"internalType": "struct IV3Migrator.MigrateParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "multicall",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermitAllowed",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermitAllowedIfNecessary",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermitIfNecessary",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							},
							"migrate((address,uint256,uint8,address,address,uint24,int24,int24,uint256,uint256,address,uint256,bool))": {
								"details": "Slippage protection is enforced via `amount{0,1}Min`, which should be a discount of the expected values of the maximum amount of v3 liquidity that the v2 liquidity can get. For the special case of migrating to an out-of-range position, `amount{0,1}Min` may be set to 0, enforcing that the position remains out of range",
								"params": {
									"params": "The params necessary to migrate v2 liquidity, encoded as `MigrateParams` in calldata"
								}
							},
							"multicall(bytes[])": {
								"details": "The `msg.value` should not be trusted for any method callable from multicall.",
								"params": {
									"data": "The encoded function data for each of the calls to make to this contract"
								},
								"returns": {
									"results": "The results from each of the calls passed in via data"
								}
							},
							"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this).",
								"params": {
									"deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
									"value": "The amount that can be spent of token"
								}
							},
							"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this)",
								"params": {
									"expiry": "The timestamp at which the permit is no longer valid",
									"nonce": "The current nonce of the owner",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.",
								"params": {
									"expiry": "The timestamp at which the permit is no longer valid",
									"nonce": "The current nonce of the owner",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit",
								"params": {
									"deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
									"value": "The amount that can be spent of token"
								}
							}
						},
						"title": "V3 Migrator",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562",
							"migrate((address,uint256,uint8,address,address,uint24,int24,int24,uint256,uint256,address,uint256,bool))": "d44f2bf2",
							"multicall(bytes[])": "ac9650d8",
							"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
							"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "4659a494",
							"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "a4a78f0c",
							"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "c2e3140a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityToMigrate\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"percentageToMigrate\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"refundAsETH\",\"type\":\"bool\"}],\"internalType\":\"struct IV3Migrator.MigrateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"migrate((address,uint256,uint8,address,address,uint24,int24,int24,uint256,uint256,address,uint256,bool))\":{\"details\":\"Slippage protection is enforced via `amount{0,1}Min`, which should be a discount of the expected values of the maximum amount of v3 liquidity that the v2 liquidity can get. For the special case of migrating to an out-of-range position, `amount{0,1}Min` may be set to 0, enforcing that the position remains out of range\",\"params\":{\"params\":\"The params necessary to migrate v2 liquidity, encoded as `MigrateParams` in calldata\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this).\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this)\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}}},\"title\":\"V3 Migrator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"migrate((address,uint256,uint8,address,address,uint24,int24,int24,uint256,uint256,address,uint256,bool))\":{\"notice\":\"Migrates liquidity to v3 by burning v2 liquidity and minting a new position for v3\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"}},\"notice\":\"Enables migration of liqudity from Uniswap v2-compatible pairs into Uniswap v3 pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IV3Migrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							},
							"migrate((address,uint256,uint8,address,address,uint24,int24,int24,uint256,uint256,address,uint256,bool))": {
								"notice": "Migrates liquidity to v3 by burning v2 liquidity and minting a new position for v3"
							},
							"multicall(bytes[])": {
								"notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
							},
							"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend a given token from `msg.sender`"
							},
							"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
							},
							"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
							},
							"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend a given token from `msg.sender`"
							}
						},
						"notice": "Enables migration of liqudity from Uniswap v2-compatible pairs into Uniswap v3 pools",
						"version": 1
					}
				},
				"IWETH9": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"title": "Interface for WETH9",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"deposit()": "d0e30db0",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"Interface for WETH9\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Deposit ether to get wrapped ether\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw wrapped ether to get ether\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"IWETH9\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"deposit()": {
								"notice": "Deposit ether to get wrapped ether"
							},
							"withdraw(uint256)": {
								"notice": "Withdraw wrapped ether to get ether"
							}
						},
						"version": 1
					}
				},
				"LowGasSafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Optimized overflow and underflow safe math operations",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/V3Migrator_flattened.sol\":72782:74228  library LowGasSafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/V3Migrator_flattened.sol\":72782:74228  library LowGasSafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122023fe0d9f67c6182bfa4caee3628593c20e41fe761ba56c84dbe18ebed7d7fc2d64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023fe0d9f67c6182bfa4caee3628593c20e41fe761ba56c84dbe18ebed7d7fc2d64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 INVALID 0xD SWAP16 PUSH8 0xC6182BFA4CAEE362 DUP6 SWAP4 0xC2 0xE COINBASE INVALID PUSH23 0x1BA56C84DBE18EBED7D7FC2D64736F6C63430007060033 ",
							"sourceMap": "72782:1446:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122023fe0d9f67c6182bfa4caee3628593c20e41fe761ba56c84dbe18ebed7d7fc2d64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x23 INVALID 0xD SWAP16 PUSH8 0xC6182BFA4CAEE362 DUP6 SWAP4 0xC2 0xE COINBASE INVALID PUSH23 0x1BA56C84DBE18EBED7D7FC2D64736F6C63430007060033 ",
							"sourceMap": "72782:1446:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(int256,int256)": "infinite",
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(int256,int256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 72782,
									"end": 74228,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 72782,
									"end": 74228,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122023fe0d9f67c6182bfa4caee3628593c20e41fe761ba56c84dbe18ebed7d7fc2d64736f6c63430007060033",
									".code": [
										{
											"begin": 72782,
											"end": 74228,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 72782,
											"end": 74228,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 72782,
											"end": 74228,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 72782,
											"end": 74228,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 72782,
											"end": 74228,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72782,
											"end": 74228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72782,
											"end": 74228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72782,
											"end": 74228,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72782,
											"end": 74228,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Optimized overflow and underflow safe math operations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"LowGasSafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost",
						"version": 1
					}
				},
				"Multicall": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "multicall",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"multicall(bytes[])": {
								"details": "The `msg.value` should not be trusted for any method callable from multicall.",
								"params": {
									"data": "The encoded function data for each of the calls to make to this contract"
								},
								"returns": {
									"results": "The results from each of the calls passed in via data"
								}
							}
						},
						"title": "Multicall",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"multicall(bytes[])": "ac9650d8"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}}},\"title\":\"Multicall\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"}},\"notice\":\"Enables calling multiple methods in a single call to the contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"Multicall\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"multicall(bytes[])": {
								"notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
							}
						},
						"notice": "Enables calling multiple methods in a single call to the contract",
						"version": 1
					}
				},
				"PeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"WETH9": {
								"return": "Returns the address of WETH9"
							},
							"factory": {
								"return": "Returns the address of the Uniswap V3 factory"
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"WETH9\":{\"return\":\"Returns the address of WETH9\"},\"factory\":{\"return\":\"Returns the address of the Uniswap V3 factory\"}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Immutable state used by periphery contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"PeripheryImmutableState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Immutable state used by periphery contracts",
						"version": 1
					}
				},
				"PoolAddress": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Provides functions for deriving a pool address from the factory, tokens, and the fee",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/V3Migrator_flattened.sol\":45646:47298  library PoolAddress {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/V3Migrator_flattened.sol\":45646:47298  library PoolAddress {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f9ce7a285206c4145075bbdc52bb7fbafba12efd1a12113a5a5bd3f1a6cf55c364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9ce7a285206c4145075bbdc52bb7fbafba12efd1a12113a5a5bd3f1a6cf55c364736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xCE PUSH27 0x285206C4145075BBDC52BB7FBAFBA12EFD1A12113A5A5BD3F1A6CF SSTORE 0xC3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "45646:1652:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f9ce7a285206c4145075bbdc52bb7fbafba12efd1a12113a5a5bd3f1a6cf55c364736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 0xCE PUSH27 0x285206C4145075BBDC52BB7FBAFBA12EFD1A12113A5A5BD3F1A6CF SSTORE 0xC3 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "45646:1652:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"computeAddress(address,struct PoolAddress.PoolKey memory)": "infinite",
								"getPoolKey(address,address,uint24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 45646,
									"end": 47298,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 45646,
									"end": 47298,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9ce7a285206c4145075bbdc52bb7fbafba12efd1a12113a5a5bd3f1a6cf55c364736f6c63430007060033",
									".code": [
										{
											"begin": 45646,
											"end": 47298,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 45646,
											"end": 47298,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 45646,
											"end": 47298,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45646,
											"end": 47298,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 45646,
											"end": 47298,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45646,
											"end": 47298,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45646,
											"end": 47298,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45646,
											"end": 47298,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45646,
											"end": 47298,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the factory, tokens, and the fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"PoolAddress\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PoolInitializer": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							}
						},
						"title": "Creates and initializes V3 Pools",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}}},\"title\":\"Creates and initializes V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"PoolInitializer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							}
						},
						"version": 1
					}
				},
				"SelfPermit": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermitAllowed",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermitAllowedIfNecessary",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermitIfNecessary",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "These functions are expected to be embedded in multicalls to allow EOAs to approve a contract and call a function that requires an approval in a single transaction.",
						"kind": "dev",
						"methods": {
							"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this).",
								"params": {
									"deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
									"value": "The amount that can be spent of token"
								}
							},
							"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this)",
								"params": {
									"expiry": "The timestamp at which the permit is no longer valid",
									"nonce": "The current nonce of the owner",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.",
								"params": {
									"expiry": "The timestamp at which the permit is no longer valid",
									"nonce": "The current nonce of the owner",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit",
								"params": {
									"deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
									"value": "The amount that can be spent of token"
								}
							}
						},
						"title": "Self Permit",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
							"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "4659a494",
							"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "a4a78f0c",
							"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "c2e3140a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are expected to be embedded in multicalls to allow EOAs to approve a contract and call a function that requires an approval in a single transaction.\",\"kind\":\"dev\",\"methods\":{\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this).\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this)\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}}},\"title\":\"Self Permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"}},\"notice\":\"Functionality to call permit on any EIP-2612-compliant token for use in the route\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"SelfPermit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend a given token from `msg.sender`"
							},
							"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
							},
							"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
							},
							"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend a given token from `msg.sender`"
							}
						},
						"notice": "Functionality to call permit on any EIP-2612-compliant token for use in the route",
						"version": 1
					}
				},
				"TransferHelper": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/V3Migrator_flattened.sol\":43067:45475  library TransferHelper {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/V3Migrator_flattened.sol\":43067:45475  library TransferHelper {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122081db7a5636b006ae020c02a4588808c97465fdf3754708ffdaf104641572f0da64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122081db7a5636b006ae020c02a4588808c97465fdf3754708ffdaf104641572f0da64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xDB PUSH27 0x5636B006AE020C02A4588808C97465FDF3754708FFDAF104641572 CREATE 0xDA PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "43067:2408:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122081db7a5636b006ae020c02a4588808c97465fdf3754708ffdaf104641572f0da64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP2 0xDB PUSH27 0x5636B006AE020C02A4588808C97465FDF3754708FFDAF104641572 CREATE 0xDA PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "43067:2408:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"safeApprove(address,address,uint256)": "infinite",
								"safeTransfer(address,address,uint256)": "infinite",
								"safeTransferETH(address,uint256)": "infinite",
								"safeTransferFrom(address,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 43067,
									"end": 45475,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 43067,
									"end": 45475,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122081db7a5636b006ae020c02a4588808c97465fdf3754708ffdaf104641572f0da64736f6c63430007060033",
									".code": [
										{
											"begin": 43067,
											"end": 45475,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 43067,
											"end": 45475,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 43067,
											"end": 45475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43067,
											"end": 45475,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 43067,
											"end": 45475,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43067,
											"end": 45475,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43067,
											"end": 45475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43067,
											"end": 45475,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43067,
											"end": 45475,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"TransferHelper\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"V3Migrator": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_WETH9",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_nonfungiblePositionManager",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token0",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "token1",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "createAndInitializePoolIfNecessary",
							"outputs": [
								{
									"internalType": "address",
									"name": "pool",
									"type": "address"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "pair",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "liquidityToMigrate",
											"type": "uint256"
										},
										{
											"internalType": "uint8",
											"name": "percentageToMigrate",
											"type": "uint8"
										},
										{
											"internalType": "address",
											"name": "token0",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "token1",
											"type": "address"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "int24",
											"name": "tickLower",
											"type": "int24"
										},
										{
											"internalType": "int24",
											"name": "tickUpper",
											"type": "int24"
										},
										{
											"internalType": "uint256",
											"name": "amount0Min",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "amount1Min",
											"type": "uint256"
										},
										{
											"internalType": "address",
											"name": "recipient",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "deadline",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "refundAsETH",
											"type": "bool"
										}
									],
									"internalType": "struct IV3Migrator.MigrateParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "migrate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes[]",
									"name": "data",
									"type": "bytes[]"
								}
							],
							"name": "multicall",
							"outputs": [
								{
									"internalType": "bytes[]",
									"name": "results",
									"type": "bytes[]"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nonfungiblePositionManager",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermit",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermitAllowed",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "nonce",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "expiry",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermitAllowedIfNecessary",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "selfPermitIfNecessary",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"details": "This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool",
								"params": {
									"fee": "The fee amount of the v3 pool for the specified token pair",
									"sqrtPriceX96": "The initial square root price of the pool as a Q64.96 value",
									"token0": "The contract address of token0 of the pool",
									"token1": "The contract address of token1 of the pool"
								},
								"returns": {
									"pool": "Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
								}
							},
							"migrate((address,uint256,uint8,address,address,uint24,int24,int24,uint256,uint256,address,uint256,bool))": {
								"details": "Slippage protection is enforced via `amount{0,1}Min`, which should be a discount of the expected values of the maximum amount of v3 liquidity that the v2 liquidity can get. For the special case of migrating to an out-of-range position, `amount{0,1}Min` may be set to 0, enforcing that the position remains out of range",
								"params": {
									"params": "The params necessary to migrate v2 liquidity, encoded as `MigrateParams` in calldata"
								}
							},
							"multicall(bytes[])": {
								"details": "The `msg.value` should not be trusted for any method callable from multicall.",
								"params": {
									"data": "The encoded function data for each of the calls to make to this contract"
								},
								"returns": {
									"results": "The results from each of the calls passed in via data"
								}
							},
							"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this).",
								"params": {
									"deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
									"value": "The amount that can be spent of token"
								}
							},
							"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this)",
								"params": {
									"expiry": "The timestamp at which the permit is no longer valid",
									"nonce": "The current nonce of the owner",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.",
								"params": {
									"expiry": "The timestamp at which the permit is no longer valid",
									"nonce": "The current nonce of the owner",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`"
								}
							},
							"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit",
								"params": {
									"deadline": "A timestamp, the current blocktime must be less than or equal to this timestamp",
									"r": "Must produce valid secp256k1 signature from the holder along with `v` and `s`",
									"s": "Must produce valid secp256k1 signature from the holder along with `r` and `v`",
									"token": "The address of the token spent",
									"v": "Must produce valid secp256k1 signature from the holder along with `r` and `s`",
									"value": "The amount that can be spent of token"
								}
							}
						},
						"title": "Uniswap V3 Migrator",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/V3Migrator_flattened.sol\":74332:77765  contract V3Migrator is IV3Migrator, PeripheryImmutableState, PoolInitializer, Multicall, SelfPermit {... */\n  mstore(0x40, 0xe0)\n    /* \"contracts/V3Migrator_flattened.sol\":74535:74763  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"contracts/V3Migrator_flattened.sol\":48214:48232  factory = _factory */\n  0x60\n  swap4\n  dup5\n  shl\n  dup2\n  and\n  0x80\n  mstore\n    /* \"contracts/V3Migrator_flattened.sol\":48242:48256  WETH9 = _WETH9 */\n  swap2\n  dup4\n  shl\n  dup3\n  and\n  0xa0\n  mstore\n    /* \"contracts/V3Migrator_flattened.sol\":74700:74756  nonfungiblePositionManager = _nonfungiblePositionManager */\n  swap1\n  swap2\n  shl\n  and\n  0xc0\n  mstore\n    /* \"contracts/V3Migrator_flattened.sol\":74332:77765  contract V3Migrator is IV3Migrator, PeripheryImmutableState, PoolInitializer, Multicall, SelfPermit {... */\n  jump(tag_9)\n    /* \"#utility.yul\":14:193   */\ntag_10:\n    /* \"#utility.yul\":95:108   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":137:168   */\n  dup2\n  and\n    /* \"#utility.yul\":127:169   */\n  dup2\n  eq\n    /* \"#utility.yul\":117:119   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":183:184   */\n  0x00\n    /* \"#utility.yul\":180:181   */\n  dup1\n    /* \"#utility.yul\":173:185   */\n  revert\n    /* \"#utility.yul\":117:119   */\ntag_12:\n    /* \"#utility.yul\":76:193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":198:592   */\ntag_3:\n  0x00\n  dup1\n  0x00\n    /* \"#utility.yul\":355:357   */\n  0x60\n    /* \"#utility.yul\":343:352   */\n  dup5\n    /* \"#utility.yul\":334:341   */\n  dup7\n    /* \"#utility.yul\":330:353   */\n  sub\n    /* \"#utility.yul\":326:358   */\n  slt\n    /* \"#utility.yul\":323:325   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":376:382   */\n  dup3\n    /* \"#utility.yul\":368:374   */\n  dup4\n    /* \"#utility.yul\":361:383   */\n  revert\n    /* \"#utility.yul\":323:325   */\ntag_14:\n    /* \"#utility.yul\":404:446   */\n  tag_15\n    /* \"#utility.yul\":436:445   */\n  dup5\n    /* \"#utility.yul\":404:446   */\n  tag_10\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":394:446   */\n  swap3\n  pop\n    /* \"#utility.yul\":465:516   */\n  tag_16\n    /* \"#utility.yul\":512:514   */\n  0x20\n    /* \"#utility.yul\":501:510   */\n  dup6\n    /* \"#utility.yul\":497:515   */\n  add\n    /* \"#utility.yul\":465:516   */\n  tag_10\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":455:516   */\n  swap2\n  pop\n    /* \"#utility.yul\":535:586   */\n  tag_17\n    /* \"#utility.yul\":582:584   */\n  0x40\n    /* \"#utility.yul\":571:580   */\n  dup6\n    /* \"#utility.yul\":567:585   */\n  add\n    /* \"#utility.yul\":535:586   */\n  tag_10\n  jump\t// in\ntag_17:\n    /* \"#utility.yul\":525:586   */\n  swap1\n  pop\n    /* \"#utility.yul\":313:592   */\n  swap3\n  pop\n  swap3\n  pop\n  swap3\n  jump\t// out\ntag_9:\n    /* \"contracts/V3Migrator_flattened.sol\":74332:77765  contract V3Migrator is IV3Migrator, PeripheryImmutableState, PoolInitializer, Multicall, SelfPermit {... */\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  shr(0x60, mload(0xc0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x4573f5f1b837a8533275bdfe67b312d14235840d1b2ae2083669faa5812d511e\")\n  assignImmutable(\"0xa89dab98646eeeb3665d545d51c6146ef2fb7643427936d0df6806075707fbb6\")\n  assignImmutable(\"0xab7db2c210591424e688771afeebdfb41c23ddf4f98baebced34c5f25d022141\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/V3Migrator_flattened.sol\":74332:77765  contract V3Migrator is IV3Migrator, PeripheryImmutableState, PoolInitializer, Multicall, SelfPermit {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xb44a2722\n      gt\n      tag_13\n      jumpi\n      dup1\n      0xc45a0155\n      gt\n      tag_14\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xd44f2bf2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf3995c67\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0xb44a2722\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xc2e3140a\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_13:\n      dup1\n      0x4aa4a4fc\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x4aa4a4fc\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa4a78f0c\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xac9650d8\n      eq\n      tag_7\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x13ead562\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4659a494\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n      jumpi(tag_2, calldatasize)\n        /* \"contracts/V3Migrator_flattened.sol\":74814:74824  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":74828:74833  WETH9 */\n      immutable(\"0xa89dab98646eeeb3665d545d51c6146ef2fb7643427936d0df6806075707fbb6\")\n        /* \"contracts/V3Migrator_flattened.sol\":74814:74833  msg.sender == WETH9 */\n      and\n      eq\n        /* \"contracts/V3Migrator_flattened.sol\":74806:74847  require(msg.sender == WETH9, 'Not WETH9') */\n      tag_18\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_18:\n        /* \"contracts/V3Migrator_flattened.sol\":74332:77765  contract V3Migrator is IV3Migrator, PeripheryImmutableState, PoolInitializer, Multicall, SelfPermit {... */\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/V3Migrator_flattened.sol\":51094:51813  function createAndInitializePoolIfNecessary(... */\n    tag_3:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/V3Migrator_flattened.sol\":42311:42600  function selfPermitAllowed(... */\n    tag_4:\n      tag_18\n      tag_28\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_28:\n      tag_30\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":48112:48151  address public immutable override WETH9 */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_21\n      tag_33\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":42638:42986  function selfPermitAllowedIfNecessary(... */\n    tag_6:\n      tag_18\n      tag_36\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":37493:38146  function multicall(bytes[] calldata data) public payable override returns (bytes[] memory results) {... */\n    tag_7:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_25\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":74477:74528  address public immutable nonfungiblePositionManager */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      tag_21\n      tag_46\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":41959:42273  function selfPermitIfNecessary(... */\n    tag_9:\n      tag_18\n      tag_49\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_49:\n      tag_50\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":48020:48061  address public immutable override factory */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_21\n      tag_53\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":74860:77763  function migrate(MigrateParams calldata params) external override {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      tag_18\n      tag_57\n      calldatasize\n      0x04\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":41648:41921  function selfPermit(... */\n    tag_12:\n      tag_18\n      tag_61\n      calldatasize\n      0x04\n      tag_29\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":51094:51813  function createAndInitializePoolIfNecessary(... */\n    tag_24:\n        /* \"contracts/V3Migrator_flattened.sol\":51277:51289  address pool */\n      0x00\n        /* \"contracts/V3Migrator_flattened.sol\":51318:51324  token1 */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":51309:51324  token0 < token1 */\n      and\n        /* \"contracts/V3Migrator_flattened.sol\":51309:51315  token0 */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":51309:51324  token0 < token1 */\n      and\n      lt\n        /* \"contracts/V3Migrator_flattened.sol\":51301:51325  require(token0 < token1) */\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n        /* \"contracts/V3Migrator_flattened.sol\":51342:51397  IUniswapV3Factory(factory).getPool(token0, token1, fee) */\n      mload(0x40)\n      0x1698ee8200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":51360:51367  factory */\n      immutable(\"0xab7db2c210591424e688771afeebdfb41c23ddf4f98baebced34c5f25d022141\")\n        /* \"contracts/V3Migrator_flattened.sol\":51342:51376  IUniswapV3Factory(factory).getPool */\n      and\n      swap1\n      0x1698ee82\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51342:51397  IUniswapV3Factory(factory).getPool(token0, token1, fee) */\n      tag_65\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51377:51383  token0 */\n      dup9\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51385:51391  token1 */\n      dup9\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51393:51396  fee */\n      dup9\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51342:51397  IUniswapV3Factory(factory).getPool(token0, token1, fee) */\n      0x04\n      add\n      tag_66\n      jump\t// in\n    tag_65:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_69\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_69:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"contracts/V3Migrator_flattened.sol\":51335:51397  pool = IUniswapV3Factory(factory).getPool(token0, token1, fee) */\n      swap1\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":51412:51430  pool == address(0) */\n      dup2\n      and\n        /* \"contracts/V3Migrator_flattened.sol\":51408:51807  if (pool == address(0)) {... */\n      tag_72\n      jumpi\n        /* \"contracts/V3Migrator_flattened.sol\":51453:51511  IUniswapV3Factory(factory).createPool(token0, token1, fee) */\n      mload(0x40)\n      0xa167129500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":51471:51478  factory */\n      immutable(\"0xab7db2c210591424e688771afeebdfb41c23ddf4f98baebced34c5f25d022141\")\n        /* \"contracts/V3Migrator_flattened.sol\":51453:51490  IUniswapV3Factory(factory).createPool */\n      and\n      swap1\n      0xa1671295\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51453:51511  IUniswapV3Factory(factory).createPool(token0, token1, fee) */\n      tag_73\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51491:51497  token0 */\n      dup9\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51499:51505  token1 */\n      dup9\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51507:51510  fee */\n      dup9\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51453:51511  IUniswapV3Factory(factory).createPool(token0, token1, fee) */\n      0x04\n      add\n      tag_66\n      jump\t// in\n    tag_73:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_74\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_74:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_76\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_76:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_77\n      swap2\n      swap1\n      tag_71\n      jump\t// in\n    tag_77:\n        /* \"contracts/V3Migrator_flattened.sol\":51525:51570  IUniswapV3Pool(pool).initialize(sqrtPriceX96) */\n      mload(0x40)\n      shl(0xe0, 0xf637731d)\n      dup2\n      mstore\n        /* \"contracts/V3Migrator_flattened.sol\":51446:51511  pool = IUniswapV3Factory(factory).createPool(token0, token1, fee) */\n      swap1\n      swap2\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":51525:51556  IUniswapV3Pool(pool).initialize */\n      dup3\n      and\n      swap1\n      0xf637731d\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51525:51570  IUniswapV3Pool(pool).initialize(sqrtPriceX96) */\n      tag_78\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51557:51569  sqrtPriceX96 */\n      dup6\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51525:51570  IUniswapV3Pool(pool).initialize(sqrtPriceX96) */\n      0x04\n      add\n      tag_26\n      jump\t// in\n    tag_78:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_82\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_82:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":51408:51807  if (pool == address(0)) {... */\n      jump(tag_83)\n    tag_72:\n        /* \"contracts/V3Migrator_flattened.sol\":51602:51630  uint160 sqrtPriceX96Existing */\n      0x00\n        /* \"contracts/V3Migrator_flattened.sol\":51661:51665  pool */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":51646:51672  IUniswapV3Pool(pool).slot0 */\n      and\n      0x3850c7bd\n        /* \"contracts/V3Migrator_flattened.sol\":51646:51674  IUniswapV3Pool(pool).slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/V3Migrator_flattened.sol\":51601:51674  (uint160 sqrtPriceX96Existing, , , , , , ) = IUniswapV3Pool(pool).slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":51692:51712  sqrtPriceX96Existing */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":51692:51717  sqrtPriceX96Existing == 0 */\n      and\n        /* \"contracts/V3Migrator_flattened.sol\":51716:51717  0 */\n      0x00\n        /* \"contracts/V3Migrator_flattened.sol\":51692:51717  sqrtPriceX96Existing == 0 */\n      eq\n        /* \"contracts/V3Migrator_flattened.sol\":51688:51797  if (sqrtPriceX96Existing == 0) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/V3Migrator_flattened.sol\":51737:51782  IUniswapV3Pool(pool).initialize(sqrtPriceX96) */\n      mload(0x40)\n      shl(0xe0, 0xf637731d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":51737:51768  IUniswapV3Pool(pool).initialize */\n      dup4\n      and\n      swap1\n      0xf637731d\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51737:51782  IUniswapV3Pool(pool).initialize(sqrtPriceX96) */\n      tag_90\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51769:51781  sqrtPriceX96 */\n      dup7\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":51737:51782  IUniswapV3Pool(pool).initialize(sqrtPriceX96) */\n      0x04\n      add\n      tag_26\n      jump\t// in\n    tag_90:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_91:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_93:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":51688:51797  if (sqrtPriceX96Existing == 0) {... */\n    tag_89:\n        /* \"contracts/V3Migrator_flattened.sol\":51408:51807  if (pool == address(0)) {... */\n      pop\n    tag_83:\n        /* \"contracts/V3Migrator_flattened.sol\":51094:51813  function createAndInitializePoolIfNecessary(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/V3Migrator_flattened.sol\":42311:42600  function selfPermitAllowed(... */\n    tag_30:\n        /* \"contracts/V3Migrator_flattened.sol\":42503:42593  IERC20PermitAllowed(token).permit(msg.sender, address(this), nonce, expiry, true, v, r, s) */\n      mload(0x40)\n      0x8fcbaf0c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":42503:42536  IERC20PermitAllowed(token).permit */\n      dup8\n      and\n      swap1\n      0x8fcbaf0c\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42503:42593  IERC20PermitAllowed(token).permit(msg.sender, address(this), nonce, expiry, true, v, r, s) */\n      tag_95\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42537:42547  msg.sender */\n      caller\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42557:42561  this */\n      address\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42564:42569  nonce */\n      dup11\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42571:42577  expiry */\n      dup11\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42579:42583  true */\n      0x01\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42585:42586  v */\n      dup12\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42588:42589  r */\n      dup12\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42591:42592  s */\n      dup12\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42503:42593  IERC20PermitAllowed(token).permit(msg.sender, address(this), nonce, expiry, true, v, r, s) */\n      0x04\n      add\n      tag_96\n      jump\t// in\n    tag_95:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_97:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_99\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_99:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":42311:42600  function selfPermitAllowed(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/V3Migrator_flattened.sol\":48112:48151  address public immutable override WETH9 */\n    tag_33:\n      immutable(\"0xa89dab98646eeeb3665d545d51c6146ef2fb7643427936d0df6806075707fbb6\")\n      dup2\n      jump\t// out\n        /* \"contracts/V3Migrator_flattened.sol\":42638:42986  function selfPermitAllowedIfNecessary(... */\n    tag_37:\n        /* \"contracts/V3Migrator_flattened.sol\":42847:42897  IERC20(token).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n      not(0x00)\n        /* \"contracts/V3Migrator_flattened.sol\":42900:42917  type(uint256).max */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":42847:42870  IERC20(token).allowance */\n      dup9\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42847:42897  IERC20(token).allowance(msg.sender, address(this)) */\n      tag_101\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42871:42881  msg.sender */\n      caller\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42891:42895  this */\n      address\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42847:42897  IERC20(token).allowance(msg.sender, address(this)) */\n      0x04\n      add\n      tag_102\n      jump\t// in\n    tag_101:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"contracts/V3Migrator_flattened.sol\":42847:42917  IERC20(token).allowance(msg.sender, address(this)) < type(uint256).max */\n      lt\n        /* \"contracts/V3Migrator_flattened.sol\":42843:42979  if (IERC20(token).allowance(msg.sender, address(this)) < type(uint256).max)... */\n      iszero\n      tag_109\n      jumpi\n        /* \"contracts/V3Migrator_flattened.sol\":42931:42979  selfPermitAllowed(token, nonce, expiry, v, r, s) */\n      tag_109\n        /* \"contracts/V3Migrator_flattened.sol\":42949:42954  token */\n      dup7\n        /* \"contracts/V3Migrator_flattened.sol\":42956:42961  nonce */\n      dup7\n        /* \"contracts/V3Migrator_flattened.sol\":42963:42969  expiry */\n      dup7\n        /* \"contracts/V3Migrator_flattened.sol\":42971:42972  v */\n      dup7\n        /* \"contracts/V3Migrator_flattened.sol\":42974:42975  r */\n      dup7\n        /* \"contracts/V3Migrator_flattened.sol\":42977:42978  s */\n      dup7\n        /* \"contracts/V3Migrator_flattened.sol\":42931:42948  selfPermitAllowed */\n      tag_30\n        /* \"contracts/V3Migrator_flattened.sol\":42931:42979  selfPermitAllowed(token, nonce, expiry, v, r, s) */\n      jump\t// in\n    tag_109:\n        /* \"contracts/V3Migrator_flattened.sol\":42638:42986  function selfPermitAllowedIfNecessary(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/V3Migrator_flattened.sol\":37493:38146  function multicall(bytes[] calldata data) public payable override returns (bytes[] memory results) {... */\n    tag_41:\n        /* \"contracts/V3Migrator_flattened.sol\":37568:37590  bytes[] memory results */\n      0x60\n        /* \"contracts/V3Migrator_flattened.sol\":37624:37628  data */\n      dup2\n        /* \"contracts/V3Migrator_flattened.sol\":37612:37636  new bytes[](data.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_112\n      jumpi\n      dup2\n      0x20\n      add\n    tag_113:\n      0x60\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_113\n      jumpi\n      swap1\n      pop\n    tag_112:\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":37602:37636  results = new bytes[](data.length) */\n      swap1\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":37651:37660  uint256 i */\n      0x00\n        /* \"contracts/V3Migrator_flattened.sol\":37646:38140  for (uint256 i = 0; i < data.length; i++) {... */\n    tag_114:\n        /* \"contracts/V3Migrator_flattened.sol\":37666:37681  i < data.length */\n      dup3\n      dup2\n      lt\n        /* \"contracts/V3Migrator_flattened.sol\":37646:38140  for (uint256 i = 0; i < data.length; i++) {... */\n      iszero\n      tag_115\n      jumpi\n        /* \"contracts/V3Migrator_flattened.sol\":37703:37715  bool success */\n      0x00\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":37748:37752  this */\n      address\n        /* \"contracts/V3Migrator_flattened.sol\":37767:37771  data */\n      dup7\n      dup7\n        /* \"contracts/V3Migrator_flattened.sol\":37772:37773  i */\n      dup6\n        /* \"contracts/V3Migrator_flattened.sol\":37767:37774  data[i] */\n      dup2\n      dup2\n      lt\n      tag_117\n      jumpi\n      invalid\n    tag_117:\n      swap1\n      pop\n      0x20\n      mul\n      dup2\n      add\n      swap1\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"contracts/V3Migrator_flattened.sol\":37740:37775  address(this).delegatecall(data[i]) */\n      mload(0x40)\n      tag_120\n      swap3\n      swap2\n      swap1\n      tag_121\n      jump\t// in\n    tag_120:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_124\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_123)\n    tag_124:\n      0x60\n      swap2\n      pop\n    tag_123:\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":37702:37775  (bool success, bytes memory result) = address(this).delegatecall(data[i]) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":37795:37802  success */\n      dup2\n        /* \"contracts/V3Migrator_flattened.sol\":37790:38096  if (!success) {... */\n      tag_125\n      jumpi\n        /* \"contracts/V3Migrator_flattened.sol\":37922:37924  68 */\n      0x44\n        /* \"contracts/V3Migrator_flattened.sol\":37906:37912  result */\n      dup2\n        /* \"contracts/V3Migrator_flattened.sol\":37906:37919  result.length */\n      mload\n        /* \"contracts/V3Migrator_flattened.sol\":37906:37924  result.length < 68 */\n      lt\n        /* \"contracts/V3Migrator_flattened.sol\":37902:37934  if (result.length < 68) revert() */\n      iszero\n      tag_126\n      jumpi\n        /* \"contracts/V3Migrator_flattened.sol\":37926:37934  revert() */\n      0x00\n      dup1\n      revert\n        /* \"contracts/V3Migrator_flattened.sol\":37902:37934  if (result.length < 68) revert() */\n    tag_126:\n        /* \"contracts/V3Migrator_flattened.sol\":38005:38009  0x04 */\n      0x04\n        /* \"contracts/V3Migrator_flattened.sol\":37997:38003  result */\n      dup2\n        /* \"contracts/V3Migrator_flattened.sol\":37993:38010  add(result, 0x04) */\n      add\n        /* \"contracts/V3Migrator_flattened.sol\":37983:38010  result := add(result, 0x04) */\n      swap1\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":38063:38069  result */\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":38052:38080  abi.decode(result, (string)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n        /* \"contracts/V3Migrator_flattened.sol\":38045:38081  revert(abi.decode(result, (string))) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap2\n      swap1\n      tag_130\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":37790:38096  if (!success) {... */\n    tag_125:\n        /* \"contracts/V3Migrator_flattened.sol\":38123:38129  result */\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":38110:38117  results */\n      dup5\n        /* \"contracts/V3Migrator_flattened.sol\":38118:38119  i */\n      dup5\n        /* \"contracts/V3Migrator_flattened.sol\":38110:38120  results[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      invalid\n    tag_131:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/V3Migrator_flattened.sol\":38110:38129  results[i] = result */\n      mstore\n      pop\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":37683:37686  i++ */\n      0x01\n      add\n        /* \"contracts/V3Migrator_flattened.sol\":37646:38140  for (uint256 i = 0; i < data.length; i++) {... */\n      jump(tag_114)\n    tag_115:\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":37493:38146  function multicall(bytes[] calldata data) public payable override returns (bytes[] memory results) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/V3Migrator_flattened.sol\":74477:74528  address public immutable nonfungiblePositionManager */\n    tag_46:\n      immutable(\"0x4573f5f1b837a8533275bdfe67b312d14235840d1b2ae2083669faa5812d511e\")\n      dup2\n      jump\t// out\n        /* \"contracts/V3Migrator_flattened.sol\":41959:42273  function selfPermitIfNecessary(... */\n    tag_50:\n        /* \"contracts/V3Migrator_flattened.sol\":42163:42213  IERC20(token).allowance(msg.sender, address(this)) */\n      mload(0x40)\n      shl(0xe1, 0x6eb1769f)\n      dup2\n      mstore\n        /* \"contracts/V3Migrator_flattened.sol\":42216:42221  value */\n      dup6\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":42163:42186  IERC20(token).allowance */\n      dup9\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42163:42213  IERC20(token).allowance(msg.sender, address(this)) */\n      tag_133\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42187:42197  msg.sender */\n      caller\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42207:42211  this */\n      address\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":42163:42213  IERC20(token).allowance(msg.sender, address(this)) */\n      0x04\n      add\n      tag_102\n      jump\t// in\n    tag_133:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_137:\n        /* \"contracts/V3Migrator_flattened.sol\":42163:42221  IERC20(token).allowance(msg.sender, address(this)) < value */\n      lt\n        /* \"contracts/V3Migrator_flattened.sol\":42159:42266  if (IERC20(token).allowance(msg.sender, address(this)) < value) selfPermit(token, value, deadline, v, r, s) */\n      iszero\n      tag_109\n      jumpi\n        /* \"contracts/V3Migrator_flattened.sol\":42223:42266  selfPermit(token, value, deadline, v, r, s) */\n      tag_109\n        /* \"contracts/V3Migrator_flattened.sol\":42234:42239  token */\n      dup7\n        /* \"contracts/V3Migrator_flattened.sol\":42241:42246  value */\n      dup7\n        /* \"contracts/V3Migrator_flattened.sol\":42248:42256  deadline */\n      dup7\n        /* \"contracts/V3Migrator_flattened.sol\":42258:42259  v */\n      dup7\n        /* \"contracts/V3Migrator_flattened.sol\":42261:42262  r */\n      dup7\n        /* \"contracts/V3Migrator_flattened.sol\":42264:42265  s */\n      dup7\n        /* \"contracts/V3Migrator_flattened.sol\":42223:42233  selfPermit */\n      tag_62\n        /* \"contracts/V3Migrator_flattened.sol\":42223:42266  selfPermit(token, value, deadline, v, r, s) */\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":48020:48061  address public immutable override factory */\n    tag_53:\n      immutable(\"0xab7db2c210591424e688771afeebdfb41c23ddf4f98baebced34c5f25d022141\")\n      dup2\n      jump\t// out\n        /* \"contracts/V3Migrator_flattened.sol\":74860:77763  function migrate(MigrateParams calldata params) external override {... */\n    tag_59:\n        /* \"contracts/V3Migrator_flattened.sol\":74973:74974  0 */\n      0x00\n        /* \"contracts/V3Migrator_flattened.sol\":74944:74970  params.percentageToMigrate */\n      tag_141\n      0x60\n      dup4\n      add\n      0x40\n      dup5\n      add\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"contracts/V3Migrator_flattened.sol\":74944:74974  params.percentageToMigrate > 0 */\n      0xff\n      and\n      gt\n        /* \"contracts/V3Migrator_flattened.sol\":74936:74999  require(params.percentageToMigrate > 0, 'Percentage too small') */\n      tag_143\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_145\n      jump\t// in\n    tag_143:\n        /* \"contracts/V3Migrator_flattened.sol\":75047:75050  100 */\n      0x64\n        /* \"contracts/V3Migrator_flattened.sol\":75017:75043  params.percentageToMigrate */\n      tag_146\n      0x60\n      dup4\n      add\n      0x40\n      dup5\n      add\n      tag_142\n      jump\t// in\n    tag_146:\n        /* \"contracts/V3Migrator_flattened.sol\":75017:75050  params.percentageToMigrate <= 100 */\n      0xff\n      and\n      gt\n      iszero\n        /* \"contracts/V3Migrator_flattened.sol\":75009:75075  require(params.percentageToMigrate <= 100, 'Percentage too large') */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_149\n      jump\t// in\n    tag_147:\n        /* \"contracts/V3Migrator_flattened.sol\":75146:75157  params.pair */\n      tag_150\n      0x20\n      dup3\n      add\n        /* \"contracts/V3Migrator_flattened.sol\":75146:75152  params */\n      dup3\n        /* \"contracts/V3Migrator_flattened.sol\":75146:75157  params.pair */\n      tag_151\n      jump\t// in\n    tag_150:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":75131:75171  IUniswapV2Pair(params.pair).transferFrom */\n      and\n      0x23b872dd\n        /* \"contracts/V3Migrator_flattened.sol\":75172:75182  msg.sender */\n      caller\n        /* \"contracts/V3Migrator_flattened.sol\":75184:75195  params.pair */\n      tag_152\n      0x20\n      dup6\n      add\n        /* \"contracts/V3Migrator_flattened.sol\":75184:75190  params */\n      dup6\n        /* \"contracts/V3Migrator_flattened.sol\":75184:75195  params.pair */\n      tag_151\n      jump\t// in\n    tag_152:\n        /* \"contracts/V3Migrator_flattened.sol\":75197:75203  params */\n      dup5\n        /* \"contracts/V3Migrator_flattened.sol\":75197:75222  params.liquidityToMigrate */\n      0x20\n      add\n      calldataload\n        /* \"contracts/V3Migrator_flattened.sol\":75131:75223  IUniswapV2Pair(params.pair).transferFrom(msg.sender, params.pair, params.liquidityToMigrate) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_153\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_157\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":75234:75251  uint256 amount0V2 */\n      0x00\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":75289:75300  params.pair */\n      tag_160\n      0x20\n      dup5\n      add\n        /* \"contracts/V3Migrator_flattened.sol\":75289:75295  params */\n      dup5\n        /* \"contracts/V3Migrator_flattened.sol\":75289:75300  params.pair */\n      tag_151\n      jump\t// in\n    tag_160:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":75274:75306  IUniswapV2Pair(params.pair).burn */\n      and\n      0x89afcb44\n        /* \"contracts/V3Migrator_flattened.sol\":75315:75319  this */\n      address\n        /* \"contracts/V3Migrator_flattened.sol\":75274:75321  IUniswapV2Pair(params.pair).burn(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_161\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_161:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n        /* \"contracts/V3Migrator_flattened.sol\":75233:75321  (uint256 amount0V2, uint256 amount1V2) = IUniswapV2Pair(params.pair).burn(address(this)) */\n      swap1\n      swap3\n      pop\n      swap1\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":75382:75408  uint256 amount0V2ToMigrate */\n      0x00\n        /* \"contracts/V3Migrator_flattened.sol\":75455:75458  100 */\n      0x64\n        /* \"contracts/V3Migrator_flattened.sol\":75411:75452  amount0V2.mul(params.percentageToMigrate) */\n      tag_168\n        /* \"contracts/V3Migrator_flattened.sol\":75425:75451  params.percentageToMigrate */\n      tag_169\n      0x60\n      dup8\n      add\n      0x40\n      dup9\n      add\n      tag_142\n      jump\t// in\n    tag_169:\n        /* \"contracts/V3Migrator_flattened.sol\":75411:75420  amount0V2 */\n      dup6\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":75411:75452  amount0V2.mul(params.percentageToMigrate) */\n      0xff\n      and\n        /* \"contracts/V3Migrator_flattened.sol\":75411:75424  amount0V2.mul */\n      tag_170\n        /* \"contracts/V3Migrator_flattened.sol\":75411:75452  amount0V2.mul(params.percentageToMigrate) */\n      jump\t// in\n    tag_168:\n        /* \"contracts/V3Migrator_flattened.sol\":75411:75458  amount0V2.mul(params.percentageToMigrate) / 100 */\n      dup2\n      tag_171\n      jumpi\n      invalid\n    tag_171:\n      div\n      swap1\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":75468:75494  uint256 amount1V2ToMigrate */\n      0x00\n        /* \"contracts/V3Migrator_flattened.sol\":75541:75544  100 */\n      0x64\n        /* \"contracts/V3Migrator_flattened.sol\":75497:75538  amount1V2.mul(params.percentageToMigrate) */\n      tag_172\n        /* \"contracts/V3Migrator_flattened.sol\":75511:75537  params.percentageToMigrate */\n      tag_169\n      0x60\n      dup9\n      add\n      0x40\n      dup10\n      add\n      tag_142\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":75497:75538  amount1V2.mul(params.percentageToMigrate) */\n    tag_172:\n        /* \"contracts/V3Migrator_flattened.sol\":75497:75544  amount1V2.mul(params.percentageToMigrate) / 100 */\n      dup2\n      tag_174\n      jumpi\n      invalid\n    tag_174:\n      div\n      swap1\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":75627:75716  TransferHelper.safeApprove(params.token0, nonfungiblePositionManager, amount0V2ToMigrate) */\n      tag_175\n        /* \"contracts/V3Migrator_flattened.sol\":75654:75667  params.token0 */\n      tag_176\n      0x80\n      dup8\n      add\n      0x60\n      dup9\n      add\n      tag_151\n      jump\t// in\n    tag_176:\n        /* \"contracts/V3Migrator_flattened.sol\":75669:75695  nonfungiblePositionManager */\n      immutable(\"0x4573f5f1b837a8533275bdfe67b312d14235840d1b2ae2083669faa5812d511e\")\n        /* \"contracts/V3Migrator_flattened.sol\":75697:75715  amount0V2ToMigrate */\n      dup5\n        /* \"contracts/V3Migrator_flattened.sol\":75627:75653  TransferHelper.safeApprove */\n      tag_177\n        /* \"contracts/V3Migrator_flattened.sol\":75627:75716  TransferHelper.safeApprove(params.token0, nonfungiblePositionManager, amount0V2ToMigrate) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/V3Migrator_flattened.sol\":75726:75815  TransferHelper.safeApprove(params.token1, nonfungiblePositionManager, amount1V2ToMigrate) */\n      tag_178\n        /* \"contracts/V3Migrator_flattened.sol\":75753:75766  params.token1 */\n      tag_179\n      0xa0\n      dup8\n      add\n      0x80\n      dup9\n      add\n      tag_151\n      jump\t// in\n    tag_179:\n        /* \"contracts/V3Migrator_flattened.sol\":75768:75794  nonfungiblePositionManager */\n      immutable(\"0x4573f5f1b837a8533275bdfe67b312d14235840d1b2ae2083669faa5812d511e\")\n        /* \"contracts/V3Migrator_flattened.sol\":75796:75814  amount1V2ToMigrate */\n      dup4\n        /* \"contracts/V3Migrator_flattened.sol\":75726:75752  TransferHelper.safeApprove */\n      tag_177\n        /* \"contracts/V3Migrator_flattened.sol\":75726:75815  TransferHelper.safeApprove(params.token1, nonfungiblePositionManager, amount1V2ToMigrate) */\n      jump\t// in\n    tag_178:\n        /* \"contracts/V3Migrator_flattened.sol\":75859:75876  uint256 amount0V3 */\n      0x00\n        /* \"contracts/V3Migrator_flattened.sol\":75878:75895  uint256 amount1V3 */\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":75939:75965  nonfungiblePositionManager */\n      immutable(\"0x4573f5f1b837a8533275bdfe67b312d14235840d1b2ae2083669faa5812d511e\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":75911:75971  INonfungiblePositionManager(nonfungiblePositionManager).mint */\n      and\n      0x88316456\n        /* \"contracts/V3Migrator_flattened.sol\":75989:76578  INonfungiblePositionManager.MintParams({... */\n      mload(0x40)\n      dup1\n      0x0160\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":76058:76064  params */\n      dup11\n        /* \"contracts/V3Migrator_flattened.sol\":76058:76071  params.token0 */\n      0x60\n      add\n      0x20\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_151\n      jump\t// in\n    tag_180:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":75989:76578  INonfungiblePositionManager.MintParams({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/V3Migrator_flattened.sol\":76101:76114  params.token1 */\n      tag_181\n      0xa0\n      dup13\n      add\n      0x80\n      dup14\n      add\n      tag_151\n      jump\t// in\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":75989:76578  INonfungiblePositionManager.MintParams({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/V3Migrator_flattened.sol\":76141:76151  params.fee */\n      tag_182\n      0xc0\n      dup13\n      add\n      0xa0\n      dup14\n      add\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"contracts/V3Migrator_flattened.sol\":75989:76578  INonfungiblePositionManager.MintParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/V3Migrator_flattened.sol\":76184:76200  params.tickLower */\n      tag_184\n      0xe0\n      dup13\n      add\n      0xc0\n      dup14\n      add\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"contracts/V3Migrator_flattened.sol\":75989:76578  INonfungiblePositionManager.MintParams({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/V3Migrator_flattened.sol\":76233:76249  params.tickUpper */\n      tag_186\n      0x0100\n      dup13\n      add\n      0xe0\n      dup14\n      add\n      tag_185\n      jump\t// in\n    tag_186:\n        /* \"contracts/V3Migrator_flattened.sol\":75989:76578  INonfungiblePositionManager.MintParams({... */\n      0x02\n      signextend\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      dup9\n      swap1\n      mstore\n      0x40\n      dup2\n      add\n      dup8\n      swap1\n      mstore\n        /* \"contracts/V3Migrator_flattened.sol\":76395:76412  params.amount0Min */\n      0x0100\n      dup12\n      add\n      calldataload\n        /* \"contracts/V3Migrator_flattened.sol\":75989:76578  INonfungiblePositionManager.MintParams({... */\n      0x60\n      dup3\n      add\n      mstore\n        /* \"contracts/V3Migrator_flattened.sol\":76446:76463  params.amount1Min */\n      0x0120\n      dup12\n      add\n      calldataload\n        /* \"contracts/V3Migrator_flattened.sol\":75989:76578  INonfungiblePositionManager.MintParams({... */\n      0x80\n      dup3\n      add\n      mstore\n      0xa0\n      add\n        /* \"contracts/V3Migrator_flattened.sol\":76496:76512  params.recipient */\n      tag_187\n      0x0160\n      dup13\n      add\n      0x0140\n      dup14\n      add\n      tag_151\n      jump\t// in\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":75989:76578  INonfungiblePositionManager.MintParams({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/V3Migrator_flattened.sol\":76544:76550  params */\n      dup11\n        /* \"contracts/V3Migrator_flattened.sol\":76544:76559  params.deadline */\n      0x0160\n      add\n      calldataload\n        /* \"contracts/V3Migrator_flattened.sol\":75989:76578  INonfungiblePositionManager.MintParams({... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":75911:76592  INonfungiblePositionManager(nonfungiblePositionManager).mint(... */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      0x80\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_190\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_190:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_192:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_193\n      swap2\n      swap1\n      tag_194\n      jump\t// in\n    tag_193:\n        /* \"contracts/V3Migrator_flattened.sol\":75854:76592  (, , uint256 amount0V3, uint256 amount1V3) =... */\n      swap4\n      pop\n      swap4\n      pop\n      pop\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":76676:76685  amount0V2 */\n      dup6\n        /* \"contracts/V3Migrator_flattened.sol\":76664:76673  amount0V3 */\n      dup3\n        /* \"contracts/V3Migrator_flattened.sol\":76664:76685  amount0V3 < amount0V2 */\n      lt\n        /* \"contracts/V3Migrator_flattened.sol\":76660:77204  if (amount0V3 < amount0V2) {... */\n      iszero\n      tag_195\n      jumpi\n        /* \"contracts/V3Migrator_flattened.sol\":76717:76735  amount0V2ToMigrate */\n      dup4\n        /* \"contracts/V3Migrator_flattened.sol\":76705:76714  amount0V3 */\n      dup3\n        /* \"contracts/V3Migrator_flattened.sol\":76705:76735  amount0V3 < amount0V2ToMigrate */\n      lt\n        /* \"contracts/V3Migrator_flattened.sol\":76701:76842  if (amount0V3 < amount0V2ToMigrate) {... */\n      iszero\n      tag_197\n      jumpi\n        /* \"contracts/V3Migrator_flattened.sol\":76755:76827  TransferHelper.safeApprove(params.token0, nonfungiblePositionManager, 0) */\n      tag_197\n        /* \"contracts/V3Migrator_flattened.sol\":76782:76795  params.token0 */\n      tag_198\n      0x80\n      dup10\n      add\n      0x60\n      dup11\n      add\n      tag_151\n      jump\t// in\n    tag_198:\n        /* \"contracts/V3Migrator_flattened.sol\":76797:76823  nonfungiblePositionManager */\n      immutable(\"0x4573f5f1b837a8533275bdfe67b312d14235840d1b2ae2083669faa5812d511e\")\n        /* \"contracts/V3Migrator_flattened.sol\":76825:76826  0 */\n      0x00\n        /* \"contracts/V3Migrator_flattened.sol\":76755:76781  TransferHelper.safeApprove */\n      tag_177\n        /* \"contracts/V3Migrator_flattened.sol\":76755:76827  TransferHelper.safeApprove(params.token0, nonfungiblePositionManager, 0) */\n      jump\t// in\n    tag_197:\n        /* \"contracts/V3Migrator_flattened.sol\":76874:76895  amount0V2 - amount0V3 */\n      dup2\n      dup7\n      sub\n        /* \"contracts/V3Migrator_flattened.sol\":76913:76931  params.refundAsETH */\n      tag_199\n      0x01a0\n      dup10\n      add\n      0x0180\n      dup11\n      add\n      tag_200\n      jump\t// in\n    tag_199:\n        /* \"contracts/V3Migrator_flattened.sol\":76913:76957  params.refundAsETH && params.token0 == WETH9 */\n      dup1\n      iszero\n      tag_201\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":76952:76957  WETH9 */\n      immutable(\"0xa89dab98646eeeb3665d545d51c6146ef2fb7643427936d0df6806075707fbb6\")\n        /* \"contracts/V3Migrator_flattened.sol\":76935:76957  params.token0 == WETH9 */\n      and\n        /* \"contracts/V3Migrator_flattened.sol\":76935:76948  params.token0 */\n      tag_202\n      0x80\n      dup11\n      add\n      0x60\n      dup12\n      add\n      tag_151\n      jump\t// in\n    tag_202:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":76935:76957  params.token0 == WETH9 */\n      and\n      eq\n        /* \"contracts/V3Migrator_flattened.sol\":76913:76957  params.refundAsETH && params.token0 == WETH9 */\n    tag_201:\n        /* \"contracts/V3Migrator_flattened.sol\":76909:77194  if (params.refundAsETH && params.token0 == WETH9) {... */\n      iszero\n      tag_203\n      jumpi\n        /* \"contracts/V3Migrator_flattened.sol\":76977:77008  IWETH9(WETH9).withdraw(refund0) */\n      mload(0x40)\n      shl(0xe0, 0x2e1a7d4d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":76984:76989  WETH9 */\n      immutable(\"0xa89dab98646eeeb3665d545d51c6146ef2fb7643427936d0df6806075707fbb6\")\n        /* \"contracts/V3Migrator_flattened.sol\":76977:76999  IWETH9(WETH9).withdraw */\n      and\n      swap1\n      0x2e1a7d4d\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":76977:77008  IWETH9(WETH9).withdraw(refund0) */\n      tag_204\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":77000:77007  refund0 */\n      dup5\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":76977:77008  IWETH9(WETH9).withdraw(refund0) */\n      0x04\n      add\n      tag_205\n      jump\t// in\n    tag_204:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_206:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_208\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_208:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":77026:77077  TransferHelper.safeTransferETH(msg.sender, refund0) */\n      tag_209\n        /* \"contracts/V3Migrator_flattened.sol\":77057:77067  msg.sender */\n      caller\n        /* \"contracts/V3Migrator_flattened.sol\":77069:77076  refund0 */\n      dup3\n        /* \"contracts/V3Migrator_flattened.sol\":77026:77056  TransferHelper.safeTransferETH */\n      tag_210\n        /* \"contracts/V3Migrator_flattened.sol\":77026:77077  TransferHelper.safeTransferETH(msg.sender, refund0) */\n      jump\t// in\n    tag_209:\n        /* \"contracts/V3Migrator_flattened.sol\":76909:77194  if (params.refundAsETH && params.token0 == WETH9) {... */\n      jump(tag_212)\n    tag_203:\n        /* \"contracts/V3Migrator_flattened.sol\":77116:77179  TransferHelper.safeTransfer(params.token0, msg.sender, refund0) */\n      tag_212\n        /* \"contracts/V3Migrator_flattened.sol\":77144:77157  params.token0 */\n      tag_213\n      0x80\n      dup11\n      add\n      0x60\n      dup12\n      add\n      tag_151\n      jump\t// in\n    tag_213:\n        /* \"contracts/V3Migrator_flattened.sol\":77159:77169  msg.sender */\n      caller\n        /* \"contracts/V3Migrator_flattened.sol\":77171:77178  refund0 */\n      dup4\n        /* \"contracts/V3Migrator_flattened.sol\":77116:77143  TransferHelper.safeTransfer */\n      tag_214\n        /* \"contracts/V3Migrator_flattened.sol\":77116:77179  TransferHelper.safeTransfer(params.token0, msg.sender, refund0) */\n      jump\t// in\n    tag_212:\n        /* \"contracts/V3Migrator_flattened.sol\":76660:77204  if (amount0V3 < amount0V2) {... */\n      pop\n    tag_195:\n        /* \"contracts/V3Migrator_flattened.sol\":77229:77238  amount1V2 */\n      dup5\n        /* \"contracts/V3Migrator_flattened.sol\":77217:77226  amount1V3 */\n      dup2\n        /* \"contracts/V3Migrator_flattened.sol\":77217:77238  amount1V3 < amount1V2 */\n      lt\n        /* \"contracts/V3Migrator_flattened.sol\":77213:77757  if (amount1V3 < amount1V2) {... */\n      iszero\n      tag_215\n      jumpi\n        /* \"contracts/V3Migrator_flattened.sol\":77270:77288  amount1V2ToMigrate */\n      dup3\n        /* \"contracts/V3Migrator_flattened.sol\":77258:77267  amount1V3 */\n      dup2\n        /* \"contracts/V3Migrator_flattened.sol\":77258:77288  amount1V3 < amount1V2ToMigrate */\n      lt\n        /* \"contracts/V3Migrator_flattened.sol\":77254:77395  if (amount1V3 < amount1V2ToMigrate) {... */\n      iszero\n      tag_217\n      jumpi\n        /* \"contracts/V3Migrator_flattened.sol\":77308:77380  TransferHelper.safeApprove(params.token1, nonfungiblePositionManager, 0) */\n      tag_217\n        /* \"contracts/V3Migrator_flattened.sol\":77335:77348  params.token1 */\n      tag_198\n      0xa0\n      dup10\n      add\n      0x80\n      dup11\n      add\n      tag_151\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":77308:77380  TransferHelper.safeApprove(params.token1, nonfungiblePositionManager, 0) */\n    tag_217:\n        /* \"contracts/V3Migrator_flattened.sol\":77427:77448  amount1V2 - amount1V3 */\n      dup1\n      dup6\n      sub\n        /* \"contracts/V3Migrator_flattened.sol\":77466:77484  params.refundAsETH */\n      tag_219\n      0x01a0\n      dup10\n      add\n      0x0180\n      dup11\n      add\n      tag_200\n      jump\t// in\n    tag_219:\n        /* \"contracts/V3Migrator_flattened.sol\":77466:77510  params.refundAsETH && params.token1 == WETH9 */\n      dup1\n      iszero\n      tag_220\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":77505:77510  WETH9 */\n      immutable(\"0xa89dab98646eeeb3665d545d51c6146ef2fb7643427936d0df6806075707fbb6\")\n        /* \"contracts/V3Migrator_flattened.sol\":77488:77510  params.token1 == WETH9 */\n      and\n        /* \"contracts/V3Migrator_flattened.sol\":77488:77501  params.token1 */\n      tag_221\n      0xa0\n      dup11\n      add\n      0x80\n      dup12\n      add\n      tag_151\n      jump\t// in\n    tag_221:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":77488:77510  params.token1 == WETH9 */\n      and\n      eq\n        /* \"contracts/V3Migrator_flattened.sol\":77466:77510  params.refundAsETH && params.token1 == WETH9 */\n    tag_220:\n        /* \"contracts/V3Migrator_flattened.sol\":77462:77747  if (params.refundAsETH && params.token1 == WETH9) {... */\n      iszero\n      tag_222\n      jumpi\n        /* \"contracts/V3Migrator_flattened.sol\":77530:77561  IWETH9(WETH9).withdraw(refund1) */\n      mload(0x40)\n      shl(0xe0, 0x2e1a7d4d)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":77537:77542  WETH9 */\n      immutable(\"0xa89dab98646eeeb3665d545d51c6146ef2fb7643427936d0df6806075707fbb6\")\n        /* \"contracts/V3Migrator_flattened.sol\":77530:77552  IWETH9(WETH9).withdraw */\n      and\n      swap1\n      0x2e1a7d4d\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":77530:77561  IWETH9(WETH9).withdraw(refund1) */\n      tag_223\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":77553:77560  refund1 */\n      dup5\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":77530:77561  IWETH9(WETH9).withdraw(refund1) */\n      0x04\n      add\n      tag_205\n      jump\t// in\n    tag_223:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_224:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_226\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_226:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":77579:77630  TransferHelper.safeTransferETH(msg.sender, refund1) */\n      tag_227\n        /* \"contracts/V3Migrator_flattened.sol\":77610:77620  msg.sender */\n      caller\n        /* \"contracts/V3Migrator_flattened.sol\":77622:77629  refund1 */\n      dup3\n        /* \"contracts/V3Migrator_flattened.sol\":77579:77609  TransferHelper.safeTransferETH */\n      tag_210\n        /* \"contracts/V3Migrator_flattened.sol\":77579:77630  TransferHelper.safeTransferETH(msg.sender, refund1) */\n      jump\t// in\n    tag_227:\n        /* \"contracts/V3Migrator_flattened.sol\":77462:77747  if (params.refundAsETH && params.token1 == WETH9) {... */\n      jump(tag_229)\n    tag_222:\n        /* \"contracts/V3Migrator_flattened.sol\":77669:77732  TransferHelper.safeTransfer(params.token1, msg.sender, refund1) */\n      tag_229\n        /* \"contracts/V3Migrator_flattened.sol\":77697:77710  params.token1 */\n      tag_213\n      0xa0\n      dup11\n      add\n      0x80\n      dup12\n      add\n      tag_151\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":77669:77732  TransferHelper.safeTransfer(params.token1, msg.sender, refund1) */\n    tag_229:\n        /* \"contracts/V3Migrator_flattened.sol\":77213:77757  if (amount1V3 < amount1V2) {... */\n      pop\n    tag_215:\n        /* \"contracts/V3Migrator_flattened.sol\":74860:77763  function migrate(MigrateParams calldata params) external override {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/V3Migrator_flattened.sol\":41648:41921  function selfPermit(... */\n    tag_62:\n        /* \"contracts/V3Migrator_flattened.sol\":41835:41914  IERC20Permit(token).permit(msg.sender, address(this), value, deadline, v, r, s) */\n      mload(0x40)\n      0xd505accf00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":41835:41861  IERC20Permit(token).permit */\n      dup8\n      and\n      swap1\n      0xd505accf\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":41835:41914  IERC20Permit(token).permit(msg.sender, address(this), value, deadline, v, r, s) */\n      tag_95\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":41862:41872  msg.sender */\n      caller\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":41882:41886  this */\n      address\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":41889:41894  value */\n      dup11\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":41896:41904  deadline */\n      dup11\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":41906:41907  v */\n      dup11\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":41909:41910  r */\n      dup11\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":41912:41913  s */\n      dup11\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":41835:41914  IERC20Permit(token).permit(msg.sender, address(this), value, deadline, v, r, s) */\n      0x04\n      add\n      tag_233\n      jump\t// in\n        /* \"contracts/V3Migrator_flattened.sol\":73519:73644  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n    tag_170:\n        /* \"contracts/V3Migrator_flattened.sol\":73577:73586  uint256 z */\n      0x00\n        /* \"contracts/V3Migrator_flattened.sol\":73606:73612  x == 0 */\n      dup3\n      iszero\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":73606:73636  x == 0 || (z = x * y) / x == y */\n      tag_238\n      jumpi\n      pop\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":73621:73626  x * y */\n      dup2\n      dup2\n      mul\n        /* \"contracts/V3Migrator_flattened.sol\":73635:73636  y */\n      dup2\n        /* \"contracts/V3Migrator_flattened.sol\":73630:73631  x */\n      dup4\n        /* \"contracts/V3Migrator_flattened.sol\":73621:73626  x * y */\n      dup3\n        /* \"contracts/V3Migrator_flattened.sol\":73630:73631  x */\n      dup2\n        /* \"contracts/V3Migrator_flattened.sol\":73616:73631  (z = x * y) / x */\n      tag_239\n      jumpi\n      invalid\n    tag_239:\n      div\n        /* \"contracts/V3Migrator_flattened.sol\":73616:73636  (z = x * y) / x == y */\n      eq\n        /* \"contracts/V3Migrator_flattened.sol\":73606:73636  x == 0 || (z = x * y) / x == y */\n    tag_238:\n        /* \"contracts/V3Migrator_flattened.sol\":73598:73637  require(x == 0 || (z = x * y) / x == y) */\n      tag_240\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_240:\n        /* \"contracts/V3Migrator_flattened.sol\":73519:73644  function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/V3Migrator_flattened.sol\":44811:45118  function safeApprove(... */\n    tag_177:\n        /* \"contracts/V3Migrator_flattened.sol\":44924:44936  bool success */\n      0x00\n        /* \"contracts/V3Migrator_flattened.sol\":44938:44955  bytes memory data */\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":44959:44964  token */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":44959:44969  token.call */\n      and\n        /* \"contracts/V3Migrator_flattened.sol\":44993:45016  IERC20.approve.selector */\n      shl(0xe0, 0x095ea7b3)\n        /* \"contracts/V3Migrator_flattened.sol\":45018:45020  to */\n      dup6\n        /* \"contracts/V3Migrator_flattened.sol\":45022:45027  value */\n      dup6\n        /* \"contracts/V3Migrator_flattened.sol\":44970:45028  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_242\n      swap3\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_242:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      mstore\n        /* \"contracts/V3Migrator_flattened.sol\":44959:45029  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap1\n      mload\n      tag_244\n      swap2\n        /* \"contracts/V3Migrator_flattened.sol\":44970:45028  abi.encodeWithSelector(IERC20.approve.selector, to, value) */\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":44959:45029  token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      tag_245\n      jump\t// in\n    tag_244:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_248\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_247)\n    tag_248:\n      0x60\n      swap2\n      pop\n    tag_247:\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":44923:45029  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.approve.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":45047:45054  success */\n      dup2\n        /* \"contracts/V3Migrator_flattened.sol\":45047:45104  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_251\n      jumpi\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":45059:45070  data.length */\n      dup1\n      mload\n        /* \"contracts/V3Migrator_flattened.sol\":45059:45075  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":45059:45103  data.length == 0 || abi.decode(data, (bool)) */\n      tag_251\n      jumpi\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":45090:45094  data */\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":45079:45103  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_251\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_251:\n        /* \"contracts/V3Migrator_flattened.sol\":45039:45111  require(success && (data.length == 0 || abi.decode(data, (bool))), 'SA') */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_254\n      jump\t// in\n    tag_252:\n        /* \"contracts/V3Migrator_flattened.sol\":44811:45118  function safeApprove(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/V3Migrator_flattened.sol\":45308:45473  function safeTransferETH(address to, uint256 value) internal {... */\n    tag_210:\n        /* \"contracts/V3Migrator_flattened.sol\":45420:45432  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/V3Migrator_flattened.sol\":45380:45392  bool success */\n      0x00\n        /* \"contracts/V3Migrator_flattened.sol\":45420:45432  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":45398:45405  to.call */\n      dup5\n      and\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":45413:45418  value */\n      dup4\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":45398:45433  to.call{value: value}(new bytes(0)) */\n      mload(0x40)\n      tag_258\n      swap2\n      swap1\n      tag_245\n      jump\t// in\n    tag_258:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_261\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_260)\n    tag_261:\n      0x60\n      swap2\n      pop\n    tag_260:\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":45379:45433  (bool success, ) = to.call{value: value}(new bytes(0)) */\n      pop\n      swap1\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":45451:45458  success */\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":45443:45466  require(success, 'STE') */\n      tag_262\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_264\n      jump\t// in\n    tag_262:\n        /* \"contracts/V3Migrator_flattened.sol\":45308:45473  function safeTransferETH(address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/V3Migrator_flattened.sol\":44149:44458  function safeTransfer(... */\n    tag_214:\n        /* \"contracts/V3Migrator_flattened.sol\":44263:44275  bool success */\n      0x00\n        /* \"contracts/V3Migrator_flattened.sol\":44277:44294  bytes memory data */\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":44298:44303  token */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/V3Migrator_flattened.sol\":44298:44308  token.call */\n      and\n        /* \"contracts/V3Migrator_flattened.sol\":44332:44356  IERC20.transfer.selector */\n      shl(0xe0, 0xa9059cbb)\n        /* \"contracts/V3Migrator_flattened.sol\":44358:44360  to */\n      dup6\n        /* \"contracts/V3Migrator_flattened.sol\":44362:44367  value */\n      dup6\n        /* \"contracts/V3Migrator_flattened.sol\":44309:44368  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      add(0x24, mload(0x40))\n      tag_266\n      swap3\n      swap2\n      swap1\n      tag_243\n      jump\t// in\n    tag_266:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      dup2\n      mstore\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      swap1\n      swap5\n      and\n      swap4\n      swap1\n      swap4\n      or\n      swap1\n      swap3\n      mstore\n        /* \"contracts/V3Migrator_flattened.sol\":44298:44369  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap1\n      mload\n      tag_267\n      swap2\n        /* \"contracts/V3Migrator_flattened.sol\":44309:44368  abi.encodeWithSelector(IERC20.transfer.selector, to, value) */\n      swap1\n        /* \"contracts/V3Migrator_flattened.sol\":44298:44369  token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      tag_245\n      jump\t// in\n    tag_267:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_270\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_269)\n    tag_270:\n      0x60\n      swap2\n      pop\n    tag_269:\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":44262:44369  (bool success, bytes memory data) = token.call(abi.encodeWithSelector(IERC20.transfer.selector, to, value)) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":44387:44394  success */\n      dup2\n        /* \"contracts/V3Migrator_flattened.sol\":44387:44444  success && (data.length == 0 || abi.decode(data, (bool))) */\n      dup1\n      iszero\n      tag_273\n      jumpi\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":44399:44410  data.length */\n      dup1\n      mload\n        /* \"contracts/V3Migrator_flattened.sol\":44399:44415  data.length == 0 */\n      iszero\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":44399:44443  data.length == 0 || abi.decode(data, (bool)) */\n      tag_273\n      jumpi\n      pop\n        /* \"contracts/V3Migrator_flattened.sol\":44430:44434  data */\n      dup1\n        /* \"contracts/V3Migrator_flattened.sol\":44419:44443  abi.decode(data, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_273\n      swap2\n      swap1\n      tag_159\n      jump\t// in\n    tag_273:\n        /* \"contracts/V3Migrator_flattened.sol\":44379:44451  require(success && (data.length == 0 || abi.decode(data, (bool))), 'ST') */\n      tag_252\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_19\n      swap1\n      tag_276\n      jump\t// in\n        /* \"#utility.yul\":14:179   */\n    tag_278:\n        /* \"#utility.yul\":94:107   */\n      dup1\n      mload\n        /* \"#utility.yul\":147:153   */\n      0xffff\n        /* \"#utility.yul\":136:154   */\n      dup2\n      and\n        /* \"#utility.yul\":126:155   */\n      dup2\n      eq\n        /* \"#utility.yul\":116:118   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":169:170   */\n      0x00\n        /* \"#utility.yul\":166:167   */\n      dup1\n        /* \"#utility.yul\":159:171   */\n      revert\n        /* \"#utility.yul\":116:118   */\n    tag_280:\n        /* \"#utility.yul\":75:179   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":184:347   */\n    tag_281:\n        /* \"#utility.yul\":253:273   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":313:321   */\n      0xffffff\n        /* \"#utility.yul\":302:322   */\n      dup2\n      and\n        /* \"#utility.yul\":292:323   */\n      dup2\n      eq\n        /* \"#utility.yul\":282:284   */\n      tag_280\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":352:611   */\n    tag_151:\n      0x00\n        /* \"#utility.yul\":464:466   */\n      0x20\n        /* \"#utility.yul\":452:461   */\n      dup3\n        /* \"#utility.yul\":443:450   */\n      dup5\n        /* \"#utility.yul\":439:462   */\n      sub\n        /* \"#utility.yul\":435:467   */\n      slt\n        /* \"#utility.yul\":432:434   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":485:491   */\n      dup1\n        /* \"#utility.yul\":477:483   */\n      dup2\n        /* \"#utility.yul\":470:492   */\n      revert\n        /* \"#utility.yul\":432:434   */\n    tag_285:\n        /* \"#utility.yul\":529:538   */\n      dup2\n        /* \"#utility.yul\":516:539   */\n      calldataload\n        /* \"#utility.yul\":548:581   */\n      tag_286\n        /* \"#utility.yul\":575:580   */\n      dup2\n        /* \"#utility.yul\":548:581   */\n      tag_287\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":600:605   */\n      swap4\n        /* \"#utility.yul\":422:611   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":616:879   */\n    tag_71:\n      0x00\n        /* \"#utility.yul\":739:741   */\n      0x20\n        /* \"#utility.yul\":727:736   */\n      dup3\n        /* \"#utility.yul\":718:725   */\n      dup5\n        /* \"#utility.yul\":714:737   */\n      sub\n        /* \"#utility.yul\":710:742   */\n      slt\n        /* \"#utility.yul\":707:709   */\n      iszero\n      tag_289\n      jumpi\n        /* \"#utility.yul\":760:766   */\n      dup1\n        /* \"#utility.yul\":752:758   */\n      dup2\n        /* \"#utility.yul\":745:767   */\n      revert\n        /* \"#utility.yul\":707:709   */\n    tag_289:\n        /* \"#utility.yul\":797:806   */\n      dup2\n        /* \"#utility.yul\":791:807   */\n      mload\n        /* \"#utility.yul\":816:849   */\n      tag_286\n        /* \"#utility.yul\":843:848   */\n      dup2\n        /* \"#utility.yul\":816:849   */\n      tag_287\n      jump\t// in\n        /* \"#utility.yul\":884:1504   */\n    tag_23:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":1046:1049   */\n      0x80\n        /* \"#utility.yul\":1034:1043   */\n      dup6\n        /* \"#utility.yul\":1025:1032   */\n      dup8\n        /* \"#utility.yul\":1021:1044   */\n      sub\n        /* \"#utility.yul\":1017:1050   */\n      slt\n        /* \"#utility.yul\":1014:1016   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":1068:1074   */\n      dup3\n        /* \"#utility.yul\":1060:1066   */\n      dup4\n        /* \"#utility.yul\":1053:1075   */\n      revert\n        /* \"#utility.yul\":1014:1016   */\n    tag_292:\n        /* \"#utility.yul\":1112:1121   */\n      dup5\n        /* \"#utility.yul\":1099:1122   */\n      calldataload\n        /* \"#utility.yul\":1131:1164   */\n      tag_293\n        /* \"#utility.yul\":1158:1163   */\n      dup2\n        /* \"#utility.yul\":1131:1164   */\n      tag_287\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":1183:1188   */\n      swap4\n      pop\n        /* \"#utility.yul\":1240:1242   */\n      0x20\n        /* \"#utility.yul\":1225:1243   */\n      dup6\n      add\n        /* \"#utility.yul\":1212:1244   */\n      calldataload\n        /* \"#utility.yul\":1253:1288   */\n      tag_294\n        /* \"#utility.yul\":1212:1244   */\n      dup2\n        /* \"#utility.yul\":1253:1288   */\n      tag_287\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":1307:1314   */\n      swap3\n      pop\n        /* \"#utility.yul\":1333:1372   */\n      tag_295\n        /* \"#utility.yul\":1368:1370   */\n      0x40\n        /* \"#utility.yul\":1353:1371   */\n      dup7\n      add\n        /* \"#utility.yul\":1333:1372   */\n      tag_281\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":1323:1372   */\n      swap2\n      pop\n        /* \"#utility.yul\":1424:1426   */\n      0x60\n        /* \"#utility.yul\":1413:1422   */\n      dup6\n        /* \"#utility.yul\":1409:1427   */\n      add\n        /* \"#utility.yul\":1396:1428   */\n      calldataload\n        /* \"#utility.yul\":1437:1472   */\n      tag_296\n        /* \"#utility.yul\":1464:1471   */\n      dup2\n        /* \"#utility.yul\":1437:1472   */\n      tag_287\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":1004:1504   */\n      swap4\n      swap7\n      swap3\n      swap6\n      pop\n      swap1\n      swap4\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1509:2182   */\n    tag_29:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":1704:1707   */\n      0xc0\n        /* \"#utility.yul\":1692:1701   */\n      dup8\n        /* \"#utility.yul\":1683:1690   */\n      dup10\n        /* \"#utility.yul\":1679:1702   */\n      sub\n        /* \"#utility.yul\":1675:1708   */\n      slt\n        /* \"#utility.yul\":1672:1674   */\n      iszero\n      tag_298\n      jumpi\n        /* \"#utility.yul\":1726:1732   */\n      dup2\n        /* \"#utility.yul\":1718:1724   */\n      dup3\n        /* \"#utility.yul\":1711:1733   */\n      revert\n        /* \"#utility.yul\":1672:1674   */\n    tag_298:\n        /* \"#utility.yul\":1770:1779   */\n      dup7\n        /* \"#utility.yul\":1757:1780   */\n      calldataload\n        /* \"#utility.yul\":1789:1822   */\n      tag_299\n        /* \"#utility.yul\":1816:1821   */\n      dup2\n        /* \"#utility.yul\":1789:1822   */\n      tag_287\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":1841:1846   */\n      swap6\n      pop\n        /* \"#utility.yul\":1893:1895   */\n      0x20\n        /* \"#utility.yul\":1878:1896   */\n      dup8\n      add\n        /* \"#utility.yul\":1865:1897   */\n      calldataload\n      swap5\n      pop\n        /* \"#utility.yul\":1944:1946   */\n      0x40\n        /* \"#utility.yul\":1929:1947   */\n      dup8\n      add\n        /* \"#utility.yul\":1916:1948   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":2000:2002   */\n      0x60\n        /* \"#utility.yul\":1985:2003   */\n      dup8\n      add\n        /* \"#utility.yul\":1972:2004   */\n      calldataload\n        /* \"#utility.yul\":2013:2046   */\n      tag_300\n        /* \"#utility.yul\":1972:2004   */\n      dup2\n        /* \"#utility.yul\":2013:2046   */\n      tag_301\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1662:2182   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n        /* \"#utility.yul\":2119:2122   */\n      0x80\n        /* \"#utility.yul\":2104:2123   */\n      dup2\n      add\n        /* \"#utility.yul\":2091:2124   */\n      calldataload\n      swap5\n        /* \"#utility.yul\":2171:2174   */\n      0xa0\n        /* \"#utility.yul\":2156:2175   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2143:2176   */\n      calldataload\n      swap4\n      pop\n        /* \"#utility.yul\":1662:2182   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2187:2864   */\n    tag_40:\n      0x00\n      dup1\n        /* \"#utility.yul\":2345:2347   */\n      0x20\n        /* \"#utility.yul\":2333:2342   */\n      dup4\n        /* \"#utility.yul\":2324:2331   */\n      dup6\n        /* \"#utility.yul\":2320:2343   */\n      sub\n        /* \"#utility.yul\":2316:2348   */\n      slt\n        /* \"#utility.yul\":2313:2315   */\n      iszero\n      tag_303\n      jumpi\n        /* \"#utility.yul\":2366:2372   */\n      dup2\n        /* \"#utility.yul\":2358:2364   */\n      dup3\n        /* \"#utility.yul\":2351:2373   */\n      revert\n        /* \"#utility.yul\":2313:2315   */\n    tag_303:\n        /* \"#utility.yul\":2411:2420   */\n      dup3\n        /* \"#utility.yul\":2398:2421   */\n      calldataload\n        /* \"#utility.yul\":2440:2458   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2481:2483   */\n      dup1\n        /* \"#utility.yul\":2473:2479   */\n      dup3\n        /* \"#utility.yul\":2470:2484   */\n      gt\n        /* \"#utility.yul\":2467:2469   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":2502:2508   */\n      dup4\n        /* \"#utility.yul\":2494:2500   */\n      dup5\n        /* \"#utility.yul\":2487:2509   */\n      revert\n        /* \"#utility.yul\":2467:2469   */\n    tag_304:\n        /* \"#utility.yul\":2545:2551   */\n      dup2\n        /* \"#utility.yul\":2534:2543   */\n      dup6\n        /* \"#utility.yul\":2530:2552   */\n      add\n        /* \"#utility.yul\":2520:2552   */\n      swap2\n      pop\n        /* \"#utility.yul\":2590:2597   */\n      dup6\n        /* \"#utility.yul\":2583:2587   */\n      0x1f\n        /* \"#utility.yul\":2579:2581   */\n      dup4\n        /* \"#utility.yul\":2575:2588   */\n      add\n        /* \"#utility.yul\":2571:2598   */\n      slt\n        /* \"#utility.yul\":2561:2563   */\n      tag_305\n      jumpi\n        /* \"#utility.yul\":2617:2623   */\n      dup4\n        /* \"#utility.yul\":2609:2615   */\n      dup5\n        /* \"#utility.yul\":2602:2624   */\n      revert\n        /* \"#utility.yul\":2561:2563   */\n    tag_305:\n        /* \"#utility.yul\":2662:2664   */\n      dup2\n        /* \"#utility.yul\":2649:2665   */\n      calldataload\n        /* \"#utility.yul\":2688:2690   */\n      dup2\n        /* \"#utility.yul\":2680:2686   */\n      dup2\n        /* \"#utility.yul\":2677:2691   */\n      gt\n        /* \"#utility.yul\":2674:2676   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":2709:2715   */\n      dup5\n        /* \"#utility.yul\":2701:2707   */\n      dup6\n        /* \"#utility.yul\":2694:2716   */\n      revert\n        /* \"#utility.yul\":2674:2676   */\n    tag_306:\n        /* \"#utility.yul\":2768:2775   */\n      dup7\n        /* \"#utility.yul\":2763:2765   */\n      0x20\n        /* \"#utility.yul\":2757:2759   */\n      dup1\n        /* \"#utility.yul\":2749:2755   */\n      dup4\n        /* \"#utility.yul\":2745:2760   */\n      mul\n        /* \"#utility.yul\":2741:2743   */\n      dup6\n        /* \"#utility.yul\":2737:2761   */\n      add\n        /* \"#utility.yul\":2733:2766   */\n      add\n        /* \"#utility.yul\":2730:2776   */\n      gt\n        /* \"#utility.yul\":2727:2729   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":2794:2800   */\n      dup5\n        /* \"#utility.yul\":2786:2792   */\n      dup6\n        /* \"#utility.yul\":2779:2801   */\n      revert\n        /* \"#utility.yul\":2727:2729   */\n    tag_307:\n        /* \"#utility.yul\":2830:2832   */\n      0x20\n        /* \"#utility.yul\":2822:2833   */\n      swap3\n      swap1\n      swap3\n      add\n      swap7\n        /* \"#utility.yul\":2852:2858   */\n      swap2\n      swap6\n      pop\n        /* \"#utility.yul\":2303:2864   */\n      swap1\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2869:3122   */\n    tag_200:\n      0x00\n        /* \"#utility.yul\":2978:2980   */\n      0x20\n        /* \"#utility.yul\":2966:2975   */\n      dup3\n        /* \"#utility.yul\":2957:2964   */\n      dup5\n        /* \"#utility.yul\":2953:2976   */\n      sub\n        /* \"#utility.yul\":2949:2981   */\n      slt\n        /* \"#utility.yul\":2946:2948   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":2999:3005   */\n      dup1\n        /* \"#utility.yul\":2991:2997   */\n      dup2\n        /* \"#utility.yul\":2984:3006   */\n      revert\n        /* \"#utility.yul\":2946:2948   */\n    tag_309:\n        /* \"#utility.yul\":3043:3052   */\n      dup2\n        /* \"#utility.yul\":3030:3053   */\n      calldataload\n        /* \"#utility.yul\":3062:3092   */\n      tag_286\n        /* \"#utility.yul\":3086:3091   */\n      dup2\n        /* \"#utility.yul\":3062:3092   */\n      tag_311\n      jump\t// in\n        /* \"#utility.yul\":3127:3384   */\n    tag_159:\n      0x00\n        /* \"#utility.yul\":3247:3249   */\n      0x20\n        /* \"#utility.yul\":3235:3244   */\n      dup3\n        /* \"#utility.yul\":3226:3233   */\n      dup5\n        /* \"#utility.yul\":3222:3245   */\n      sub\n        /* \"#utility.yul\":3218:3250   */\n      slt\n        /* \"#utility.yul\":3215:3217   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":3268:3274   */\n      dup1\n        /* \"#utility.yul\":3260:3266   */\n      dup2\n        /* \"#utility.yul\":3253:3275   */\n      revert\n        /* \"#utility.yul\":3215:3217   */\n    tag_313:\n        /* \"#utility.yul\":3305:3314   */\n      dup2\n        /* \"#utility.yul\":3299:3315   */\n      mload\n        /* \"#utility.yul\":3324:3354   */\n      tag_286\n        /* \"#utility.yul\":3348:3353   */\n      dup2\n        /* \"#utility.yul\":3324:3354   */\n      tag_311\n      jump\t// in\n        /* \"#utility.yul\":3389:3644   */\n    tag_185:\n      0x00\n        /* \"#utility.yul\":3499:3501   */\n      0x20\n        /* \"#utility.yul\":3487:3496   */\n      dup3\n        /* \"#utility.yul\":3478:3485   */\n      dup5\n        /* \"#utility.yul\":3474:3497   */\n      sub\n        /* \"#utility.yul\":3470:3502   */\n      slt\n        /* \"#utility.yul\":3467:3469   */\n      iszero\n      tag_316\n      jumpi\n        /* \"#utility.yul\":3520:3526   */\n      dup1\n        /* \"#utility.yul\":3512:3518   */\n      dup2\n        /* \"#utility.yul\":3505:3527   */\n      revert\n        /* \"#utility.yul\":3467:3469   */\n    tag_316:\n        /* \"#utility.yul\":3564:3573   */\n      dup2\n        /* \"#utility.yul\":3551:3574   */\n      calldataload\n        /* \"#utility.yul\":3583:3614   */\n      tag_286\n        /* \"#utility.yul\":3608:3613   */\n      dup2\n        /* \"#utility.yul\":3583:3614   */\n      tag_318\n      jump\t// in\n        /* \"#utility.yul\":3649:4525   */\n    tag_128:\n      0x00\n        /* \"#utility.yul\":3782:3784   */\n      0x20\n        /* \"#utility.yul\":3770:3779   */\n      dup3\n        /* \"#utility.yul\":3761:3768   */\n      dup5\n        /* \"#utility.yul\":3757:3780   */\n      sub\n        /* \"#utility.yul\":3753:3785   */\n      slt\n        /* \"#utility.yul\":3750:3752   */\n      iszero\n      tag_320\n      jumpi\n        /* \"#utility.yul\":3803:3809   */\n      dup1\n        /* \"#utility.yul\":3795:3801   */\n      dup2\n        /* \"#utility.yul\":3788:3810   */\n      revert\n        /* \"#utility.yul\":3750:3752   */\n    tag_320:\n        /* \"#utility.yul\":3841:3850   */\n      dup2\n        /* \"#utility.yul\":3835:3851   */\n      mload\n        /* \"#utility.yul\":3870:3888   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3911:3913   */\n      dup1\n        /* \"#utility.yul\":3903:3909   */\n      dup3\n        /* \"#utility.yul\":3900:3914   */\n      gt\n        /* \"#utility.yul\":3897:3899   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":3932:3938   */\n      dup3\n        /* \"#utility.yul\":3924:3930   */\n      dup4\n        /* \"#utility.yul\":3917:3939   */\n      revert\n        /* \"#utility.yul\":3897:3899   */\n    tag_321:\n        /* \"#utility.yul\":3975:3981   */\n      dup2\n        /* \"#utility.yul\":3964:3973   */\n      dup5\n        /* \"#utility.yul\":3960:3982   */\n      add\n        /* \"#utility.yul\":3950:3982   */\n      swap2\n      pop\n        /* \"#utility.yul\":4020:4027   */\n      dup5\n        /* \"#utility.yul\":4013:4017   */\n      0x1f\n        /* \"#utility.yul\":4009:4011   */\n      dup4\n        /* \"#utility.yul\":4005:4018   */\n      add\n        /* \"#utility.yul\":4001:4028   */\n      slt\n        /* \"#utility.yul\":3991:3993   */\n      tag_322\n      jumpi\n        /* \"#utility.yul\":4047:4053   */\n      dup3\n        /* \"#utility.yul\":4039:4045   */\n      dup4\n        /* \"#utility.yul\":4032:4054   */\n      revert\n        /* \"#utility.yul\":3991:3993   */\n    tag_322:\n        /* \"#utility.yul\":4081:4083   */\n      dup2\n        /* \"#utility.yul\":4075:4084   */\n      mload\n        /* \"#utility.yul\":4103:4105   */\n      dup2\n        /* \"#utility.yul\":4099:4101   */\n      dup2\n        /* \"#utility.yul\":4096:4106   */\n      gt\n        /* \"#utility.yul\":4093:4095   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":4109:4118   */\n      invalid\n        /* \"#utility.yul\":4093:4095   */\n    tag_323:\n        /* \"#utility.yul\":4149:4151   */\n      0x40\n        /* \"#utility.yul\":4143:4152   */\n      mload\n        /* \"#utility.yul\":4218:4220   */\n      0x1f\n        /* \"#utility.yul\":4199:4212   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4195:4222   */\n      and\n        /* \"#utility.yul\":4183:4223   */\n      dup2\n      add\n        /* \"#utility.yul\":4225:4227   */\n      0x20\n        /* \"#utility.yul\":4179:4228   */\n      add\n        /* \"#utility.yul\":4243:4261   */\n      dup4\n      dup2\n      gt\n        /* \"#utility.yul\":4263:4285   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":4240:4286   */\n      or\n        /* \"#utility.yul\":4237:4239   */\n      iszero\n      tag_324\n      jumpi\n        /* \"#utility.yul\":4289:4298   */\n      invalid\n        /* \"#utility.yul\":4237:4239   */\n    tag_324:\n        /* \"#utility.yul\":4316:4318   */\n      0x40\n        /* \"#utility.yul\":4309:4331   */\n      mstore\n        /* \"#utility.yul\":4340:4358   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":4377:4388   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":4390:4392   */\n      0x20\n        /* \"#utility.yul\":4373:4393   */\n      add\n        /* \"#utility.yul\":4370:4403   */\n      dup8\n      lt\n        /* \"#utility.yul\":4367:4369   */\n      iszero\n      tag_325\n      jumpi\n        /* \"#utility.yul\":4421:4427   */\n      dup5\n        /* \"#utility.yul\":4413:4419   */\n      dup6\n        /* \"#utility.yul\":4406:4428   */\n      revert\n        /* \"#utility.yul\":4367:4369   */\n    tag_325:\n        /* \"#utility.yul\":4439:4494   */\n      tag_326\n        /* \"#utility.yul\":4491:4493   */\n      dup3\n        /* \"#utility.yul\":4486:4488   */\n      0x20\n        /* \"#utility.yul\":4478:4484   */\n      dup4\n        /* \"#utility.yul\":4474:4489   */\n      add\n        /* \"#utility.yul\":4469:4471   */\n      0x20\n        /* \"#utility.yul\":4465:4467   */\n      dup8\n        /* \"#utility.yul\":4461:4472   */\n      add\n        /* \"#utility.yul\":4439:4494   */\n      tag_327\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":4513:4519   */\n      swap7\n        /* \"#utility.yul\":3740:4525   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4530:4740   */\n    tag_58:\n      0x00\n        /* \"#utility.yul\":4675:4678   */\n      0x01a0\n        /* \"#utility.yul\":4663:4672   */\n      dup3\n        /* \"#utility.yul\":4654:4661   */\n      dup5\n        /* \"#utility.yul\":4650:4673   */\n      sub\n        /* \"#utility.yul\":4646:4679   */\n      slt\n        /* \"#utility.yul\":4643:4645   */\n      iszero\n      tag_329\n      jumpi\n        /* \"#utility.yul\":4697:4703   */\n      dup1\n        /* \"#utility.yul\":4689:4695   */\n      dup2\n        /* \"#utility.yul\":4682:4704   */\n      revert\n        /* \"#utility.yul\":4643:4645   */\n    tag_329:\n      pop\n        /* \"#utility.yul\":4725:4734   */\n      swap2\n        /* \"#utility.yul\":4633:4740   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4745:5661   */\n    tag_88:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":4960:4963   */\n      0xe0\n        /* \"#utility.yul\":4948:4957   */\n      dup9\n        /* \"#utility.yul\":4939:4946   */\n      dup11\n        /* \"#utility.yul\":4935:4958   */\n      sub\n        /* \"#utility.yul\":4931:4964   */\n      slt\n        /* \"#utility.yul\":4928:4930   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":4982:4988   */\n      dup5\n        /* \"#utility.yul\":4974:4980   */\n      dup6\n        /* \"#utility.yul\":4967:4989   */\n      revert\n        /* \"#utility.yul\":4928:4930   */\n    tag_331:\n        /* \"#utility.yul\":5019:5028   */\n      dup8\n        /* \"#utility.yul\":5013:5029   */\n      mload\n        /* \"#utility.yul\":5038:5071   */\n      tag_332\n        /* \"#utility.yul\":5065:5070   */\n      dup2\n        /* \"#utility.yul\":5038:5071   */\n      tag_287\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":5140:5142   */\n      0x20\n        /* \"#utility.yul\":5125:5143   */\n      dup10\n      add\n        /* \"#utility.yul\":5119:5144   */\n      mload\n        /* \"#utility.yul\":5090:5095   */\n      swap1\n      swap8\n      pop\n        /* \"#utility.yul\":5153:5186   */\n      tag_333\n        /* \"#utility.yul\":5119:5144   */\n      dup2\n        /* \"#utility.yul\":5153:5186   */\n      tag_318\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":5205:5212   */\n      swap6\n      pop\n        /* \"#utility.yul\":5231:5281   */\n      tag_334\n        /* \"#utility.yul\":5277:5279   */\n      0x40\n        /* \"#utility.yul\":5262:5280   */\n      dup10\n      add\n        /* \"#utility.yul\":5231:5281   */\n      tag_278\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":5221:5281   */\n      swap5\n      pop\n        /* \"#utility.yul\":5300:5350   */\n      tag_335\n        /* \"#utility.yul\":5346:5348   */\n      0x60\n        /* \"#utility.yul\":5335:5344   */\n      dup10\n        /* \"#utility.yul\":5331:5349   */\n      add\n        /* \"#utility.yul\":5300:5350   */\n      tag_278\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":5290:5350   */\n      swap4\n      pop\n        /* \"#utility.yul\":5369:5420   */\n      tag_336\n        /* \"#utility.yul\":5415:5418   */\n      0x80\n        /* \"#utility.yul\":5404:5413   */\n      dup10\n        /* \"#utility.yul\":5400:5419   */\n      add\n        /* \"#utility.yul\":5369:5420   */\n      tag_278\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":5359:5420   */\n      swap3\n      pop\n        /* \"#utility.yul\":5465:5468   */\n      0xa0\n        /* \"#utility.yul\":5454:5463   */\n      dup9\n        /* \"#utility.yul\":5450:5469   */\n      add\n        /* \"#utility.yul\":5444:5470   */\n      mload\n        /* \"#utility.yul\":5479:5512   */\n      tag_337\n        /* \"#utility.yul\":5504:5511   */\n      dup2\n        /* \"#utility.yul\":5479:5512   */\n      tag_301\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":5583:5586   */\n      0xc0\n        /* \"#utility.yul\":5568:5587   */\n      dup10\n      add\n        /* \"#utility.yul\":5562:5588   */\n      mload\n        /* \"#utility.yul\":5531:5538   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":5597:5629   */\n      tag_338\n        /* \"#utility.yul\":5562:5588   */\n      dup2\n        /* \"#utility.yul\":5597:5629   */\n      tag_311\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":5648:5655   */\n      dup1\n        /* \"#utility.yul\":5638:5655   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4918:5661   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5666:5862   */\n    tag_183:\n      0x00\n        /* \"#utility.yul\":5777:5779   */\n      0x20\n        /* \"#utility.yul\":5765:5774   */\n      dup3\n        /* \"#utility.yul\":5756:5763   */\n      dup5\n        /* \"#utility.yul\":5752:5775   */\n      sub\n        /* \"#utility.yul\":5748:5780   */\n      slt\n        /* \"#utility.yul\":5745:5747   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":5798:5804   */\n      dup1\n        /* \"#utility.yul\":5790:5796   */\n      dup2\n        /* \"#utility.yul\":5783:5805   */\n      revert\n        /* \"#utility.yul\":5745:5747   */\n    tag_340:\n        /* \"#utility.yul\":5826:5856   */\n      tag_286\n        /* \"#utility.yul\":5846:5855   */\n      dup3\n        /* \"#utility.yul\":5826:5856   */\n      tag_281\n      jump\t// in\n        /* \"#utility.yul\":5867:6061   */\n    tag_107:\n      0x00\n        /* \"#utility.yul\":5990:5992   */\n      0x20\n        /* \"#utility.yul\":5978:5987   */\n      dup3\n        /* \"#utility.yul\":5969:5976   */\n      dup5\n        /* \"#utility.yul\":5965:5988   */\n      sub\n        /* \"#utility.yul\":5961:5993   */\n      slt\n        /* \"#utility.yul\":5958:5960   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":6011:6017   */\n      dup1\n        /* \"#utility.yul\":6003:6009   */\n      dup2\n        /* \"#utility.yul\":5996:6018   */\n      revert\n        /* \"#utility.yul\":5958:5960   */\n    tag_343:\n      pop\n        /* \"#utility.yul\":6039:6055   */\n      mload\n      swap2\n        /* \"#utility.yul\":5948:6061   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6066:6575   */\n    tag_194:\n      0x00\n      dup1\n      0x00\n      dup1\n        /* \"#utility.yul\":6240:6243   */\n      0x80\n        /* \"#utility.yul\":6228:6237   */\n      dup6\n        /* \"#utility.yul\":6219:6226   */\n      dup8\n        /* \"#utility.yul\":6215:6238   */\n      sub\n        /* \"#utility.yul\":6211:6244   */\n      slt\n        /* \"#utility.yul\":6208:6210   */\n      iszero\n      tag_345\n      jumpi\n        /* \"#utility.yul\":6262:6268   */\n      dup2\n        /* \"#utility.yul\":6254:6260   */\n      dup3\n        /* \"#utility.yul\":6247:6269   */\n      revert\n        /* \"#utility.yul\":6208:6210   */\n    tag_345:\n        /* \"#utility.yul\":6296:6305   */\n      dup5\n        /* \"#utility.yul\":6290:6306   */\n      mload\n        /* \"#utility.yul\":6280:6306   */\n      swap4\n      pop\n        /* \"#utility.yul\":6349:6351   */\n      0x20\n        /* \"#utility.yul\":6338:6347   */\n      dup6\n        /* \"#utility.yul\":6334:6352   */\n      add\n        /* \"#utility.yul\":6328:6353   */\n      mload\n        /* \"#utility.yul\":6393:6427   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6386:6391   */\n      dup2\n        /* \"#utility.yul\":6382:6428   */\n      and\n        /* \"#utility.yul\":6375:6380   */\n      dup2\n        /* \"#utility.yul\":6372:6429   */\n      eq\n        /* \"#utility.yul\":6362:6364   */\n      tag_346\n      jumpi\n        /* \"#utility.yul\":6448:6454   */\n      dup3\n        /* \"#utility.yul\":6440:6446   */\n      dup4\n        /* \"#utility.yul\":6433:6455   */\n      revert\n        /* \"#utility.yul\":6362:6364   */\n    tag_346:\n        /* \"#utility.yul\":6521:6523   */\n      0x40\n        /* \"#utility.yul\":6506:6524   */\n      dup7\n      add\n        /* \"#utility.yul\":6500:6525   */\n      mload\n        /* \"#utility.yul\":6565:6567   */\n      0x60\n        /* \"#utility.yul\":6550:6568   */\n      swap1\n      swap7\n      add\n        /* \"#utility.yul\":6544:6569   */\n      mload\n        /* \"#utility.yul\":6198:6575   */\n      swap5\n      swap8\n        /* \"#utility.yul\":6476:6481   */\n      swap1\n      swap7\n      pop\n        /* \"#utility.yul\":6198:6575   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6580:6835   */\n    tag_167:\n      0x00\n      dup1\n        /* \"#utility.yul\":6720:6722   */\n      0x40\n        /* \"#utility.yul\":6708:6717   */\n      dup4\n        /* \"#utility.yul\":6699:6706   */\n      dup6\n        /* \"#utility.yul\":6695:6718   */\n      sub\n        /* \"#utility.yul\":6691:6723   */\n      slt\n        /* \"#utility.yul\":6688:6690   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":6741:6747   */\n      dup2\n        /* \"#utility.yul\":6733:6739   */\n      dup3\n        /* \"#utility.yul\":6726:6748   */\n      revert\n        /* \"#utility.yul\":6688:6690   */\n    tag_348:\n      pop\n      pop\n        /* \"#utility.yul\":6769:6785   */\n      dup1\n      mload\n        /* \"#utility.yul\":6825:6827   */\n      0x20\n        /* \"#utility.yul\":6810:6828   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":6804:6829   */\n      mload\n        /* \"#utility.yul\":6769:6785   */\n      swap1\n      swap3\n        /* \"#utility.yul\":6804:6829   */\n      swap1\n      swap2\n      pop\n        /* \"#utility.yul\":6678:6835   */\n      jump\t// out\n        /* \"#utility.yul\":6840:7095   */\n    tag_142:\n      0x00\n        /* \"#utility.yul\":6950:6952   */\n      0x20\n        /* \"#utility.yul\":6938:6947   */\n      dup3\n        /* \"#utility.yul\":6929:6936   */\n      dup5\n        /* \"#utility.yul\":6925:6948   */\n      sub\n        /* \"#utility.yul\":6921:6953   */\n      slt\n        /* \"#utility.yul\":6918:6920   */\n      iszero\n      tag_350\n      jumpi\n        /* \"#utility.yul\":6971:6977   */\n      dup1\n        /* \"#utility.yul\":6963:6969   */\n      dup2\n        /* \"#utility.yul\":6956:6978   */\n      revert\n        /* \"#utility.yul\":6918:6920   */\n    tag_350:\n        /* \"#utility.yul\":7015:7024   */\n      dup2\n        /* \"#utility.yul\":7002:7025   */\n      calldataload\n        /* \"#utility.yul\":7034:7065   */\n      tag_286\n        /* \"#utility.yul\":7059:7064   */\n      dup2\n        /* \"#utility.yul\":7034:7065   */\n      tag_301\n      jump\t// in\n        /* \"#utility.yul\":7100:7229   */\n    tag_352:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7168:7222   */\n      and\n        /* \"#utility.yul\":7156:7223   */\n      swap1\n      mstore\n        /* \"#utility.yul\":7146:7229   */\n      jump\t// out\n        /* \"#utility.yul\":7234:7493   */\n    tag_354:\n      0x00\n        /* \"#utility.yul\":7315:7320   */\n      dup2\n        /* \"#utility.yul\":7309:7321   */\n      mload\n        /* \"#utility.yul\":7342:7348   */\n      dup1\n        /* \"#utility.yul\":7337:7340   */\n      dup5\n        /* \"#utility.yul\":7330:7349   */\n      mstore\n        /* \"#utility.yul\":7358:7421   */\n      tag_356\n        /* \"#utility.yul\":7414:7420   */\n      dup2\n        /* \"#utility.yul\":7407:7411   */\n      0x20\n        /* \"#utility.yul\":7402:7405   */\n      dup7\n        /* \"#utility.yul\":7398:7412   */\n      add\n        /* \"#utility.yul\":7391:7395   */\n      0x20\n        /* \"#utility.yul\":7384:7389   */\n      dup7\n        /* \"#utility.yul\":7380:7396   */\n      add\n        /* \"#utility.yul\":7358:7421   */\n      tag_327\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":7475:7477   */\n      0x1f\n        /* \"#utility.yul\":7454:7469   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":7450:7479   */\n      and\n        /* \"#utility.yul\":7441:7480   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":7482:7486   */\n      0x20\n        /* \"#utility.yul\":7437:7487   */\n      add\n      swap3\n        /* \"#utility.yul\":7285:7493   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7498:7591   */\n    tag_357:\n        /* \"#utility.yul\":7575:7576   */\n      0x02\n        /* \"#utility.yul\":7564:7584   */\n      signextend\n        /* \"#utility.yul\":7552:7585   */\n      swap1\n      mstore\n        /* \"#utility.yul\":7542:7591   */\n      jump\t// out\n        /* \"#utility.yul\":7596:7690   */\n    tag_359:\n        /* \"#utility.yul\":7674:7682   */\n      0xffffff\n        /* \"#utility.yul\":7663:7683   */\n      and\n        /* \"#utility.yul\":7651:7684   */\n      swap1\n      mstore\n        /* \"#utility.yul\":7641:7690   */\n      jump\t// out\n        /* \"#utility.yul\":7695:7968   */\n    tag_121:\n      0x00\n        /* \"#utility.yul\":7878:7884   */\n      dup3\n        /* \"#utility.yul\":7870:7876   */\n      dup5\n        /* \"#utility.yul\":7865:7868   */\n      dup4\n        /* \"#utility.yul\":7852:7885   */\n      calldatacopy\n        /* \"#utility.yul\":7904:7920   */\n      swap2\n      add\n        /* \"#utility.yul\":7929:7944   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":7904:7920   */\n      swap2\n        /* \"#utility.yul\":7842:7968   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7973:8247   */\n    tag_245:\n      0x00\n        /* \"#utility.yul\":8140:8146   */\n      dup3\n        /* \"#utility.yul\":8134:8147   */\n      mload\n        /* \"#utility.yul\":8156:8209   */\n      tag_363\n        /* \"#utility.yul\":8202:8208   */\n      dup2\n        /* \"#utility.yul\":8197:8200   */\n      dup5\n        /* \"#utility.yul\":8190:8194   */\n      0x20\n        /* \"#utility.yul\":8182:8188   */\n      dup8\n        /* \"#utility.yul\":8178:8195   */\n      add\n        /* \"#utility.yul\":8156:8209   */\n      tag_327\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":8225:8241   */\n      swap2\n      swap1\n      swap2\n      add\n      swap3\n        /* \"#utility.yul\":8110:8247   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8252:8478   */\n    tag_26:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8416:8471   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":8398:8472   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8386:8388   */\n      0x20\n        /* \"#utility.yul\":8371:8389   */\n      add\n      swap1\n        /* \"#utility.yul\":8353:8478   */\n      jump\t// out\n        /* \"#utility.yul\":8722:9057   */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8983:8998   */\n      swap3\n      dup4\n      and\n        /* \"#utility.yul\":8965:8999   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9035:9050   */\n      swap2\n      and\n        /* \"#utility.yul\":9030:9032   */\n      0x20\n        /* \"#utility.yul\":9015:9033   */\n      dup3\n      add\n        /* \"#utility.yul\":9008:9051   */\n      mstore\n        /* \"#utility.yul\":8892:8894   */\n      0x40\n        /* \"#utility.yul\":8877:8895   */\n      add\n      swap1\n        /* \"#utility.yul\":8859:9057   */\n      jump\t// out\n        /* \"#utility.yul\":9062:9468   */\n    tag_154:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9351:9366   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":9333:9367   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9403:9418   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":9398:9400   */\n      0x20\n        /* \"#utility.yul\":9383:9401   */\n      dup3\n      add\n        /* \"#utility.yul\":9376:9419   */\n      mstore\n        /* \"#utility.yul\":9450:9452   */\n      0x40\n        /* \"#utility.yul\":9435:9453   */\n      dup2\n      add\n        /* \"#utility.yul\":9428:9462   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9260:9262   */\n      0x60\n        /* \"#utility.yul\":9245:9263   */\n      add\n      swap1\n        /* \"#utility.yul\":9227:9468   */\n      jump\t// out\n        /* \"#utility.yul\":9473:10256   */\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9893:9908   */\n      swap9\n      dup10\n      and\n        /* \"#utility.yul\":9875:9909   */\n      dup2\n      mstore\n        /* \"#utility.yul\":9945:9960   */\n      swap7\n      swap1\n      swap8\n      and\n        /* \"#utility.yul\":9940:9942   */\n      0x20\n        /* \"#utility.yul\":9925:9943   */\n      dup8\n      add\n        /* \"#utility.yul\":9918:9961   */\n      mstore\n        /* \"#utility.yul\":9992:9994   */\n      0x40\n        /* \"#utility.yul\":9977:9995   */\n      dup7\n      add\n        /* \"#utility.yul\":9970:10004   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":10035:10037   */\n      0x60\n        /* \"#utility.yul\":10020:10038   */\n      dup6\n      add\n        /* \"#utility.yul\":10013:10047   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":10091:10105   */\n      iszero\n        /* \"#utility.yul\":10084:10106   */\n      iszero\n        /* \"#utility.yul\":10078:10081   */\n      0x80\n        /* \"#utility.yul\":10063:10082   */\n      dup5\n      add\n        /* \"#utility.yul\":10056:10107   */\n      mstore\n        /* \"#utility.yul\":10156:10160   */\n      0xff\n        /* \"#utility.yul\":10144:10161   */\n      and\n        /* \"#utility.yul\":10138:10141   */\n      0xa0\n        /* \"#utility.yul\":10123:10142   */\n      dup4\n      add\n        /* \"#utility.yul\":10116:10162   */\n      mstore\n        /* \"#utility.yul\":10193:10196   */\n      0xc0\n        /* \"#utility.yul\":10178:10197   */\n      dup3\n      add\n        /* \"#utility.yul\":10171:10206   */\n      mstore\n        /* \"#utility.yul\":10237:10240   */\n      0xe0\n        /* \"#utility.yul\":10222:10241   */\n      dup2\n      add\n        /* \"#utility.yul\":10215:10250   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":9801:9804   */\n      0x0100\n        /* \"#utility.yul\":9786:9805   */\n      add\n      swap1\n        /* \"#utility.yul\":9768:10256   */\n      jump\t// out\n        /* \"#utility.yul\":10261:10962   */\n    tag_233:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":10659:10674   */\n      swap8\n      dup9\n      and\n        /* \"#utility.yul\":10641:10675   */\n      dup2\n      mstore\n        /* \"#utility.yul\":10711:10726   */\n      swap6\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":10706:10708   */\n      0x20\n        /* \"#utility.yul\":10691:10709   */\n      dup7\n      add\n        /* \"#utility.yul\":10684:10727   */\n      mstore\n        /* \"#utility.yul\":10758:10760   */\n      0x40\n        /* \"#utility.yul\":10743:10761   */\n      dup6\n      add\n        /* \"#utility.yul\":10736:10770   */\n      swap4\n      swap1\n      swap4\n      mstore\n        /* \"#utility.yul\":10801:10803   */\n      0x60\n        /* \"#utility.yul\":10786:10804   */\n      dup5\n      add\n        /* \"#utility.yul\":10779:10813   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":10862:10866   */\n      0xff\n        /* \"#utility.yul\":10850:10867   */\n      and\n        /* \"#utility.yul\":10844:10847   */\n      0x80\n        /* \"#utility.yul\":10829:10848   */\n      dup4\n      add\n        /* \"#utility.yul\":10822:10868   */\n      mstore\n        /* \"#utility.yul\":10899:10902   */\n      0xa0\n        /* \"#utility.yul\":10884:10903   */\n      dup3\n      add\n        /* \"#utility.yul\":10877:10912   */\n      mstore\n        /* \"#utility.yul\":10943:10946   */\n      0xc0\n        /* \"#utility.yul\":10928:10947   */\n      dup2\n      add\n        /* \"#utility.yul\":10921:10956   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":10567:10570   */\n      0xe0\n        /* \"#utility.yul\":10552:10571   */\n      add\n      swap1\n        /* \"#utility.yul\":10534:10962   */\n      jump\t// out\n        /* \"#utility.yul\":10967:11378   */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11246:11261   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":11228:11262   */\n      dup2\n      mstore\n        /* \"#utility.yul\":11298:11313   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":11293:11295   */\n      0x20\n        /* \"#utility.yul\":11278:11296   */\n      dup3\n      add\n        /* \"#utility.yul\":11271:11314   */\n      mstore\n        /* \"#utility.yul\":11362:11370   */\n      0xffffff\n        /* \"#utility.yul\":11350:11371   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":11345:11347   */\n      0x40\n        /* \"#utility.yul\":11330:11348   */\n      dup3\n      add\n        /* \"#utility.yul\":11323:11372   */\n      mstore\n        /* \"#utility.yul\":11155:11157   */\n      0x60\n        /* \"#utility.yul\":11140:11158   */\n      add\n      swap1\n        /* \"#utility.yul\":11122:11378   */\n      jump\t// out\n        /* \"#utility.yul\":11383:11680   */\n    tag_243:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":11575:11630   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":11557:11631   */\n      dup3\n      mstore\n        /* \"#utility.yul\":11662:11664   */\n      0x20\n        /* \"#utility.yul\":11647:11665   */\n      dup3\n      add\n        /* \"#utility.yul\":11640:11674   */\n      mstore\n        /* \"#utility.yul\":11545:11547   */\n      0x40\n        /* \"#utility.yul\":11530:11548   */\n      add\n      swap1\n        /* \"#utility.yul\":11512:11680   */\n      jump\t// out\n        /* \"#utility.yul\":11685:12491   */\n    tag_43:\n      0x00\n        /* \"#utility.yul\":11874:11876   */\n      0x20\n        /* \"#utility.yul\":11914:11916   */\n      dup1\n        /* \"#utility.yul\":11903:11912   */\n      dup4\n        /* \"#utility.yul\":11899:11917   */\n      add\n        /* \"#utility.yul\":11944:11946   */\n      dup2\n        /* \"#utility.yul\":11933:11942   */\n      dup5\n        /* \"#utility.yul\":11926:11947   */\n      mstore\n        /* \"#utility.yul\":11967:11973   */\n      dup1\n        /* \"#utility.yul\":12002:12008   */\n      dup6\n        /* \"#utility.yul\":11996:12009   */\n      mload\n        /* \"#utility.yul\":12033:12039   */\n      dup1\n        /* \"#utility.yul\":12025:12031   */\n      dup4\n        /* \"#utility.yul\":12018:12040   */\n      mstore\n        /* \"#utility.yul\":12071:12073   */\n      0x40\n        /* \"#utility.yul\":12060:12069   */\n      dup7\n        /* \"#utility.yul\":12056:12074   */\n      add\n        /* \"#utility.yul\":12049:12074   */\n      swap2\n      pop\n        /* \"#utility.yul\":12134:12136   */\n      0x40\n        /* \"#utility.yul\":12128:12130   */\n      dup5\n        /* \"#utility.yul\":12120:12126   */\n      dup3\n        /* \"#utility.yul\":12116:12131   */\n      mul\n        /* \"#utility.yul\":12105:12114   */\n      dup8\n        /* \"#utility.yul\":12101:12132   */\n      add\n        /* \"#utility.yul\":12097:12137   */\n      add\n        /* \"#utility.yul\":12083:12137   */\n      swap3\n      pop\n        /* \"#utility.yul\":12172:12174   */\n      dup4\n        /* \"#utility.yul\":12164:12170   */\n      dup8\n        /* \"#utility.yul\":12160:12175   */\n      add\n        /* \"#utility.yul\":12193:12197   */\n      dup6\n        /* \"#utility.yul\":12206:12462   */\n    tag_373:\n        /* \"#utility.yul\":12220:12226   */\n      dup3\n        /* \"#utility.yul\":12217:12218   */\n      dup2\n        /* \"#utility.yul\":12214:12227   */\n      lt\n        /* \"#utility.yul\":12206:12462   */\n      iszero\n      tag_375\n      jumpi\n        /* \"#utility.yul\":12313:12315   */\n      0x3f\n        /* \"#utility.yul\":12309:12316   */\n      not\n        /* \"#utility.yul\":12297:12306   */\n      dup9\n        /* \"#utility.yul\":12289:12295   */\n      dup7\n        /* \"#utility.yul\":12285:12307   */\n      sub\n        /* \"#utility.yul\":12281:12317   */\n      add\n        /* \"#utility.yul\":12276:12279   */\n      dup5\n        /* \"#utility.yul\":12269:12318   */\n      mstore\n        /* \"#utility.yul\":12341:12382   */\n      tag_376\n        /* \"#utility.yul\":12375:12381   */\n      dup6\n        /* \"#utility.yul\":12366:12372   */\n      dup4\n        /* \"#utility.yul\":12360:12373   */\n      mload\n        /* \"#utility.yul\":12341:12382   */\n      tag_354\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":12331:12382   */\n      swap5\n      pop\n        /* \"#utility.yul\":12440:12452   */\n      swap3\n      dup6\n      add\n      swap3\n        /* \"#utility.yul\":12405:12420   */\n      swap1\n      dup6\n      add\n      swap1\n        /* \"#utility.yul\":12242:12243   */\n      0x01\n        /* \"#utility.yul\":12235:12244   */\n      add\n        /* \"#utility.yul\":12206:12462   */\n      jump(tag_373)\n    tag_375:\n      pop\n        /* \"#utility.yul\":12479:12485   */\n      swap3\n      swap8\n        /* \"#utility.yul\":11854:12491   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12496:12717   */\n    tag_130:\n      0x00\n        /* \"#utility.yul\":12645:12647   */\n      0x20\n        /* \"#utility.yul\":12634:12643   */\n      dup3\n        /* \"#utility.yul\":12627:12648   */\n      mstore\n        /* \"#utility.yul\":12665:12711   */\n      tag_286\n        /* \"#utility.yul\":12707:12709   */\n      0x20\n        /* \"#utility.yul\":12696:12705   */\n      dup4\n        /* \"#utility.yul\":12692:12710   */\n      add\n        /* \"#utility.yul\":12684:12690   */\n      dup5\n        /* \"#utility.yul\":12665:12711   */\n      tag_354\n      jump\t// in\n        /* \"#utility.yul\":12722:13047   */\n    tag_254:\n        /* \"#utility.yul\":12924:12926   */\n      0x20\n        /* \"#utility.yul\":12906:12927   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12963:12964   */\n      0x02\n        /* \"#utility.yul\":12943:12961   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12936:12965   */\n      mstore\n        /* \"#utility.yul\":13001:13005   */\n      0x5341000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12996:12998   */\n      0x40\n        /* \"#utility.yul\":12981:12999   */\n      dup3\n      add\n        /* \"#utility.yul\":12974:13006   */\n      mstore\n        /* \"#utility.yul\":13038:13040   */\n      0x60\n        /* \"#utility.yul\":13023:13041   */\n      add\n      swap1\n        /* \"#utility.yul\":12896:13047   */\n      jump\t// out\n        /* \"#utility.yul\":13052:13396   */\n    tag_145:\n        /* \"#utility.yul\":13254:13256   */\n      0x20\n        /* \"#utility.yul\":13236:13257   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13293:13295   */\n      0x14\n        /* \"#utility.yul\":13273:13291   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13266:13296   */\n      mstore\n        /* \"#utility.yul\":13332:13354   */\n      0x50657263656e7461676520746f6f20736d616c6c000000000000000000000000\n        /* \"#utility.yul\":13327:13329   */\n      0x40\n        /* \"#utility.yul\":13312:13330   */\n      dup3\n      add\n        /* \"#utility.yul\":13305:13355   */\n      mstore\n        /* \"#utility.yul\":13387:13389   */\n      0x60\n        /* \"#utility.yul\":13372:13390   */\n      add\n      swap1\n        /* \"#utility.yul\":13226:13396   */\n      jump\t// out\n        /* \"#utility.yul\":13401:13727   */\n    tag_264:\n        /* \"#utility.yul\":13603:13605   */\n      0x20\n        /* \"#utility.yul\":13585:13606   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13642:13643   */\n      0x03\n        /* \"#utility.yul\":13622:13640   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13615:13644   */\n      mstore\n        /* \"#utility.yul\":13680:13685   */\n      0x5354450000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13675:13677   */\n      0x40\n        /* \"#utility.yul\":13660:13678   */\n      dup3\n      add\n        /* \"#utility.yul\":13653:13686   */\n      mstore\n        /* \"#utility.yul\":13718:13720   */\n      0x60\n        /* \"#utility.yul\":13703:13721   */\n      add\n      swap1\n        /* \"#utility.yul\":13575:13727   */\n      jump\t// out\n        /* \"#utility.yul\":13732:14057   */\n    tag_276:\n        /* \"#utility.yul\":13934:13936   */\n      0x20\n        /* \"#utility.yul\":13916:13937   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":13973:13974   */\n      0x02\n        /* \"#utility.yul\":13953:13971   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":13946:13975   */\n      mstore\n        /* \"#utility.yul\":14011:14015   */\n      0x5354000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14006:14008   */\n      0x40\n        /* \"#utility.yul\":13991:14009   */\n      dup3\n      add\n        /* \"#utility.yul\":13984:14016   */\n      mstore\n        /* \"#utility.yul\":14048:14050   */\n      0x60\n        /* \"#utility.yul\":14033:14051   */\n      add\n      swap1\n        /* \"#utility.yul\":13906:14057   */\n      jump\t// out\n        /* \"#utility.yul\":14062:14394   */\n    tag_20:\n        /* \"#utility.yul\":14264:14266   */\n      0x20\n        /* \"#utility.yul\":14246:14267   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14303:14304   */\n      0x09\n        /* \"#utility.yul\":14283:14301   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14276:14305   */\n      mstore\n        /* \"#utility.yul\":14341:14352   */\n      0x4e6f742057455448390000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14336:14338   */\n      0x40\n        /* \"#utility.yul\":14321:14339   */\n      dup3\n      add\n        /* \"#utility.yul\":14314:14353   */\n      mstore\n        /* \"#utility.yul\":14385:14387   */\n      0x60\n        /* \"#utility.yul\":14370:14388   */\n      add\n      swap1\n        /* \"#utility.yul\":14236:14394   */\n      jump\t// out\n        /* \"#utility.yul\":14399:14743   */\n    tag_149:\n        /* \"#utility.yul\":14601:14603   */\n      0x20\n        /* \"#utility.yul\":14583:14604   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14640:14642   */\n      0x14\n        /* \"#utility.yul\":14620:14638   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14613:14643   */\n      mstore\n        /* \"#utility.yul\":14679:14701   */\n      0x50657263656e7461676520746f6f206c61726765000000000000000000000000\n        /* \"#utility.yul\":14674:14676   */\n      0x40\n        /* \"#utility.yul\":14659:14677   */\n      dup3\n      add\n        /* \"#utility.yul\":14652:14702   */\n      mstore\n        /* \"#utility.yul\":14734:14736   */\n      0x60\n        /* \"#utility.yul\":14719:14737   */\n      add\n      swap1\n        /* \"#utility.yul\":14573:14743   */\n      jump\t// out\n        /* \"#utility.yul\":14748:15982   */\n    tag_189:\n      0x00\n        /* \"#utility.yul\":14938:14941   */\n      0x0160\n        /* \"#utility.yul\":14927:14936   */\n      dup3\n        /* \"#utility.yul\":14923:14942   */\n      add\n        /* \"#utility.yul\":14915:14942   */\n      swap1\n      pop\n        /* \"#utility.yul\":14951:14997   */\n      tag_386\n        /* \"#utility.yul\":14987:14996   */\n      dup3\n        /* \"#utility.yul\":14978:14984   */\n      dup5\n        /* \"#utility.yul\":14972:14985   */\n      mload\n        /* \"#utility.yul\":14951:14997   */\n      tag_352\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":15044:15048   */\n      0x20\n        /* \"#utility.yul\":15036:15042   */\n      dup4\n        /* \"#utility.yul\":15032:15049   */\n      add\n        /* \"#utility.yul\":15026:15050   */\n      mload\n        /* \"#utility.yul\":15059:15115   */\n      tag_387\n        /* \"#utility.yul\":15109:15113   */\n      0x20\n        /* \"#utility.yul\":15098:15107   */\n      dup5\n        /* \"#utility.yul\":15094:15114   */\n      add\n        /* \"#utility.yul\":15080:15092   */\n      dup3\n        /* \"#utility.yul\":15059:15115   */\n      tag_352\n      jump\t// in\n    tag_387:\n      pop\n        /* \"#utility.yul\":15164:15168   */\n      0x40\n        /* \"#utility.yul\":15156:15162   */\n      dup4\n        /* \"#utility.yul\":15152:15169   */\n      add\n        /* \"#utility.yul\":15146:15170   */\n      mload\n        /* \"#utility.yul\":15179:15236   */\n      tag_388\n        /* \"#utility.yul\":15230:15234   */\n      0x40\n        /* \"#utility.yul\":15219:15228   */\n      dup5\n        /* \"#utility.yul\":15215:15235   */\n      add\n        /* \"#utility.yul\":15199:15213   */\n      dup3\n        /* \"#utility.yul\":15179:15236   */\n      tag_359\n      jump\t// in\n    tag_388:\n      pop\n        /* \"#utility.yul\":15285:15289   */\n      0x60\n        /* \"#utility.yul\":15277:15283   */\n      dup4\n        /* \"#utility.yul\":15273:15290   */\n      add\n        /* \"#utility.yul\":15267:15291   */\n      mload\n        /* \"#utility.yul\":15300:15356   */\n      tag_389\n        /* \"#utility.yul\":15350:15354   */\n      0x60\n        /* \"#utility.yul\":15339:15348   */\n      dup5\n        /* \"#utility.yul\":15335:15355   */\n      add\n        /* \"#utility.yul\":15319:15333   */\n      dup3\n        /* \"#utility.yul\":15300:15356   */\n      tag_357\n      jump\t// in\n    tag_389:\n      pop\n        /* \"#utility.yul\":15405:15409   */\n      0x80\n        /* \"#utility.yul\":15397:15403   */\n      dup4\n        /* \"#utility.yul\":15393:15410   */\n      add\n        /* \"#utility.yul\":15387:15411   */\n      mload\n        /* \"#utility.yul\":15420:15476   */\n      tag_390\n        /* \"#utility.yul\":15470:15474   */\n      0x80\n        /* \"#utility.yul\":15459:15468   */\n      dup5\n        /* \"#utility.yul\":15455:15475   */\n      add\n        /* \"#utility.yul\":15439:15453   */\n      dup3\n        /* \"#utility.yul\":15420:15476   */\n      tag_357\n      jump\t// in\n    tag_390:\n      pop\n        /* \"#utility.yul\":15532:15536   */\n      0xa0\n        /* \"#utility.yul\":15524:15530   */\n      dup4\n        /* \"#utility.yul\":15520:15537   */\n      add\n        /* \"#utility.yul\":15514:15538   */\n      mload\n        /* \"#utility.yul\":15507:15511   */\n      0xa0\n        /* \"#utility.yul\":15496:15505   */\n      dup4\n        /* \"#utility.yul\":15492:15512   */\n      add\n        /* \"#utility.yul\":15485:15539   */\n      mstore\n        /* \"#utility.yul\":15595:15599   */\n      0xc0\n        /* \"#utility.yul\":15587:15593   */\n      dup4\n        /* \"#utility.yul\":15583:15600   */\n      add\n        /* \"#utility.yul\":15577:15601   */\n      mload\n        /* \"#utility.yul\":15570:15574   */\n      0xc0\n        /* \"#utility.yul\":15559:15568   */\n      dup4\n        /* \"#utility.yul\":15555:15575   */\n      add\n        /* \"#utility.yul\":15548:15602   */\n      mstore\n        /* \"#utility.yul\":15658:15662   */\n      0xe0\n        /* \"#utility.yul\":15650:15656   */\n      dup4\n        /* \"#utility.yul\":15646:15663   */\n      add\n        /* \"#utility.yul\":15640:15664   */\n      mload\n        /* \"#utility.yul\":15633:15637   */\n      0xe0\n        /* \"#utility.yul\":15622:15631   */\n      dup4\n        /* \"#utility.yul\":15618:15638   */\n      add\n        /* \"#utility.yul\":15611:15665   */\n      mstore\n        /* \"#utility.yul\":15684:15690   */\n      0x0100\n        /* \"#utility.yul\":15744:15746   */\n      dup1\n        /* \"#utility.yul\":15736:15742   */\n      dup5\n        /* \"#utility.yul\":15732:15747   */\n      add\n        /* \"#utility.yul\":15726:15748   */\n      mload\n        /* \"#utility.yul\":15721:15723   */\n      dup2\n        /* \"#utility.yul\":15710:15719   */\n      dup5\n        /* \"#utility.yul\":15706:15724   */\n      add\n        /* \"#utility.yul\":15699:15749   */\n      mstore\n      pop\n        /* \"#utility.yul\":15768:15774   */\n      0x0120\n        /* \"#utility.yul\":15823:15825   */\n      dup1\n        /* \"#utility.yul\":15815:15821   */\n      dup5\n        /* \"#utility.yul\":15811:15826   */\n      add\n        /* \"#utility.yul\":15805:15827   */\n      mload\n        /* \"#utility.yul\":15836:15892   */\n      tag_391\n        /* \"#utility.yul\":15888:15890   */\n      dup3\n        /* \"#utility.yul\":15877:15886   */\n      dup6\n        /* \"#utility.yul\":15873:15891   */\n      add\n        /* \"#utility.yul\":15857:15871   */\n      dup3\n        /* \"#utility.yul\":15836:15892   */\n      tag_352\n      jump\t// in\n    tag_391:\n      pop\n      pop\n        /* \"#utility.yul\":15911:15917   */\n      0x0140\n        /* \"#utility.yul\":15959:15974   */\n      swap3\n      dup4\n      add\n        /* \"#utility.yul\":15953:15975   */\n      mload\n        /* \"#utility.yul\":15933:15951   */\n      swap2\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":15926:15976   */\n      mstore\n        /* \"#utility.yul\":14905:15982   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":16218:16395   */\n    tag_205:\n        /* \"#utility.yul\":16364:16389   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":16352:16354   */\n      0x20\n        /* \"#utility.yul\":16337:16355   */\n      add\n      swap1\n        /* \"#utility.yul\":16319:16395   */\n      jump\t// out\n        /* \"#utility.yul\":16400:16933   */\n    tag_119:\n      0x00\n      dup1\n        /* \"#utility.yul\":16543:16554   */\n      dup4\n        /* \"#utility.yul\":16530:16555   */\n      calldataload\n        /* \"#utility.yul\":16637:16639   */\n      0x1e\n        /* \"#utility.yul\":16633:16640   */\n      not\n        /* \"#utility.yul\":16622:16630   */\n      dup5\n        /* \"#utility.yul\":16606:16620   */\n      calldatasize\n        /* \"#utility.yul\":16602:16631   */\n      sub\n        /* \"#utility.yul\":16598:16641   */\n      add\n        /* \"#utility.yul\":16578:16596   */\n      dup2\n        /* \"#utility.yul\":16574:16642   */\n      slt\n        /* \"#utility.yul\":16564:16566   */\n      tag_395\n      jumpi\n        /* \"#utility.yul\":16659:16663   */\n      dup3\n        /* \"#utility.yul\":16653:16657   */\n      dup4\n        /* \"#utility.yul\":16646:16664   */\n      revert\n        /* \"#utility.yul\":16564:16566   */\n    tag_395:\n        /* \"#utility.yul\":16689:16722   */\n      dup4\n      add\n        /* \"#utility.yul\":16741:16761   */\n      dup1\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":16784:16802   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":16773:16803   */\n      dup3\n      gt\n        /* \"#utility.yul\":16770:16772   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":16819:16823   */\n      dup3\n        /* \"#utility.yul\":16813:16817   */\n      dup4\n        /* \"#utility.yul\":16806:16824   */\n      revert\n        /* \"#utility.yul\":16770:16772   */\n    tag_396:\n        /* \"#utility.yul\":16855:16859   */\n      0x20\n        /* \"#utility.yul\":16843:16860   */\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":16886:16900   */\n      calldatasize\n        /* \"#utility.yul\":16882:16909   */\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":16872:16910   */\n      dup3\n      sgt\n        /* \"#utility.yul\":16869:16871   */\n      iszero\n      tag_397\n      jumpi\n        /* \"#utility.yul\":16923:16924   */\n      0x00\n        /* \"#utility.yul\":16920:16921   */\n      dup1\n        /* \"#utility.yul\":16913:16925   */\n      revert\n        /* \"#utility.yul\":16869:16871   */\n    tag_397:\n        /* \"#utility.yul\":16494:16933   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16938:17196   */\n    tag_327:\n        /* \"#utility.yul\":17010:17011   */\n      0x00\n        /* \"#utility.yul\":17020:17133   */\n    tag_399:\n        /* \"#utility.yul\":17034:17040   */\n      dup4\n        /* \"#utility.yul\":17031:17032   */\n      dup2\n        /* \"#utility.yul\":17028:17041   */\n      lt\n        /* \"#utility.yul\":17020:17133   */\n      iszero\n      tag_401\n      jumpi\n        /* \"#utility.yul\":17110:17121   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":17104:17122   */\n      mload\n        /* \"#utility.yul\":17091:17102   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":17084:17123   */\n      mstore\n        /* \"#utility.yul\":17056:17058   */\n      0x20\n        /* \"#utility.yul\":17049:17059   */\n      add\n        /* \"#utility.yul\":17020:17133   */\n      jump(tag_399)\n    tag_401:\n        /* \"#utility.yul\":17151:17157   */\n      dup4\n        /* \"#utility.yul\":17148:17149   */\n      dup2\n        /* \"#utility.yul\":17145:17158   */\n      gt\n        /* \"#utility.yul\":17142:17144   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":17186:17187   */\n      0x00\n        /* \"#utility.yul\":17177:17183   */\n      dup5\n        /* \"#utility.yul\":17172:17175   */\n      dup5\n        /* \"#utility.yul\":17168:17184   */\n      add\n        /* \"#utility.yul\":17161:17188   */\n      mstore\n        /* \"#utility.yul\":17142:17144   */\n    tag_402:\n      pop\n        /* \"#utility.yul\":16991:17196   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17201:17357   */\n    tag_287:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17282:17287   */\n      dup2\n        /* \"#utility.yul\":17278:17332   */\n      and\n        /* \"#utility.yul\":17271:17276   */\n      dup2\n        /* \"#utility.yul\":17268:17333   */\n      eq\n        /* \"#utility.yul\":17258:17260   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":17347:17348   */\n      0x00\n        /* \"#utility.yul\":17344:17345   */\n      dup1\n        /* \"#utility.yul\":17337:17349   */\n      revert\n        /* \"#utility.yul\":17258:17260   */\n    tag_404:\n        /* \"#utility.yul\":17248:17357   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17362:17482   */\n    tag_311:\n        /* \"#utility.yul\":17450:17455   */\n      dup1\n        /* \"#utility.yul\":17443:17456   */\n      iszero\n        /* \"#utility.yul\":17436:17457   */\n      iszero\n        /* \"#utility.yul\":17429:17434   */\n      dup2\n        /* \"#utility.yul\":17426:17458   */\n      eq\n        /* \"#utility.yul\":17416:17418   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":17472:17473   */\n      0x00\n        /* \"#utility.yul\":17469:17470   */\n      dup1\n        /* \"#utility.yul\":17462:17474   */\n      revert\n        /* \"#utility.yul\":17487:17607   */\n    tag_318:\n        /* \"#utility.yul\":17576:17581   */\n      dup1\n        /* \"#utility.yul\":17573:17574   */\n      0x02\n        /* \"#utility.yul\":17562:17582   */\n      signextend\n        /* \"#utility.yul\":17555:17560   */\n      dup2\n        /* \"#utility.yul\":17552:17583   */\n      eq\n        /* \"#utility.yul\":17542:17544   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":17597:17598   */\n      0x00\n        /* \"#utility.yul\":17594:17595   */\n      dup1\n        /* \"#utility.yul\":17587:17599   */\n      revert\n        /* \"#utility.yul\":17612:17728   */\n    tag_301:\n        /* \"#utility.yul\":17698:17702   */\n      0xff\n        /* \"#utility.yul\":17691:17696   */\n      dup2\n        /* \"#utility.yul\":17687:17703   */\n      and\n        /* \"#utility.yul\":17680:17685   */\n      dup2\n        /* \"#utility.yul\":17677:17704   */\n      eq\n        /* \"#utility.yul\":17667:17669   */\n      tag_404\n      jumpi\n        /* \"#utility.yul\":17718:17719   */\n      0x00\n        /* \"#utility.yul\":17715:17716   */\n      dup1\n        /* \"#utility.yul\":17708:17720   */\n      revert\n\n    auxdata: 0xa2646970667358221220142ad8272c0bc2ae9de192625987819d6eea2807922835e48c8ca669ed4e86db64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:594:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "171:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "180:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "183:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "130:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "141:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "156:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "161:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "152:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "152:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "165:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "148:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "148:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "137:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "137:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "127:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "127:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:50:1"
															},
															"nodeType": "YulIf",
															"src": "117:2:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:1",
														"type": ""
													}
												],
												"src": "14:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "313:279:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "359:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "368:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "376:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "361:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "361:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "361:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "334:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "343:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "330:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "355:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "326:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "326:32:1"
															},
															"nodeType": "YulIf",
															"src": "323:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "394:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "436:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "404:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "404:42:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "394:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "455:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "501:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "512:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "497:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "465:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "465:51:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "455:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "525:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "571:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "582:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "567:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "535:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "535:51:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "525:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "263:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "274:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "286:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "294:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "302:6:1",
														"type": ""
													}
												],
												"src": "198:394:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60e06040523480156200001157600080fd5b5060405162001c3438038062001c34833981016040819052620000349162000079565b6001600160601b0319606093841b811660805291831b821660a05290911b1660c052620000c2565b80516001600160a01b03811681146200007457600080fd5b919050565b6000806000606084860312156200008e578283fd5b62000099846200005c565b9250620000a9602085016200005c565b9150620000b9604085016200005c565b90509250925092565b60805160601c60a05160601c60c05160601c611b066200012e600039806107985280610a685280610aa25280610acc5280610c7552508060c552806105965280610cc15280610d185280610df35280610e4a525080610256528061031f52806108505250611b066000f3fe6080604052600436106100b55760003560e01c8063b44a272211610069578063c45a01551161004e578063c45a0155146101be578063d44f2bf2146101d3578063f3995c67146101f35761010d565b8063b44a272214610196578063c2e3140a146101ab5761010d565b80634aa4a4fc1161009a5780634aa4a4fc1461014e578063a4a78f0c14610163578063ac9650d8146101765761010d565b806313ead562146101125780634659a4941461013b5761010d565b3661010d57336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461010b5760405162461bcd60e51b8152600401610102906118eb565b60405180910390fd5b005b600080fd5b610125610120366004611291565b610206565b604051610132919061167f565b60405180910390f35b61010b6101493660046112ea565b610506565b34801561015a57600080fd5b50610125610594565b61010b6101713660046112ea565b6105b8565b610189610184366004611345565b610656565b604051610132919061179c565b3480156101a257600080fd5b50610125610796565b61010b6101b93660046112ea565b6107ba565b3480156101ca57600080fd5b5061012561084e565b3480156101df57600080fd5b5061010b6101ee36600461149f565b610872565b61010b6102013660046112ea565b610ede565b6000836001600160a01b0316856001600160a01b03161061022657600080fd5b6040517f1698ee820000000000000000000000000000000000000000000000000000000081526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631698ee829061028f9088908890889060040161175b565b60206040518083038186803b1580156102a757600080fd5b505afa1580156102bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102df9190611275565b90506001600160a01b038116610410576040517fa16712950000000000000000000000000000000000000000000000000000000081526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a1671295906103589088908890889060040161175b565b602060405180830381600087803b15801561037257600080fd5b505af1158015610386573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103aa9190611275565b60405163f637731d60e01b81529091506001600160a01b0382169063f637731d906103d990859060040161167f565b600060405180830381600087803b1580156103f357600080fd5b505af1158015610407573d6000803e3d6000fd5b505050506104fe565b6000816001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561044b57600080fd5b505afa15801561045f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048391906114b7565b5050505050509050806001600160a01b0316600014156104fc5760405163f637731d60e01b81526001600160a01b0383169063f637731d906104c990869060040161167f565b600060405180830381600087803b1580156104e357600080fd5b505af11580156104f7573d6000803e3d6000fd5b505050505b505b949350505050565b6040517f8fcbaf0c0000000000000000000000000000000000000000000000000000000081526001600160a01b03871690638fcbaf0c9061055a90339030908a908a906001908b908b908b906004016116d1565b600060405180830381600087803b15801561057457600080fd5b505af1158015610588573d6000803e3d6000fd5b50505050505050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b604051636eb1769f60e11b8152600019906001600160a01b0388169063dd62ed3e906105ea9033903090600401611693565b60206040518083038186803b15801561060257600080fd5b505afa158015610616573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061063a9190611562565b101561064e5761064e868686868686610506565b505050505050565b60608167ffffffffffffffff8111801561066f57600080fd5b506040519080825280602002602001820160405280156106a357816020015b606081526020019060019003908161068e5790505b50905060005b8281101561078f57600080308686858181106106c157fe5b90506020028101906106d39190611a10565b6040516106e1929190611653565b600060405180830381855af49150503d806000811461071c576040519150601f19603f3d011682016040523d82523d6000602084013e610721565b606091505b50915091508161076d5760448151101561073a57600080fd5b600481019050808060200190518101906107549190611408565b60405162461bcd60e51b815260040161010291906117fc565b8084848151811061077a57fe5b602090810291909101015250506001016106a9565b5092915050565b7f000000000000000000000000000000000000000000000000000000000000000081565b604051636eb1769f60e11b815285906001600160a01b0388169063dd62ed3e906107ea9033903090600401611693565b60206040518083038186803b15801561080257600080fd5b505afa158015610816573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061083a9190611562565b101561064e5761064e868686868686610ede565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061088460608301604084016115ee565b60ff16116108a45760405162461bcd60e51b815260040161010290611846565b60646108b660608301604084016115ee565b60ff1611156108d75760405162461bcd60e51b815260040161010290611922565b6108e46020820182611252565b6001600160a01b03166323b872dd336109006020850185611252565b84602001356040518463ffffffff1660e01b8152600401610923939291906116ad565b602060405180830381600087803b15801561093d57600080fd5b505af1158015610951573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097591906113d0565b506000806109866020840184611252565b6001600160a01b03166389afcb44306040518263ffffffff1660e01b81526004016109b1919061167f565b6040805180830381600087803b1580156109ca57600080fd5b505af11580156109de573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0291906115cb565b909250905060006064610a28610a1e60608701604088016115ee565b859060ff16610f2f565b81610a2f57fe5b04905060006064610a49610a1e60608801604089016115ee565b81610a5057fe5b049050610a8d610a666080870160608801611252565b7f000000000000000000000000000000000000000000000000000000000000000084610f59565b610ac7610aa060a0870160808801611252565b7f000000000000000000000000000000000000000000000000000000000000000083610f59565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663883164566040518061016001604052808a6060016020810190610b189190611252565b6001600160a01b03168152602001610b3660a08c0160808d01611252565b6001600160a01b03168152602001610b5460c08c0160a08d01611548565b62ffffff168152602001610b6e60e08c0160c08d016113ec565b60020b8152602001610b876101008c0160e08d016113ec565b60020b815260208101889052604081018790526101008b013560608201526101208b0135608082015260a001610bc56101608c016101408d01611252565b6001600160a01b031681526020018a61016001358152506040518263ffffffff1660e01b8152600401610bf89190611959565b608060405180830381600087803b158015610c1257600080fd5b505af1158015610c26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c4a919061157a565b93509350505085821015610daa5783821015610c9b57610c9b610c736080890160608a01611252565b7f00000000000000000000000000000000000000000000000000000000000000006000610f59565b818603610cb06101a089016101808a016113b4565b8015610cfc57506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610cf160808a0160608b01611252565b6001600160a01b0316145b15610d8e57604051632e1a7d4d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90610d4d908490600401611a07565b600060405180830381600087803b158015610d6757600080fd5b505af1158015610d7b573d6000803e3d6000fd5b50505050610d89338261107b565b610da8565b610da8610da160808a0160608b01611252565b338361110d565b505b84811015610ed55782811015610dcd57610dcd610c7360a0890160808a01611252565b808503610de26101a089016101808a016113b4565b8015610e2e57506001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016610e2360a08a0160808b01611252565b6001600160a01b0316145b15610ec057604051632e1a7d4d60e01b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690632e1a7d4d90610e7f908490600401611a07565b600060405180830381600087803b158015610e9957600080fd5b505af1158015610ead573d6000803e3d6000fd5b50505050610ebb338261107b565b610ed3565b610ed3610da160a08a0160808b01611252565b505b50505050505050565b6040517fd505accf0000000000000000000000000000000000000000000000000000000081526001600160a01b0387169063d505accf9061055a90339030908a908a908a908a908a9060040161171a565b6000821580610f4a57505081810281838281610f4757fe5b04145b610f5357600080fd5b92915050565b600080846001600160a01b031663095ea7b360e01b8585604051602401610f81929190611783565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051610fec9190611663565b6000604051808303816000865af19150503d8060008114611029576040519150601f19603f3d011682016040523d82523d6000602084013e61102e565b606091505b509150915081801561105857508051158061105857508080602001905181019061105891906113d0565b6110745760405162461bcd60e51b81526004016101029061180f565b5050505050565b604080516000808252602082019092526001600160a01b0384169083906040516110a59190611663565b60006040518083038185875af1925050503d80600081146110e2576040519150601f19603f3d011682016040523d82523d6000602084013e6110e7565b606091505b50509050806111085760405162461bcd60e51b81526004016101029061187d565b505050565b600080846001600160a01b031663a9059cbb60e01b8585604051602401611135929190611783565b60408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009094169390931790925290516111a09190611663565b6000604051808303816000865af19150503d80600081146111dd576040519150601f19603f3d011682016040523d82523d6000602084013e6111e2565b606091505b509150915081801561120c57508051158061120c57508080602001905181019061120c91906113d0565b6110745760405162461bcd60e51b8152600401610102906118b4565b805161ffff8116811461123a57600080fd5b919050565b803562ffffff8116811461123a57600080fd5b600060208284031215611263578081fd5b813561126e81611a8c565b9392505050565b600060208284031215611286578081fd5b815161126e81611a8c565b600080600080608085870312156112a6578283fd5b84356112b181611a8c565b935060208501356112c181611a8c565b92506112cf6040860161123f565b915060608501356112df81611a8c565b939692955090935050565b60008060008060008060c08789031215611302578182fd5b863561130d81611a8c565b95506020870135945060408701359350606087013561132b81611ac1565b9598949750929560808101359460a0909101359350915050565b60008060208385031215611357578182fd5b823567ffffffffffffffff8082111561136e578384fd5b818501915085601f830112611381578384fd5b81358181111561138f578485fd5b86602080830285010111156113a2578485fd5b60209290920196919550909350505050565b6000602082840312156113c5578081fd5b813561126e81611aa4565b6000602082840312156113e1578081fd5b815161126e81611aa4565b6000602082840312156113fd578081fd5b813561126e81611ab2565b600060208284031215611419578081fd5b815167ffffffffffffffff80821115611430578283fd5b818401915084601f830112611443578283fd5b81518181111561144f57fe5b604051601f8201601f19168101602001838111828210171561146d57fe5b604052818152838201602001871015611484578485fd5b611495826020830160208701611a5c565b9695505050505050565b60006101a082840312156114b1578081fd5b50919050565b600080600080600080600060e0888a0312156114d1578485fd5b87516114dc81611a8c565b60208901519097506114ed81611ab2565b95506114fb60408901611228565b945061150960608901611228565b935061151760808901611228565b925060a088015161152781611ac1565b60c089015190925061153881611aa4565b8091505092959891949750929550565b600060208284031215611559578081fd5b61126e8261123f565b600060208284031215611573578081fd5b5051919050565b6000806000806080858703121561158f578182fd5b8451935060208501516fffffffffffffffffffffffffffffffff811681146115b5578283fd5b6040860151606090960151949790965092505050565b600080604083850312156115dd578182fd5b505080516020909101519092909150565b6000602082840312156115ff578081fd5b813561126e81611ac1565b6001600160a01b03169052565b6000815180845261162f816020860160208601611a5c565b601f01601f19169290920160200192915050565b60020b9052565b62ffffff169052565b6000828483379101908152919050565b60008251611675818460208701611a5c565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b039889168152969097166020870152604086019490945260608501929092521515608084015260ff1660a083015260c082015260e08101919091526101000190565b6001600160a01b0397881681529590961660208601526040850193909352606084019190915260ff16608083015260a082015260c081019190915260e00190565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b6001600160a01b03929092168252602082015260400190565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156117ef57603f198886030184526117dd858351611617565b945092850192908501906001016117c1565b5092979650505050505050565b60006020825261126e6020830184611617565b60208082526002908201527f5341000000000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526014908201527f50657263656e7461676520746f6f20736d616c6c000000000000000000000000604082015260600190565b60208082526003908201527f5354450000000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526002908201527f5354000000000000000000000000000000000000000000000000000000000000604082015260600190565b60208082526009908201527f4e6f742057455448390000000000000000000000000000000000000000000000604082015260600190565b60208082526014908201527f50657263656e7461676520746f6f206c61726765000000000000000000000000604082015260600190565b60006101608201905061196d82845161160a565b602083015161197f602084018261160a565b506040830151611992604084018261164a565b5060608301516119a56060840182611643565b5060808301516119b86080840182611643565b5060a083015160a083015260c083015160c083015260e083015160e0830152610100808401518184015250610120808401516119f68285018261160a565b505061014092830151919092015290565b90815260200190565b6000808335601e19843603018112611a26578283fd5b83018035915067ffffffffffffffff821115611a40578283fd5b602001915036819003821315611a5557600080fd5b9250929050565b60005b83811015611a77578181015183820152602001611a5f565b83811115611a86576000848401525b50505050565b6001600160a01b0381168114611aa157600080fd5b50565b8015158114611aa157600080fd5b8060020b8114611aa157600080fd5b60ff81168114611aa157600080fdfea2646970667358221220142ad8272c0bc2ae9de192625987819d6eea2807922835e48c8ca669ed4e86db64736f6c63430007060033",
							"opcodes": "PUSH1 0xE0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C34 CODESIZE SUB DUP1 PUSH3 0x1C34 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x79 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP4 DUP5 SHL DUP2 AND PUSH1 0x80 MSTORE SWAP2 DUP4 SHL DUP3 AND PUSH1 0xA0 MSTORE SWAP1 SWAP2 SHL AND PUSH1 0xC0 MSTORE PUSH3 0xC2 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x8E JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH3 0x99 DUP5 PUSH3 0x5C JUMP JUMPDEST SWAP3 POP PUSH3 0xA9 PUSH1 0x20 DUP6 ADD PUSH3 0x5C JUMP JUMPDEST SWAP2 POP PUSH3 0xB9 PUSH1 0x40 DUP6 ADD PUSH3 0x5C JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH2 0x1B06 PUSH3 0x12E PUSH1 0x0 CODECOPY DUP1 PUSH2 0x798 MSTORE DUP1 PUSH2 0xA68 MSTORE DUP1 PUSH2 0xAA2 MSTORE DUP1 PUSH2 0xACC MSTORE DUP1 PUSH2 0xC75 MSTORE POP DUP1 PUSH1 0xC5 MSTORE DUP1 PUSH2 0x596 MSTORE DUP1 PUSH2 0xCC1 MSTORE DUP1 PUSH2 0xD18 MSTORE DUP1 PUSH2 0xDF3 MSTORE DUP1 PUSH2 0xE4A MSTORE POP DUP1 PUSH2 0x256 MSTORE DUP1 PUSH2 0x31F MSTORE DUP1 PUSH2 0x850 MSTORE POP PUSH2 0x1B06 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB44A2722 GT PUSH2 0x69 JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xD44F2BF2 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xF3995C67 EQ PUSH2 0x1F3 JUMPI PUSH2 0x10D JUMP JUMPDEST DUP1 PUSH4 0xB44A2722 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xC2E3140A EQ PUSH2 0x1AB JUMPI PUSH2 0x10D JUMP JUMPDEST DUP1 PUSH4 0x4AA4A4FC GT PUSH2 0x9A JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xA4A78F0C EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xAC9650D8 EQ PUSH2 0x176 JUMPI PUSH2 0x10D JUMP JUMPDEST DUP1 PUSH4 0x13EAD562 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x4659A494 EQ PUSH2 0x13B JUMPI PUSH2 0x10D JUMP JUMPDEST CALLDATASIZE PUSH2 0x10D JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x10B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x125 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x167F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x10B PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x179C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x796 JUMP JUMPDEST PUSH2 0x10B PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x84E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10B PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST PUSH2 0x10B PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1698EE8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH2 0x28F SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x175B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA167129500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA1671295 SWAP1 PUSH2 0x358 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x175B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x386 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF637731D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF637731D SWAP1 PUSH2 0x3D9 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x167F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x407 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x14B7 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 EQ ISZERO PUSH2 0x4FC JUMPI PUSH1 0x40 MLOAD PUSH4 0xF637731D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xF637731D SWAP1 PUSH2 0x4C9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x167F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8FCBAF0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x8FCBAF0C SWAP1 PUSH2 0x55A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x1 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x588 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 NOT SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x5EA SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x616 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x1562 JUMP JUMPDEST LT ISZERO PUSH2 0x64E JUMPI PUSH2 0x64E DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x506 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6A3 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x68E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 ADDRESS DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x6C1 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E1 SWAP3 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x721 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x76D JUMPI PUSH1 0x44 DUP2 MLOAD LT ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 ADD SWAP1 POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x77A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0x6A9 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x7EA SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x816 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83A SWAP2 SWAP1 PUSH2 0x1562 JUMP JUMPDEST LT ISZERO PUSH2 0x64E JUMPI PUSH2 0x64E DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xEDE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x884 PUSH1 0x60 DUP4 ADD PUSH1 0x40 DUP5 ADD PUSH2 0x15EE JUMP JUMPDEST PUSH1 0xFF AND GT PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP1 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x8B6 PUSH1 0x60 DUP4 ADD PUSH1 0x40 DUP5 ADD PUSH2 0x15EE JUMP JUMPDEST PUSH1 0xFF AND GT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0x8E4 PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER PUSH2 0x900 PUSH1 0x20 DUP6 ADD DUP6 PUSH2 0x1252 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x923 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x951 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x975 SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x986 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x89AFCB44 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0x167F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0x15CB JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0xA28 PUSH2 0xA1E PUSH1 0x60 DUP8 ADD PUSH1 0x40 DUP9 ADD PUSH2 0x15EE JUMP JUMPDEST DUP6 SWAP1 PUSH1 0xFF AND PUSH2 0xF2F JUMP JUMPDEST DUP2 PUSH2 0xA2F JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0xA49 PUSH2 0xA1E PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x15EE JUMP JUMPDEST DUP2 PUSH2 0xA50 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0xA8D PUSH2 0xA66 PUSH1 0x80 DUP8 ADD PUSH1 0x60 DUP9 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH32 0x0 DUP5 PUSH2 0xF59 JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0xAA0 PUSH1 0xA0 DUP8 ADD PUSH1 0x80 DUP9 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH32 0x0 DUP4 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x88316456 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB18 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB36 PUSH1 0xA0 DUP13 ADD PUSH1 0x80 DUP14 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB54 PUSH1 0xC0 DUP13 ADD PUSH1 0xA0 DUP14 ADD PUSH2 0x1548 JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB6E PUSH1 0xE0 DUP13 ADD PUSH1 0xC0 DUP14 ADD PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB87 PUSH2 0x100 DUP13 ADD PUSH1 0xE0 DUP14 ADD PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE PUSH2 0x100 DUP12 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x120 DUP12 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xBC5 PUSH2 0x160 DUP13 ADD PUSH2 0x140 DUP14 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH2 0x160 ADD CALLDATALOAD DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x157A JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP DUP6 DUP3 LT ISZERO PUSH2 0xDAA JUMPI DUP4 DUP3 LT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9B PUSH2 0xC73 PUSH1 0x80 DUP10 ADD PUSH1 0x60 DUP11 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x0 PUSH2 0xF59 JUMP JUMPDEST DUP2 DUP7 SUB PUSH2 0xCB0 PUSH2 0x1A0 DUP10 ADD PUSH2 0x180 DUP11 ADD PUSH2 0x13B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCFC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0xCF1 PUSH1 0x80 DUP11 ADD PUSH1 0x60 DUP12 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0xD8E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0xD4D SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD89 CALLER DUP3 PUSH2 0x107B JUMP JUMPDEST PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0xDA8 PUSH2 0xDA1 PUSH1 0x80 DUP11 ADD PUSH1 0x60 DUP12 ADD PUSH2 0x1252 JUMP JUMPDEST CALLER DUP4 PUSH2 0x110D JUMP JUMPDEST POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xED5 JUMPI DUP3 DUP2 LT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCD PUSH2 0xC73 PUSH1 0xA0 DUP10 ADD PUSH1 0x80 DUP11 ADD PUSH2 0x1252 JUMP JUMPDEST DUP1 DUP6 SUB PUSH2 0xDE2 PUSH2 0x1A0 DUP10 ADD PUSH2 0x180 DUP11 ADD PUSH2 0x13B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE2E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0xE23 PUSH1 0xA0 DUP11 ADD PUSH1 0x80 DUP12 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0xEC0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0xE7F SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xEBB CALLER DUP3 PUSH2 0x107B JUMP JUMPDEST PUSH2 0xED3 JUMP JUMPDEST PUSH2 0xED3 PUSH2 0xDA1 PUSH1 0xA0 DUP11 ADD PUSH1 0x80 DUP12 ADD PUSH2 0x1252 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xD505ACCF SWAP1 PUSH2 0x55A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x171A JUMP JUMPDEST PUSH1 0x0 DUP3 ISZERO DUP1 PUSH2 0xF4A JUMPI POP POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0xF47 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xF53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF81 SWAP3 SWAP2 SWAP1 PUSH2 0x1783 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xFEC SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1029 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x102E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1058 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1058 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1058 SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x1074 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP1 PUSH2 0x180F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x10A5 SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1108 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP1 PUSH2 0x187D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1135 SWAP3 SWAP2 SWAP1 PUSH2 0x1783 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x120C JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x120C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x120C SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x1074 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1263 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1286 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x126E DUP2 PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12A6 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x12B1 DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x12C1 DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP3 POP PUSH2 0x12CF PUSH1 0x40 DUP7 ADD PUSH2 0x123F JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x12DF DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1302 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x130D DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x132B DUP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1357 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x136E JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1381 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x138F JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x13A2 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x1AA4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x126E DUP2 PUSH2 0x1AA4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x1AB2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1419 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1430 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1443 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x144F JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x146D JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x1484 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1495 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1A5C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x14D1 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x14DC DUP2 PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD SWAP1 SWAP8 POP PUSH2 0x14ED DUP2 PUSH2 0x1AB2 JUMP JUMPDEST SWAP6 POP PUSH2 0x14FB PUSH1 0x40 DUP10 ADD PUSH2 0x1228 JUMP JUMPDEST SWAP5 POP PUSH2 0x1509 PUSH1 0x60 DUP10 ADD PUSH2 0x1228 JUMP JUMPDEST SWAP4 POP PUSH2 0x1517 PUSH1 0x80 DUP10 ADD PUSH2 0x1228 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH2 0x1527 DUP2 PUSH2 0x1AC1 JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x1538 DUP2 PUSH2 0x1AA4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1559 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x126E DUP3 PUSH2 0x123F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1573 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x158F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x15B5 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15DD JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15FF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x1AC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x162F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1675 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A5C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND DUP2 MSTORE SWAP7 SWAP1 SWAP8 AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xFF AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP6 SWAP1 SWAP7 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP5 DUP3 MUL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x17EF JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x17DD DUP6 DUP4 MLOAD PUSH2 0x1617 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17C1 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x126E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x50657263656E7461676520746F6F20736D616C6C000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3 SWAP1 DUP3 ADD MSTORE PUSH32 0x5354450000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F742057455448390000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x50657263656E7461676520746F6F206C61726765000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x196D DUP3 DUP5 MLOAD PUSH2 0x160A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x197F PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0x160A JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1992 PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x164A JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x19A5 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x1643 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x19B8 PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x1643 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH2 0x19F6 DUP3 DUP6 ADD DUP3 PUSH2 0x160A JUMP JUMPDEST POP POP PUSH2 0x140 SWAP3 DUP4 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1A26 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A40 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1A55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A77 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A5F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1A86 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0x1AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1AA1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0x2A 0xD8 0x27 0x2C SIGNEXTEND 0xC2 0xAE SWAP14 0xE1 SWAP3 PUSH3 0x598781 SWAP14 PUSH15 0xEA2807922835E48C8CA669ED4E86DB PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "74332:3433:0:-:0;;;74535:228;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;48214:18:0;;;;;;;;48242:14;;;;;;;74700:56;;;;::::1;::::0;74332:3433;;14:179:1;95:13;;-1:-1:-1;;;;;137:31:1;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:394::-;;;;355:2;343:9;334:7;330:23;326:32;323:2;;;376:6;368;361:22;323:2;404:42;436:9;404:42;:::i;:::-;394:52;;465:51;512:2;501:9;497:18;465:51;:::i;:::-;455:61;;535:51;582:2;571:9;567:18;535:51;:::i;:::-;525:61;;313:279;;;;;:::o;:::-;74332:3433:0;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:17730:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "75:104:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "85:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "100:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "94:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "94:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "85:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "157:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "166:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "169:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "159:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "159:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "159:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "129:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "140:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "147:6:1",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "136:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "136:18:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "126:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "126:29:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "119:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "119:37:1"
															},
															"nodeType": "YulIf",
															"src": "116:2:1"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "54:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "65:5:1",
														"type": ""
													}
												],
												"src": "14:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "234:113:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "244:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "266:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "253:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "253:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "244:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "295:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "306:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "313:8:1",
																						"type": "",
																						"value": "0xffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "302:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "302:20:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "292:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "292:31:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "285:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "285:39:1"
															},
															"nodeType": "YulIf",
															"src": "282:2:1"
														}
													]
												},
												"name": "abi_decode_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "213:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "224:5:1",
														"type": ""
													}
												],
												"src": "184:163:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "422:189:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "468:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "477:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "485:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "470:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "470:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "470:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "443:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "452:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "439:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "439:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "464:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "435:32:1"
															},
															"nodeType": "YulIf",
															"src": "432:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "503:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "529:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "516:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "507:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "575:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "548:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "548:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "590:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "600:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "590:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "388:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "399:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "411:6:1",
														"type": ""
													}
												],
												"src": "352:259:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "697:182:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "743:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "752:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "760:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "745:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "745:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "745:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "718:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "727:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "739:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "710:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "710:32:1"
															},
															"nodeType": "YulIf",
															"src": "707:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "778:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "797:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "791:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "791:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "782:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "843:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "816:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "816:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "858:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "868:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "858:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "663:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "674:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "686:6:1",
														"type": ""
													}
												],
												"src": "616:263:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1004:500:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1051:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1060:6:1"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1068:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1053:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1053:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1053:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1025:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1034:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1021:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1021:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1046:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1017:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:33:1"
															},
															"nodeType": "YulIf",
															"src": "1014:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1086:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1112:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1099:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1099:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1090:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1158:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1131:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1131:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1131:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1173:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1183:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1173:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1197:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1229:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1240:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1225:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1225:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1212:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1212:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1201:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1280:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1253:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1253:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1253:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1297:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1307:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1297:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1323:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1357:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1368:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1353:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1353:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "1333:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1333:39:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1323:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1381:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1413:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1424:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1409:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1409:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1396:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1396:32:1"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "1385:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "1464:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1437:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1437:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1437:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1481:17:1",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "1491:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1481:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint24t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "946:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "957:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "969:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "977:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "985:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "993:6:1",
														"type": ""
													}
												],
												"src": "884:620:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1662:520:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1709:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1718:6:1"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1726:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1711:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1711:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1711:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1683:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1692:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1679:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1679:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1704:3:1",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1675:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1675:33:1"
															},
															"nodeType": "YulIf",
															"src": "1672:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1744:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1770:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1757:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1757:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1748:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1816:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1789:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1789:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1789:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1831:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1841:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1831:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1855:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1882:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1893:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1878:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1878:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1865:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1865:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1855:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1906:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1933:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1944:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1929:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1929:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1916:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1916:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1906:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1957:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1989:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2000:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1985:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1985:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1972:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1972:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1961:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "2038:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "2013:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2013:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2013:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2055:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "2065:7:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2081:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2108:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2119:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2104:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2104:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2091:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:33:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "2081:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2133:43:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2160:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2171:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2156:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2156:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2143:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2143:33:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "2133:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1588:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1599:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1611:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1619:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1627:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1635:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1643:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "1651:6:1",
														"type": ""
													}
												],
												"src": "1509:673:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2303:561:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2349:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2358:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2366:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2351:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2351:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2351:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2324:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2333:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2320:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2320:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2316:32:1"
															},
															"nodeType": "YulIf",
															"src": "2313:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2384:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2411:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2398:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2398:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2388:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2430:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2440:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2434:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2485:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2494:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2502:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2487:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2487:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2487:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2473:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2481:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2470:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2470:14:1"
															},
															"nodeType": "YulIf",
															"src": "2467:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2520:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2534:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2545:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2530:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2524:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2600:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2609:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2617:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2602:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2602:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2602:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2579:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2583:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2575:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2575:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2590:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2571:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2571:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2564:35:1"
															},
															"nodeType": "YulIf",
															"src": "2561:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2635:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2662:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2649:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2649:16:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "2639:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2692:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2701:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2709:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2694:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2694:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2694:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2680:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2688:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2677:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2677:14:1"
															},
															"nodeType": "YulIf",
															"src": "2674:2:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2777:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2786:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2794:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2779:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2779:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2779:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2741:2:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "2749:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2757:2:1",
																								"type": "",
																								"value": "32"
																							}
																						],
																						"functionName": {
																							"name": "mul",
																							"nodeType": "YulIdentifier",
																							"src": "2745:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2745:15:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2737:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2737:24:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2763:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2733:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2733:33:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2768:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2730:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2730:46:1"
															},
															"nodeType": "YulIf",
															"src": "2727:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2812:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2826:2:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2830:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2822:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2822:11:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2812:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2842:16:1",
															"value": {
																"name": "length",
																"nodeType": "YulIdentifier",
																"src": "2852:6:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2842:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2261:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2272:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2284:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2292:6:1",
														"type": ""
													}
												],
												"src": "2187:677:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2936:186:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2982:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2991:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2999:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2984:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2984:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2984:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2957:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2966:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2953:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2978:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2949:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2949:32:1"
															},
															"nodeType": "YulIf",
															"src": "2946:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3017:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3043:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3030:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3030:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3021:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3086:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3062:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3062:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3062:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3101:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3111:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3101:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2902:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2913:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2925:6:1",
														"type": ""
													}
												],
												"src": "2869:253:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3205:179:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3251:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3260:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3268:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3253:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3253:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3253:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3226:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3235:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3222:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3222:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3247:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3218:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3218:32:1"
															},
															"nodeType": "YulIf",
															"src": "3215:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3286:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3305:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3299:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3299:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3290:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3348:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "3324:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3324:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3324:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3363:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3373:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3363:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3171:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3182:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3194:6:1",
														"type": ""
													}
												],
												"src": "3127:257:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3457:187:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3503:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3512:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3520:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3505:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3505:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3505:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3478:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3487:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3474:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3474:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3499:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3470:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3470:32:1"
															},
															"nodeType": "YulIf",
															"src": "3467:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3538:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3564:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3551:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3551:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "3542:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3608:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "3583:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3583:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3583:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3623:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3633:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3623:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3423:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3434:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3446:6:1",
														"type": ""
													}
												],
												"src": "3389:255:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3740:785:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3786:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3795:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3803:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3788:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3788:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3788:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3761:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3770:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3757:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3757:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3782:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3753:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3753:32:1"
															},
															"nodeType": "YulIf",
															"src": "3750:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3821:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3841:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3835:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3835:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3825:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3860:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3870:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3864:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3915:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3924:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3932:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3917:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3917:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3917:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3903:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3911:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3900:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3900:14:1"
															},
															"nodeType": "YulIf",
															"src": "3897:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3950:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3964:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3975:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3960:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3960:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3954:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4030:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4039:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4047:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4032:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4032:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4032:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4009:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4013:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4005:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4020:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "4001:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4001:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3994:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3994:35:1"
															},
															"nodeType": "YulIf",
															"src": "3991:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4065:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "4081:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4075:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4075:9:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "4069:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4107:13:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "4109:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4109:9:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4109:9:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4099:2:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4103:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4096:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4096:10:1"
															},
															"nodeType": "YulIf",
															"src": "4093:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4129:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4149:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4143:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4143:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "4133:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4161:67:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4187:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_3",
																								"nodeType": "YulIdentifier",
																								"src": "4203:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4207:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "4199:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4199:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4218:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "4214:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4214:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "4195:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4195:27:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4183:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4183:40:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4225:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4179:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4179:49:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "4165:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4287:13:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "4289:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4289:9:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4289:9:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4246:10:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "4258:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "4243:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4243:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "4266:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4278:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "4263:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4263:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "4240:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4240:46:1"
															},
															"nodeType": "YulIf",
															"src": "4237:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4316:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "4320:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4309:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4309:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4309:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4347:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4355:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4340:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4340:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4340:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4404:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4413:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4421:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4406:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4406:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4406:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "4381:2:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "4385:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "4377:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4377:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4390:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4373:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4373:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4395:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4370:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4370:33:1"
															},
															"nodeType": "YulIf",
															"src": "4367:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "4465:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4469:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4461:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4461:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "4478:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4486:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4474:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4474:15:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "4491:2:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "4439:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4439:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4439:55:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4503:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "4513:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4503:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3706:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3717:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3729:6:1",
														"type": ""
													}
												],
												"src": "3649:876:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4633:107:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4680:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4689:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4697:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4682:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4682:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4682:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4654:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4663:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4650:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4675:3:1",
																		"type": "",
																		"value": "416"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4646:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4646:33:1"
															},
															"nodeType": "YulIf",
															"src": "4643:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4715:19:1",
															"value": {
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4725:9:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4715:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_MigrateParams_$1454_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4599:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4610:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4622:6:1",
														"type": ""
													}
												],
												"src": "4530:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4918:743:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4965:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4974:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "4982:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4967:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4967:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4967:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4939:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4948:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4935:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4935:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4960:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4931:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4931:33:1"
															},
															"nodeType": "YulIf",
															"src": "4928:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5000:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5019:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5013:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5013:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5004:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5065:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "5038:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5038:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5038:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5080:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5090:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5080:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5104:40:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5129:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5140:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5125:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5119:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5119:25:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5108:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "5178:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "5153:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5153:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5153:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5195:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5205:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5195:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5221:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5266:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5277:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5262:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5262:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint16_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5231:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5231:50:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5221:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5290:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5335:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5346:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5331:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5331:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint16_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5300:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5300:50:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5290:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5359:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5404:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5415:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5400:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint16_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5369:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5369:51:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5359:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5429:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5454:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5465:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5450:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5444:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5444:26:1"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "5433:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "5504:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "5479:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5479:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5479:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5521:17:1",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "5531:7:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "5521:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5547:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5572:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5583:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5568:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5568:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5562:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5562:26:1"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "5551:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "5621:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "5597:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5597:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5597:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5638:17:1",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "5648:7:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "5638:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4836:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4847:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4859:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4867:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4875:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4883:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4891:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4899:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "4907:6:1",
														"type": ""
													}
												],
												"src": "4745:916:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5735:127:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5781:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5790:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5798:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5783:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5783:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5783:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5756:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5765:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5752:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5752:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5777:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5748:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5748:32:1"
															},
															"nodeType": "YulIf",
															"src": "5745:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5816:40:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5846:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "5826:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5826:30:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5816:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5701:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5712:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5724:6:1",
														"type": ""
													}
												],
												"src": "5666:196:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5948:113:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5994:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6003:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6011:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5996:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5996:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5996:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5969:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5978:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5965:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5965:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5990:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5961:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5961:32:1"
															},
															"nodeType": "YulIf",
															"src": "5958:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6029:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6045:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6039:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6039:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6029:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5914:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5925:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5937:6:1",
														"type": ""
													}
												],
												"src": "5867:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6198:377:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6245:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "6254:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "6262:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6247:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6247:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6247:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6219:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6228:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6215:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6215:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6240:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6211:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6211:33:1"
															},
															"nodeType": "YulIf",
															"src": "6208:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6280:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6296:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6290:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6290:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6280:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6315:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6338:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6349:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6334:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6334:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6328:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6328:25:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6319:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6431:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "6440:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "6448:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6433:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6433:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6433:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6375:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6386:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6393:34:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6382:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6382:46:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "6372:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6372:57:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6365:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6365:65:1"
															},
															"nodeType": "YulIf",
															"src": "6362:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6466:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6476:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6466:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6490:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6510:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6521:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6506:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6500:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6500:25:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6490:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6534:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6554:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6565:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6550:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6550:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6544:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6544:25:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "6534:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6140:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6151:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6163:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6171:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6179:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "6187:6:1",
														"type": ""
													}
												],
												"src": "6066:509:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6678:157:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6724:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6733:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6741:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6726:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6726:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6726:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6699:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6708:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6695:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6695:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6720:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6691:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6691:32:1"
															},
															"nodeType": "YulIf",
															"src": "6688:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6759:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6775:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6769:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6769:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6759:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6794:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6814:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6825:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6810:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6810:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6804:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6804:25:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6794:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6636:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6647:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6659:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6667:6:1",
														"type": ""
													}
												],
												"src": "6580:255:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6908:187:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6954:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6963:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "6971:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6956:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6956:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6956:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6929:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6938:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6925:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6925:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6950:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6921:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6921:32:1"
															},
															"nodeType": "YulIf",
															"src": "6918:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6989:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7015:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7002:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7002:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6993:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7059:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nodeType": "YulIdentifier",
																	"src": "7034:24:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7034:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7034:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7074:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7084:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7074:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6874:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6885:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6897:6:1",
														"type": ""
													}
												],
												"src": "6840:255:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7146:83:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7163:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7172:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7179:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7168:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7168:54:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7156:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7156:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7156:67:1"
														}
													]
												},
												"name": "abi_encode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7130:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7137:3:1",
														"type": ""
													}
												],
												"src": "7100:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7285:208:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7295:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7315:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7309:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7309:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7299:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7337:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7342:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7330:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7330:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7330:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7384:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7391:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7380:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7380:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7402:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7407:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7398:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7398:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7414:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "7358:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7358:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7358:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7430:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7445:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "7458:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7466:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "7454:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7454:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7475:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "7471:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7471:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "7450:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7450:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7441:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7441:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7482:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7437:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7437:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7430:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7262:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7269:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7277:3:1",
														"type": ""
													}
												],
												"src": "7234:259:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7542:49:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7559:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7575:1:1",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7578:5:1"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nodeType": "YulIdentifier",
																			"src": "7564:10:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7564:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7552:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7552:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7552:33:1"
														}
													]
												},
												"name": "abi_encode_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7526:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7533:3:1",
														"type": ""
													}
												],
												"src": "7498:93:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7641:49:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7658:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7667:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7674:8:1",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7663:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7663:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7651:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7651:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7651:33:1"
														}
													]
												},
												"name": "abi_encode_t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7625:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7632:3:1",
														"type": ""
													}
												],
												"src": "7596:94:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7842:126:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7865:3:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7870:6:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7878:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "7852:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7852:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7852:33:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7894:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7908:3:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7913:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7904:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7904:16:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7898:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7936:2:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "7940:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7929:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7929:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7929:15:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7953:9:1",
															"value": {
																"name": "_1",
																"nodeType": "YulIdentifier",
																"src": "7960:2:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7953:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7810:3:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7815:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7823:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7834:3:1",
														"type": ""
													}
												],
												"src": "7695:273:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8110:137:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8120:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8140:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8134:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8134:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "8124:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8182:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8190:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8178:17:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8197:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8202:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "8156:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8156:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8156:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8218:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8229:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8234:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8225:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8225:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8218:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8086:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8091:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "8102:3:1",
														"type": ""
													}
												],
												"src": "7973:274:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8353:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8363:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8375:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8386:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8371:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8371:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8363:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8405:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8420:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8428:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8416:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8416:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8398:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8398:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8398:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8322:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8333:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8344:4:1",
														"type": ""
													}
												],
												"src": "8252:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8592:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8602:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8614:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8625:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8610:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8610:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8602:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8644:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8659:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8667:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8655:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8655:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8637:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8637:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8637:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8561:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8572:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8583:4:1",
														"type": ""
													}
												],
												"src": "8483:234:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8859:198:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8869:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8881:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8892:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8877:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8877:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8869:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8904:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8914:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8908:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8972:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8987:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8995:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8983:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8983:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8965:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8965:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8965:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9019:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9030:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9015:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9015:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9039:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9047:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9035:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9035:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9008:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9008:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9008:43:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8820:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8831:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8839:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8850:4:1",
														"type": ""
													}
												],
												"src": "8722:335:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9227:241:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9237:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9249:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9260:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9245:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9245:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9237:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9272:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9282:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9276:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9340:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9355:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9363:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9351:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9351:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9333:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9333:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9387:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9398:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9383:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9383:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9407:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9415:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9403:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9376:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9376:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9376:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9439:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9450:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9435:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9435:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9455:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9428:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9428:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9428:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9180:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9191:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9199:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9207:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9218:4:1",
														"type": ""
													}
												],
												"src": "9062:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9768:488:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9778:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9790:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9801:3:1",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9786:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9786:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9778:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9814:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9824:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "9818:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9882:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9897:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9905:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9893:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9875:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9875:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9875:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9929:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9940:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9925:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9925:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "9949:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "9957:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9945:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9945:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9918:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9918:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9918:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9981:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9992:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9977:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9997:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9970:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9970:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10024:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10035:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10020:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10020:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10040:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10013:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10013:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10013:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10067:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10078:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10063:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value4",
																						"nodeType": "YulIdentifier",
																						"src": "10098:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "10091:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10091:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "10084:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10084:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10056:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10056:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10127:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10138:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10123:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10123:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value5",
																				"nodeType": "YulIdentifier",
																				"src": "10148:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10156:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10144:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10144:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10116:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10116:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10116:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10182:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10193:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10178:19:1"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "10199:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10171:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10171:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10171:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10226:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10237:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10222:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10222:19:1"
																	},
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "10243:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10215:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10215:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10215:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address_t_uint256_t_uint256_t_bool_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bool_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9681:9:1",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "9692:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "9700:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "9708:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9716:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9724:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9732:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9740:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9748:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9759:4:1",
														"type": ""
													}
												],
												"src": "9473:783:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10534:428:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10544:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10556:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10567:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10552:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10552:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10544:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10580:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "10590:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "10584:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10648:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "10663:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10671:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10659:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10641:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10641:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10641:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10695:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10706:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10691:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10691:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "10715:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "10723:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10711:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10711:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10684:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10684:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10684:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10747:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10758:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10743:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10743:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "10763:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10736:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10736:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10790:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10801:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10786:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10786:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "10806:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10779:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10779:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10779:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10833:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10844:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10829:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10829:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value4",
																				"nodeType": "YulIdentifier",
																				"src": "10854:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10862:4:1",
																				"type": "",
																				"value": "0xff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "10850:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10850:17:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10822:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10822:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10822:46:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10888:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10899:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10884:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10884:19:1"
																	},
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "10905:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10877:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10877:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10877:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10932:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10943:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10928:19:1"
																	},
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "10949:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10921:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10921:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10921:35:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_payable_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10455:9:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "10466:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "10474:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10482:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10490:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10498:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10506:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10514:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10525:4:1",
														"type": ""
													}
												],
												"src": "10261:701:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11122:256:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11132:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11144:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11155:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11140:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11140:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11132:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11167:52:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11177:42:1",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11171:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11235:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11250:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11258:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11246:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11246:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11228:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11228:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11282:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11293:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11278:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11278:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "11302:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11310:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11298:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11271:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11334:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11345:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11330:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11330:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "11354:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11362:8:1",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11350:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11350:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11323:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11323:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11323:49:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11075:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11086:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11094:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11102:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11113:4:1",
														"type": ""
													}
												],
												"src": "10967:411:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11512:168:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11522:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11534:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11545:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11530:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11530:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11522:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11564:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "11579:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11587:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "11575:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11575:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11557:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11557:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11557:74:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11651:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11662:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11647:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11647:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11667:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11640:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11640:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11640:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11473:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11484:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11492:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11503:4:1",
														"type": ""
													}
												],
												"src": "11383:297:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11854:637:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11864:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11874:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11868:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11885:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11903:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11914:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11899:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11899:18:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11889:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11933:9:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11944:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11926:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11926:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11926:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11956:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "11967:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "11960:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11982:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12002:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11996:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11996:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11986:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "12025:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12033:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12018:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12018:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12049:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12060:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12071:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12056:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12056:18:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "12049:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12083:54:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12105:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "12120:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "12128:2:1"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "12116:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12116:15:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12101:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12134:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12097:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12097:40:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "12087:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12146:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12164:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12172:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12160:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12160:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "12150:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12184:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "12193:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "12188:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12255:207:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "12276:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tail_2",
																									"nodeType": "YulIdentifier",
																									"src": "12289:6:1"
																								},
																								{
																									"name": "headStart",
																									"nodeType": "YulIdentifier",
																									"src": "12297:9:1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "12285:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12285:22:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12313:2:1",
																									"type": "",
																									"value": "63"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "12309:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12309:7:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "12281:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12281:36:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12269:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12269:49:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12269:49:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12331:51:1",
																		"value": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "12366:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "12360:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12360:13:1"
																				},
																				{
																					"name": "tail_2",
																					"nodeType": "YulIdentifier",
																					"src": "12375:6:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encode_t_bytes",
																				"nodeType": "YulIdentifier",
																				"src": "12341:18:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12341:41:1"
																		},
																		"variableNames": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "12331:6:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12395:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "12409:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "12417:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12405:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12405:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12395:6:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12433:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "12444:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "12449:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12440:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12440:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12433:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "12217:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "12220:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12214:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12214:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12228:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12230:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12239:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12242:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12235:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12235:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12230:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12210:3:1",
																"statements": []
															},
															"src": "12206:256:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12471:14:1",
															"value": {
																"name": "tail_2",
																"nodeType": "YulIdentifier",
																"src": "12479:6:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12471:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11823:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11834:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11845:4:1",
														"type": ""
													}
												],
												"src": "11685:806:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12617:100:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12634:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12645:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12627:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12627:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12657:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12684:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12696:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12707:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12692:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "12665:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12665:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12657:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12586:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12597:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12608:4:1",
														"type": ""
													}
												],
												"src": "12496:221:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12896:151:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12913:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12924:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12906:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12906:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12906:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12947:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12958:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12943:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12943:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12963:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12936:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12936:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12936:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12985:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12996:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12981:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12981:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13001:4:1",
																		"type": "",
																		"value": "SA"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12974:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12974:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12974:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13015:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13027:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13038:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13023:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13023:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13015:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12873:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12887:4:1",
														"type": ""
													}
												],
												"src": "12722:325:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13226:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13243:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13254:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13236:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13236:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13236:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13277:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13288:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13273:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13273:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13293:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13266:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13266:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13266:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13316:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13327:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13312:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13312:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13332:22:1",
																		"type": "",
																		"value": "Percentage too small"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13305:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13305:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13305:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13364:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13376:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13387:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13372:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13372:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13364:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_441c69a76c2d33fd9de54332033d9c05337cb9707baa639e0118d8dc01b47be7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13203:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13217:4:1",
														"type": ""
													}
												],
												"src": "13052:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13575:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13592:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13603:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13585:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13585:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13585:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13626:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13637:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13622:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13622:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13642:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13615:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13615:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13615:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13664:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13675:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13660:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13660:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13680:5:1",
																		"type": "",
																		"value": "STE"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13653:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13653:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13695:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13707:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13718:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13703:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13703:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13695:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13552:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13566:4:1",
														"type": ""
													}
												],
												"src": "13401:326:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13906:151:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13923:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13934:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13916:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13916:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13916:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13957:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13968:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13953:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13953:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13973:1:1",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13946:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13946:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13946:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13995:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14006:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13991:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13991:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14011:4:1",
																		"type": "",
																		"value": "ST"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13984:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13984:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13984:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14025:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14037:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14048:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14033:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14033:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14025:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13883:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13897:4:1",
														"type": ""
													}
												],
												"src": "13732:325:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14236:158:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14253:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14264:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14246:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14246:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14246:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14287:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14298:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14283:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14303:1:1",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14276:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14276:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14276:29:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14325:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14336:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14321:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14321:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14341:11:1",
																		"type": "",
																		"value": "Not WETH9"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14314:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14314:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14314:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14362:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14374:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14385:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14370:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14370:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14362:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14213:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14227:4:1",
														"type": ""
													}
												],
												"src": "14062:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14573:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14590:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14601:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14583:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14583:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14583:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14624:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14635:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14620:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14620:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14640:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14613:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14613:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14613:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14663:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14674:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14659:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14659:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14679:22:1",
																		"type": "",
																		"value": "Percentage too large"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14652:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14652:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14652:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14711:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14723:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14734:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14719:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14719:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14711:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9a769b63cd4026b5e7e44da6e571c3cde616fe3a40029eab2d6b59e7b569424b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14550:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14564:4:1",
														"type": ""
													}
												],
												"src": "14399:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14905:1077:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14915:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14927:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14938:3:1",
																		"type": "",
																		"value": "352"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14923:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14923:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14915:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "14978:6:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "14972:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14972:13:1"
																	},
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14987:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "14951:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14951:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14951:46:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15006:44:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15036:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15044:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15032:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15032:17:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15026:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15026:24:1"
															},
															"variables": [
																{
																	"name": "memberValue0",
																	"nodeType": "YulTypedName",
																	"src": "15010:12:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0",
																		"nodeType": "YulIdentifier",
																		"src": "15080:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15098:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15109:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15094:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15094:20:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "15059:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15059:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15059:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15124:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15156:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15164:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15152:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15152:17:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15146:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15146:24:1"
															},
															"variables": [
																{
																	"name": "memberValue0_1",
																	"nodeType": "YulTypedName",
																	"src": "15128:14:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_1",
																		"nodeType": "YulIdentifier",
																		"src": "15199:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15219:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15230:4:1",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15215:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15215:20:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint24",
																	"nodeType": "YulIdentifier",
																	"src": "15179:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15179:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15179:57:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15245:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15277:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15285:4:1",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15273:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15273:17:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15267:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15267:24:1"
															},
															"variables": [
																{
																	"name": "memberValue0_2",
																	"nodeType": "YulTypedName",
																	"src": "15249:14:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_2",
																		"nodeType": "YulIdentifier",
																		"src": "15319:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15339:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15350:4:1",
																				"type": "",
																				"value": "0x60"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15335:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15335:20:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "15300:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15300:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15300:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15365:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15397:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15405:4:1",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15393:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15393:17:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15387:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15387:24:1"
															},
															"variables": [
																{
																	"name": "memberValue0_3",
																	"nodeType": "YulTypedName",
																	"src": "15369:14:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_3",
																		"nodeType": "YulIdentifier",
																		"src": "15439:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15459:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15470:4:1",
																				"type": "",
																				"value": "0x80"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15455:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15455:20:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_int24",
																	"nodeType": "YulIdentifier",
																	"src": "15420:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15420:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15420:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15496:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15507:4:1",
																				"type": "",
																				"value": "0xa0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15492:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15492:20:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "15524:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15532:4:1",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15520:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15520:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "15514:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15514:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15485:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15485:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15485:54:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15559:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15570:4:1",
																				"type": "",
																				"value": "0xc0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15555:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15555:20:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "15587:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15595:4:1",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15583:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15583:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "15577:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15577:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15548:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15548:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15548:54:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15622:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15633:4:1",
																				"type": "",
																				"value": "0xe0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15618:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15618:20:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "15650:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15658:4:1",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15646:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15646:17:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "15640:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15640:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15611:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15611:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15611:54:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15674:16:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15684:6:1",
																"type": "",
																"value": "0x0100"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15678:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15710:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15721:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15706:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15706:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "15736:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "15744:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15732:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15732:15:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "15726:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15726:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15699:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15699:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15699:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15758:16:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15768:6:1",
																"type": "",
																"value": "0x0120"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "15762:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15783:44:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15815:6:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "15823:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15811:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15811:15:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "15805:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15805:22:1"
															},
															"variables": [
																{
																	"name": "memberValue0_4",
																	"nodeType": "YulTypedName",
																	"src": "15787:14:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memberValue0_4",
																		"nodeType": "YulIdentifier",
																		"src": "15857:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15877:9:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "15888:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15873:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15873:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "15836:20:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15836:56:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15836:56:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15901:16:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "15911:6:1",
																"type": "",
																"value": "0x0140"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "15905:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15937:9:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "15948:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15933:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15933:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "15963:6:1"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "15971:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15959:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15959:15:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "15953:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15953:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15926:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15926:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15926:50:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_MintParams_$1773_memory_ptr__to_t_struct$_MintParams_$1773_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14874:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "14885:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14896:4:1",
														"type": ""
													}
												],
												"src": "14748:1234:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16088:125:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16098:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16110:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16121:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16106:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16106:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16098:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16140:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "16155:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16163:42:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "16151:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16151:55:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16133:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16133:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16133:74:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint160__to_t_uint160__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16057:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16068:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16079:4:1",
														"type": ""
													}
												],
												"src": "15987:226:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16319:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16329:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16341:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16352:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16337:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16337:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16329:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16371:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "16382:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16364:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16364:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16364:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16288:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16299:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16310:4:1",
														"type": ""
													}
												],
												"src": "16218:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16494:439:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16504:51:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr_to_tail",
																		"nodeType": "YulIdentifier",
																		"src": "16543:11:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "16530:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16530:25:1"
															},
															"variables": [
																{
																	"name": "rel_offset_of_tail",
																	"nodeType": "YulTypedName",
																	"src": "16508:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16644:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "addr",
																					"nodeType": "YulIdentifier",
																					"src": "16653:4:1"
																				},
																				{
																					"name": "addr",
																					"nodeType": "YulIdentifier",
																					"src": "16659:4:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16646:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16646:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16646:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "rel_offset_of_tail",
																				"nodeType": "YulIdentifier",
																				"src": "16578:18:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [],
																								"functionName": {
																									"name": "calldatasize",
																									"nodeType": "YulIdentifier",
																									"src": "16606:12:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "16606:14:1"
																							},
																							{
																								"name": "base_ref",
																								"nodeType": "YulIdentifier",
																								"src": "16622:8:1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "16602:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16602:29:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "16637:2:1",
																								"type": "",
																								"value": "30"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "16633:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "16633:7:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16598:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16598:43:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "16574:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16574:68:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16567:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16567:76:1"
															},
															"nodeType": "YulIf",
															"src": "16564:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16675:47:1",
															"value": {
																"arguments": [
																	{
																		"name": "base_ref",
																		"nodeType": "YulIdentifier",
																		"src": "16693:8:1"
																	},
																	{
																		"name": "rel_offset_of_tail",
																		"nodeType": "YulIdentifier",
																		"src": "16703:18:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16689:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16689:33:1"
															},
															"variables": [
																{
																	"name": "addr_1",
																	"nodeType": "YulTypedName",
																	"src": "16679:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16731:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nodeType": "YulIdentifier",
																		"src": "16754:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "16741:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16741:20:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "16731:6:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16804:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "addr",
																					"nodeType": "YulIdentifier",
																					"src": "16813:4:1"
																				},
																				{
																					"name": "addr",
																					"nodeType": "YulIdentifier",
																					"src": "16819:4:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16806:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16806:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16806:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16776:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16784:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16773:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16773:30:1"
															},
															"nodeType": "YulIf",
															"src": "16770:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16835:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "addr_1",
																		"nodeType": "YulIdentifier",
																		"src": "16847:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16855:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16843:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16843:17:1"
															},
															"variableNames": [
																{
																	"name": "addr",
																	"nodeType": "YulIdentifier",
																	"src": "16835:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16911:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16920:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "16923:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "16913:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16913:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16913:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "addr",
																		"nodeType": "YulIdentifier",
																		"src": "16876:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "calldatasize",
																					"nodeType": "YulIdentifier",
																					"src": "16886:12:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16886:14:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16902:6:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16882:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16882:27:1"
																	}
																],
																"functionName": {
																	"name": "sgt",
																	"nodeType": "YulIdentifier",
																	"src": "16872:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16872:38:1"
															},
															"nodeType": "YulIf",
															"src": "16869:2:1"
														}
													]
												},
												"name": "access_calldata_tail_t_bytes_calldata_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "base_ref",
														"nodeType": "YulTypedName",
														"src": "16451:8:1",
														"type": ""
													},
													{
														"name": "ptr_to_tail",
														"nodeType": "YulTypedName",
														"src": "16461:11:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "addr",
														"nodeType": "YulTypedName",
														"src": "16477:4:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16483:6:1",
														"type": ""
													}
												],
												"src": "16400:533:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16991:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "17001:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "17010:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "17005:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17070:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "17095:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "17100:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "17091:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17091:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "17114:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "17119:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "17110:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "17110:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "17104:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17104:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17084:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17084:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17084:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "17031:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17034:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "17028:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17028:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "17042:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "17044:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "17053:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17056:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "17049:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17049:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "17044:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "17024:3:1",
																"statements": []
															},
															"src": "17020:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17159:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "17172:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "17177:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "17168:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17168:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17186:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "17161:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17161:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17161:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "17148:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "17151:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "17145:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17145:13:1"
															},
															"nodeType": "YulIf",
															"src": "17142:2:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "16969:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "16974:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "16979:6:1",
														"type": ""
													}
												],
												"src": "16938:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17248:109:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17335:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17344:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17347:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17337:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17337:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17337:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17271:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17282:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17289:42:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "17278:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17278:54:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17268:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17268:65:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17261:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17261:73:1"
															},
															"nodeType": "YulIf",
															"src": "17258:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17237:5:1",
														"type": ""
													}
												],
												"src": "17201:156:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17406:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17460:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17469:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17472:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17462:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17462:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17462:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17429:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "17450:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "17443:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "17443:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "17436:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17436:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17426:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17426:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17419:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17419:40:1"
															},
															"nodeType": "YulIf",
															"src": "17416:2:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17395:5:1",
														"type": ""
													}
												],
												"src": "17362:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17532:75:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17585:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17594:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17597:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17587:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17587:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17587:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17555:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17573:1:1",
																						"type": "",
																						"value": "2"
																					},
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17576:5:1"
																					}
																				],
																				"functionName": {
																					"name": "signextend",
																					"nodeType": "YulIdentifier",
																					"src": "17562:10:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17562:20:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17552:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17552:31:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17545:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17545:39:1"
															},
															"nodeType": "YulIf",
															"src": "17542:2:1"
														}
													]
												},
												"name": "validator_revert_t_int24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17521:5:1",
														"type": ""
													}
												],
												"src": "17487:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17657:71:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "17706:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17715:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "17718:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "17708:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "17708:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "17708:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "17680:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "17691:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17698:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "17687:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17687:16:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "17677:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17677:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "17670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17670:35:1"
															},
															"nodeType": "YulIf",
															"src": "17667:2:1"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "17646:5:1",
														"type": ""
													}
												],
												"src": "17612:116:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_t_uint24(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint24t_uint160(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        value2 := abi_decode_t_uint24(add(headStart, 64))\n        let value_2 := calldataload(add(headStart, 96))\n        validator_revert_t_address(value_2)\n        value3 := value_2\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let value_1 := calldataload(add(headStart, 96))\n        validator_revert_t_uint8(value_1)\n        value3 := value_1\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value0, value0) }\n        if gt(add(add(_2, mul(length, 32)), 32), dataEnd) { revert(value0, value0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_bool(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_int24(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_int24(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _3 := mload(_2)\n        if gt(_3, _1) { invalid() }\n        let memPtr := mload(64)\n        let newFreePtr := add(add(memPtr, and(add(_3, 0x1f), not(31))), 32)\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(value0, value0) }\n        copy_memory_to_memory(add(_2, 32), add(memPtr, 32), _3)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_struct$_MigrateParams_$1454_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 416) { revert(value0, value0) }\n        value0 := headStart\n    }\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value2, value2) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_t_int24(value_1)\n        value1 := value_1\n        value2 := abi_decode_t_uint16_fromMemory(add(headStart, 64))\n        value3 := abi_decode_t_uint16_fromMemory(add(headStart, 96))\n        value4 := abi_decode_t_uint16_fromMemory(add(headStart, 128))\n        let value_2 := mload(add(headStart, 160))\n        validator_revert_t_uint8(value_2)\n        value5 := value_2\n        let value_3 := mload(add(headStart, 192))\n        validator_revert_t_bool(value_3)\n        value6 := value_3\n    }\n    function abi_decode_tuple_t_uint24(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_uint24(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(value2, value2) }\n        value1 := value\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_uint8(value)\n        value0 := value\n    }\n    function abi_encode_t_address(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_t_int24(value, pos)\n    {\n        mstore(pos, signextend(2, value))\n    }\n    function abi_encode_t_uint24(value, pos)\n    {\n        mstore(pos, and(value, 0xffffff))\n    }\n    function abi_encode_tuple_packed_t_bytes_calldata_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        calldatacopy(pos, value0, value1)\n        let _1 := add(pos, value1)\n        mstore(_1, end)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_payable_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256_t_uint256_t_bool_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_bool_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), and(value5, 0xff))\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n    }\n    function abi_encode_tuple_t_address_payable_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__to_t_address_t_address_t_uint256_t_uint256_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 224)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), and(value4, 0xff))\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__to_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        let tail_1 := add(headStart, _1)\n        mstore(headStart, _1)\n        let pos := tail_1\n        let length := mload(value0)\n        mstore(tail_1, length)\n        pos := add(headStart, 64)\n        let tail_2 := add(add(headStart, mul(length, _1)), 64)\n        let srcPtr := add(value0, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, add(sub(tail_2, headStart), not(63)))\n            tail_2 := abi_encode_t_bytes(mload(srcPtr), tail_2)\n            srcPtr := add(srcPtr, _1)\n            pos := add(pos, _1)\n        }\n        tail := tail_2\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"SA\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_441c69a76c2d33fd9de54332033d9c05337cb9707baa639e0118d8dc01b47be7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Percentage too small\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 3)\n        mstore(add(headStart, 64), \"STE\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 2)\n        mstore(add(headStart, 64), \"ST\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 9)\n        mstore(add(headStart, 64), \"Not WETH9\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9a769b63cd4026b5e7e44da6e571c3cde616fe3a40029eab2d6b59e7b569424b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Percentage too large\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_MintParams_$1773_memory_ptr__to_t_struct$_MintParams_$1773_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 352)\n        abi_encode_t_address(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_t_address(memberValue0, add(headStart, 0x20))\n        let memberValue0_1 := mload(add(value0, 0x40))\n        abi_encode_t_uint24(memberValue0_1, add(headStart, 0x40))\n        let memberValue0_2 := mload(add(value0, 0x60))\n        abi_encode_t_int24(memberValue0_2, add(headStart, 0x60))\n        let memberValue0_3 := mload(add(value0, 0x80))\n        abi_encode_t_int24(memberValue0_3, add(headStart, 0x80))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n        let _1 := 0x0100\n        mstore(add(headStart, _1), mload(add(value0, _1)))\n        let _2 := 0x0120\n        let memberValue0_4 := mload(add(value0, _2))\n        abi_encode_t_address(memberValue0_4, add(headStart, _2))\n        let _3 := 0x0140\n        mstore(add(headStart, _3), mload(add(value0, _3)))\n    }\n    function abi_encode_tuple_t_uint160__to_t_uint160__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function access_calldata_tail_t_bytes_calldata_ptr(base_ref, ptr_to_tail) -> addr, length\n    {\n        let rel_offset_of_tail := calldataload(ptr_to_tail)\n        if iszero(slt(rel_offset_of_tail, add(sub(calldatasize(), base_ref), not(30)))) { revert(addr, addr) }\n        let addr_1 := add(base_ref, rel_offset_of_tail)\n        length := calldataload(addr_1)\n        if gt(length, 0xffffffffffffffff) { revert(addr, addr) }\n        addr := add(addr_1, 0x20)\n        if sgt(addr, sub(calldatasize(), length)) { revert(0, 0) }\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function validator_revert_t_bool(value)\n    {\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n    }\n    function validator_revert_t_int24(value)\n    {\n        if iszero(eq(value, signextend(2, value))) { revert(0, 0) }\n    }\n    function validator_revert_t_uint8(value)\n    {\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"1269": [
									{
										"length": 32,
										"start": 598
									},
									{
										"length": 32,
										"start": 799
									},
									{
										"length": 32,
										"start": 2128
									}
								],
								"1273": [
									{
										"length": 32,
										"start": 197
									},
									{
										"length": 32,
										"start": 1430
									},
									{
										"length": 32,
										"start": 3265
									},
									{
										"length": 32,
										"start": 3352
									},
									{
										"length": 32,
										"start": 3571
									},
									{
										"length": 32,
										"start": 3658
									}
								],
								"2246": [
									{
										"length": 32,
										"start": 1944
									},
									{
										"length": 32,
										"start": 2664
									},
									{
										"length": 32,
										"start": 2722
									},
									{
										"length": 32,
										"start": 2764
									},
									{
										"length": 32,
										"start": 3189
									}
								]
							},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xB44A2722 GT PUSH2 0x69 JUMPI DUP1 PUSH4 0xC45A0155 GT PUSH2 0x4E JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0xD44F2BF2 EQ PUSH2 0x1D3 JUMPI DUP1 PUSH4 0xF3995C67 EQ PUSH2 0x1F3 JUMPI PUSH2 0x10D JUMP JUMPDEST DUP1 PUSH4 0xB44A2722 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0xC2E3140A EQ PUSH2 0x1AB JUMPI PUSH2 0x10D JUMP JUMPDEST DUP1 PUSH4 0x4AA4A4FC GT PUSH2 0x9A JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x14E JUMPI DUP1 PUSH4 0xA4A78F0C EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xAC9650D8 EQ PUSH2 0x176 JUMPI PUSH2 0x10D JUMP JUMPDEST DUP1 PUSH4 0x13EAD562 EQ PUSH2 0x112 JUMPI DUP1 PUSH4 0x4659A494 EQ PUSH2 0x13B JUMPI PUSH2 0x10D JUMP JUMPDEST CALLDATASIZE PUSH2 0x10D JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x10B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP1 PUSH2 0x18EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x125 PUSH2 0x120 CALLDATASIZE PUSH1 0x4 PUSH2 0x1291 JUMP JUMPDEST PUSH2 0x206 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x167F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10B PUSH2 0x149 CALLDATASIZE PUSH1 0x4 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0x506 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x15A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x594 JUMP JUMPDEST PUSH2 0x10B PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0x5B8 JUMP JUMPDEST PUSH2 0x189 PUSH2 0x184 CALLDATASIZE PUSH1 0x4 PUSH2 0x1345 JUMP JUMPDEST PUSH2 0x656 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x132 SWAP2 SWAP1 PUSH2 0x179C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x796 JUMP JUMPDEST PUSH2 0x10B PUSH2 0x1B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0x7BA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x125 PUSH2 0x84E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10B PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x149F JUMP JUMPDEST PUSH2 0x872 JUMP JUMPDEST PUSH2 0x10B PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x12EA JUMP JUMPDEST PUSH2 0xEDE JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1698EE8200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH2 0x28F SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x175B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2BB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x410 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA167129500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0xA1671295 SWAP1 PUSH2 0x358 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x175B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x386 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AA SWAP2 SWAP1 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xF637731D PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xF637731D SWAP1 PUSH2 0x3D9 SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x167F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x407 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x4FE JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x44B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x45F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x14B7 JUMP JUMPDEST POP POP POP POP POP POP SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 EQ ISZERO PUSH2 0x4FC JUMPI PUSH1 0x40 MLOAD PUSH4 0xF637731D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xF637731D SWAP1 PUSH2 0x4C9 SWAP1 DUP7 SWAP1 PUSH1 0x4 ADD PUSH2 0x167F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4F7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMPDEST POP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8FCBAF0C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0x8FCBAF0C SWAP1 PUSH2 0x55A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x1 SWAP1 DUP12 SWAP1 DUP12 SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x16D1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x574 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x588 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 NOT SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x5EA SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x602 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x616 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x1562 JUMP JUMPDEST LT ISZERO PUSH2 0x64E JUMPI PUSH2 0x64E DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0x506 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x66F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6A3 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x68E JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x78F JUMPI PUSH1 0x0 DUP1 ADDRESS DUP7 DUP7 DUP6 DUP2 DUP2 LT PUSH2 0x6C1 JUMPI INVALID JUMPDEST SWAP1 POP PUSH1 0x20 MUL DUP2 ADD SWAP1 PUSH2 0x6D3 SWAP2 SWAP1 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6E1 SWAP3 SWAP2 SWAP1 PUSH2 0x1653 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x721 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 PUSH2 0x76D JUMPI PUSH1 0x44 DUP2 MLOAD LT ISZERO PUSH2 0x73A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x4 DUP2 ADD SWAP1 POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x754 SWAP2 SWAP1 PUSH2 0x1408 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP2 SWAP1 PUSH2 0x17FC JUMP JUMPDEST DUP1 DUP5 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x77A JUMPI INVALID JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE POP POP PUSH1 0x1 ADD PUSH2 0x6A9 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE DUP6 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH2 0x7EA SWAP1 CALLER SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x1693 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x802 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x816 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x83A SWAP2 SWAP1 PUSH2 0x1562 JUMP JUMPDEST LT ISZERO PUSH2 0x64E JUMPI PUSH2 0x64E DUP7 DUP7 DUP7 DUP7 DUP7 DUP7 PUSH2 0xEDE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x884 PUSH1 0x60 DUP4 ADD PUSH1 0x40 DUP5 ADD PUSH2 0x15EE JUMP JUMPDEST PUSH1 0xFF AND GT PUSH2 0x8A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP1 PUSH2 0x1846 JUMP JUMPDEST PUSH1 0x64 PUSH2 0x8B6 PUSH1 0x60 DUP4 ADD PUSH1 0x40 DUP5 ADD PUSH2 0x15EE JUMP JUMPDEST PUSH1 0xFF AND GT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP1 PUSH2 0x1922 JUMP JUMPDEST PUSH2 0x8E4 PUSH1 0x20 DUP3 ADD DUP3 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD CALLER PUSH2 0x900 PUSH1 0x20 DUP6 ADD DUP6 PUSH2 0x1252 JUMP JUMPDEST DUP5 PUSH1 0x20 ADD CALLDATALOAD PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x923 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x16AD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x93D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x951 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x975 SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH2 0x986 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x89AFCB44 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0x167F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA02 SWAP2 SWAP1 PUSH2 0x15CB JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0xA28 PUSH2 0xA1E PUSH1 0x60 DUP8 ADD PUSH1 0x40 DUP9 ADD PUSH2 0x15EE JUMP JUMPDEST DUP6 SWAP1 PUSH1 0xFF AND PUSH2 0xF2F JUMP JUMPDEST DUP2 PUSH2 0xA2F JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH1 0x0 PUSH1 0x64 PUSH2 0xA49 PUSH2 0xA1E PUSH1 0x60 DUP9 ADD PUSH1 0x40 DUP10 ADD PUSH2 0x15EE JUMP JUMPDEST DUP2 PUSH2 0xA50 JUMPI INVALID JUMPDEST DIV SWAP1 POP PUSH2 0xA8D PUSH2 0xA66 PUSH1 0x80 DUP8 ADD PUSH1 0x60 DUP9 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH32 0x0 DUP5 PUSH2 0xF59 JUMP JUMPDEST PUSH2 0xAC7 PUSH2 0xAA0 PUSH1 0xA0 DUP8 ADD PUSH1 0x80 DUP9 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH32 0x0 DUP4 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x88316456 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 DUP11 PUSH1 0x60 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0xB18 SWAP2 SWAP1 PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB36 PUSH1 0xA0 DUP13 ADD PUSH1 0x80 DUP14 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB54 PUSH1 0xC0 DUP13 ADD PUSH1 0xA0 DUP14 ADD PUSH2 0x1548 JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB6E PUSH1 0xE0 DUP13 ADD PUSH1 0xC0 DUP14 ADD PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xB87 PUSH2 0x100 DUP13 ADD PUSH1 0xE0 DUP14 ADD PUSH2 0x13EC JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x40 DUP2 ADD DUP8 SWAP1 MSTORE PUSH2 0x100 DUP12 ADD CALLDATALOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x120 DUP12 ADD CALLDATALOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD PUSH2 0xBC5 PUSH2 0x160 DUP13 ADD PUSH2 0x140 DUP14 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP11 PUSH2 0x160 ADD CALLDATALOAD DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF8 SWAP2 SWAP1 PUSH2 0x1959 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC4A SWAP2 SWAP1 PUSH2 0x157A JUMP JUMPDEST SWAP4 POP SWAP4 POP POP POP DUP6 DUP3 LT ISZERO PUSH2 0xDAA JUMPI DUP4 DUP3 LT ISZERO PUSH2 0xC9B JUMPI PUSH2 0xC9B PUSH2 0xC73 PUSH1 0x80 DUP10 ADD PUSH1 0x60 DUP11 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x0 PUSH2 0xF59 JUMP JUMPDEST DUP2 DUP7 SUB PUSH2 0xCB0 PUSH2 0x1A0 DUP10 ADD PUSH2 0x180 DUP11 ADD PUSH2 0x13B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xCFC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0xCF1 PUSH1 0x80 DUP11 ADD PUSH1 0x60 DUP12 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0xD8E JUMPI PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0xD4D SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD7B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xD89 CALLER DUP3 PUSH2 0x107B JUMP JUMPDEST PUSH2 0xDA8 JUMP JUMPDEST PUSH2 0xDA8 PUSH2 0xDA1 PUSH1 0x80 DUP11 ADD PUSH1 0x60 DUP12 ADD PUSH2 0x1252 JUMP JUMPDEST CALLER DUP4 PUSH2 0x110D JUMP JUMPDEST POP JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xED5 JUMPI DUP3 DUP2 LT ISZERO PUSH2 0xDCD JUMPI PUSH2 0xDCD PUSH2 0xC73 PUSH1 0xA0 DUP10 ADD PUSH1 0x80 DUP11 ADD PUSH2 0x1252 JUMP JUMPDEST DUP1 DUP6 SUB PUSH2 0xDE2 PUSH2 0x1A0 DUP10 ADD PUSH2 0x180 DUP11 ADD PUSH2 0x13B4 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE2E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0xE23 PUSH1 0xA0 DUP11 ADD PUSH1 0x80 DUP12 ADD PUSH2 0x1252 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST ISZERO PUSH2 0xEC0 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0xE7F SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x1A07 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE99 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xEAD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0xEBB CALLER DUP3 PUSH2 0x107B JUMP JUMPDEST PUSH2 0xED3 JUMP JUMPDEST PUSH2 0xED3 PUSH2 0xDA1 PUSH1 0xA0 DUP11 ADD PUSH1 0x80 DUP12 ADD PUSH2 0x1252 JUMP JUMPDEST POP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD505ACCF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xD505ACCF SWAP1 PUSH2 0x55A SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 DUP11 SWAP1 PUSH1 0x4 ADD PUSH2 0x171A JUMP JUMPDEST PUSH1 0x0 DUP3 ISZERO DUP1 PUSH2 0xF4A JUMPI POP POP DUP2 DUP2 MUL DUP2 DUP4 DUP3 DUP2 PUSH2 0xF47 JUMPI INVALID JUMPDEST DIV EQ JUMPDEST PUSH2 0xF53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0xF81 SWAP3 SWAP2 SWAP1 PUSH2 0x1783 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0xFEC SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x1029 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x102E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x1058 JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x1058 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1058 SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x1074 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP1 PUSH2 0x180F JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 SWAP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP4 SWAP1 PUSH1 0x40 MLOAD PUSH2 0x10A5 SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x10E2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x10E7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x1108 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP1 PUSH2 0x187D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1135 SWAP3 SWAP2 SWAP1 PUSH2 0x1783 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 SWAP1 SWAP5 AND SWAP4 SWAP1 SWAP4 OR SWAP1 SWAP3 MSTORE SWAP1 MLOAD PUSH2 0x11A0 SWAP2 SWAP1 PUSH2 0x1663 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x11DD JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x11E2 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP DUP2 DUP1 ISZERO PUSH2 0x120C JUMPI POP DUP1 MLOAD ISZERO DUP1 PUSH2 0x120C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x120C SWAP2 SWAP1 PUSH2 0x13D0 JUMP JUMPDEST PUSH2 0x1074 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x102 SWAP1 PUSH2 0x18B4 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1263 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1286 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x126E DUP2 PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x12A6 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 CALLDATALOAD PUSH2 0x12B1 DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH2 0x12C1 DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP3 POP PUSH2 0x12CF PUSH1 0x40 DUP7 ADD PUSH2 0x123F JUMP JUMPDEST SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x12DF DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP4 SWAP7 SWAP3 SWAP6 POP SWAP1 SWAP4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1302 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x130D DUP2 PUSH2 0x1A8C JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x132B DUP2 PUSH2 0x1AC1 JUMP JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 PUSH1 0x80 DUP2 ADD CALLDATALOAD SWAP5 PUSH1 0xA0 SWAP1 SWAP2 ADD CALLDATALOAD SWAP4 POP SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1357 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x136E JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1381 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x138F JUMPI DUP5 DUP6 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP1 DUP4 MUL DUP6 ADD ADD GT ISZERO PUSH2 0x13A2 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13C5 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x1AA4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13E1 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x126E DUP2 PUSH2 0x1AA4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13FD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x1AB2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1419 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1430 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 DUP5 ADD SWAP2 POP DUP5 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1443 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x144F JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD DUP4 DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x146D JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x1484 JUMPI DUP5 DUP6 REVERT JUMPDEST PUSH2 0x1495 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x1A5C JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B1 JUMPI DUP1 DUP2 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x14D1 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x14DC DUP2 PUSH2 0x1A8C JUMP JUMPDEST PUSH1 0x20 DUP10 ADD MLOAD SWAP1 SWAP8 POP PUSH2 0x14ED DUP2 PUSH2 0x1AB2 JUMP JUMPDEST SWAP6 POP PUSH2 0x14FB PUSH1 0x40 DUP10 ADD PUSH2 0x1228 JUMP JUMPDEST SWAP5 POP PUSH2 0x1509 PUSH1 0x60 DUP10 ADD PUSH2 0x1228 JUMP JUMPDEST SWAP4 POP PUSH2 0x1517 PUSH1 0x80 DUP10 ADD PUSH2 0x1228 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH2 0x1527 DUP2 PUSH2 0x1AC1 JUMP JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x1538 DUP2 PUSH2 0x1AA4 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1559 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x126E DUP3 PUSH2 0x123F JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1573 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x158F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x15B5 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15DD JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15FF JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x126E DUP2 PUSH2 0x1AC1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x162F DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1A5C JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP3 DUP5 DUP4 CALLDATACOPY SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x1675 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x1A5C JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND DUP2 MSTORE SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP9 DUP10 AND DUP2 MSTORE SWAP7 SWAP1 SWAP8 AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x40 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP6 ADD SWAP3 SWAP1 SWAP3 MSTORE ISZERO ISZERO PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xFF AND PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 DUP9 AND DUP2 MSTORE SWAP6 SWAP1 SWAP7 AND PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xFF AND PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0xE0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 ADD DUP2 DUP5 MSTORE DUP1 DUP6 MLOAD DUP1 DUP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP2 POP PUSH1 0x40 DUP5 DUP3 MUL DUP8 ADD ADD SWAP3 POP DUP4 DUP8 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x17EF JUMPI PUSH1 0x3F NOT DUP9 DUP7 SUB ADD DUP5 MSTORE PUSH2 0x17DD DUP6 DUP4 MLOAD PUSH2 0x1617 JUMP JUMPDEST SWAP5 POP SWAP3 DUP6 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x17C1 JUMP JUMPDEST POP SWAP3 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x126E PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1617 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH32 0x5341000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x50657263656E7461676520746F6F20736D616C6C000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x3 SWAP1 DUP3 ADD MSTORE PUSH32 0x5354450000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2 SWAP1 DUP3 ADD MSTORE PUSH32 0x5354000000000000000000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x9 SWAP1 DUP3 ADD MSTORE PUSH32 0x4E6F742057455448390000000000000000000000000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH32 0x50657263656E7461676520746F6F206C61726765000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x196D DUP3 DUP5 MLOAD PUSH2 0x160A JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x197F PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0x160A JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x1992 PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x164A JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x19A5 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x1643 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x19B8 PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x1643 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH2 0x19F6 DUP3 DUP6 ADD DUP3 PUSH2 0x160A JUMP JUMPDEST POP POP PUSH2 0x140 SWAP3 DUP4 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT PUSH2 0x1A26 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 ADD DUP1 CALLDATALOAD SWAP2 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1A40 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x20 ADD SWAP2 POP CALLDATASIZE DUP2 SWAP1 SUB DUP3 SGT ISZERO PUSH2 0x1A55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1A77 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1A5F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1A86 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0x1AA1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x1AA1 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EQ 0x2A 0xD8 0x27 0x2C SIGNEXTEND 0xC2 0xAE SWAP14 0xE1 SWAP3 PUSH3 0x598781 SWAP14 PUSH15 0xEA2807922835E48C8CA669ED4E86DB PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "74332:3433:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;74814:10;-1:-1:-1;;;;;74828:5:0;74814:19;;74806:41;;;;-1:-1:-1;;;74806:41:0;;;;;;;:::i;:::-;;;;;;;;;74332:3433;;;;;51094:719;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;42311:289;;;;;;:::i;:::-;;:::i;48112:39::-;;;;;;;;;;;;;:::i;42638:348::-;;;;;;:::i;:::-;;:::i;37493:653::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;74477:51::-;;;;;;;;;;;;;:::i;41959:314::-;;;;;;:::i;:::-;;:::i;48020:41::-;;;;;;;;;;;;;:::i;74860:2903::-;;;;;;;;;;-1:-1:-1;74860:2903:0;;;;;:::i;:::-;;:::i;41648:273::-;;;;;;:::i;:::-;;:::i;51094:719::-;51277:12;51318:6;-1:-1:-1;;;;;51309:15:0;:6;-1:-1:-1;;;;;51309:15:0;;51301:24;;;;;;51342:55;;;;;-1:-1:-1;;;;;51360:7:0;51342:34;;;;:55;;51377:6;;51385;;51393:3;;51342:55;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51335:62;-1:-1:-1;;;;;;51412:18:0;;51408:399;;51453:58;;;;;-1:-1:-1;;;;;51471:7:0;51453:37;;;;:58;;51491:6;;51499;;51507:3;;51453:58;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51525:45;;-1:-1:-1;;;51525:45:0;;51446:65;;-1:-1:-1;;;;;;51525:31:0;;;;;:45;;51557:12;;51525:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51408:399;;;51602:28;51661:4;-1:-1:-1;;;;;51646:26:0;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;51601:73;;;;;;;;51692:20;-1:-1:-1;;;;;51692:25:0;51716:1;51692:25;51688:109;;;51737:45;;-1:-1:-1;;;51737:45:0;;-1:-1:-1;;;;;51737:31:0;;;;;:45;;51769:12;;51737:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;51688:109;51408:399;;51094:719;;;;;;:::o;42311:289::-;42503:90;;;;;-1:-1:-1;;;;;42503:33:0;;;;;:90;;42537:10;;42557:4;;42564:5;;42571:6;;42579:4;;42585:1;;42588;;42591;;42503:90;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42311:289;;;;;;:::o;48112:39::-;;;:::o;42638:348::-;42847:50;;-1:-1:-1;;;42847:50:0;;-1:-1:-1;;42900:17:0;-1:-1:-1;;;;;42847:23:0;;;;;:50;;42871:10;;42891:4;;42847:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;42843:136;;;42931:48;42949:5;42956;42963:6;42971:1;42974;42977;42931:17;:48::i;:::-;42638:348;;;;;;:::o;37493:653::-;37568:22;37624:4;37612:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37602:34;;37651:9;37646:494;37666:15;;;37646:494;;;37703:12;;37748:4;37767;;37772:1;37767:7;;;;;;;;;;;;;;;;;;:::i;:::-;37740:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;37702:73;;;;37795:7;37790:306;;37922:2;37906:6;:13;:18;37902:32;;;37926:8;;;37902:32;38005:4;37997:6;37993:17;37983:27;;38063:6;38052:28;;;;;;;;;;;;:::i;:::-;38045:36;;-1:-1:-1;;;38045:36:0;;;;;;;;:::i;37790:306::-;38123:6;38110:7;38118:1;38110:10;;;;;;;;;;;;;;;;;:19;-1:-1:-1;;37683:3:0;;37646:494;;;;37493:653;;;;:::o;74477:51::-;;;:::o;41959:314::-;42163:50;;-1:-1:-1;;;42163:50:0;;42216:5;;-1:-1:-1;;;;;42163:23:0;;;;;:50;;42187:10;;42207:4;;42163:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:58;42159:107;;;42223:43;42234:5;42241;42248:8;42258:1;42261;42264;42223:10;:43::i;48020:41::-;;;:::o;74860:2903::-;74973:1;74944:26;;;;;;;;:::i;:::-;:30;;;74936:63;;;;-1:-1:-1;;;74936:63:0;;;;;;;:::i;:::-;75047:3;75017:26;;;;;;;;:::i;:::-;:33;;;;75009:66;;;;-1:-1:-1;;;75009:66:0;;;;;;;:::i;:::-;75146:11;;;;:6;:11;:::i;:::-;-1:-1:-1;;;;;75131:40:0;;75172:10;75184:11;;;;:6;:11;:::i;:::-;75197:6;:25;;;75131:92;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;75234:17:0;;75289:11;;;;:6;:11;:::i;:::-;-1:-1:-1;;;;;75274:32:0;;75315:4;75274:47;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;75233:88;;-1:-1:-1;75233:88:0;-1:-1:-1;75382:26:0;75455:3;75411:41;75425:26;;;;;;;;:::i;:::-;75411:9;;:41;;:13;:41::i;:::-;:47;;;;;;;-1:-1:-1;75468:26:0;75541:3;75497:41;75511:26;;;;;;;;:::i;75497:41::-;:47;;;;;;;-1:-1:-1;75627:89:0;75654:13;;;;;;;;:::i;:::-;75669:26;75697:18;75627:26;:89::i;:::-;75726;75753:13;;;;;;;;:::i;:::-;75768:26;75796:18;75726:26;:89::i;:::-;75859:17;75878;75939:26;-1:-1:-1;;;;;75911:60:0;;75989:589;;;;;;;;76058:6;:13;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;75989:589:0;;;;;76101:13;;;;;;;;:::i;:::-;-1:-1:-1;;;;;75989:589:0;;;;;76141:10;;;;;;;;:::i;:::-;75989:589;;;;;;76184:16;;;;;;;;:::i;:::-;75989:589;;;;;;76233:16;;;;;;;;:::i;:::-;75989:589;;;;;;;;;;;;;;;;76395:17;;;;75989:589;;;;76446:17;;;;75989:589;;;;;;76496:16;;;;;;;;:::i;:::-;-1:-1:-1;;;;;75989:589:0;;;;;76544:6;:15;;;75989:589;;;75911:681;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;75854:738;;;;;;76676:9;76664;:21;76660:544;;;76717:18;76705:9;:30;76701:141;;;76755:72;76782:13;;;;;;;;:::i;:::-;76797:26;76825:1;76755:26;:72::i;:::-;76874:21;;;76913:18;;;;;;;;:::i;:::-;:44;;;;-1:-1:-1;;;;;;76952:5:0;76935:22;:13;;;;;;;;:::i;:::-;-1:-1:-1;;;;;76935:22:0;;76913:44;76909:285;;;76977:31;;-1:-1:-1;;;76977:31:0;;-1:-1:-1;;;;;76984:5:0;76977:22;;;;:31;;77000:7;;76977:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;77026:51;77057:10;77069:7;77026:30;:51::i;:::-;76909:285;;;77116:63;77144:13;;;;;;;;:::i;:::-;77159:10;77171:7;77116:27;:63::i;:::-;76660:544;;77229:9;77217;:21;77213:544;;;77270:18;77258:9;:30;77254:141;;;77308:72;77335:13;;;;;;;;:::i;77308:72::-;77427:21;;;77466:18;;;;;;;;:::i;:::-;:44;;;;-1:-1:-1;;;;;;77505:5:0;77488:22;:13;;;;;;;;:::i;:::-;-1:-1:-1;;;;;77488:22:0;;77466:44;77462:285;;;77530:31;;-1:-1:-1;;;77530:31:0;;-1:-1:-1;;;;;77537:5:0;77530:22;;;;:31;;77553:7;;77530:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;77579:51;77610:10;77622:7;77579:30;:51::i;:::-;77462:285;;;77669:63;77697:13;;;;;;;;:::i;77669:63::-;77213:544;;74860:2903;;;;;;;:::o;41648:273::-;41835:79;;;;;-1:-1:-1;;;;;41835:26:0;;;;;:79;;41862:10;;41882:4;;41889:5;;41896:8;;41906:1;;41909;;41912;;41835:79;;;:::i;73519:125::-;73577:9;73606:6;;;:30;;-1:-1:-1;;73621:5:0;;;73635:1;73630;73621:5;73630:1;73616:15;;;;;:20;73606:30;73598:39;;;;;;73519:125;;;;:::o;44811:307::-;44924:12;44938:17;44959:5;-1:-1:-1;;;;;44959:10:0;44993:23;;;45018:2;45022:5;44970:58;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;44970:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;44959:70;;;;44970:58;44959:70;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44923:106;;;;45047:7;:57;;;;-1:-1:-1;45059:11:0;;:16;;:44;;;45090:4;45079:24;;;;;;;;;;;;:::i;:::-;45039:72;;;;-1:-1:-1;;;45039:72:0;;;;;;;:::i;:::-;44811:307;;;;;:::o;45308:165::-;45420:12;;;45380;45420;;;;;;;;;-1:-1:-1;;;;;45398:7:0;;;45413:5;;45398:35;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;45379:54;;;45451:7;45443:23;;;;-1:-1:-1;;;45443:23:0;;;;;;;:::i;:::-;45308:165;;;:::o;44149:309::-;44263:12;44277:17;44298:5;-1:-1:-1;;;;;44298:10:0;44332:24;;;44358:2;44362:5;44309:59;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;44309:59:0;;;;;;;;;;;;;;;;;;;;;;;;;;;44298:71;;;;44309:59;44298:71;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44262:107;;;;44387:7;:57;;;;-1:-1:-1;44399:11:0;;:16;;:44;;;44430:4;44419:24;;;;;;;;;;;;:::i;:::-;44379:72;;;;-1:-1:-1;;;44379:72:0;;;;;;;:::i;14:165:1:-;94:13;;147:6;136:18;;126:29;;116:2;;169:1;166;159:12;116:2;75:104;;;:::o;184:163::-;253:20;;313:8;302:20;;292:31;;282:2;;337:1;334;327:12;352:259;;464:2;452:9;443:7;439:23;435:32;432:2;;;485:6;477;470:22;432:2;529:9;516:23;548:33;575:5;548:33;:::i;:::-;600:5;422:189;-1:-1:-1;;;422:189:1:o;616:263::-;;739:2;727:9;718:7;714:23;710:32;707:2;;;760:6;752;745:22;707:2;797:9;791:16;816:33;843:5;816:33;:::i;884:620::-;;;;;1046:3;1034:9;1025:7;1021:23;1017:33;1014:2;;;1068:6;1060;1053:22;1014:2;1112:9;1099:23;1131:33;1158:5;1131:33;:::i;:::-;1183:5;-1:-1:-1;1240:2:1;1225:18;;1212:32;1253:35;1212:32;1253:35;:::i;:::-;1307:7;-1:-1:-1;1333:39:1;1368:2;1353:18;;1333:39;:::i;:::-;1323:49;;1424:2;1413:9;1409:18;1396:32;1437:35;1464:7;1437:35;:::i;:::-;1004:500;;;;-1:-1:-1;1004:500:1;;-1:-1:-1;;1004:500:1:o;1509:673::-;;;;;;;1704:3;1692:9;1683:7;1679:23;1675:33;1672:2;;;1726:6;1718;1711:22;1672:2;1770:9;1757:23;1789:33;1816:5;1789:33;:::i;:::-;1841:5;-1:-1:-1;1893:2:1;1878:18;;1865:32;;-1:-1:-1;1944:2:1;1929:18;;1916:32;;-1:-1:-1;2000:2:1;1985:18;;1972:32;2013:33;1972:32;2013:33;:::i;:::-;1662:520;;;;-1:-1:-1;1662:520:1;;2119:3;2104:19;;2091:33;;2171:3;2156:19;;;2143:33;;-1:-1:-1;1662:520:1;-1:-1:-1;;1662:520:1:o;2187:677::-;;;2345:2;2333:9;2324:7;2320:23;2316:32;2313:2;;;2366:6;2358;2351:22;2313:2;2411:9;2398:23;2440:18;2481:2;2473:6;2470:14;2467:2;;;2502:6;2494;2487:22;2467:2;2545:6;2534:9;2530:22;2520:32;;2590:7;2583:4;2579:2;2575:13;2571:27;2561:2;;2617:6;2609;2602:22;2561:2;2662;2649:16;2688:2;2680:6;2677:14;2674:2;;;2709:6;2701;2694:22;2674:2;2768:7;2763:2;2757;2749:6;2745:15;2741:2;2737:24;2733:33;2730:46;2727:2;;;2794:6;2786;2779:22;2727:2;2830;2822:11;;;;;2852:6;;-1:-1:-1;2303:561:1;;-1:-1:-1;;;;2303:561:1:o;2869:253::-;;2978:2;2966:9;2957:7;2953:23;2949:32;2946:2;;;2999:6;2991;2984:22;2946:2;3043:9;3030:23;3062:30;3086:5;3062:30;:::i;3127:257::-;;3247:2;3235:9;3226:7;3222:23;3218:32;3215:2;;;3268:6;3260;3253:22;3215:2;3305:9;3299:16;3324:30;3348:5;3324:30;:::i;3389:255::-;;3499:2;3487:9;3478:7;3474:23;3470:32;3467:2;;;3520:6;3512;3505:22;3467:2;3564:9;3551:23;3583:31;3608:5;3583:31;:::i;3649:876::-;;3782:2;3770:9;3761:7;3757:23;3753:32;3750:2;;;3803:6;3795;3788:22;3750:2;3841:9;3835:16;3870:18;3911:2;3903:6;3900:14;3897:2;;;3932:6;3924;3917:22;3897:2;3975:6;3964:9;3960:22;3950:32;;4020:7;4013:4;4009:2;4005:13;4001:27;3991:2;;4047:6;4039;4032:22;3991:2;4081;4075:9;4103:2;4099;4096:10;4093:2;;;4109:9;4093:2;4149;4143:9;4218:2;4199:13;;-1:-1:-1;;4195:27:1;4183:40;;4225:2;4179:49;4243:18;;;4263:22;;;4240:46;4237:2;;;4289:9;4237:2;4316;4309:22;4340:18;;;4377:11;;;4390:2;4373:20;4370:33;-1:-1:-1;4367:2:1;;;4421:6;4413;4406:22;4367:2;4439:55;4491:2;4486;4478:6;4474:15;4469:2;4465;4461:11;4439:55;:::i;:::-;4513:6;3740:785;-1:-1:-1;;;;;;3740:785:1:o;4530:210::-;;4675:3;4663:9;4654:7;4650:23;4646:33;4643:2;;;4697:6;4689;4682:22;4643:2;-1:-1:-1;4725:9:1;4633:107;-1:-1:-1;4633:107:1:o;4745:916::-;;;;;;;;4960:3;4948:9;4939:7;4935:23;4931:33;4928:2;;;4982:6;4974;4967:22;4928:2;5019:9;5013:16;5038:33;5065:5;5038:33;:::i;:::-;5140:2;5125:18;;5119:25;5090:5;;-1:-1:-1;5153:33:1;5119:25;5153:33;:::i;:::-;5205:7;-1:-1:-1;5231:50:1;5277:2;5262:18;;5231:50;:::i;:::-;5221:60;;5300:50;5346:2;5335:9;5331:18;5300:50;:::i;:::-;5290:60;;5369:51;5415:3;5404:9;5400:19;5369:51;:::i;:::-;5359:61;;5465:3;5454:9;5450:19;5444:26;5479:33;5504:7;5479:33;:::i;:::-;5583:3;5568:19;;5562:26;5531:7;;-1:-1:-1;5597:32:1;5562:26;5597:32;:::i;:::-;5648:7;5638:17;;;4918:743;;;;;;;;;;:::o;5666:196::-;;5777:2;5765:9;5756:7;5752:23;5748:32;5745:2;;;5798:6;5790;5783:22;5745:2;5826:30;5846:9;5826:30;:::i;5867:194::-;;5990:2;5978:9;5969:7;5965:23;5961:32;5958:2;;;6011:6;6003;5996:22;5958:2;-1:-1:-1;6039:16:1;;5948:113;-1:-1:-1;5948:113:1:o;6066:509::-;;;;;6240:3;6228:9;6219:7;6215:23;6211:33;6208:2;;;6262:6;6254;6247:22;6208:2;6296:9;6290:16;6280:26;;6349:2;6338:9;6334:18;6328:25;6393:34;6386:5;6382:46;6375:5;6372:57;6362:2;;6448:6;6440;6433:22;6362:2;6521;6506:18;;6500:25;6565:2;6550:18;;;6544:25;6198:377;;6476:5;;-1:-1:-1;6198:377:1;-1:-1:-1;;;6198:377:1:o;6580:255::-;;;6720:2;6708:9;6699:7;6695:23;6691:32;6688:2;;;6741:6;6733;6726:22;6688:2;-1:-1:-1;;6769:16:1;;6825:2;6810:18;;;6804:25;6769:16;;6804:25;;-1:-1:-1;6678:157:1:o;6840:255::-;;6950:2;6938:9;6929:7;6925:23;6921:32;6918:2;;;6971:6;6963;6956:22;6918:2;7015:9;7002:23;7034:31;7059:5;7034:31;:::i;7100:129::-;-1:-1:-1;;;;;7168:54:1;7156:67;;7146:83::o;7234:259::-;;7315:5;7309:12;7342:6;7337:3;7330:19;7358:63;7414:6;7407:4;7402:3;7398:14;7391:4;7384:5;7380:16;7358:63;:::i;:::-;7475:2;7454:15;-1:-1:-1;;7450:29:1;7441:39;;;;7482:4;7437:50;;7285:208;-1:-1:-1;;7285:208:1:o;7498:93::-;7575:1;7564:20;7552:33;;7542:49::o;7596:94::-;7674:8;7663:20;7651:33;;7641:49::o;7695:273::-;;7878:6;7870;7865:3;7852:33;7904:16;;7929:15;;;7904:16;7842:126;-1:-1:-1;7842:126:1:o;7973:274::-;;8140:6;8134:13;8156:53;8202:6;8197:3;8190:4;8182:6;8178:17;8156:53;:::i;:::-;8225:16;;;;;8110:137;-1:-1:-1;;8110:137:1:o;8252:226::-;-1:-1:-1;;;;;8416:55:1;;;;8398:74;;8386:2;8371:18;;8353:125::o;8722:335::-;-1:-1:-1;;;;;8983:15:1;;;8965:34;;9035:15;;9030:2;9015:18;;9008:43;8892:2;8877:18;;8859:198::o;9062:406::-;-1:-1:-1;;;;;9351:15:1;;;9333:34;;9403:15;;;;9398:2;9383:18;;9376:43;9450:2;9435:18;;9428:34;;;;9260:2;9245:18;;9227:241::o;9473:783::-;-1:-1:-1;;;;;9893:15:1;;;9875:34;;9945:15;;;;9940:2;9925:18;;9918:43;9992:2;9977:18;;9970:34;;;;10035:2;10020:18;;10013:34;;;;10091:14;10084:22;10078:3;10063:19;;10056:51;10156:4;10144:17;10138:3;10123:19;;10116:46;10193:3;10178:19;;10171:35;10237:3;10222:19;;10215:35;;;;9801:3;9786:19;;9768:488::o;10261:701::-;-1:-1:-1;;;;;10659:15:1;;;10641:34;;10711:15;;;;10706:2;10691:18;;10684:43;10758:2;10743:18;;10736:34;;;;10801:2;10786:18;;10779:34;;;;10862:4;10850:17;10844:3;10829:19;;10822:46;10899:3;10884:19;;10877:35;10943:3;10928:19;;10921:35;;;;10567:3;10552:19;;10534:428::o;10967:411::-;-1:-1:-1;;;;;11246:15:1;;;11228:34;;11298:15;;;;11293:2;11278:18;;11271:43;11362:8;11350:21;;;11345:2;11330:18;;11323:49;11155:2;11140:18;;11122:256::o;11383:297::-;-1:-1:-1;;;;;11575:55:1;;;;11557:74;;11662:2;11647:18;;11640:34;11545:2;11530:18;;11512:168::o;11685:806::-;;11874:2;11914;11903:9;11899:18;11944:2;11933:9;11926:21;11967:6;12002;11996:13;12033:6;12025;12018:22;12071:2;12060:9;12056:18;12049:25;;12134:2;12128;12120:6;12116:15;12105:9;12101:31;12097:40;12083:54;;12172:2;12164:6;12160:15;12193:4;12206:256;12220:6;12217:1;12214:13;12206:256;;;12313:2;12309:7;12297:9;12289:6;12285:22;12281:36;12276:3;12269:49;12341:41;12375:6;12366;12360:13;12341:41;:::i;:::-;12331:51;-1:-1:-1;12440:12:1;;;;12405:15;;;;12242:1;12235:9;12206:256;;;-1:-1:-1;12479:6:1;;11854:637;-1:-1:-1;;;;;;;11854:637:1:o;12496:221::-;;12645:2;12634:9;12627:21;12665:46;12707:2;12696:9;12692:18;12684:6;12665:46;:::i;12722:325::-;12924:2;12906:21;;;12963:1;12943:18;;;12936:29;13001:4;12996:2;12981:18;;12974:32;13038:2;13023:18;;12896:151::o;13052:344::-;13254:2;13236:21;;;13293:2;13273:18;;;13266:30;13332:22;13327:2;13312:18;;13305:50;13387:2;13372:18;;13226:170::o;13401:326::-;13603:2;13585:21;;;13642:1;13622:18;;;13615:29;13680:5;13675:2;13660:18;;13653:33;13718:2;13703:18;;13575:152::o;13732:325::-;13934:2;13916:21;;;13973:1;13953:18;;;13946:29;14011:4;14006:2;13991:18;;13984:32;14048:2;14033:18;;13906:151::o;14062:332::-;14264:2;14246:21;;;14303:1;14283:18;;;14276:29;14341:11;14336:2;14321:18;;14314:39;14385:2;14370:18;;14236:158::o;14399:344::-;14601:2;14583:21;;;14640:2;14620:18;;;14613:30;14679:22;14674:2;14659:18;;14652:50;14734:2;14719:18;;14573:170::o;14748:1234::-;;14938:3;14927:9;14923:19;14915:27;;14951:46;14987:9;14978:6;14972:13;14951:46;:::i;:::-;15044:4;15036:6;15032:17;15026:24;15059:56;15109:4;15098:9;15094:20;15080:12;15059:56;:::i;:::-;;15164:4;15156:6;15152:17;15146:24;15179:57;15230:4;15219:9;15215:20;15199:14;15179:57;:::i;:::-;;15285:4;15277:6;15273:17;15267:24;15300:56;15350:4;15339:9;15335:20;15319:14;15300:56;:::i;:::-;;15405:4;15397:6;15393:17;15387:24;15420:56;15470:4;15459:9;15455:20;15439:14;15420:56;:::i;:::-;;15532:4;15524:6;15520:17;15514:24;15507:4;15496:9;15492:20;15485:54;15595:4;15587:6;15583:17;15577:24;15570:4;15559:9;15555:20;15548:54;15658:4;15650:6;15646:17;15640:24;15633:4;15622:9;15618:20;15611:54;15684:6;15744:2;15736:6;15732:15;15726:22;15721:2;15710:9;15706:18;15699:50;;15768:6;15823:2;15815:6;15811:15;15805:22;15836:56;15888:2;15877:9;15873:18;15857:14;15836:56;:::i;:::-;-1:-1:-1;;15911:6:1;15959:15;;;15953:22;15933:18;;;;15926:50;14905:1077;:::o;16218:177::-;16364:25;;;16352:2;16337:18;;16319:76::o;16400:533::-;;;16543:11;16530:25;16637:2;16633:7;16622:8;16606:14;16602:29;16598:43;16578:18;16574:68;16564:2;;16659:4;16653;16646:18;16564:2;16689:33;;16741:20;;;-1:-1:-1;16784:18:1;16773:30;;16770:2;;;16819:4;16813;16806:18;16770:2;16855:4;16843:17;;-1:-1:-1;16886:14:1;16882:27;;;16872:38;;16869:2;;;16923:1;16920;16913:12;16869:2;16494:439;;;;;:::o;16938:258::-;17010:1;17020:113;17034:6;17031:1;17028:13;17020:113;;;17110:11;;;17104:18;17091:11;;;17084:39;17056:2;17049:10;17020:113;;;17151:6;17148:1;17145:13;17142:2;;;17186:1;17177:6;17172:3;17168:16;17161:27;17142:2;;16991:205;;;:::o;17201:156::-;-1:-1:-1;;;;;17282:5:1;17278:54;17271:5;17268:65;17258:2;;17347:1;17344;17337:12;17258:2;17248:109;:::o;17362:120::-;17450:5;17443:13;17436:21;17429:5;17426:32;17416:2;;17472:1;17469;17462:12;17487:120;17576:5;17573:1;17562:20;17555:5;17552:31;17542:2;;17597:1;17594;17587:12;17612:116;17698:4;17691:5;17687:16;17680:5;17677:27;17667:2;;17718:1;17715;17708:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1383600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH9()": "infinite",
								"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "infinite",
								"factory()": "infinite",
								"migrate((address,uint256,uint8,address,address,uint24,int24,int24,uint256,uint256,address,uint256,bool))": "infinite",
								"multicall(bytes[])": "infinite",
								"nonfungiblePositionManager()": "infinite",
								"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 74535,
									"end": 74763,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 48214,
									"end": 48232,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 48214,
									"end": 48232,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 48214,
									"end": 48232,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 48214,
									"end": 48232,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 48214,
									"end": 48232,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 48214,
									"end": 48232,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 48214,
									"end": 48232,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 48214,
									"end": 48232,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 48242,
									"end": 48256,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 48242,
									"end": 48256,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 48242,
									"end": 48256,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 48242,
									"end": 48256,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 48242,
									"end": 48256,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 48242,
									"end": 48256,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 48242,
									"end": 48256,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 74700,
									"end": 74756,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 74700,
									"end": 74756,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 74700,
									"end": 74756,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 74700,
									"end": 74756,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 74700,
									"end": 74756,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 74700,
									"end": 74756,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 193,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 193,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 95,
									"end": 108,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 95,
									"end": 108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 137,
									"end": 168,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 137,
									"end": 168,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 127,
									"end": 169,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 127,
									"end": 169,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 117,
									"end": 119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 183,
									"end": 184,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 181,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 173,
									"end": 185,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 117,
									"end": 119,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 198,
									"end": 592,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 198,
									"end": 592,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 198,
									"end": 592,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 592,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 198,
									"end": 592,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 355,
									"end": 357,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 343,
									"end": 352,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 334,
									"end": 341,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 330,
									"end": 353,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 326,
									"end": 358,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 323,
									"end": 325,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 323,
									"end": 325,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 323,
									"end": 325,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 376,
									"end": 382,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 368,
									"end": 374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 361,
									"end": 383,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 323,
									"end": 325,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 323,
									"end": 325,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 404,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 436,
									"end": 445,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 404,
									"end": 446,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 404,
									"end": 446,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 404,
									"end": 446,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 404,
									"end": 446,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 394,
									"end": 446,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 394,
									"end": 446,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 465,
									"end": 516,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 512,
									"end": 514,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 501,
									"end": 510,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 497,
									"end": 515,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 465,
									"end": 516,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 465,
									"end": 516,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 465,
									"end": 516,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 465,
									"end": 516,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 455,
									"end": 516,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 455,
									"end": 516,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 535,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 582,
									"end": 584,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 571,
									"end": 580,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 567,
									"end": 585,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 535,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 535,
									"end": 586,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 535,
									"end": 586,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 535,
									"end": 586,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 525,
									"end": 586,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 525,
									"end": 586,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 313,
									"end": 592,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 313,
									"end": 592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 313,
									"end": 592,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 313,
									"end": 592,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 313,
									"end": 592,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 313,
									"end": 592,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 313,
									"end": 592,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 313,
									"end": 592,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "2246"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1273"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "1269"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 74332,
									"end": 77765,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220142ad8272c0bc2ae9de192625987819d6eea2807922835e48c8ca669ed4e86db64736f6c63430007060033",
									".code": [
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "B44A2722"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "C45A0155"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "C45A0155"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "D44F2BF2"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "F3995C67"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "B44A2722"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "C2E3140A"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "4AA4A4FC"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "4AA4A4FC"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "A4A78F0C"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "AC9650D8"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "13EAD562"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "4659A494"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74814,
											"end": 74824,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 74828,
											"end": 74833,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1273"
										},
										{
											"begin": 74814,
											"end": 74833,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74814,
											"end": 74833,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 74806,
											"end": 74847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74332,
											"end": 77765,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51277,
											"end": 51289,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51318,
											"end": 51324,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51309,
											"end": 51324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51309,
											"end": 51315,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51309,
											"end": 51324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51309,
											"end": 51324,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51301,
											"end": 51325,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 51301,
											"end": 51325,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51301,
											"end": 51325,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51301,
											"end": 51325,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51301,
											"end": 51325,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51301,
											"end": 51325,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 51301,
											"end": 51325,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH",
											"source": 0,
											"value": "1698EE8200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51360,
											"end": 51367,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1269"
										},
										{
											"begin": 51342,
											"end": 51376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51376,
											"name": "PUSH",
											"source": 0,
											"value": "1698EE82"
										},
										{
											"begin": 51342,
											"end": 51376,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51377,
											"end": 51383,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 51377,
											"end": 51383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51385,
											"end": 51391,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 51385,
											"end": 51391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51393,
											"end": 51396,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 51393,
											"end": 51396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 51342,
											"end": 51397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51335,
											"end": 51397,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51412,
											"end": 51430,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51412,
											"end": 51430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51408,
											"end": 51807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 51408,
											"end": 51807,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH",
											"source": 0,
											"value": "A167129500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51471,
											"end": 51478,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1269"
										},
										{
											"begin": 51453,
											"end": 51490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51490,
											"name": "PUSH",
											"source": 0,
											"value": "A1671295"
										},
										{
											"begin": 51453,
											"end": 51490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51491,
											"end": 51497,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 51491,
											"end": 51497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51499,
											"end": 51505,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 51499,
											"end": 51505,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51507,
											"end": 51510,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 51507,
											"end": 51510,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 51453,
											"end": 51511,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F637731D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51446,
											"end": 51511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51446,
											"end": 51511,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51525,
											"end": 51556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51556,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51556,
											"name": "PUSH",
											"source": 0,
											"value": "F637731D"
										},
										{
											"begin": 51525,
											"end": 51556,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51557,
											"end": 51569,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 51557,
											"end": 51569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51525,
											"end": 51570,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51408,
											"end": 51807,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 51408,
											"end": 51807,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51408,
											"end": 51807,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 51408,
											"end": 51807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51602,
											"end": 51630,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51661,
											"end": 51665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51646,
											"end": 51672,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51672,
											"name": "PUSH",
											"source": 0,
											"value": "3850C7BD"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 51646,
											"end": 51674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51601,
											"end": 51674,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51692,
											"end": 51712,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51692,
											"end": 51717,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51716,
											"end": 51717,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51692,
											"end": 51717,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 51688,
											"end": 51797,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51688,
											"end": 51797,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 51688,
											"end": 51797,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F637731D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51737,
											"end": 51768,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51768,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51768,
											"name": "PUSH",
											"source": 0,
											"value": "F637731D"
										},
										{
											"begin": 51737,
											"end": 51768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51769,
											"end": 51781,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51769,
											"end": 51781,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51737,
											"end": 51782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51688,
											"end": 51797,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 51688,
											"end": 51797,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51408,
											"end": 51807,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51408,
											"end": 51807,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 51408,
											"end": 51807,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51094,
											"end": 51813,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "PUSH",
											"source": 0,
											"value": "8FCBAF0C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42503,
											"end": 42536,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42536,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42536,
											"name": "PUSH",
											"source": 0,
											"value": "8FCBAF0C"
										},
										{
											"begin": 42503,
											"end": 42536,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42537,
											"end": 42547,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42537,
											"end": 42547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42557,
											"end": 42561,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 42557,
											"end": 42561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42564,
											"end": 42569,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 42564,
											"end": 42569,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42571,
											"end": 42577,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 42571,
											"end": 42577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42579,
											"end": 42583,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42579,
											"end": 42583,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42585,
											"end": 42586,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 42585,
											"end": 42586,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42588,
											"end": 42589,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 42588,
											"end": 42589,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42591,
											"end": 42592,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 42591,
											"end": 42592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42503,
											"end": 42593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42311,
											"end": 42600,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1273"
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48112,
											"end": 48151,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 42900,
											"end": 42917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42847,
											"end": 42870,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42870,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42870,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 42847,
											"end": 42870,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42871,
											"end": 42881,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42871,
											"end": 42881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42891,
											"end": 42895,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 42891,
											"end": 42895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 42847,
											"end": 42897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42847,
											"end": 42917,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42843,
											"end": 42979,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42843,
											"end": 42979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 42843,
											"end": 42979,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42931,
											"end": 42979,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 42949,
											"end": 42954,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42956,
											"end": 42961,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42963,
											"end": 42969,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42971,
											"end": 42972,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42974,
											"end": 42975,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42977,
											"end": 42978,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42931,
											"end": 42948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 42931,
											"end": 42979,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42931,
											"end": 42979,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 42931,
											"end": 42979,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42638,
											"end": 42986,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37568,
											"end": 37590,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37624,
											"end": 37628,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37612,
											"end": 37636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37602,
											"end": 37636,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37602,
											"end": 37636,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37651,
											"end": 37660,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37646,
											"end": 38140,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 37646,
											"end": 38140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37666,
											"end": 37681,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37666,
											"end": 37681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37666,
											"end": 37681,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37646,
											"end": 38140,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37646,
											"end": 38140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 37646,
											"end": 38140,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37703,
											"end": 37715,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37703,
											"end": 37715,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37748,
											"end": 37752,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37771,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37771,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37772,
											"end": 37773,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 37767,
											"end": 37774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "DELEGATECALL",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37740,
											"end": 37775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37702,
											"end": 37775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37702,
											"end": 37775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37702,
											"end": 37775,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37702,
											"end": 37775,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37795,
											"end": 37802,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37790,
											"end": 38096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 37790,
											"end": 38096,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37922,
											"end": 37924,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 37906,
											"end": 37912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37906,
											"end": 37919,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37906,
											"end": 37924,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 37902,
											"end": 37934,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37902,
											"end": 37934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 37902,
											"end": 37934,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37926,
											"end": 37934,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37926,
											"end": 37934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37926,
											"end": 37934,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 37902,
											"end": 37934,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 37902,
											"end": 37934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38005,
											"end": 38009,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37997,
											"end": 38003,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37993,
											"end": 38010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37983,
											"end": 38010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 38063,
											"end": 38069,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 38052,
											"end": 38080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38045,
											"end": 38081,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 38045,
											"end": 38081,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 38045,
											"end": 38081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38045,
											"end": 38081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 38045,
											"end": 38081,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 38045,
											"end": 38081,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38045,
											"end": 38081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 38045,
											"end": 38081,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38045,
											"end": 38081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38045,
											"end": 38081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 38045,
											"end": 38081,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 37790,
											"end": 38096,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 37790,
											"end": 38096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38123,
											"end": 38129,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38117,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38118,
											"end": 38119,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38120,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 38110,
											"end": 38129,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 37683,
											"end": 37686,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37683,
											"end": 37686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 37646,
											"end": 38140,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 37646,
											"end": 38140,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37646,
											"end": 38140,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 37646,
											"end": 38140,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37646,
											"end": 38140,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37493,
											"end": 38146,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2246"
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74477,
											"end": 74528,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 41959,
											"end": 42273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6EB1769F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42216,
											"end": 42221,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 42216,
											"end": 42221,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42163,
											"end": 42186,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42186,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 42163,
											"end": 42186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42187,
											"end": 42197,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42187,
											"end": 42197,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42207,
											"end": 42211,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 42207,
											"end": 42211,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 42163,
											"end": 42213,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42163,
											"end": 42221,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42159,
											"end": 42266,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42159,
											"end": 42266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 42159,
											"end": 42266,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42223,
											"end": 42266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 42234,
											"end": 42239,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42241,
											"end": 42246,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42248,
											"end": 42256,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42258,
											"end": 42259,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42261,
											"end": 42262,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42264,
											"end": 42265,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42223,
											"end": 42233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 42223,
											"end": 42266,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1269"
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 48020,
											"end": 48061,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74973,
											"end": 74974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74944,
											"end": 74970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 74944,
											"end": 74970,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 74944,
											"end": 74970,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74944,
											"end": 74970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74944,
											"end": 74970,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74944,
											"end": 74970,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 74944,
											"end": 74970,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74944,
											"end": 74970,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 74944,
											"end": 74970,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 74944,
											"end": 74970,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 74944,
											"end": 74970,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74944,
											"end": 74974,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 74944,
											"end": 74974,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74944,
											"end": 74974,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 74936,
											"end": 74999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75047,
											"end": 75050,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 75017,
											"end": 75043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 75017,
											"end": 75043,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 75017,
											"end": 75043,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75017,
											"end": 75043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75017,
											"end": 75043,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75017,
											"end": 75043,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75017,
											"end": 75043,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75017,
											"end": 75043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 75017,
											"end": 75043,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75017,
											"end": 75043,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 75017,
											"end": 75043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75017,
											"end": 75050,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 75017,
											"end": 75050,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75017,
											"end": 75050,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 75017,
											"end": 75050,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 75009,
											"end": 75075,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75146,
											"end": 75157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 75146,
											"end": 75157,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75146,
											"end": 75157,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75146,
											"end": 75157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75146,
											"end": 75152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75146,
											"end": 75157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 75146,
											"end": 75157,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75146,
											"end": 75157,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 75146,
											"end": 75157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 75131,
											"end": 75171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75171,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 75172,
											"end": 75182,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 75184,
											"end": 75195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 75184,
											"end": 75195,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75184,
											"end": 75195,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 75184,
											"end": 75195,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75184,
											"end": 75190,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 75184,
											"end": 75195,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 75184,
											"end": 75195,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75184,
											"end": 75195,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 75184,
											"end": 75195,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75197,
											"end": 75203,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75197,
											"end": 75222,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75197,
											"end": 75222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75197,
											"end": 75222,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 75131,
											"end": 75223,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 75234,
											"end": 75251,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75234,
											"end": 75251,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75289,
											"end": 75300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 75289,
											"end": 75300,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75289,
											"end": 75300,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75289,
											"end": 75300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75289,
											"end": 75295,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75289,
											"end": 75300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 75289,
											"end": 75300,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75289,
											"end": 75300,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 75289,
											"end": 75300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 75274,
											"end": 75306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75306,
											"name": "PUSH",
											"source": 0,
											"value": "89AFCB44"
										},
										{
											"begin": 75315,
											"end": 75319,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 75274,
											"end": 75321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75233,
											"end": 75321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75233,
											"end": 75321,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 75233,
											"end": 75321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 75382,
											"end": 75408,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75455,
											"end": 75458,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 75411,
											"end": 75452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 75425,
											"end": 75451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 75425,
											"end": 75451,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 75425,
											"end": 75451,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 75425,
											"end": 75451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75425,
											"end": 75451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75425,
											"end": 75451,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 75425,
											"end": 75451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75425,
											"end": 75451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 75425,
											"end": 75451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75425,
											"end": 75451,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 75425,
											"end": 75451,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75411,
											"end": 75420,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 75411,
											"end": 75420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75411,
											"end": 75452,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 75411,
											"end": 75452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75411,
											"end": 75424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 75411,
											"end": 75452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75411,
											"end": 75452,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 75411,
											"end": 75452,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75411,
											"end": 75458,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75411,
											"end": 75458,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 75411,
											"end": 75458,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75411,
											"end": 75458,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 75411,
											"end": 75458,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 75411,
											"end": 75458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75411,
											"end": 75458,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 75411,
											"end": 75458,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 75468,
											"end": 75494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75541,
											"end": 75544,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 75497,
											"end": 75538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 75511,
											"end": 75537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 75511,
											"end": 75537,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 75511,
											"end": 75537,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 75511,
											"end": 75537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75511,
											"end": 75537,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75511,
											"end": 75537,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 75511,
											"end": 75537,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75511,
											"end": 75537,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 75511,
											"end": 75537,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75497,
											"end": 75538,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 75497,
											"end": 75538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75497,
											"end": 75544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75497,
											"end": 75544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 75497,
											"end": 75544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75497,
											"end": 75544,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 75497,
											"end": 75544,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 75497,
											"end": 75544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75497,
											"end": 75544,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 75497,
											"end": 75544,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 75627,
											"end": 75716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 75654,
											"end": 75667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 75654,
											"end": 75667,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 75654,
											"end": 75667,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 75654,
											"end": 75667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75654,
											"end": 75667,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 75654,
											"end": 75667,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 75654,
											"end": 75667,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75654,
											"end": 75667,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 75654,
											"end": 75667,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75654,
											"end": 75667,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 75654,
											"end": 75667,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75669,
											"end": 75695,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2246"
										},
										{
											"begin": 75697,
											"end": 75715,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75627,
											"end": 75653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 75627,
											"end": 75716,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75627,
											"end": 75716,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 75627,
											"end": 75716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75726,
											"end": 75815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 75753,
											"end": 75766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 75753,
											"end": 75766,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 75753,
											"end": 75766,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 75753,
											"end": 75766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75753,
											"end": 75766,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 75753,
											"end": 75766,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 75753,
											"end": 75766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75753,
											"end": 75766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 75753,
											"end": 75766,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75753,
											"end": 75766,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 75753,
											"end": 75766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75768,
											"end": 75794,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2246"
										},
										{
											"begin": 75796,
											"end": 75814,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75726,
											"end": 75752,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 75726,
											"end": 75815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75726,
											"end": 75815,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 75726,
											"end": 75815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75859,
											"end": 75876,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75878,
											"end": 75895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75939,
											"end": 75965,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2246"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 75911,
											"end": 75971,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 75971,
											"name": "PUSH",
											"source": 0,
											"value": "88316456"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76058,
											"end": 76064,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 76058,
											"end": 76071,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 76058,
											"end": 76071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76058,
											"end": 76071,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76058,
											"end": 76071,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76058,
											"end": 76071,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76058,
											"end": 76071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76058,
											"end": 76071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 76058,
											"end": 76071,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76058,
											"end": 76071,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76058,
											"end": 76071,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 76058,
											"end": 76071,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 76058,
											"end": 76071,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 76058,
											"end": 76071,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76101,
											"end": 76114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 76101,
											"end": 76114,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 76101,
											"end": 76114,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 76101,
											"end": 76114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76101,
											"end": 76114,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 76101,
											"end": 76114,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 76101,
											"end": 76114,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76101,
											"end": 76114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 76101,
											"end": 76114,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 76101,
											"end": 76114,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 76101,
											"end": 76114,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76141,
											"end": 76151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 76141,
											"end": 76151,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 76141,
											"end": 76151,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 76141,
											"end": 76151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76141,
											"end": 76151,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 76141,
											"end": 76151,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 76141,
											"end": 76151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76141,
											"end": 76151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 76141,
											"end": 76151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 76141,
											"end": 76151,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 76141,
											"end": 76151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76184,
											"end": 76200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 76184,
											"end": 76200,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 76184,
											"end": 76200,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 76184,
											"end": 76200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76184,
											"end": 76200,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 76184,
											"end": 76200,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 76184,
											"end": 76200,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76184,
											"end": 76200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 76184,
											"end": 76200,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 76184,
											"end": 76200,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 76184,
											"end": 76200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76233,
											"end": 76249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 76233,
											"end": 76249,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 76233,
											"end": 76249,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 76233,
											"end": 76249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76233,
											"end": 76249,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 76233,
											"end": 76249,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 76233,
											"end": 76249,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76233,
											"end": 76249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 76233,
											"end": 76249,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 76233,
											"end": 76249,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 76233,
											"end": 76249,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76395,
											"end": 76412,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 76395,
											"end": 76412,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 76395,
											"end": 76412,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76395,
											"end": 76412,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76446,
											"end": 76463,
											"name": "PUSH",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 76446,
											"end": 76463,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 76446,
											"end": 76463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76446,
											"end": 76463,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76496,
											"end": 76512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 76496,
											"end": 76512,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 76496,
											"end": 76512,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 76496,
											"end": 76512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76496,
											"end": 76512,
											"name": "PUSH",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 76496,
											"end": 76512,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 76496,
											"end": 76512,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76496,
											"end": 76512,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 76496,
											"end": 76512,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 76496,
											"end": 76512,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 76496,
											"end": 76512,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76544,
											"end": 76550,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 76544,
											"end": 76559,
											"name": "PUSH",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 76544,
											"end": 76559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76544,
											"end": 76559,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75989,
											"end": 76578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 75911,
											"end": 76592,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75854,
											"end": 76592,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 75854,
											"end": 76592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75854,
											"end": 76592,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 75854,
											"end": 76592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75854,
											"end": 76592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75854,
											"end": 76592,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76676,
											"end": 76685,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 76664,
											"end": 76673,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76664,
											"end": 76685,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 76660,
											"end": 77204,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76660,
											"end": 77204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 76660,
											"end": 77204,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76717,
											"end": 76735,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76705,
											"end": 76714,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76705,
											"end": 76735,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 76701,
											"end": 76842,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76701,
											"end": 76842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 76701,
											"end": 76842,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76755,
											"end": 76827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 76782,
											"end": 76795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 76782,
											"end": 76795,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 76782,
											"end": 76795,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 76782,
											"end": 76795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76782,
											"end": 76795,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 76782,
											"end": 76795,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 76782,
											"end": 76795,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76782,
											"end": 76795,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 76782,
											"end": 76795,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 76782,
											"end": 76795,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 76782,
											"end": 76795,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76797,
											"end": 76823,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "2246"
										},
										{
											"begin": 76825,
											"end": 76826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76755,
											"end": 76781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 76755,
											"end": 76827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 76755,
											"end": 76827,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 76755,
											"end": 76827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76874,
											"end": 76895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76874,
											"end": 76895,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 76874,
											"end": 76895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76913,
											"end": 76931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 76913,
											"end": 76931,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 76913,
											"end": 76931,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 76913,
											"end": 76931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76913,
											"end": 76931,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 76913,
											"end": 76931,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 76913,
											"end": 76931,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76913,
											"end": 76931,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 76913,
											"end": 76931,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 76913,
											"end": 76931,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 76913,
											"end": 76931,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76913,
											"end": 76957,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76913,
											"end": 76957,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76913,
											"end": 76957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 76913,
											"end": 76957,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 76952,
											"end": 76957,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1273"
										},
										{
											"begin": 76935,
											"end": 76957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76935,
											"end": 76948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 76935,
											"end": 76948,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 76935,
											"end": 76948,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 76935,
											"end": 76948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76935,
											"end": 76948,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 76935,
											"end": 76948,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 76935,
											"end": 76948,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76935,
											"end": 76948,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 76935,
											"end": 76948,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 76935,
											"end": 76948,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 76935,
											"end": 76948,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 76935,
											"end": 76957,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76935,
											"end": 76957,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 76913,
											"end": 76957,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 76913,
											"end": 76957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76909,
											"end": 77194,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76909,
											"end": 77194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 76909,
											"end": 77194,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E1A7D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 76984,
											"end": 76989,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1273"
										},
										{
											"begin": 76977,
											"end": 76999,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 76999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 76999,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 76977,
											"end": 76999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77000,
											"end": 77007,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 77000,
											"end": 77007,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76977,
											"end": 77008,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77026,
											"end": 77077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 77057,
											"end": 77067,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77026,
											"end": 77056,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 77026,
											"end": 77077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 77026,
											"end": 77077,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 77026,
											"end": 77077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76909,
											"end": 77194,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 76909,
											"end": 77194,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76909,
											"end": 77194,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 76909,
											"end": 77194,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77116,
											"end": 77179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 77144,
											"end": 77157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 77144,
											"end": 77157,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 77144,
											"end": 77157,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 77144,
											"end": 77157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77144,
											"end": 77157,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 77144,
											"end": 77157,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 77144,
											"end": 77157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77144,
											"end": 77157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 77144,
											"end": 77157,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 77144,
											"end": 77157,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 77144,
											"end": 77157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77159,
											"end": 77169,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 77171,
											"end": 77178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 77116,
											"end": 77143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 77116,
											"end": 77179,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 77116,
											"end": 77179,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 77116,
											"end": 77179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76660,
											"end": 77204,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76660,
											"end": 77204,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 76660,
											"end": 77204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77229,
											"end": 77238,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 77217,
											"end": 77226,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77217,
											"end": 77238,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 77213,
											"end": 77757,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77213,
											"end": 77757,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 77213,
											"end": 77757,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77270,
											"end": 77288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77258,
											"end": 77267,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77258,
											"end": 77288,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 77254,
											"end": 77395,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77254,
											"end": 77395,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 77254,
											"end": 77395,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77308,
											"end": 77380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 77335,
											"end": 77348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 77335,
											"end": 77348,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 77335,
											"end": 77348,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 77335,
											"end": 77348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77335,
											"end": 77348,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 77335,
											"end": 77348,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 77335,
											"end": 77348,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77335,
											"end": 77348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 77335,
											"end": 77348,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 77308,
											"end": 77380,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 77308,
											"end": 77380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77427,
											"end": 77448,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77427,
											"end": 77448,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 77427,
											"end": 77448,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 77466,
											"end": 77484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 77466,
											"end": 77484,
											"name": "PUSH",
											"source": 0,
											"value": "1A0"
										},
										{
											"begin": 77466,
											"end": 77484,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 77466,
											"end": 77484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77466,
											"end": 77484,
											"name": "PUSH",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 77466,
											"end": 77484,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 77466,
											"end": 77484,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77466,
											"end": 77484,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 77466,
											"end": 77484,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 77466,
											"end": 77484,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 77466,
											"end": 77484,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77466,
											"end": 77510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77466,
											"end": 77510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77466,
											"end": 77510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 77466,
											"end": 77510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 77505,
											"end": 77510,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1273"
										},
										{
											"begin": 77488,
											"end": 77510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77488,
											"end": 77501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 77488,
											"end": 77501,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 77488,
											"end": 77501,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 77488,
											"end": 77501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77488,
											"end": 77501,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 77488,
											"end": 77501,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 77488,
											"end": 77501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77488,
											"end": 77501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 77488,
											"end": 77501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 77488,
											"end": 77501,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 77488,
											"end": 77501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 77488,
											"end": 77510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77488,
											"end": 77510,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 77466,
											"end": 77510,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 77466,
											"end": 77510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77462,
											"end": 77747,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77462,
											"end": 77747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 77462,
											"end": 77747,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2E1A7D4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 77537,
											"end": 77542,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "1273"
										},
										{
											"begin": 77530,
											"end": 77552,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77552,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 77530,
											"end": 77552,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77553,
											"end": 77560,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 77553,
											"end": 77560,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "tag",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77530,
											"end": 77561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77579,
											"end": 77630,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 77610,
											"end": 77620,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 77622,
											"end": 77629,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77579,
											"end": 77609,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 77579,
											"end": 77630,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 77579,
											"end": 77630,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 77579,
											"end": 77630,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77462,
											"end": 77747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 77462,
											"end": 77747,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77462,
											"end": 77747,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 77462,
											"end": 77747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77669,
											"end": 77732,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 77697,
											"end": 77710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 77697,
											"end": 77710,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 77697,
											"end": 77710,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 77697,
											"end": 77710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77697,
											"end": 77710,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 77697,
											"end": 77710,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 77697,
											"end": 77710,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77697,
											"end": 77710,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 77697,
											"end": 77710,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 77669,
											"end": 77732,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 77669,
											"end": 77732,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77213,
											"end": 77757,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77213,
											"end": 77757,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 77213,
											"end": 77757,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74860,
											"end": 77763,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 41648,
											"end": 41921,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41835,
											"end": 41914,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41914,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 41835,
											"end": 41914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41835,
											"end": 41861,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41861,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41861,
											"name": "PUSH",
											"source": 0,
											"value": "D505ACCF"
										},
										{
											"begin": 41835,
											"end": 41861,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 41835,
											"end": 41914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41862,
											"end": 41872,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 41862,
											"end": 41872,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41882,
											"end": 41886,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 41882,
											"end": 41886,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41889,
											"end": 41894,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 41889,
											"end": 41894,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41896,
											"end": 41904,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 41896,
											"end": 41904,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41906,
											"end": 41907,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 41906,
											"end": 41907,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41909,
											"end": 41910,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 41909,
											"end": 41910,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41912,
											"end": 41913,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 41912,
											"end": 41913,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41835,
											"end": 41914,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41835,
											"end": 41914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 41835,
											"end": 41914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 73519,
											"end": 73644,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 73519,
											"end": 73644,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73577,
											"end": 73586,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73606,
											"end": 73612,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73612,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73612,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 73606,
											"end": 73636,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 73621,
											"end": 73626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73621,
											"end": 73626,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73621,
											"end": 73626,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 73635,
											"end": 73636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73630,
											"end": 73631,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 73621,
											"end": 73626,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 73630,
											"end": 73631,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73616,
											"end": 73631,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 73616,
											"end": 73631,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73616,
											"end": 73631,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 73616,
											"end": 73631,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 73616,
											"end": 73631,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73616,
											"end": 73631,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 73616,
											"end": 73636,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73636,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 73606,
											"end": 73636,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73598,
											"end": 73637,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 73598,
											"end": 73637,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73598,
											"end": 73637,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73598,
											"end": 73637,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73598,
											"end": 73637,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 73598,
											"end": 73637,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 73598,
											"end": 73637,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73519,
											"end": 73644,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 73519,
											"end": 73644,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73519,
											"end": 73644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73519,
											"end": 73644,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73519,
											"end": 73644,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 44811,
											"end": 45118,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 44811,
											"end": 45118,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44924,
											"end": 44936,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44938,
											"end": 44955,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 44964,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44959,
											"end": 44969,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44993,
											"end": 45016,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 44993,
											"end": 45016,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 44993,
											"end": 45016,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 45018,
											"end": 45020,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 45022,
											"end": 45027,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 45028,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44959,
											"end": 45029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44923,
											"end": 45029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44923,
											"end": 45029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44923,
											"end": 45029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44923,
											"end": 45029,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45047,
											"end": 45054,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45047,
											"end": 45104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45047,
											"end": 45104,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45047,
											"end": 45104,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 45047,
											"end": 45104,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45059,
											"end": 45070,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45059,
											"end": 45070,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45059,
											"end": 45075,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45059,
											"end": 45075,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45059,
											"end": 45103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 45059,
											"end": 45103,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45059,
											"end": 45103,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45090,
											"end": 45094,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "tag",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 45079,
											"end": 45103,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 45039,
											"end": 45111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 45118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 45118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 45118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 45118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 45118,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44811,
											"end": 45118,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 45308,
											"end": 45473,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 45308,
											"end": 45473,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45420,
											"end": 45432,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45420,
											"end": 45432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45420,
											"end": 45432,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45380,
											"end": 45392,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45420,
											"end": 45432,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45420,
											"end": 45432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45420,
											"end": 45432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45420,
											"end": 45432,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45420,
											"end": 45432,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45420,
											"end": 45432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45420,
											"end": 45432,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45420,
											"end": 45432,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45420,
											"end": 45432,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 45398,
											"end": 45405,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45405,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45405,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45413,
											"end": 45418,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45413,
											"end": 45418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45398,
											"end": 45433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45379,
											"end": 45433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45379,
											"end": 45433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45379,
											"end": 45433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45451,
											"end": 45458,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 45443,
											"end": 45466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45308,
											"end": 45473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45308,
											"end": 45473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45308,
											"end": 45473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45308,
											"end": 45473,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 44149,
											"end": 44458,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 44149,
											"end": 44458,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44263,
											"end": 44275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44277,
											"end": 44294,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44303,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44298,
											"end": 44308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44332,
											"end": 44356,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 44332,
											"end": 44356,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 44332,
											"end": 44356,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 44358,
											"end": 44360,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44362,
											"end": 44367,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "tag",
											"source": 0,
											"value": "266"
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44309,
											"end": 44368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44298,
											"end": 44369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44262,
											"end": 44369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44262,
											"end": 44369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44262,
											"end": 44369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44262,
											"end": 44369,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44387,
											"end": 44394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44387,
											"end": 44444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44387,
											"end": 44444,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44387,
											"end": 44444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 44387,
											"end": 44444,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44399,
											"end": 44410,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44399,
											"end": 44410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44399,
											"end": 44415,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44399,
											"end": 44415,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44399,
											"end": 44443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 44399,
											"end": 44443,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44399,
											"end": 44443,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44430,
											"end": 44434,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 44419,
											"end": 44443,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44379,
											"end": 44451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 44379,
											"end": 44451,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44379,
											"end": 44451,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44379,
											"end": 44451,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 44379,
											"end": 44451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44379,
											"end": 44451,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44379,
											"end": 44451,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44379,
											"end": 44451,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44379,
											"end": 44451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 44379,
											"end": 44451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44379,
											"end": 44451,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 44379,
											"end": 44451,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14,
											"end": 179,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 14,
											"end": 179,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 94,
											"end": 107,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 94,
											"end": 107,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 147,
											"end": 153,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 136,
											"end": 154,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 136,
											"end": 154,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 126,
											"end": 155,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 126,
											"end": 155,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 116,
											"end": 118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 116,
											"end": 118,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 169,
											"end": 170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 166,
											"end": 167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 159,
											"end": 171,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 116,
											"end": 118,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 116,
											"end": 118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 75,
											"end": 179,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 75,
											"end": 179,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 75,
											"end": 179,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 75,
											"end": 179,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 184,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 184,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 253,
											"end": 273,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 253,
											"end": 273,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 313,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 302,
											"end": 322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 302,
											"end": 322,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 292,
											"end": 323,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 292,
											"end": 323,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 282,
											"end": 284,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 282,
											"end": 284,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 352,
											"end": 611,
											"name": "tag",
											"source": 1,
											"value": "151"
										},
										{
											"begin": 352,
											"end": 611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 352,
											"end": 611,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 464,
											"end": 466,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 452,
											"end": 461,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 443,
											"end": 450,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 439,
											"end": 462,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 435,
											"end": 467,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 432,
											"end": 434,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 432,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 432,
											"end": 434,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 485,
											"end": 491,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 477,
											"end": 483,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 470,
											"end": 492,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 432,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 432,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 529,
											"end": 538,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 516,
											"end": 539,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 548,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 575,
											"end": 580,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 548,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 548,
											"end": 581,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 548,
											"end": 581,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 548,
											"end": 581,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 600,
											"end": 605,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 422,
											"end": 611,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 422,
											"end": 611,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 616,
											"end": 879,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 616,
											"end": 879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 616,
											"end": 879,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 739,
											"end": 741,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 727,
											"end": 736,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 718,
											"end": 725,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 714,
											"end": 737,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 710,
											"end": 742,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 707,
											"end": 709,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 707,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 707,
											"end": 709,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 760,
											"end": 766,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 752,
											"end": 758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 767,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 707,
											"end": 709,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 707,
											"end": 709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 797,
											"end": 806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 791,
											"end": 807,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 816,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 843,
											"end": 848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 816,
											"end": 849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 816,
											"end": 849,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 884,
											"end": 1504,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 884,
											"end": 1504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 884,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 1504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 884,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 884,
											"end": 1504,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1046,
											"end": 1049,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1034,
											"end": 1043,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1025,
											"end": 1032,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1021,
											"end": 1044,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1017,
											"end": 1050,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1068,
											"end": 1074,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1060,
											"end": 1066,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1053,
											"end": 1075,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 1014,
											"end": 1016,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1112,
											"end": 1121,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1099,
											"end": 1122,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 1158,
											"end": 1163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1131,
											"end": 1164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 1131,
											"end": 1164,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1131,
											"end": 1164,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 1131,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1183,
											"end": 1188,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1240,
											"end": 1242,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1225,
											"end": 1243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1212,
											"end": 1244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1253,
											"end": 1288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 1253,
											"end": 1288,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1253,
											"end": 1288,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 1253,
											"end": 1288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1314,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1333,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 1368,
											"end": 1370,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1353,
											"end": 1371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1333,
											"end": 1372,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 1333,
											"end": 1372,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1333,
											"end": 1372,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 1333,
											"end": 1372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1323,
											"end": 1372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1426,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1413,
											"end": 1422,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1409,
											"end": 1427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1428,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1464,
											"end": 1471,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 1437,
											"end": 1472,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1504,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1504,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1504,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1504,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1004,
											"end": 1504,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1004,
											"end": 1504,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1509,
											"end": 2182,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1509,
											"end": 2182,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 2182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 2182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1509,
											"end": 2182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 2182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1707,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 1692,
											"end": 1701,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1683,
											"end": 1690,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 1679,
											"end": 1702,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1675,
											"end": 1708,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1726,
											"end": 1732,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1711,
											"end": 1733,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "tag",
											"source": 1,
											"value": "298"
										},
										{
											"begin": 1672,
											"end": 1674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1770,
											"end": 1779,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1757,
											"end": 1780,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1816,
											"end": 1821,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1789,
											"end": 1822,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 1789,
											"end": 1822,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1789,
											"end": 1822,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 1789,
											"end": 1822,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1841,
											"end": 1846,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1893,
											"end": 1895,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1878,
											"end": 1896,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1897,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1944,
											"end": 1946,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1929,
											"end": 1947,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1929,
											"end": 1947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1948,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1916,
											"end": 1948,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2000,
											"end": 2002,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1985,
											"end": 2003,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 1985,
											"end": 2003,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1972,
											"end": 2004,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 1972,
											"end": 2004,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "tag",
											"source": 1,
											"value": "300"
										},
										{
											"begin": 2013,
											"end": 2046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 2182,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 2182,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 2182,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 2182,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 2182,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1662,
											"end": 2182,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2119,
											"end": 2122,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2104,
											"end": 2123,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2104,
											"end": 2123,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2124,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2091,
											"end": 2124,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2174,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 2156,
											"end": 2175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2175,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2156,
											"end": 2175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2176,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2176,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 2182,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1662,
											"end": 2182,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2187,
											"end": 2864,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2187,
											"end": 2864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2187,
											"end": 2864,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2187,
											"end": 2864,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2345,
											"end": 2347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2333,
											"end": 2342,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2324,
											"end": 2331,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2343,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2316,
											"end": 2348,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2315,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 2313,
											"end": 2315,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2366,
											"end": 2372,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2358,
											"end": 2364,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2351,
											"end": 2373,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2313,
											"end": 2315,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 2313,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2411,
											"end": 2420,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2398,
											"end": 2421,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2440,
											"end": 2458,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2481,
											"end": 2483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2473,
											"end": 2479,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2470,
											"end": 2484,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2469,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2467,
											"end": 2469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2494,
											"end": 2500,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2487,
											"end": 2509,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2467,
											"end": 2469,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2467,
											"end": 2469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2545,
											"end": 2551,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2530,
											"end": 2552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2552,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2520,
											"end": 2552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2590,
											"end": 2597,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2583,
											"end": 2587,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2579,
											"end": 2581,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2575,
											"end": 2588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2571,
											"end": 2598,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2563,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2561,
											"end": 2563,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2617,
											"end": 2623,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2609,
											"end": 2615,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2602,
											"end": 2624,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2561,
											"end": 2563,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 2561,
											"end": 2563,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2662,
											"end": 2664,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2649,
											"end": 2665,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2688,
											"end": 2690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2691,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2676,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2674,
											"end": 2676,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2709,
											"end": 2715,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2707,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2694,
											"end": 2716,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2674,
											"end": 2676,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 2674,
											"end": 2676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2768,
											"end": 2775,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2763,
											"end": 2765,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2757,
											"end": 2759,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2749,
											"end": 2755,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2745,
											"end": 2760,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2741,
											"end": 2743,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2737,
											"end": 2761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2733,
											"end": 2766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2730,
											"end": 2776,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2729,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2727,
											"end": 2729,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2794,
											"end": 2800,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2792,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2801,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2727,
											"end": 2729,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2727,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2830,
											"end": 2832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2822,
											"end": 2833,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2852,
											"end": 2858,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2303,
											"end": 2864,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2864,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2303,
											"end": 2864,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2869,
											"end": 3122,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 2869,
											"end": 3122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 3122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2978,
											"end": 2980,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2966,
											"end": 2975,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2957,
											"end": 2964,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 2976,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2949,
											"end": 2981,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2948,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2946,
											"end": 2948,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2999,
											"end": 3005,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2991,
											"end": 2997,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3006,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2946,
											"end": 2948,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 2946,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3043,
											"end": 3052,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3030,
											"end": 3053,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 3086,
											"end": 3091,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3062,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3062,
											"end": 3092,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3127,
											"end": 3384,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 3127,
											"end": 3384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3247,
											"end": 3249,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3235,
											"end": 3244,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3226,
											"end": 3233,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3222,
											"end": 3245,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3250,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3217,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 3215,
											"end": 3217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3260,
											"end": 3266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3253,
											"end": 3275,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3215,
											"end": 3217,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 3215,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3305,
											"end": 3314,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3299,
											"end": 3315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 3348,
											"end": 3353,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3324,
											"end": 3354,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 3324,
											"end": 3354,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3389,
											"end": 3644,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 3389,
											"end": 3644,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3644,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3499,
											"end": 3501,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3487,
											"end": 3496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3478,
											"end": 3485,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3474,
											"end": 3497,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3470,
											"end": 3502,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3469,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 3467,
											"end": 3469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3526,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3512,
											"end": 3518,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3505,
											"end": 3527,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3467,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 3467,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3564,
											"end": 3573,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3551,
											"end": 3574,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 3608,
											"end": 3613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3583,
											"end": 3614,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 3583,
											"end": 3614,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3649,
											"end": 4525,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 3649,
											"end": 4525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3649,
											"end": 4525,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3782,
											"end": 3784,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3770,
											"end": 3779,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3761,
											"end": 3768,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3757,
											"end": 3780,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3753,
											"end": 3785,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3803,
											"end": 3809,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3795,
											"end": 3801,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3788,
											"end": 3810,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "tag",
											"source": 1,
											"value": "320"
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3841,
											"end": 3850,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3851,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3870,
											"end": 3888,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3911,
											"end": 3913,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3903,
											"end": 3909,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3900,
											"end": 3914,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3932,
											"end": 3938,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3924,
											"end": 3930,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3917,
											"end": 3939,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3975,
											"end": 3981,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3964,
											"end": 3973,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 3982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 3982,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 3982,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4020,
											"end": 4027,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4013,
											"end": 4017,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4009,
											"end": 4011,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4005,
											"end": 4018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4001,
											"end": 4028,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3991,
											"end": 3993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 3991,
											"end": 3993,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4047,
											"end": 4053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4032,
											"end": 4054,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3991,
											"end": 3993,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 3991,
											"end": 3993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4081,
											"end": 4083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4075,
											"end": 4084,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4103,
											"end": 4105,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4099,
											"end": 4101,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4096,
											"end": 4106,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4095,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4095,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 4093,
											"end": 4095,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4118,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 4093,
											"end": 4095,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 4093,
											"end": 4095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4149,
											"end": 4151,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4143,
											"end": 4152,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4218,
											"end": 4220,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 4199,
											"end": 4212,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4199,
											"end": 4212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4195,
											"end": 4222,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4183,
											"end": 4223,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4225,
											"end": 4227,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4179,
											"end": 4228,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4261,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4243,
											"end": 4261,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4263,
											"end": 4285,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4240,
											"end": 4286,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4289,
											"end": 4298,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 4237,
											"end": 4239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4316,
											"end": 4318,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4309,
											"end": 4331,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4358,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4340,
											"end": 4358,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4388,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4377,
											"end": 4388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4390,
											"end": 4392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4373,
											"end": 4393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4370,
											"end": 4403,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4367,
											"end": 4369,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4367,
											"end": 4369,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 4367,
											"end": 4369,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4427,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4413,
											"end": 4419,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4406,
											"end": 4428,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4367,
											"end": 4369,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 4367,
											"end": 4369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 4491,
											"end": 4493,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4488,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4478,
											"end": 4484,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4474,
											"end": 4489,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4469,
											"end": 4471,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4465,
											"end": 4467,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4439,
											"end": 4494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 4439,
											"end": 4494,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4439,
											"end": 4494,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 4439,
											"end": 4494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4513,
											"end": 4519,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 4525,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3740,
											"end": 4525,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4530,
											"end": 4740,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 4530,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4678,
											"name": "PUSH",
											"source": 1,
											"value": "1A0"
										},
										{
											"begin": 4663,
											"end": 4672,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4654,
											"end": 4661,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4679,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4643,
											"end": 4645,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4643,
											"end": 4645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 4643,
											"end": 4645,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4697,
											"end": 4703,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4689,
											"end": 4695,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4682,
											"end": 4704,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4643,
											"end": 4645,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 4643,
											"end": 4645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4725,
											"end": 4734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4633,
											"end": 4740,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4745,
											"end": 5661,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 4745,
											"end": 5661,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 5661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 5661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 5661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 5661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 5661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4745,
											"end": 5661,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4745,
											"end": 5661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4960,
											"end": 4963,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4948,
											"end": 4957,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4939,
											"end": 4946,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4935,
											"end": 4958,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4931,
											"end": 4964,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4930,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4930,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 4928,
											"end": 4930,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4982,
											"end": 4988,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 4980,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4967,
											"end": 4989,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4928,
											"end": 4930,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 4928,
											"end": 4930,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5019,
											"end": 5028,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5029,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5065,
											"end": 5070,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5038,
											"end": 5071,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5038,
											"end": 5071,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5038,
											"end": 5071,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 5038,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5142,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5125,
											"end": 5143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5119,
											"end": 5144,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5090,
											"end": 5095,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5090,
											"end": 5095,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5153,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5119,
											"end": 5144,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5153,
											"end": 5186,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 5153,
											"end": 5186,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5153,
											"end": 5186,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 5153,
											"end": 5186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5205,
											"end": 5212,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5231,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5277,
											"end": 5279,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5262,
											"end": 5280,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5262,
											"end": 5280,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5281,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5231,
											"end": 5281,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5231,
											"end": 5281,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 5231,
											"end": 5281,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5281,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5221,
											"end": 5281,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 5346,
											"end": 5348,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5335,
											"end": 5344,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5331,
											"end": 5349,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5300,
											"end": 5350,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5300,
											"end": 5350,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5300,
											"end": 5350,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 5300,
											"end": 5350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5350,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5290,
											"end": 5350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5415,
											"end": 5418,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5404,
											"end": 5413,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5419,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5369,
											"end": 5420,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 5369,
											"end": 5420,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5369,
											"end": 5420,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 5369,
											"end": 5420,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5420,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5359,
											"end": 5420,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5465,
											"end": 5468,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5454,
											"end": 5463,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5450,
											"end": 5469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5444,
											"end": 5470,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5504,
											"end": 5511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5512,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 5479,
											"end": 5512,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5479,
											"end": 5512,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 5479,
											"end": 5512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5583,
											"end": 5586,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 5568,
											"end": 5587,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5568,
											"end": 5587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5562,
											"end": 5588,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5538,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5531,
											"end": 5538,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5597,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5562,
											"end": 5588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5597,
											"end": 5629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 5597,
											"end": 5629,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5597,
											"end": 5629,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 5597,
											"end": 5629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5655,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5661,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5661,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5661,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5661,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5661,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5661,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5661,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5661,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5661,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4918,
											"end": 5661,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5666,
											"end": 5862,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 5666,
											"end": 5862,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5666,
											"end": 5862,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5777,
											"end": 5779,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5765,
											"end": 5774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5756,
											"end": 5763,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5752,
											"end": 5775,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5748,
											"end": 5780,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5747,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5745,
											"end": 5747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5798,
											"end": 5804,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5790,
											"end": 5796,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5783,
											"end": 5805,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5747,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 5745,
											"end": 5747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5826,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5846,
											"end": 5855,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5826,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 5826,
											"end": 5856,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5867,
											"end": 6061,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5867,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5867,
											"end": 6061,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5990,
											"end": 5992,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5978,
											"end": 5987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5969,
											"end": 5976,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5965,
											"end": 5988,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5961,
											"end": 5993,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5960,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5960,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5958,
											"end": 5960,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6011,
											"end": 6017,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6003,
											"end": 6009,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5996,
											"end": 6018,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5958,
											"end": 5960,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 5958,
											"end": 5960,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6039,
											"end": 6055,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6039,
											"end": 6055,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5948,
											"end": 6061,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5948,
											"end": 6061,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6066,
											"end": 6575,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6066,
											"end": 6575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6066,
											"end": 6575,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6243,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6228,
											"end": 6237,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6219,
											"end": 6226,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6215,
											"end": 6238,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6244,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6210,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 6208,
											"end": 6210,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6262,
											"end": 6268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6254,
											"end": 6260,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6247,
											"end": 6269,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6210,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 6208,
											"end": 6210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6296,
											"end": 6305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6290,
											"end": 6306,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6280,
											"end": 6306,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6280,
											"end": 6306,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6349,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6338,
											"end": 6347,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6334,
											"end": 6352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6353,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6427,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6386,
											"end": 6391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6382,
											"end": 6428,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6375,
											"end": 6380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6372,
											"end": 6429,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 6362,
											"end": 6364,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6454,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6440,
											"end": 6446,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6433,
											"end": 6455,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6362,
											"end": 6364,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 6362,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6521,
											"end": 6523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6506,
											"end": 6524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6500,
											"end": 6525,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6565,
											"end": 6567,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 6550,
											"end": 6568,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6544,
											"end": 6569,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6575,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6198,
											"end": 6575,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6476,
											"end": 6481,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6198,
											"end": 6575,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6198,
											"end": 6575,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6580,
											"end": 6835,
											"name": "tag",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 6580,
											"end": 6835,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6580,
											"end": 6835,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6835,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6720,
											"end": 6722,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6708,
											"end": 6717,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6699,
											"end": 6706,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6695,
											"end": 6718,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6691,
											"end": 6723,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6747,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6733,
											"end": 6739,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6748,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 6688,
											"end": 6690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6769,
											"end": 6785,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6785,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6825,
											"end": 6827,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6810,
											"end": 6828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6804,
											"end": 6829,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6785,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6769,
											"end": 6785,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6804,
											"end": 6829,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6804,
											"end": 6829,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6678,
											"end": 6835,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6840,
											"end": 7095,
											"name": "tag",
											"source": 1,
											"value": "142"
										},
										{
											"begin": 6840,
											"end": 7095,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6840,
											"end": 7095,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6950,
											"end": 6952,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6938,
											"end": 6947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6929,
											"end": 6936,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6925,
											"end": 6948,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 6953,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6920,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6918,
											"end": 6920,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6971,
											"end": 6977,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6963,
											"end": 6969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6956,
											"end": 6978,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6918,
											"end": 6920,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 6918,
											"end": 6920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7015,
											"end": 7024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7002,
											"end": 7025,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7034,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 7059,
											"end": 7064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7034,
											"end": 7065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 7034,
											"end": 7065,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7100,
											"end": 7229,
											"name": "tag",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 7100,
											"end": 7229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7168,
											"end": 7222,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7223,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7229,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7234,
											"end": 7493,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 7234,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7234,
											"end": 7493,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7315,
											"end": 7320,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7309,
											"end": 7321,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7342,
											"end": 7348,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7340,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7349,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 7414,
											"end": 7420,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7407,
											"end": 7411,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7402,
											"end": 7405,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7398,
											"end": 7412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7391,
											"end": 7395,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7384,
											"end": 7389,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7380,
											"end": 7396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7358,
											"end": 7421,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 7358,
											"end": 7421,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7358,
											"end": 7421,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 7358,
											"end": 7421,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7475,
											"end": 7477,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 7454,
											"end": 7469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7450,
											"end": 7479,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7441,
											"end": 7480,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7441,
											"end": 7480,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7441,
											"end": 7480,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7441,
											"end": 7480,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7482,
											"end": 7486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7437,
											"end": 7487,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7437,
											"end": 7487,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7285,
											"end": 7493,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7285,
											"end": 7493,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7498,
											"end": 7591,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 7498,
											"end": 7591,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7575,
											"end": 7576,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 7564,
											"end": 7584,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7585,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7585,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7542,
											"end": 7591,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7596,
											"end": 7690,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 7596,
											"end": 7690,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7674,
											"end": 7682,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 7663,
											"end": 7683,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7684,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7651,
											"end": 7684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7641,
											"end": 7690,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7695,
											"end": 7968,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 7695,
											"end": 7968,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7695,
											"end": 7968,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7878,
											"end": 7884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7870,
											"end": 7876,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 7868,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7852,
											"end": 7885,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 7904,
											"end": 7920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7904,
											"end": 7920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7944,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7929,
											"end": 7944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7904,
											"end": 7920,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7842,
											"end": 7968,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7842,
											"end": 7968,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7973,
											"end": 8247,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 7973,
											"end": 8247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7973,
											"end": 8247,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8140,
											"end": 8146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8134,
											"end": 8147,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 8202,
											"end": 8208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8200,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8190,
											"end": 8194,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8182,
											"end": 8188,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8178,
											"end": 8195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 8156,
											"end": 8209,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8156,
											"end": 8209,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 8156,
											"end": 8209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8241,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8241,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8225,
											"end": 8241,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8110,
											"end": 8247,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8110,
											"end": 8247,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8252,
											"end": 8478,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8252,
											"end": 8478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8416,
											"end": 8471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8471,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8471,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8416,
											"end": 8471,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8398,
											"end": 8472,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8398,
											"end": 8472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8386,
											"end": 8388,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8371,
											"end": 8389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8353,
											"end": 8478,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8722,
											"end": 9057,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 8722,
											"end": 9057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8983,
											"end": 8998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8965,
											"end": 8999,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8965,
											"end": 8999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9050,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9035,
											"end": 9050,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9030,
											"end": 9032,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9015,
											"end": 9033,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9015,
											"end": 9033,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9008,
											"end": 9051,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8892,
											"end": 8894,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8877,
											"end": 8895,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8877,
											"end": 8895,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8859,
											"end": 9057,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9062,
											"end": 9468,
											"name": "tag",
											"source": 1,
											"value": "154"
										},
										{
											"begin": 9062,
											"end": 9468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9351,
											"end": 9366,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9351,
											"end": 9366,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9351,
											"end": 9366,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9333,
											"end": 9367,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9333,
											"end": 9367,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9403,
											"end": 9418,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9398,
											"end": 9400,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9376,
											"end": 9419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9450,
											"end": 9452,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9435,
											"end": 9453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9435,
											"end": 9453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9428,
											"end": 9462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9428,
											"end": 9462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9428,
											"end": 9462,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9428,
											"end": 9462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9260,
											"end": 9262,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9245,
											"end": 9263,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9245,
											"end": 9263,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9227,
											"end": 9468,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9473,
											"end": 10256,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 9473,
											"end": 10256,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9893,
											"end": 9908,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 9908,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9893,
											"end": 9908,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9875,
											"end": 9909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9875,
											"end": 9909,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9945,
											"end": 9960,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 9945,
											"end": 9960,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9945,
											"end": 9960,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 9945,
											"end": 9960,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9940,
											"end": 9942,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9925,
											"end": 9943,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9925,
											"end": 9943,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9918,
											"end": 9961,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9992,
											"end": 9994,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9977,
											"end": 9995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 10004,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 10004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 10004,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9970,
											"end": 10004,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10035,
											"end": 10037,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10020,
											"end": 10038,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10013,
											"end": 10047,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10013,
											"end": 10047,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10013,
											"end": 10047,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10013,
											"end": 10047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10091,
											"end": 10105,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10084,
											"end": 10106,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10078,
											"end": 10081,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10063,
											"end": 10082,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10063,
											"end": 10082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10107,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10156,
											"end": 10160,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10144,
											"end": 10161,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10138,
											"end": 10141,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10123,
											"end": 10142,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10123,
											"end": 10142,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10116,
											"end": 10162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10193,
											"end": 10196,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 10178,
											"end": 10197,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10178,
											"end": 10197,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10171,
											"end": 10206,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10237,
											"end": 10240,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10222,
											"end": 10241,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10222,
											"end": 10241,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10250,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10250,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10215,
											"end": 10250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9801,
											"end": 9804,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9786,
											"end": 9805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9786,
											"end": 9805,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9768,
											"end": 10256,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10261,
											"end": 10962,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 10261,
											"end": 10962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10659,
											"end": 10674,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 10659,
											"end": 10674,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10659,
											"end": 10674,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10641,
											"end": 10675,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10641,
											"end": 10675,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10711,
											"end": 10726,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 10711,
											"end": 10726,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10711,
											"end": 10726,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 10711,
											"end": 10726,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10706,
											"end": 10708,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10691,
											"end": 10709,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10684,
											"end": 10727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10758,
											"end": 10760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10743,
											"end": 10761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10770,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10770,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10770,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10736,
											"end": 10770,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10801,
											"end": 10803,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10786,
											"end": 10804,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10786,
											"end": 10804,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10779,
											"end": 10813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10779,
											"end": 10813,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10779,
											"end": 10813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10779,
											"end": 10813,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10862,
											"end": 10866,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 10850,
											"end": 10867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10844,
											"end": 10847,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10829,
											"end": 10848,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10829,
											"end": 10848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10822,
											"end": 10868,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10899,
											"end": 10902,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10884,
											"end": 10903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10884,
											"end": 10903,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10877,
											"end": 10912,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10943,
											"end": 10946,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 10928,
											"end": 10947,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10928,
											"end": 10947,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 10956,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 10956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 10956,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10921,
											"end": 10956,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10567,
											"end": 10570,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10552,
											"end": 10571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10552,
											"end": 10571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10534,
											"end": 10962,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10967,
											"end": 11378,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 10967,
											"end": 11378,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11246,
											"end": 11261,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11246,
											"end": 11261,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11246,
											"end": 11261,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11228,
											"end": 11262,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11228,
											"end": 11262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11298,
											"end": 11313,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11298,
											"end": 11313,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11298,
											"end": 11313,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11298,
											"end": 11313,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11293,
											"end": 11295,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11271,
											"end": 11314,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11362,
											"end": 11370,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 11350,
											"end": 11371,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11350,
											"end": 11371,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11350,
											"end": 11371,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11345,
											"end": 11347,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11330,
											"end": 11348,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11330,
											"end": 11348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11372,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11155,
											"end": 11157,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11140,
											"end": 11158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11140,
											"end": 11158,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11122,
											"end": 11378,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11383,
											"end": 11680,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 11383,
											"end": 11680,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 11575,
											"end": 11630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11630,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11630,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11557,
											"end": 11631,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11557,
											"end": 11631,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11662,
											"end": 11664,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11647,
											"end": 11665,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11640,
											"end": 11674,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11545,
											"end": 11547,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11530,
											"end": 11548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11530,
											"end": 11548,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11512,
											"end": 11680,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11685,
											"end": 12491,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 11685,
											"end": 12491,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11685,
											"end": 12491,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11874,
											"end": 11876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11914,
											"end": 11916,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11903,
											"end": 11912,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11899,
											"end": 11917,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11944,
											"end": 11946,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11933,
											"end": 11942,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11926,
											"end": 11947,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11967,
											"end": 11973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12002,
											"end": 12008,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11996,
											"end": 12009,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12033,
											"end": 12039,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12031,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12018,
											"end": 12040,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12071,
											"end": 12073,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12060,
											"end": 12069,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12056,
											"end": 12074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12049,
											"end": 12074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12049,
											"end": 12074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12134,
											"end": 12136,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12128,
											"end": 12130,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12120,
											"end": 12126,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12116,
											"end": 12131,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 12105,
											"end": 12114,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12101,
											"end": 12132,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12097,
											"end": 12137,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12083,
											"end": 12137,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12083,
											"end": 12137,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12172,
											"end": 12174,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12164,
											"end": 12170,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12160,
											"end": 12175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12193,
											"end": 12197,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12462,
											"name": "tag",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 12206,
											"end": 12462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12220,
											"end": 12226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12217,
											"end": 12218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 12227,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12462,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 12206,
											"end": 12462,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12313,
											"end": 12315,
											"name": "PUSH",
											"source": 1,
											"value": "3F"
										},
										{
											"begin": 12309,
											"end": 12316,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 12297,
											"end": 12306,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12289,
											"end": 12295,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12285,
											"end": 12307,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12281,
											"end": 12317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12276,
											"end": 12279,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12269,
											"end": 12318,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12341,
											"end": 12382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 12375,
											"end": 12381,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12366,
											"end": 12372,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12360,
											"end": 12373,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12341,
											"end": 12382,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 12341,
											"end": 12382,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12341,
											"end": 12382,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 12341,
											"end": 12382,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12331,
											"end": 12382,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12440,
											"end": 12452,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12440,
											"end": 12452,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12440,
											"end": 12452,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12440,
											"end": 12452,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12405,
											"end": 12420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12405,
											"end": 12420,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12405,
											"end": 12420,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12405,
											"end": 12420,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12242,
											"end": 12243,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12235,
											"end": 12244,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12462,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "373"
										},
										{
											"begin": 12206,
											"end": 12462,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12206,
											"end": 12462,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 12206,
											"end": 12462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12479,
											"end": 12485,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12479,
											"end": 12485,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 11854,
											"end": 12491,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11854,
											"end": 12491,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12496,
											"end": 12717,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 12496,
											"end": 12717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12496,
											"end": 12717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12645,
											"end": 12647,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12634,
											"end": 12643,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12627,
											"end": 12648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12665,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 12707,
											"end": 12709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12696,
											"end": 12705,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12692,
											"end": 12710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12684,
											"end": 12690,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12665,
											"end": 12711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 12665,
											"end": 12711,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 12722,
											"end": 13047,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 12722,
											"end": 13047,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12924,
											"end": 12926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12906,
											"end": 12927,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12927,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12906,
											"end": 12927,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12963,
											"end": 12964,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 12943,
											"end": 12961,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12943,
											"end": 12961,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12943,
											"end": 12961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12936,
											"end": 12965,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13001,
											"end": 13005,
											"name": "PUSH",
											"source": 1,
											"value": "5341000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12996,
											"end": 12998,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12974,
											"end": 13006,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13038,
											"end": 13040,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13023,
											"end": 13041,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13023,
											"end": 13041,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12896,
											"end": 13047,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13052,
											"end": 13396,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 13052,
											"end": 13396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13254,
											"end": 13256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13236,
											"end": 13257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13236,
											"end": 13257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13236,
											"end": 13257,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13293,
											"end": 13295,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 13273,
											"end": 13291,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13291,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13266,
											"end": 13296,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13332,
											"end": 13354,
											"name": "PUSH",
											"source": 1,
											"value": "50657263656E7461676520746F6F20736D616C6C000000000000000000000000"
										},
										{
											"begin": 13327,
											"end": 13329,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13312,
											"end": 13330,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13312,
											"end": 13330,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13305,
											"end": 13355,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13387,
											"end": 13389,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13372,
											"end": 13390,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13372,
											"end": 13390,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13226,
											"end": 13396,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13401,
											"end": 13727,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 13401,
											"end": 13727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13603,
											"end": 13605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13585,
											"end": 13606,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13585,
											"end": 13606,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13585,
											"end": 13606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13642,
											"end": 13643,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 13622,
											"end": 13640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13622,
											"end": 13640,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13622,
											"end": 13640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13615,
											"end": 13644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13680,
											"end": 13685,
											"name": "PUSH",
											"source": 1,
											"value": "5354450000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13675,
											"end": 13677,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13660,
											"end": 13678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13660,
											"end": 13678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13653,
											"end": 13686,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13718,
											"end": 13720,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13703,
											"end": 13721,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13703,
											"end": 13721,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13575,
											"end": 13727,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13732,
											"end": 14057,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 13732,
											"end": 14057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13934,
											"end": 13936,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13916,
											"end": 13937,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13916,
											"end": 13937,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13916,
											"end": 13937,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13973,
											"end": 13974,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 13953,
											"end": 13971,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13971,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13953,
											"end": 13971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13946,
											"end": 13975,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14011,
											"end": 14015,
											"name": "PUSH",
											"source": 1,
											"value": "5354000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14006,
											"end": 14008,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13991,
											"end": 14009,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13984,
											"end": 14016,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14048,
											"end": 14050,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14033,
											"end": 14051,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14033,
											"end": 14051,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13906,
											"end": 14057,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14062,
											"end": 14394,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14062,
											"end": 14394,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14264,
											"end": 14266,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14246,
											"end": 14267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14246,
											"end": 14267,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14246,
											"end": 14267,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14303,
											"end": 14304,
											"name": "PUSH",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 14283,
											"end": 14301,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14283,
											"end": 14301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14283,
											"end": 14301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14276,
											"end": 14305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14341,
											"end": 14352,
											"name": "PUSH",
											"source": 1,
											"value": "4E6F742057455448390000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14336,
											"end": 14338,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14321,
											"end": 14339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14321,
											"end": 14339,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14314,
											"end": 14353,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14385,
											"end": 14387,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14370,
											"end": 14388,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14370,
											"end": 14388,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14236,
											"end": 14394,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14399,
											"end": 14743,
											"name": "tag",
											"source": 1,
											"value": "149"
										},
										{
											"begin": 14399,
											"end": 14743,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14601,
											"end": 14603,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14583,
											"end": 14604,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14583,
											"end": 14604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14583,
											"end": 14604,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14640,
											"end": 14642,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14620,
											"end": 14638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14613,
											"end": 14643,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14679,
											"end": 14701,
											"name": "PUSH",
											"source": 1,
											"value": "50657263656E7461676520746F6F206C61726765000000000000000000000000"
										},
										{
											"begin": 14674,
											"end": 14676,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14659,
											"end": 14677,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14652,
											"end": 14702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14734,
											"end": 14736,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14719,
											"end": 14737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14719,
											"end": 14737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14573,
											"end": 14743,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 14748,
											"end": 15982,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 14748,
											"end": 15982,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14748,
											"end": 15982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14938,
											"end": 14941,
											"name": "PUSH",
											"source": 1,
											"value": "160"
										},
										{
											"begin": 14927,
											"end": 14936,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 14942,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14915,
											"end": 14942,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14915,
											"end": 14942,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14951,
											"end": 14997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 14987,
											"end": 14996,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14978,
											"end": 14984,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14972,
											"end": 14985,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14951,
											"end": 14997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 14951,
											"end": 14997,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 14951,
											"end": 14997,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 14951,
											"end": 14997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15044,
											"end": 15048,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15036,
											"end": 15042,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15032,
											"end": 15049,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15026,
											"end": 15050,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15059,
											"end": 15115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 15109,
											"end": 15113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15098,
											"end": 15107,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15094,
											"end": 15114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15092,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15059,
											"end": 15115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 15059,
											"end": 15115,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15059,
											"end": 15115,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 15059,
											"end": 15115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15059,
											"end": 15115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15164,
											"end": 15168,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15156,
											"end": 15162,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15152,
											"end": 15169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15146,
											"end": 15170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15179,
											"end": 15236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 15230,
											"end": 15234,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15219,
											"end": 15228,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15215,
											"end": 15235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15213,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15179,
											"end": 15236,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 15179,
											"end": 15236,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15179,
											"end": 15236,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 15179,
											"end": 15236,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15179,
											"end": 15236,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15285,
											"end": 15289,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15277,
											"end": 15283,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15273,
											"end": 15290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15267,
											"end": 15291,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15300,
											"end": 15356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 15350,
											"end": 15354,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15339,
											"end": 15348,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15335,
											"end": 15355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15319,
											"end": 15333,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15300,
											"end": 15356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 15300,
											"end": 15356,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15300,
											"end": 15356,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 15300,
											"end": 15356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15300,
											"end": 15356,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15405,
											"end": 15409,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15397,
											"end": 15403,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15393,
											"end": 15410,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15387,
											"end": 15411,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 15470,
											"end": 15474,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15459,
											"end": 15468,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15455,
											"end": 15475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15439,
											"end": 15453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 15420,
											"end": 15476,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15420,
											"end": 15476,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 15420,
											"end": 15476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15420,
											"end": 15476,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15532,
											"end": 15536,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15524,
											"end": 15530,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15520,
											"end": 15537,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15514,
											"end": 15538,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15507,
											"end": 15511,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15496,
											"end": 15505,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15492,
											"end": 15512,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15485,
											"end": 15539,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15595,
											"end": 15599,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 15587,
											"end": 15593,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15583,
											"end": 15600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15577,
											"end": 15601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15570,
											"end": 15574,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 15559,
											"end": 15568,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15555,
											"end": 15575,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15548,
											"end": 15602,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15658,
											"end": 15662,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15650,
											"end": 15656,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15646,
											"end": 15663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15640,
											"end": 15664,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15633,
											"end": 15637,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 15622,
											"end": 15631,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15618,
											"end": 15638,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15611,
											"end": 15665,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15684,
											"end": 15690,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 15744,
											"end": 15746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15736,
											"end": 15742,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15732,
											"end": 15747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15726,
											"end": 15748,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15721,
											"end": 15723,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15710,
											"end": 15719,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15706,
											"end": 15724,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15699,
											"end": 15749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15699,
											"end": 15749,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15768,
											"end": 15774,
											"name": "PUSH",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 15823,
											"end": 15825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15815,
											"end": 15821,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15811,
											"end": 15826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15805,
											"end": 15827,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15836,
											"end": 15892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 15888,
											"end": 15890,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15877,
											"end": 15886,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15873,
											"end": 15891,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15857,
											"end": 15871,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15836,
											"end": 15892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "352"
										},
										{
											"begin": 15836,
											"end": 15892,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 15836,
											"end": 15892,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 15836,
											"end": 15892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15911,
											"end": 15917,
											"name": "PUSH",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 15959,
											"end": 15974,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15959,
											"end": 15974,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15959,
											"end": 15974,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15953,
											"end": 15975,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 15933,
											"end": 15951,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15933,
											"end": 15951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15933,
											"end": 15951,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15933,
											"end": 15951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15926,
											"end": 15976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14905,
											"end": 15982,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14905,
											"end": 15982,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16218,
											"end": 16395,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 16218,
											"end": 16395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 16389,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 16389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16364,
											"end": 16389,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16352,
											"end": 16354,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16337,
											"end": 16355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16337,
											"end": 16355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16319,
											"end": 16395,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16400,
											"end": 16933,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 16400,
											"end": 16933,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16400,
											"end": 16933,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16400,
											"end": 16933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16543,
											"end": 16554,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16530,
											"end": 16555,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16637,
											"end": 16639,
											"name": "PUSH",
											"source": 1,
											"value": "1E"
										},
										{
											"begin": 16633,
											"end": 16640,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 16622,
											"end": 16630,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16606,
											"end": 16620,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16602,
											"end": 16631,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16598,
											"end": 16641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16578,
											"end": 16596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16574,
											"end": 16642,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 16564,
											"end": 16566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 16564,
											"end": 16566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16659,
											"end": 16663,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16653,
											"end": 16657,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16646,
											"end": 16664,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16564,
											"end": 16566,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 16564,
											"end": 16566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16689,
											"end": 16722,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16689,
											"end": 16722,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16741,
											"end": 16761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16741,
											"end": 16761,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16741,
											"end": 16761,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16784,
											"end": 16802,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16773,
											"end": 16803,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16773,
											"end": 16803,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16770,
											"end": 16772,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16770,
											"end": 16772,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 16770,
											"end": 16772,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16819,
											"end": 16823,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16813,
											"end": 16817,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16806,
											"end": 16824,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16770,
											"end": 16772,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 16770,
											"end": 16772,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16855,
											"end": 16859,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16843,
											"end": 16860,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16843,
											"end": 16860,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16886,
											"end": 16900,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16909,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16909,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16909,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16872,
											"end": 16910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16872,
											"end": 16910,
											"name": "SGT",
											"source": 1
										},
										{
											"begin": 16869,
											"end": 16871,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16869,
											"end": 16871,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 16869,
											"end": 16871,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16923,
											"end": 16924,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16920,
											"end": 16921,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16913,
											"end": 16925,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 16869,
											"end": 16871,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 16869,
											"end": 16871,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16933,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16933,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16933,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16494,
											"end": 16933,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 16938,
											"end": 17196,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 16938,
											"end": 17196,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17010,
											"end": 17011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17020,
											"end": 17133,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 17020,
											"end": 17133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17034,
											"end": 17040,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17031,
											"end": 17032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17028,
											"end": 17041,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17133,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 17020,
											"end": 17133,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17110,
											"end": 17121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17110,
											"end": 17121,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17110,
											"end": 17121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17104,
											"end": 17122,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 17091,
											"end": 17102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17091,
											"end": 17102,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17091,
											"end": 17102,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17084,
											"end": 17123,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17056,
											"end": 17058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17049,
											"end": 17059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17133,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 17020,
											"end": 17133,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17020,
											"end": 17133,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 17020,
											"end": 17133,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17151,
											"end": 17157,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 17148,
											"end": 17149,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17145,
											"end": 17158,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17142,
											"end": 17144,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17142,
											"end": 17144,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 17142,
											"end": 17144,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17186,
											"end": 17187,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17177,
											"end": 17183,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17172,
											"end": 17175,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17168,
											"end": 17184,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17161,
											"end": 17188,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17142,
											"end": 17144,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 17142,
											"end": 17144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17142,
											"end": 17144,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16991,
											"end": 17196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16991,
											"end": 17196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16991,
											"end": 17196,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16991,
											"end": 17196,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17201,
											"end": 17357,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 17201,
											"end": 17357,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17282,
											"end": 17287,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17278,
											"end": 17332,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17271,
											"end": 17276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17268,
											"end": 17333,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17258,
											"end": 17260,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 17258,
											"end": 17260,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17347,
											"end": 17348,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17344,
											"end": 17345,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17337,
											"end": 17349,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17258,
											"end": 17260,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 17258,
											"end": 17260,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17248,
											"end": 17357,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17248,
											"end": 17357,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 17362,
											"end": 17482,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 17362,
											"end": 17482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17450,
											"end": 17455,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17443,
											"end": 17456,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17436,
											"end": 17457,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17429,
											"end": 17434,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17426,
											"end": 17458,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17416,
											"end": 17418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 17416,
											"end": 17418,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17472,
											"end": 17473,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17469,
											"end": 17470,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17462,
											"end": 17474,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17487,
											"end": 17607,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 17487,
											"end": 17607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17576,
											"end": 17581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17573,
											"end": 17574,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 17562,
											"end": 17582,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 17555,
											"end": 17560,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17552,
											"end": 17583,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17542,
											"end": 17544,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 17542,
											"end": 17544,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17597,
											"end": 17598,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17594,
											"end": 17595,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17587,
											"end": 17599,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 17612,
											"end": 17728,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 17612,
											"end": 17728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17698,
											"end": 17702,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 17691,
											"end": 17696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17687,
											"end": 17703,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 17680,
											"end": 17685,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17677,
											"end": 17704,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 17667,
											"end": 17669,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 17667,
											"end": 17669,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17718,
											"end": 17719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17715,
											"end": 17716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 17708,
											"end": 17720,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": "13ead562",
							"factory()": "c45a0155",
							"migrate((address,uint256,uint8,address,address,uint24,int24,int24,uint256,uint256,address,uint256,bool))": "d44f2bf2",
							"multicall(bytes[])": "ac9650d8",
							"nonfungiblePositionManager()": "b44a2722",
							"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": "f3995c67",
							"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": "4659a494",
							"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "a4a78f0c",
							"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": "c2e3140a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nonfungiblePositionManager\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidityToMigrate\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"percentageToMigrate\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"refundAsETH\",\"type\":\"bool\"}],\"internalType\":\"struct IV3Migrator.MigrateParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"migrate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nonfungiblePositionManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowed\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitAllowedIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"selfPermitIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"migrate((address,uint256,uint8,address,address,uint24,int24,int24,uint256,uint256,address,uint256,bool))\":{\"details\":\"Slippage protection is enforced via `amount{0,1}Min`, which should be a discount of the expected values of the maximum amount of v3 liquidity that the v2 liquidity can get. For the special case of migrating to an out-of-range position, `amount{0,1}Min` may be set to 0, enforcing that the position remains out of range\",\"params\":{\"params\":\"The params necessary to migrate v2 liquidity, encoded as `MigrateParams` in calldata\"}},\"multicall(bytes[])\":{\"details\":\"The `msg.value` should not be trusted for any method callable from multicall.\",\"params\":{\"data\":\"The encoded function data for each of the calls to make to this contract\"},\"returns\":{\"results\":\"The results from each of the calls passed in via data\"}},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this).\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this)\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this) Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\",\"params\":{\"expiry\":\"The timestamp at which the permit is no longer valid\",\"nonce\":\"The current nonce of the owner\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The `owner` is always msg.sender and the `spender` is always address(this). Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\",\"params\":{\"deadline\":\"A timestamp, the current blocktime must be less than or equal to this timestamp\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"token\":\"The address of the token spent\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\",\"value\":\"The amount that can be spent of token\"}}},\"title\":\"Uniswap V3 Migrator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"migrate((address,uint256,uint8,address,address,uint24,int24,int24,uint256,uint256,address,uint256,bool))\":{\"notice\":\"Migrates liquidity to v3 by burning v2 liquidity and minting a new position for v3\"},\"multicall(bytes[])\":{\"notice\":\"Call multiple functions in the current contract and return the data from all of them if they all succeed\"},\"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"},\"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\"},\"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Permits this contract to spend a given token from `msg.sender`\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/V3Migrator_flattened.sol\":\"V3Migrator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"contracts/V3Migrator_flattened.sol\":{\"keccak256\":\"0xe4b0060481b932f4d739b4ce0ce69c6a51c624fc2b42ad69d294c3ec5ce07265\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://5cf0944fccb0206a73bc927467b4cb7c0dcf34aa3bb719c71247039e876bd850\",\"dweb:/ipfs/QmNmnxspyKFmQoEHvvQ4FyeFz3xCyARasNAYp4YuK758LC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"createAndInitializePoolIfNecessary(address,address,uint24,uint160)": {
								"notice": "Creates a new pool if it does not exist, then initializes if not initialized"
							},
							"migrate((address,uint256,uint8,address,address,uint24,int24,int24,uint256,uint256,address,uint256,bool))": {
								"notice": "Migrates liquidity to v3 by burning v2 liquidity and minting a new position for v3"
							},
							"multicall(bytes[])": {
								"notice": "Call multiple functions in the current contract and return the data from all of them if they all succeed"
							},
							"selfPermit(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend a given token from `msg.sender`"
							},
							"selfPermitAllowed(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
							},
							"selfPermitAllowedIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter"
							},
							"selfPermitIfNecessary(address,uint256,uint256,uint8,bytes32,bytes32)": {
								"notice": "Permits this contract to spend a given token from `msg.sender`"
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/V3Migrator_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/V3Migrator_flattened.sol",
					"exportedSymbols": {
						"IERC165": [
							1472
						],
						"IERC20": [
							809
						],
						"IERC20Permit": [
							569
						],
						"IERC20PermitAllowed": [
							534
						],
						"IERC721": [
							1586
						],
						"IERC721Enumerable": [
							1648
						],
						"IERC721Metadata": [
							1673
						],
						"IERC721Permit": [
							1619
						],
						"IMulticall": [
							650
						],
						"INonfungiblePositionManager": [
							1859
						],
						"IPeripheryImmutableState": [
							1261
						],
						"IPeripheryPayments": [
							1315
						],
						"IPoolInitializer": [
							1332
						],
						"ISelfPermit": [
							636
						],
						"IUniswapV2Pair": [
							2100
						],
						"IUniswapV3Factory": [
							511
						],
						"IUniswapV3Pool": [
							429
						],
						"IUniswapV3PoolActions": [
							238
						],
						"IUniswapV3PoolDerivedState": [
							268
						],
						"IUniswapV3PoolEvents": [
							118
						],
						"IUniswapV3PoolImmutables": [
							414
						],
						"IUniswapV3PoolOwnerActions": [
							143
						],
						"IUniswapV3PoolState": [
							375
						],
						"IV3Migrator": [
							1461
						],
						"IWETH9": [
							824
						],
						"LowGasSafeMath": [
							2229
						],
						"Multicall": [
							732
						],
						"PeripheryImmutableState": [
							1290
						],
						"PoolAddress": [
							1246
						],
						"PoolInitializer": [
							1419
						],
						"SelfPermit": [
							986
						],
						"TransferHelper": [
							1155
						],
						"V3Migrator": [
							2519
						]
					},
					"id": 2520,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "151:88:0",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 118,
							"linearizedBaseContracts": [
								118
							],
							"name": "IUniswapV3PoolEvents",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "276:344:0",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"id": 9,
									"name": "Initialize",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "642:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 4,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "664:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 6,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "664:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "641:34:0"
									},
									"src": "625:51:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "682:551:0",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"id": 26,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1258:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1282:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 16,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1313:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 15,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1313:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 18,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1346:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 17,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "1346:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1379:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 19,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "1379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1403:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 21,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 24,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1428:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 23,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1428:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1248:201:0"
									},
									"src": "1238:212:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1456:493:0",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"id": 41,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "1977:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2008:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2008:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 33,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2035:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 32,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2035:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 35,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2068:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 34,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2068:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 37,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2101:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 36,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 39,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 41,
												"src": "2126:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 38,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1967:180:0"
									},
									"src": "1954:194:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 42,
										"nodeType": "StructuredDocumentation",
										"src": "2154:523:0",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"id": 56,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "2702:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2702:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "2733:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 45,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2733:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "2766:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 47,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "2766:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "2799:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 49,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "2799:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "2823:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 54,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "2848:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 53,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2848:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:177:0"
									},
									"src": "2682:188:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "2876:600:0",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"id": 73,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3501:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3533:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3568:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 62,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3568:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3592:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 64,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "3592:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 67,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3616:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 66,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "3616:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 69,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3646:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 68,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "3646:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 71,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "3673:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 70,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "3673:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:198:0"
									},
									"src": "3481:209:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "3696:562:0",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"id": 88,
									"name": "Flash",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4284:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4284:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4316:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 77,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4351:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 82,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4376:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 81,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 84,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4401:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 83,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 86,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4424:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 85,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4424:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4274:169:0"
									},
									"src": "4263:181:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "4450:451:0",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"id": 95,
									"name": "IncreaseObservationCardinalityNext",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 94,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "4956:36:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 90,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "4956:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 93,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "5002:36:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 92,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "5002:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4946:98:0"
									},
									"src": "4906:139:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "5051:370:0",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"id": 106,
									"name": "SetFeeProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 98,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5447:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 97,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 100,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5470:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 99,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 102,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5493:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 101,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5493:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 104,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5516:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 103,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "5516:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5446:92:0"
									},
									"src": "5426:113:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5545:384:0",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"id": 117,
									"name": "CollectProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "5956:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "5980:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 110,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 113,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "6007:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 112,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 115,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 117,
												"src": "6024:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 114,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "6024:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5955:85:0"
									},
									"src": "5934:107:0"
								}
							],
							"scope": 2520,
							"src": "239:5804:0"
						},
						{
							"id": 119,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6130:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 120,
								"nodeType": "StructuredDocumentation",
								"src": "6156:116:0",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 143,
							"linearizedBaseContracts": [
								143
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 121,
										"nodeType": "StructuredDocumentation",
										"src": "6315:205:0",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 128,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6549:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 122,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 125,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6569:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 124,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "6569:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6548:40:0"
									},
									"returnParameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6597:0:0"
									},
									"scope": 143,
									"src": "6525:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6604:483:0",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "7126:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7126:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "7153:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 132,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7153:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "7187:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 134,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7187:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7116:101:0"
									},
									"returnParameters": {
										"id": 141,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "7236:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 137,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 142,
												"src": "7253:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 139,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "7253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7235:34:0"
									},
									"scope": 143,
									"src": "7092:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "6272:1000:0"
						},
						{
							"id": 144,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "7354:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 145,
								"nodeType": "StructuredDocumentation",
								"src": "7380:102:0",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 238,
							"linearizedBaseContracts": [
								238
							],
							"name": "IUniswapV3PoolActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 146,
										"nodeType": "StructuredDocumentation",
										"src": "7520:206:0",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 151,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 151,
												"src": "7751:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 147,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7751:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7750:22:0"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7781:0:0"
									},
									"scope": 238,
									"src": "7731:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 152,
										"nodeType": "StructuredDocumentation",
										"src": "7788:1029:0",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 169,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "8845:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8845:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "8872:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 155,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "8872:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "8897:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 157,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "8897:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "8922:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 159,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "8922:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "8946:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 161,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8946:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8835:136:0"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 165,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "8990:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8990:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "9007:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8989:34:0"
									},
									"scope": 238,
									"src": "8822:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "9030:1053:0",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "10114:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10114:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "10141:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 173,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "10141:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "10166:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 175,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "10166:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "10191:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 177,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "10191:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "10225:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 179,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "10225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10104:151:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "10274:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 182,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "10274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 187,
												"src": "10291:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 184,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "10291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10273:34:0"
									},
									"scope": 238,
									"src": "10088:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 188,
										"nodeType": "StructuredDocumentation",
										"src": "10314:631:0",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 201,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "10973:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 189,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "10973:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "10998:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 191,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "10998:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "11023:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 193,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "11023:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10963:80:0"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "11062:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11062:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 199,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 201,
												"src": "11079:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 198,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11079:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11061:34:0"
									},
									"scope": 238,
									"src": "10950:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 202,
										"nodeType": "StructuredDocumentation",
										"src": "11102:1015:0",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 219,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 204,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "12145:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12145:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "12172:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 205,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "12172:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "12197:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 207,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "12197:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "12229:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 209,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "12264:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 211,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12264:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12135:154:0"
									},
									"returnParameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "12308:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 214,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "12308:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "12324:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 216,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "12324:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12307:32:0"
									},
									"scope": 238,
									"src": "12122:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "12346:657:0",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "13032:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13032:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "13059:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "13084:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "13109:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 227,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13109:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13022:112:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13143:0:0"
									},
									"scope": 238,
									"src": "13008:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "13150:367:0",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 237,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "13566:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 233,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "13566:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13565:35:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13609:0:0"
									},
									"scope": 238,
									"src": "13522:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "7482:6130:0"
						},
						{
							"id": 239,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13699:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "13725:222:0",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 268,
							"linearizedBaseContracts": [
								268
							],
							"name": "IUniswapV3PoolDerivedState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "13990:1045:0",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 253,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "15057:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 242,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "15057:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 243,
													"nodeType": "ArrayTypeName",
													"src": "15057:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15056:31:0"
									},
									"returnParameters": {
										"id": 252,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "15135:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 246,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "15135:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 247,
													"nodeType": "ArrayTypeName",
													"src": "15135:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 251,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "15167:51:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 249,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "15167:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 250,
													"nodeType": "ArrayTypeName",
													"src": "15167:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15134:85:0"
									},
									"scope": 268,
									"src": "15040:180:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "15226:771:0",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 267,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "16037:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 255,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "16037:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "16054:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 257,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "16054:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16036:34:0"
									},
									"returnParameters": {
										"id": 266,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "16131:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 260,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "16131:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "16171:37:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 262,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "16171:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "secondsInside",
												"nodeType": "VariableDeclaration",
												"scope": 267,
												"src": "16222:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 264,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "16222:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16117:135:0"
									},
									"scope": 268,
									"src": "16002:251:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "13947:2308:0"
						},
						{
							"id": 269,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16335:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 270,
								"nodeType": "StructuredDocumentation",
								"src": "16361:169:0",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 375,
							"linearizedBaseContracts": [
								375
							],
							"name": "IUniswapV3PoolState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "16566:1140:0",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 288,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "17725:2:0"
									},
									"returnParameters": {
										"id": 287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "17788:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 273,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "17788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "17822:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 275,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "17822:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "observationIndex",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "17846:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 277,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "17846:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "17883:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 279,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "17883:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "17926:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 281,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "17926:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "17973:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 283,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "17973:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "unlocked",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "18004:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 285,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18004:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17774:253:0"
									},
									"scope": 375,
									"src": "17711:317:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 289,
										"nodeType": "StructuredDocumentation",
										"src": "18034:168:0",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 294,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18236:2:0"
									},
									"returnParameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 294,
												"src": "18262:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 291,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18261:9:0"
									},
									"scope": 375,
									"src": "18207:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 295,
										"nodeType": "StructuredDocumentation",
										"src": "18277:168:0",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18479:2:0"
									},
									"returnParameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "18505:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18504:9:0"
									},
									"scope": 375,
									"src": "18450:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 301,
										"nodeType": "StructuredDocumentation",
										"src": "18520:147:0",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18693:2:0"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 304,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "18719:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 303,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "18719:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "18735:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 305,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "18735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18718:32:0"
									},
									"scope": 375,
									"src": "18672:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "18757:150:0",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18930:2:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "18956:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 311,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "18956:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18955:9:0"
									},
									"scope": 375,
									"src": "18912:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 315,
										"nodeType": "StructuredDocumentation",
										"src": "18971:1244:0",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 336,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "20235:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 316,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "20235:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20234:12:0"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "20307:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 319,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "20307:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 322,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "20343:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 321,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "20343:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "20376:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 323,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20376:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "20419:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 328,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "20462:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 327,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "20462:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "20503:38:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 329,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "20503:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "20555:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 331,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "20555:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "20590:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 333,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20590:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20293:323:0"
									},
									"scope": 375,
									"src": "20220:397:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "20623:99:0",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 344,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "wordPosition",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "20747:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 338,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "20747:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20746:20:0"
									},
									"returnParameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 342,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "20790:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20790:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20789:9:0"
									},
									"scope": 375,
									"src": "20727:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 345,
										"nodeType": "StructuredDocumentation",
										"src": "20805:700:0",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 360,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "21529:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 346,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "21529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21528:13:0"
									},
									"returnParameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "_liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "21602:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 349,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "21602:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "21634:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21634:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "21680:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21680:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "21726:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 355,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "21726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"scope": 360,
												"src": "21759:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 357,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "21759:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21588:200:0"
									},
									"scope": 375,
									"src": "21510:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 361,
										"nodeType": "StructuredDocumentation",
										"src": "21795:749:0",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 374,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "22571:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22570:15:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "22646:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 365,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "22646:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "22681:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 367,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "22681:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "22715:41:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 369,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "22715:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "22770:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22632:164:0"
									},
									"scope": 375,
									"src": "22549:248:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "16530:6269:0"
						},
						{
							"id": 376,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "22884:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 377,
								"nodeType": "StructuredDocumentation",
								"src": "22910:153:0",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 414,
							"linearizedBaseContracts": [
								414
							],
							"name": "IUniswapV3PoolImmutables",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 378,
										"nodeType": "StructuredDocumentation",
										"src": "23104:138:0",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23263:2:0"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "23289:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23289:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23288:9:0"
									},
									"scope": 414,
									"src": "23247:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "23304:113:0",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23437:2:0"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "23463:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 386,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23462:9:0"
									},
									"scope": 414,
									"src": "23422:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "23478:114:0",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23612:2:0"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "23638:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23638:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23637:9:0"
									},
									"scope": 414,
									"src": "23597:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "23653:84:0",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23754:2:0"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "23780:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 398,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "23780:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23779:8:0"
									},
									"scope": 414,
									"src": "23742:46:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "23794:358:0",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24177:2:0"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "24203:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 404,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "24203:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24202:7:0"
									},
									"scope": 414,
									"src": "24157:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "24216:363:0",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24612:2:0"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "24638:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 410,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "24638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24637:9:0"
									},
									"scope": 414,
									"src": "24584:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "23063:1586:0"
						},
						{
							"id": 415,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "24719:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 417,
										"name": "IUniswapV3PoolImmutables",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 414,
										"src": "25048:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolImmutables_$414",
											"typeString": "contract IUniswapV3PoolImmutables"
										}
									},
									"id": 418,
									"nodeType": "InheritanceSpecifier",
									"src": "25048:24:0"
								},
								{
									"baseName": {
										"id": 419,
										"name": "IUniswapV3PoolState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 375,
										"src": "25078:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolState_$375",
											"typeString": "contract IUniswapV3PoolState"
										}
									},
									"id": 420,
									"nodeType": "InheritanceSpecifier",
									"src": "25078:19:0"
								},
								{
									"baseName": {
										"id": 421,
										"name": "IUniswapV3PoolDerivedState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 268,
										"src": "25103:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolDerivedState_$268",
											"typeString": "contract IUniswapV3PoolDerivedState"
										}
									},
									"id": 422,
									"nodeType": "InheritanceSpecifier",
									"src": "25103:26:0"
								},
								{
									"baseName": {
										"id": 423,
										"name": "IUniswapV3PoolActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 238,
										"src": "25135:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolActions_$238",
											"typeString": "contract IUniswapV3PoolActions"
										}
									},
									"id": 424,
									"nodeType": "InheritanceSpecifier",
									"src": "25135:21:0"
								},
								{
									"baseName": {
										"id": 425,
										"name": "IUniswapV3PoolOwnerActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 143,
										"src": "25162:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolOwnerActions_$143",
											"typeString": "contract IUniswapV3PoolOwnerActions"
										}
									},
									"id": 426,
									"nodeType": "InheritanceSpecifier",
									"src": "25162:26:0"
								},
								{
									"baseName": {
										"id": 427,
										"name": "IUniswapV3PoolEvents",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 118,
										"src": "25194:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolEvents_$118",
											"typeString": "contract IUniswapV3PoolEvents"
										}
									},
									"id": 428,
									"nodeType": "InheritanceSpecifier",
									"src": "25194:20:0"
								}
							],
							"contractDependencies": [
								118,
								143,
								238,
								268,
								375,
								414
							],
							"contractKind": "interface",
							"documentation": {
								"id": 416,
								"nodeType": "StructuredDocumentation",
								"src": "24751:265:0",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 429,
							"linearizedBaseContracts": [
								429,
								118,
								143,
								238,
								268,
								375,
								414
							],
							"name": "IUniswapV3Pool",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2520,
							"src": "25016:203:0"
						},
						{
							"id": 430,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "25292:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 431,
								"nodeType": "StructuredDocumentation",
								"src": "25318:163:0",
								"text": "@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"
							},
							"fullyImplemented": false,
							"id": 511,
							"linearizedBaseContracts": [
								511
							],
							"name": "IUniswapV3Factory",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "25515:185:0",
										"text": "@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"
									},
									"id": 438,
									"name": "OwnerChanged",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"indexed": true,
												"mutability": "mutable",
												"name": "oldOwner",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "25724:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25724:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "25750:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25750:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25723:52:0"
									},
									"src": "25705:71:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "25782:421:0",
										"text": "@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"
									},
									"id": 451,
									"name": "PoolCreated",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"indexed": true,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "26235:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 440,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 443,
												"indexed": true,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "26267:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26267:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 445,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "26299:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 444,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "26299:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"indexed": false,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "26327:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 446,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "26327:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"indexed": false,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "26354:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26354:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26225:147:0"
									},
									"src": "26208:165:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 452,
										"nodeType": "StructuredDocumentation",
										"src": "26379:275:0",
										"text": "@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"
									},
									"id": 458,
									"name": "FeeAmountEnabled",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 457,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"indexed": true,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "26682:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 453,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "26682:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 456,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 458,
												"src": "26702:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 455,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "26702:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26681:47:0"
									},
									"src": "26659:70:0"
								},
								{
									"documentation": {
										"id": 459,
										"nodeType": "StructuredDocumentation",
										"src": "26735:163:0",
										"text": "@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"
									},
									"functionSelector": "8da5cb5b",
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26917:2:0"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "26943:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 461,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26942:9:0"
									},
									"scope": 511,
									"src": "26903:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "26958:348:0",
										"text": "@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"
									},
									"functionSelector": "22afcccb",
									"id": 472,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeAmountTickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "27341:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 466,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "27341:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27340:12:0"
									},
									"returnParameters": {
										"id": 471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 470,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 472,
												"src": "27376:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 469,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "27376:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27375:7:0"
									},
									"scope": 511,
									"src": "27311:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 473,
										"nodeType": "StructuredDocumentation",
										"src": "27389:471:0",
										"text": "@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"
									},
									"functionSelector": "1698ee82",
									"id": 484,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "27891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "27915:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27915:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "27939:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 478,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "27939:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27881:74:0"
									},
									"returnParameters": {
										"id": 483,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 484,
												"src": "27979:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27979:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27978:14:0"
									},
									"scope": 511,
									"src": "27865:128:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 485,
										"nodeType": "StructuredDocumentation",
										"src": "27999:554:0",
										"text": "@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"
									},
									"functionSelector": "a1671295",
									"id": 496,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "28587:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 486,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "28611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "28635:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 490,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "28635:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28577:74:0"
									},
									"returnParameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "28670:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28670:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28669:14:0"
									},
									"scope": 511,
									"src": "28558:126:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "28690:144:0",
										"text": "@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"
									},
									"functionSelector": "13af4035",
									"id": 502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setOwner",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "_owner",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "28857:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28857:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28856:16:0"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28881:0:0"
									},
									"scope": 511,
									"src": "28839:43:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 503,
										"nodeType": "StructuredDocumentation",
										"src": "28888:326:0",
										"text": "@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"
									},
									"functionSelector": "8a7c195f",
									"id": 510,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "enableFeeAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "29244:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 504,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "29244:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "29256:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 506,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "29256:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29243:31:0"
									},
									"returnParameters": {
										"id": 509,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29283:0:0"
									},
									"scope": 511,
									"src": "29219:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "25481:3805:0"
						},
						{
							"id": 512,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "29353:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 513,
								"nodeType": "StructuredDocumentation",
								"src": "29379:82:0",
								"text": "@title Interface for permit\n @notice Interface used by DAI/CHAI for permit"
							},
							"fullyImplemented": false,
							"id": 534,
							"linearizedBaseContracts": [
								534
							],
							"name": "IERC20PermitAllowed",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "29497:802:0",
										"text": "@notice Approve the spender to spend some tokens via the holder signature\n @dev This is the permit interface used by DAI and CHAI\n @param holder The address of the token holder, the token owner\n @param spender The address of the token spender\n @param nonce The holder's nonce, increases at each call to permit\n @param expiry The timestamp at which the permit is no longer valid\n @param allowed Boolean that sets approval amount, true for type(uint256).max and false for 0\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "8fcbaf0c",
									"id": 533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 531,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "holder",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "30329:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30329:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "30353:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30353:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "30378:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30378:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "30401:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "allowed",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "30425:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 523,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30425:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "30447:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 525,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "30447:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "30464:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 527,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30464:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 530,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "30483:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 529,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "30483:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30319:179:0"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30507:0:0"
									},
									"scope": 534,
									"src": "30304:204:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "29461:1049:0"
						},
						{
							"id": 535,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30572:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 536,
								"nodeType": "StructuredDocumentation",
								"src": "30605:482:0",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."
							},
							"fullyImplemented": false,
							"id": 569,
							"linearizedBaseContracts": [
								569
							],
							"name": "IERC20Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "31117:788:0",
										"text": " @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."
									},
									"functionSelector": "d505accf",
									"id": 554,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "31926:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "31941:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31941:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "31958:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "31973:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31973:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "31991:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 546,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "31991:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "32000:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 548,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 554,
												"src": "32011:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 550,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32011:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31925:96:0"
									},
									"returnParameters": {
										"id": 553,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32030:0:0"
									},
									"scope": 569,
									"src": "31910:121:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 555,
										"nodeType": "StructuredDocumentation",
										"src": "32037:294:0",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 562,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "32352:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32351:15:0"
									},
									"returnParameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 562,
												"src": "32390:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32390:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32389:9:0"
									},
									"scope": 569,
									"src": "32336:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 563,
										"nodeType": "StructuredDocumentation",
										"src": "32405:128:0",
										"text": " @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32616:2:0"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 568,
												"src": "32642:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 565,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "32642:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32641:9:0"
									},
									"scope": 569,
									"src": "32591:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "31088:1565:0"
						},
						{
							"id": 570,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "32703:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 571,
								"nodeType": "StructuredDocumentation",
								"src": "32729:117:0",
								"text": "@title Self Permit\n @notice Functionality to call permit on any EIP-2612-compliant token for use in the route"
							},
							"fullyImplemented": false,
							"id": 636,
							"linearizedBaseContracts": [
								636
							],
							"name": "ISelfPermit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 572,
										"nodeType": "StructuredDocumentation",
										"src": "32874:663:0",
										"text": "@notice Permits this contract to spend a given token from `msg.sender`\n @dev The `owner` is always msg.sender and the `spender` is always address(this).\n @param token The address of the token spent\n @param value The amount that can be spent of token\n @param deadline A timestamp, the current blocktime must be less than or equal to this timestamp\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "f3995c67",
									"id": 587,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selfPermit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 585,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 574,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "33571:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "33594:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 575,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33594:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "33617:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "33643:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 579,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "33643:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "33660:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 581,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 587,
												"src": "33679:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 583,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "33679:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33561:133:0"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33711:0:0"
									},
									"scope": 636,
									"src": "33542:170:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "33718:779:0",
										"text": "@notice Permits this contract to spend a given token from `msg.sender`\n @dev The `owner` is always msg.sender and the `spender` is always address(this).\n Can be used instead of #selfPermit to prevent calls from failing due to a frontrun of a call to #selfPermit\n @param token The address of the token spent\n @param value The amount that can be spent of token\n @param deadline A timestamp, the current blocktime must be less than or equal to this timestamp\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "c2e3140a",
									"id": 603,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selfPermitIfNecessary",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "34542:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "34565:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34565:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "34588:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34588:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "34614:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 595,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "34614:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "34631:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 597,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 603,
												"src": "34650:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 599,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "34650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34532:133:0"
									},
									"returnParameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34682:0:0"
									},
									"scope": 636,
									"src": "34502:181:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 604,
										"nodeType": "StructuredDocumentation",
										"src": "34689:670:0",
										"text": "@notice Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\n @dev The `owner` is always msg.sender and the `spender` is always address(this)\n @param token The address of the token spent\n @param nonce The current nonce of the owner\n @param expiry The timestamp at which the permit is no longer valid\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "4659a494",
									"id": 619,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selfPermitAllowed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "35400:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35400:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "35423:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 607,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35423:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "35446:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 609,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "35470:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 611,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "35470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "35487:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 613,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 619,
												"src": "35506:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 615,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35506:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35390:131:0"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35538:0:0"
									},
									"scope": 636,
									"src": "35364:175:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 620,
										"nodeType": "StructuredDocumentation",
										"src": "35545:801:0",
										"text": "@notice Permits this contract to spend the sender's tokens for permit signatures that have the `allowed` parameter\n @dev The `owner` is always msg.sender and the `spender` is always address(this)\n Can be used instead of #selfPermitAllowed to prevent calls from failing due to a frontrun of a call to #selfPermitAllowed.\n @param token The address of the token spent\n @param nonce The current nonce of the owner\n @param expiry The timestamp at which the permit is no longer valid\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "a4a78f0c",
									"id": 635,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "selfPermitAllowedIfNecessary",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "36398:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 621,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "36421:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 623,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "36444:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "36468:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 627,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "36468:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "36485:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 629,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "36485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 632,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 635,
												"src": "36504:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 631,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "36504:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36388:131:0"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36536:0:0"
									},
									"scope": 636,
									"src": "36351:186:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "32846:3693:0"
						},
						{
							"id": 637,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "36588:24:0"
						},
						{
							"id": 638,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "36613:19:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 639,
								"nodeType": "StructuredDocumentation",
								"src": "36634:109:0",
								"text": "@title Multicall interface\n @notice Enables calling multiple methods in a single call to the contract"
							},
							"fullyImplemented": false,
							"id": 650,
							"linearizedBaseContracts": [
								650
							],
							"name": "IMulticall",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 640,
										"nodeType": "StructuredDocumentation",
										"src": "36770:378:0",
										"text": "@notice Call multiple functions in the current contract and return the data from all of them if they all succeed\n @dev The `msg.value` should not be trusted for any method callable from multicall.\n @param data The encoded function data for each of the calls to make to this contract\n @return results The results from each of the calls passed in via data"
									},
									"functionSelector": "ac9650d8",
									"id": 649,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "multicall",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 644,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "37172:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 641,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "37172:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 642,
													"nodeType": "ArrayTypeName",
													"src": "37172:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37171:23:0"
									},
									"returnParameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "results",
												"nodeType": "VariableDeclaration",
												"scope": 649,
												"src": "37221:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 645,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "37221:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 646,
													"nodeType": "ArrayTypeName",
													"src": "37221:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37220:24:0"
									},
									"scope": 650,
									"src": "37153:92:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "36743:504:0"
						},
						{
							"id": 651,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "37289:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 653,
										"name": "IMulticall",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 650,
										"src": "37445:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMulticall_$650",
											"typeString": "contract IMulticall"
										}
									},
									"id": 654,
									"nodeType": "InheritanceSpecifier",
									"src": "37445:10:0"
								}
							],
							"contractDependencies": [
								650
							],
							"contractKind": "contract",
							"documentation": {
								"id": 652,
								"nodeType": "StructuredDocumentation",
								"src": "37315:99:0",
								"text": "@title Multicall\n @notice Enables calling multiple methods in a single call to the contract"
							},
							"fullyImplemented": true,
							"id": 732,
							"linearizedBaseContracts": [
								732,
								650
							],
							"name": "Multicall",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										649
									],
									"body": {
										"id": 730,
										"nodeType": "Block",
										"src": "37592:554:0",
										"statements": [
											{
												"expression": {
													"id": 672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 665,
														"name": "results",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "37602:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
															"typeString": "bytes memory[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 669,
																	"name": "data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 658,
																	"src": "37624:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																		"typeString": "bytes calldata[] calldata"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "37624:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "37612:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (bytes memory[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 666,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "37616:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																},
																"id": 667,
																"nodeType": "ArrayTypeName",
																"src": "37616:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
																	"typeString": "bytes[]"
																}
															}
														},
														"id": 671,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "37612:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
															"typeString": "bytes memory[] memory"
														}
													},
													"src": "37602:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
														"typeString": "bytes memory[] memory"
													}
												},
												"id": 673,
												"nodeType": "ExpressionStatement",
												"src": "37602:34:0"
											},
											{
												"body": {
													"id": 728,
													"nodeType": "Block",
													"src": "37688:452:0",
													"statements": [
														{
															"assignments": [
																686,
																688
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 686,
																	"mutability": "mutable",
																	"name": "success",
																	"nodeType": "VariableDeclaration",
																	"scope": 728,
																	"src": "37703:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 685,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "37703:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 688,
																	"mutability": "mutable",
																	"name": "result",
																	"nodeType": "VariableDeclaration",
																	"scope": 728,
																	"src": "37717:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 687,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "37717:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 698,
															"initialValue": {
																"arguments": [
																	{
																		"baseExpression": {
																			"id": 694,
																			"name": "data",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 658,
																			"src": "37767:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																				"typeString": "bytes calldata[] calldata"
																			}
																		},
																		"id": 696,
																		"indexExpression": {
																			"id": 695,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 675,
																			"src": "37772:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "37767:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_calldata_ptr",
																			"typeString": "bytes calldata"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 691,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "37748:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Multicall_$732",
																					"typeString": "contract Multicall"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Multicall_$732",
																					"typeString": "contract Multicall"
																				}
																			],
																			"id": 690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "37740:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 689,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "37740:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37740:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "delegatecall",
																	"nodeType": "MemberAccess",
																	"src": "37740:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) returns (bool,bytes memory)"
																	}
																},
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "37740:35:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
																	"typeString": "tuple(bool,bytes memory)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "37702:73:0"
														},
														{
															"condition": {
																"id": 700,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "37794:8:0",
																"subExpression": {
																	"id": 699,
																	"name": "success",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 686,
																	"src": "37795:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 721,
															"nodeType": "IfStatement",
															"src": "37790:306:0",
															"trueBody": {
																"id": 720,
																"nodeType": "Block",
																"src": "37804:292:0",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 704,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 701,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 688,
																					"src": "37906:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 702,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "37906:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"hexValue": "3638",
																				"id": 703,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "37922:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_68_by_1",
																					"typeString": "int_const 68"
																				},
																				"value": "68"
																			},
																			"src": "37906:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 708,
																		"nodeType": "IfStatement",
																		"src": "37902:32:0",
																		"trueBody": {
																			"expression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 705,
																					"name": "revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [
																						4294967277,
																						4294967277
																					],
																					"referencedDeclaration": 4294967277,
																					"src": "37926:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_revert_pure$__$returns$__$",
																						"typeString": "function () pure"
																					}
																				},
																				"id": 706,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "37926:8:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 707,
																			"nodeType": "ExpressionStatement",
																			"src": "37926:8:0"
																		}
																	},
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "37961:67:0",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "37983:27:0",
																					"value": {
																						"arguments": [
																							{
																								"name": "result",
																								"nodeType": "YulIdentifier",
																								"src": "37997:6:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "38005:4:0",
																								"type": "",
																								"value": "0x04"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "37993:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "37993:17:0"
																					},
																					"variableNames": [
																						{
																							"name": "result",
																							"nodeType": "YulIdentifier",
																							"src": "37983:6:0"
																						}
																					]
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 688,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "37983:6:0",
																				"valueSize": 1
																			},
																			{
																				"declaration": 688,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "37997:6:0",
																				"valueSize": 1
																			}
																		],
																		"id": 709,
																		"nodeType": "InlineAssembly",
																		"src": "37952:76:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 713,
																							"name": "result",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 688,
																							"src": "38063:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						{
																							"components": [
																								{
																									"id": 715,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "38072:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																										"typeString": "type(string storage pointer)"
																									},
																									"typeName": {
																										"id": 714,
																										"name": "string",
																										"nodeType": "ElementaryTypeName",
																										"src": "38072:6:0",
																										"typeDescriptions": {}
																									}
																								}
																							],
																							"id": 716,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "38071:8:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																								"typeString": "type(string storage pointer)"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							},
																							{
																								"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																								"typeString": "type(string storage pointer)"
																							}
																						],
																						"expression": {
																							"id": 711,
																							"name": "abi",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967295,
																							"src": "38052:3:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_abi",
																								"typeString": "abi"
																							}
																						},
																						"id": 712,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberName": "decode",
																						"nodeType": "MemberAccess",
																						"src": "38052:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																							"typeString": "function () pure"
																						}
																					},
																					"id": 717,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "38052:28:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 710,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967277,
																					4294967277
																				],
																				"referencedDeclaration": 4294967277,
																				"src": "38045:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 718,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "38045:36:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 719,
																		"nodeType": "ExpressionStatement",
																		"src": "38045:36:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 722,
																		"name": "results",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 663,
																		"src": "38110:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
																			"typeString": "bytes memory[] memory"
																		}
																	},
																	"id": 724,
																	"indexExpression": {
																		"id": 723,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 675,
																		"src": "38118:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "38110:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 725,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 688,
																	"src": "38123:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"src": "38110:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 727,
															"nodeType": "ExpressionStatement",
															"src": "38110:19:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 678,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "37666:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 679,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "37670:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
																"typeString": "bytes calldata[] calldata"
															}
														},
														"id": 680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "37670:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "37666:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 729,
												"initializationExpression": {
													"assignments": [
														675
													],
													"declarations": [
														{
															"constant": false,
															"id": 675,
															"mutability": "mutable",
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 729,
															"src": "37651:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 674,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "37651:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 677,
													"initialValue": {
														"hexValue": "30",
														"id": 676,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "37663:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "37651:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 683,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "37683:3:0",
														"subExpression": {
															"id": 682,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 675,
															"src": "37683:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 684,
													"nodeType": "ExpressionStatement",
													"src": "37683:3:0"
												},
												"nodeType": "ForStatement",
												"src": "37646:494:0"
											}
										]
									},
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "37462:26:0",
										"text": "@inheritdoc IMulticall"
									},
									"functionSelector": "ac9650d8",
									"id": 731,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "multicall",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 660,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "37550:8:0"
									},
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "37512:21:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 656,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "37512:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 657,
													"nodeType": "ArrayTypeName",
													"src": "37512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37511:23:0"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "results",
												"nodeType": "VariableDeclaration",
												"scope": 731,
												"src": "37568:22:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes_memory_ptr_$dyn_memory_ptr",
													"typeString": "bytes[]"
												},
												"typeName": {
													"baseType": {
														"id": 661,
														"name": "bytes",
														"nodeType": "ElementaryTypeName",
														"src": "37568:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_storage_ptr",
															"typeString": "bytes"
														}
													},
													"id": 662,
													"nodeType": "ArrayTypeName",
													"src": "37568:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
														"typeString": "bytes[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37567:24:0"
									},
									"scope": 732,
									"src": "37493:653:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2520,
							"src": "37414:734:0"
						},
						{
							"id": 733,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38209:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 734,
								"nodeType": "StructuredDocumentation",
								"src": "38234:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 809,
							"linearizedBaseContracts": [
								809
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 735,
										"nodeType": "StructuredDocumentation",
										"src": "38328:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38419:2:0"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "38445:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38444:9:0"
									},
									"scope": 809,
									"src": "38399:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "38460:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 748,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "38556:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38555:17:0"
									},
									"returnParameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 748,
												"src": "38596:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38596:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38595:9:0"
									},
									"scope": 809,
									"src": "38537:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 749,
										"nodeType": "StructuredDocumentation",
										"src": "38611:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 758,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "38843:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 750,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38843:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "38862:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38862:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38842:35:0"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "38896:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 755,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38896:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38895:6:0"
									},
									"scope": 809,
									"src": "38825:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 759,
										"nodeType": "StructuredDocumentation",
										"src": "38908:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 768,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "39196:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "39211:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 762,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39211:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39195:32:0"
									},
									"returnParameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 768,
												"src": "39251:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39251:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39250:9:0"
									},
									"scope": 809,
									"src": "39177:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 769,
										"nodeType": "StructuredDocumentation",
										"src": "39266:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 778,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "39930:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 770,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "39947:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39947:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39929:33:0"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 778,
												"src": "39981:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "39981:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39980:6:0"
									},
									"scope": 809,
									"src": "39913:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 779,
										"nodeType": "StructuredDocumentation",
										"src": "39993:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 790,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "40316:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "40332:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 782,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "40351:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40351:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40315:51:0"
									},
									"returnParameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 790,
												"src": "40385:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 787,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "40385:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40384:6:0"
									},
									"scope": 809,
									"src": "40294:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 791,
										"nodeType": "StructuredDocumentation",
										"src": "40397:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 799,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "40575:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40575:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 795,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "40597:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40597:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 797,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 799,
												"src": "40617:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40574:57:0"
									},
									"src": "40560:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "40638:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 808,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "40806:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 801,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40806:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 804,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "40829:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40829:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 808,
												"src": "40854:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 805,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40854:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40805:63:0"
									},
									"src": "40791:78:0"
								}
							],
							"scope": 2520,
							"src": "38305:2566:0"
						},
						{
							"id": 810,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "40925:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 812,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 809,
										"src": "41002:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$809",
											"typeString": "contract IERC20"
										}
									},
									"id": 813,
									"nodeType": "InheritanceSpecifier",
									"src": "41002:6:0"
								}
							],
							"contractDependencies": [
								809
							],
							"contractKind": "interface",
							"documentation": {
								"id": 811,
								"nodeType": "StructuredDocumentation",
								"src": "40951:31:0",
								"text": "@title Interface for WETH9"
							},
							"fullyImplemented": false,
							"id": 824,
							"linearizedBaseContracts": [
								824,
								809
							],
							"name": "IWETH9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "41015:46:0",
										"text": "@notice Deposit ether to get wrapped ether"
									},
									"functionSelector": "d0e30db0",
									"id": 817,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41082:2:0"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41101:0:0"
									},
									"scope": 824,
									"src": "41066:36:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 818,
										"nodeType": "StructuredDocumentation",
										"src": "41108:47:0",
										"text": "@notice Withdraw wrapped ether to get ether"
									},
									"functionSelector": "2e1a7d4d",
									"id": 823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "41178:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41177:9:0"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41195:0:0"
									},
									"scope": 824,
									"src": "41160:36:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "40982:216:0"
						},
						{
							"id": 825,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41241:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 827,
										"name": "ISelfPermit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 636,
										"src": "41598:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISelfPermit_$636",
											"typeString": "contract ISelfPermit"
										}
									},
									"id": 828,
									"nodeType": "InheritanceSpecifier",
									"src": "41598:11:0"
								}
							],
							"contractDependencies": [
								636
							],
							"contractKind": "contract",
							"documentation": {
								"id": 826,
								"nodeType": "StructuredDocumentation",
								"src": "41271:295:0",
								"text": "@title Self Permit\n @notice Functionality to call permit on any EIP-2612-compliant token for use in the route\n @dev These functions are expected to be embedded in multicalls to allow EOAs to approve a contract and call a function\n that requires an approval in a single transaction."
							},
							"fullyImplemented": true,
							"id": 986,
							"linearizedBaseContracts": [
								986,
								636
							],
							"name": "SelfPermit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										587
									],
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "41825:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 849,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "41862:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 850,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "41862:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 853,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "41882:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SelfPermit_$986",
																		"typeString": "contract SelfPermit"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SelfPermit_$986",
																		"typeString": "contract SelfPermit"
																	}
																],
																"id": 852,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "41874:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 851,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "41874:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41874:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 855,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "41889:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 856,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 835,
															"src": "41896:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 857,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 837,
															"src": "41906:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 858,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 839,
															"src": "41909:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 859,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 841,
															"src": "41912:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 846,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "41848:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 845,
																"name": "IERC20Permit",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 569,
																"src": "41835:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Permit_$569_$",
																	"typeString": "type(contract IERC20Permit)"
																}
															},
															"id": 847,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "41835:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Permit_$569",
																"typeString": "contract IERC20Permit"
															}
														},
														"id": 848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 554,
														"src": "41835:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint8,bytes32,bytes32) external"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41835:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "41835:79:0"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "41616:27:0",
										"text": "@inheritdoc ISelfPermit"
									},
									"functionSelector": "f3995c67",
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "selfPermit",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 843,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "41816:8:0"
									},
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "41677:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41677:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "41700:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41700:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "41723:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "41749:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 836,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "41749:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "41766:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 838,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "41766:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "41785:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 840,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "41785:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41667:133:0"
									},
									"returnParameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41825:0:0"
									},
									"scope": 986,
									"src": "41648:273:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										603
									],
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "42149:124:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 892,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 884,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "42187:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 885,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "42187:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"arguments": [
																	{
																		"id": 888,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "42207:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SelfPermit_$986",
																			"typeString": "contract SelfPermit"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SelfPermit_$986",
																			"typeString": "contract SelfPermit"
																		}
																	],
																	"id": 887,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "42199:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 886,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "42199:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 889,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42199:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 881,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "42170:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 880,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "42163:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$809_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 882,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42163:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$809",
																	"typeString": "contract IERC20"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 768,
															"src": "42163:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42163:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 891,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "42216:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42163:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 902,
												"nodeType": "IfStatement",
												"src": "42159:107:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 894,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "42234:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 895,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 868,
																"src": "42241:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 896,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 870,
																"src": "42248:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 897,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 872,
																"src": "42258:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 898,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 874,
																"src": "42261:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 899,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "42264:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 893,
															"name": "selfPermit",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 863,
															"src": "42223:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
																"typeString": "function (address,uint256,uint256,uint8,bytes32,bytes32)"
															}
														},
														"id": 900,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42223:43:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 901,
													"nodeType": "ExpressionStatement",
													"src": "42223:43:0"
												}
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "41927:27:0",
										"text": "@inheritdoc ISelfPermit"
									},
									"functionSelector": "c2e3140a",
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "selfPermitIfNecessary",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 878,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "42140:8:0"
									},
									"parameters": {
										"id": 877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "41999:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41999:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "42022:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "42045:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "42071:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 871,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "42071:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "42088:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 873,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42088:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "42107:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 875,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42107:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41989:133:0"
									},
									"returnParameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42149:0:0"
									},
									"scope": 986,
									"src": "41959:314:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										619
									],
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "42493:107:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 925,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "42537:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 926,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "42537:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 929,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "42557:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SelfPermit_$986",
																		"typeString": "contract SelfPermit"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SelfPermit_$986",
																		"typeString": "contract SelfPermit"
																	}
																],
																"id": 928,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42549:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 927,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "42549:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 930,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42549:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 931,
															"name": "nonce",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 909,
															"src": "42564:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 932,
															"name": "expiry",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 911,
															"src": "42571:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 933,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42579:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 934,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 913,
															"src": "42585:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"id": 935,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 915,
															"src": "42588:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 936,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "42591:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 922,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 907,
																	"src": "42523:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 921,
																"name": "IERC20PermitAllowed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 534,
																"src": "42503:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20PermitAllowed_$534_$",
																	"typeString": "type(contract IERC20PermitAllowed)"
																}
															},
															"id": 923,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42503:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20PermitAllowed_$534",
																"typeString": "contract IERC20PermitAllowed"
															}
														},
														"id": 924,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "permit",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 533,
														"src": "42503:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bool,uint8,bytes32,bytes32) external"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42503:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "42503:90:0"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "42279:27:0",
										"text": "@inheritdoc ISelfPermit"
									},
									"functionSelector": "4659a494",
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "selfPermitAllowed",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 919,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "42484:8:0"
									},
									"parameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "42347:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42347:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "42370:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 908,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "42393:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 913,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "42417:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 912,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "42417:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "42434:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 914,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42434:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "42453:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 916,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42453:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42337:131:0"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42493:0:0"
									},
									"scope": 986,
									"src": "42311:289:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										635
									],
									"body": {
										"id": 984,
										"nodeType": "Block",
										"src": "42833:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 961,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "42871:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 962,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "42871:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															{
																"arguments": [
																	{
																		"id": 965,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "42891:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_SelfPermit_$986",
																			"typeString": "contract SelfPermit"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_SelfPermit_$986",
																			"typeString": "contract SelfPermit"
																		}
																	],
																	"id": 964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "42883:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 963,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "42883:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42883:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 958,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 943,
																		"src": "42854:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 957,
																	"name": "IERC20",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 809,
																	"src": "42847:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC20_$809_$",
																		"typeString": "type(contract IERC20)"
																	}
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42847:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$809",
																	"typeString": "contract IERC20"
																}
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "allowance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 768,
															"src": "42847:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address,address) view external returns (uint256)"
															}
														},
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42847:50:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 970,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "42905:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 969,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "42905:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 968,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "42900:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 971,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42900:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 972,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "42900:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42847:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 983,
												"nodeType": "IfStatement",
												"src": "42843:136:0",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 975,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 943,
																"src": "42949:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 976,
																"name": "nonce",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "42956:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 977,
																"name": "expiry",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 947,
																"src": "42963:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 978,
																"name": "v",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 949,
																"src": "42971:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															{
																"id": 979,
																"name": "r",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 951,
																"src": "42974:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 980,
																"name": "s",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 953,
																"src": "42977:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 974,
															"name": "selfPermitAllowed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 940,
															"src": "42931:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$__$",
																"typeString": "function (address,uint256,uint256,uint8,bytes32,bytes32)"
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42931:48:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 982,
													"nodeType": "ExpressionStatement",
													"src": "42931:48:0"
												}
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "42606:27:0",
										"text": "@inheritdoc ISelfPermit"
									},
									"functionSelector": "a4a78f0c",
									"id": 985,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "selfPermitAllowedIfNecessary",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 955,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "42824:8:0"
									},
									"parameters": {
										"id": 954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "42685:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42685:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "42708:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "expiry",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "42731:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "42755:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 948,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "42755:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 951,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "42772:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 950,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 953,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 985,
												"src": "42791:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 952,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "42791:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42675:131:0"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42833:0:0"
									},
									"scope": 986,
									"src": "42638:348:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "41566:1422:0"
						},
						{
							"id": 987,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "43040:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1155,
							"linearizedBaseContracts": [
								1155
							],
							"name": "TransferHelper",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1035,
										"nodeType": "Block",
										"src": "43628:229:0",
										"statements": [
											{
												"assignments": [
													1000,
													1002
												],
												"declarations": [
													{
														"constant": false,
														"id": 1000,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1035,
														"src": "43639:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 999,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "43639:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1002,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 1035,
														"src": "43653:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1001,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "43653:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1015,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1007,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "43720:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$809_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 790,
																		"src": "43720:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transferFrom(address,address,uint256) returns (bool)"
																		}
																	},
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "43720:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1010,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 992,
																	"src": "43750:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1011,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 994,
																	"src": "43756:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1012,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 996,
																	"src": "43760:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1005,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "43697:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1006,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "43697:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "43697:69:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1003,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 990,
															"src": "43686:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "43686:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1014,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43686:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "43638:129:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1017,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1000,
																"src": "43785:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1029,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1021,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1018,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "43797:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1019,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "43797:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1020,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "43812:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "43797:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1024,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1002,
																					"src": "43828:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1026,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "43835:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1025,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "43835:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1027,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "43834:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1022,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "43817:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "43817:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1028,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "43817:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "43797:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1030,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43796:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "43785:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535446",
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43844:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															},
															"value": "STF"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a1c4b1d67db284650e7cfb49cb11ce76848206ad466478425bd3418f8bbb9a86",
																"typeString": "literal_string \"STF\""
															}
														],
														"id": 1016,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "43777:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43777:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1034,
												"nodeType": "ExpressionStatement",
												"src": "43777:73:0"
											}
										]
									},
									"documentation": {
										"id": 988,
										"nodeType": "StructuredDocumentation",
										"src": "43096:398:0",
										"text": "@notice Transfers tokens from the targeted address to the given destination\n @notice Errors with 'STF' if transfer fails\n @param token The contract address of the token to be transferred\n @param from The originating address from which the tokens will be transferred\n @param to The destination address of the transfer\n @param value The amount to be transferred"
									},
									"id": 1036,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "43534:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 989,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43534:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 992,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "43557:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 991,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43557:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 994,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "43579:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43579:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 996,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1036,
												"src": "43599:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "43599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43524:94:0"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43628:0:0"
									},
									"scope": 1155,
									"src": "43499:358:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1081,
										"nodeType": "Block",
										"src": "44252:206:0",
										"statements": [
											{
												"assignments": [
													1047,
													1049
												],
												"declarations": [
													{
														"constant": false,
														"id": 1047,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1081,
														"src": "44263:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1046,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "44263:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1049,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 1081,
														"src": "44277:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1048,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "44277:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1061,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1054,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "44332:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$809_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1055,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 758,
																		"src": "44332:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.transfer(address,uint256) returns (bool)"
																		}
																	},
																	"id": 1056,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "44332:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1057,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "44358:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1058,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "44362:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1052,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "44309:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "44309:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1059,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44309:59:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1050,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1039,
															"src": "44298:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "44298:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1060,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44298:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44262:107:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1063,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1047,
																"src": "44387:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1075,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1067,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1064,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "44399:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1065,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "44399:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1066,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "44414:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "44399:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1070,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1049,
																					"src": "44430:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1072,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "44437:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1071,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "44437:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1073,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "44436:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1068,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "44419:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1069,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "44419:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1074,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "44419:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "44399:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1076,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "44398:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "44387:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5354",
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "44446:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															},
															"value": "ST"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8e992d6a09e3feb7936717fa482f3a7086f18407e19b697f3153d17fd25870ca",
																"typeString": "literal_string \"ST\""
															}
														],
														"id": 1062,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "44379:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1079,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44379:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1080,
												"nodeType": "ExpressionStatement",
												"src": "44379:72:0"
											}
										]
									},
									"documentation": {
										"id": 1037,
										"nodeType": "StructuredDocumentation",
										"src": "43863:281:0",
										"text": "@notice Transfers tokens from msg.sender to a recipient\n @dev Errors with ST if transfer fails\n @param token The contract address of the token which will be transferred\n @param to The recipient of the transfer\n @param value The value of the transfer"
									},
									"id": 1082,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1044,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "44180:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1038,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44180:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "44203:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44203:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "44223:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1042,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44223:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44170:72:0"
									},
									"returnParameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44252:0:0"
									},
									"scope": 1155,
									"src": "44149:309:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "44913:205:0",
										"statements": [
											{
												"assignments": [
													1093,
													1095
												],
												"declarations": [
													{
														"constant": false,
														"id": 1093,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1127,
														"src": "44924:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1092,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "44924:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1095,
														"mutability": "mutable",
														"name": "data",
														"nodeType": "VariableDeclaration",
														"scope": 1127,
														"src": "44938:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1094,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "44938:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1107,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"expression": {
																			"id": 1100,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 809,
																			"src": "44993:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$809_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 1101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 778,
																		"src": "44993:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function IERC20.approve(address,uint256) returns (bool)"
																		}
																	},
																	"id": 1102,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "44993:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"id": 1103,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1087,
																	"src": "45018:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1104,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1089,
																	"src": "45022:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 1098,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "44970:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1099,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"src": "44970:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44970:58:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1096,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1085,
															"src": "44959:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1097,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "44959:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44959:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44923:106:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1109,
																"name": "success",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1093,
																"src": "45047:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1121,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1113,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1110,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1095,
																					"src": "45059:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				"id": 1111,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "length",
																				"nodeType": "MemberAccess",
																				"src": "45059:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 1112,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "45074:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "45059:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "||",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1116,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1095,
																					"src": "45090:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				},
																				{
																					"components": [
																						{
																							"id": 1118,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "45097:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_bool_$",
																								"typeString": "type(bool)"
																							},
																							"typeName": {
																								"id": 1117,
																								"name": "bool",
																								"nodeType": "ElementaryTypeName",
																								"src": "45097:4:0",
																								"typeDescriptions": {}
																							}
																						}
																					],
																					"id": 1119,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "45096:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					},
																					{
																						"typeIdentifier": "t_type$_t_bool_$",
																						"typeString": "type(bool)"
																					}
																				],
																				"expression": {
																					"id": 1114,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967295,
																					"src": "45079:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 1115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "decode",
																				"nodeType": "MemberAccess",
																				"src": "45079:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 1120,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "45079:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "45059:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1122,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "45058:46:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "45047:57:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5341",
															"id": 1124,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45106:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															},
															"value": "SA"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0c382912095e7706ed01a66755a50c713445aceaf5a9168954498b03dd381faa",
																"typeString": "literal_string \"SA\""
															}
														],
														"id": 1108,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "45039:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45039:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1126,
												"nodeType": "ExpressionStatement",
												"src": "45039:72:0"
											}
										]
									},
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "44464:342:0",
										"text": "@notice Approves the stipulated contract to spend the given allowance in the given token\n @dev Errors with 'SA' if transfer fails\n @param token The contract address of the token to be approved\n @param to The target of the approval\n @param value The amount of the given token the target will be allowed to spend"
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "44841:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1084,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "44864:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44864:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "44884:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1088,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44884:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44831:72:0"
									},
									"returnParameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44913:0:0"
									},
									"scope": 1155,
									"src": "44811:307:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1153,
										"nodeType": "Block",
										"src": "45369:104:0",
										"statements": [
											{
												"assignments": [
													1137,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1137,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"scope": 1153,
														"src": "45380:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1136,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "45380:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1147,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1144,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45430:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "45420:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 1142,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "45424:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 1145,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45420:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1138,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1131,
																"src": "45398:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "45398:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1140,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1133,
																"src": "45413:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "45398:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45398:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45379:54:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1149,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1137,
															"src": "45451:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "535445",
															"id": 1150,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45460:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															},
															"value": "STE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48541fce89df928ec30caa1aed6c0cd94b8e2ef76b3c68b10b9a184ceadb93d4",
																"typeString": "literal_string \"STE\""
															}
														],
														"id": 1148,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "45443:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45443:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1152,
												"nodeType": "ExpressionStatement",
												"src": "45443:23:0"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "45124:179:0",
										"text": "@notice Transfers ETH to the recipient address\n @dev Fails with `STE`\n @param to The destination of the transfer\n @param value The value to be transferred"
									},
									"id": 1154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "45333:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45333:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1133,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "45345:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45345:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45332:27:0"
									},
									"returnParameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45369:0:0"
									},
									"scope": 1155,
									"src": "45308:165:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2520,
							"src": "43067:2408:0"
						},
						{
							"id": 1156,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "45524:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1157,
								"nodeType": "StructuredDocumentation",
								"src": "45550:96:0",
								"text": "@title Provides functions for deriving a pool address from the factory, tokens, and the fee"
							},
							"fullyImplemented": true,
							"id": 1246,
							"linearizedBaseContracts": [
								1246
							],
							"name": "PoolAddress",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 1160,
									"mutability": "constant",
									"name": "POOL_INIT_CODE_HASH",
									"nodeType": "VariableDeclaration",
									"scope": 1246,
									"src": "45672:114:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1158,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "45672:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865333466313939623139623262346634376636383434323631396435353535323764323434663738613332393765613839333235663834336638376238623534",
										"id": 1159,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "45720:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102814774271675688723325049954498779091328469440286648861889194717372678376276_by_1",
											"typeString": "int_const 1028...(70 digits omitted)...6276"
										},
										"value": "0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "PoolAddress.PoolKey",
									"id": 1167,
									"members": [
										{
											"constant": false,
											"id": 1162,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 1167,
											"src": "45866:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1161,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "45866:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1164,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 1167,
											"src": "45890:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1163,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "45890:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1166,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 1167,
											"src": "45914:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1165,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "45914:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolKey",
									"nodeType": "StructDefinition",
									"scope": 1246,
									"src": "45841:90:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1197,
										"nodeType": "Block",
										"src": "46396:141:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1179,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1170,
														"src": "46410:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1180,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1172,
														"src": "46419:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "46410:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1190,
												"nodeType": "IfStatement",
												"src": "46406:56:0",
												"trueBody": {
													"expression": {
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 1182,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "46428:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1183,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "46436:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1184,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "46427:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 1185,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1172,
																	"src": "46447:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1186,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1170,
																	"src": "46455:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 1187,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "46446:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"src": "46427:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1189,
													"nodeType": "ExpressionStatement",
													"src": "46427:35:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1192,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1170,
															"src": "46496:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1193,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1172,
															"src": "46512:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1194,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1174,
															"src": "46525:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 1191,
														"name": "PoolKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "46479:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PoolKey_$1167_storage_ptr_$",
															"typeString": "type(struct PoolAddress.PoolKey storage pointer)"
														}
													},
													"id": 1195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"token0",
														"token1",
														"fee"
													],
													"nodeType": "FunctionCall",
													"src": "46479:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1167_memory_ptr",
														"typeString": "struct PoolAddress.PoolKey memory"
													}
												},
												"functionReturnParameters": 1178,
												"id": 1196,
												"nodeType": "Return",
												"src": "46472:58:0"
											}
										]
									},
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "45937:321:0",
										"text": "@notice Returns PoolKey: the ordered tokens with the matched fee levels\n @param tokenA The first token of a pool, unsorted\n @param tokenB The second token of a pool, unsorted\n @param fee The fee level of the pool\n @return Poolkey The pool details with ordered token0 and token1 assignments"
									},
									"id": 1198,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "46292:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "46316:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "46340:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1173,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "46340:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46282:74:0"
									},
									"returnParameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "46380:14:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1167_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1176,
													"name": "PoolKey",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1167,
													"src": "46380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1167_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46379:16:0"
									},
									"scope": 1246,
									"src": "46263:274:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1244,
										"nodeType": "Block",
										"src": "46882:414:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1213,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1209,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1203,
																	"src": "46900:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1167_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1162,
																"src": "46900:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 1211,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1203,
																	"src": "46913:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$1167_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 1212,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1164,
																"src": "46913:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "46900:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1208,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46892:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46892:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1215,
												"nodeType": "ExpressionStatement",
												"src": "46892:32:0"
											},
											{
												"expression": {
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1216,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "46934:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "ff",
																						"id": 1224,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "hexString",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "47060:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																							"typeString": "literal_string hex\"ff\""
																						}
																					},
																					{
																						"id": 1225,
																						"name": "factory",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1201,
																						"src": "47093:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"expression": {
																											"id": 1229,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1203,
																											"src": "47147:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$1167_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 1230,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token0",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1162,
																										"src": "47147:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"expression": {
																											"id": 1231,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1203,
																											"src": "47159:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$1167_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 1232,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token1",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1164,
																										"src": "47159:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"expression": {
																											"id": 1233,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1203,
																											"src": "47171:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$1167_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 1234,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "fee",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1166,
																										"src": "47171:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint24",
																											"typeString": "uint24"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_uint24",
																											"typeString": "uint24"
																										}
																									],
																									"expression": {
																										"id": 1227,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967295,
																										"src": "47136:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 1228,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encode",
																									"nodeType": "MemberAccess",
																									"src": "47136:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 1235,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "47136:43:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1226,
																							"name": "keccak256",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967288,
																							"src": "47126:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																								"typeString": "function (bytes memory) pure returns (bytes32)"
																							}
																						},
																						"id": 1236,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "47126:54:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 1237,
																						"name": "POOL_INIT_CODE_HASH",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1160,
																						"src": "47206:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																							"typeString": "literal_string hex\"ff\""
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"expression": {
																						"id": 1222,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "47018:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 1223,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "47018:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 1238,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "47018:229:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1221,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "46987:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 1239,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "46987:278:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "46962:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1219,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "46962:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46962:317:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "46941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1217,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "46941:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46941:348:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "46934:355:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "46934:355:0"
											}
										]
									},
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "46543:236:0",
										"text": "@notice Deterministically computes the pool address given the factory and PoolKey\n @param factory The Uniswap V3 factory contract address\n @param key The PoolKey\n @return pool The contract address of the V3 pool"
									},
									"id": 1245,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1201,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "46808:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46808:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1203,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "46825:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$1167_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1202,
													"name": "PoolKey",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1167,
													"src": "46825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$1167_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46807:37:0"
									},
									"returnParameters": {
										"id": 1207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1245,
												"src": "46868:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46868:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46867:14:0"
									},
									"scope": 1246,
									"src": "46784:512:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2520,
							"src": "45646:1652:0"
						},
						{
							"id": 1247,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "47361:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1248,
								"nodeType": "StructuredDocumentation",
								"src": "47387:91:0",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 1261,
							"linearizedBaseContracts": [
								1261
							],
							"name": "IPeripheryImmutableState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "47519:57:0",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 1254,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47597:2:0"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1254,
												"src": "47623:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47623:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47622:9:0"
									},
									"scope": 1261,
									"src": "47581:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1255,
										"nodeType": "StructuredDocumentation",
										"src": "47638:40:0",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 1260,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47697:2:0"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1258,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1260,
												"src": "47723:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47723:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47722:9:0"
									},
									"scope": 1261,
									"src": "47683:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "47478:256:0"
						},
						{
							"id": 1262,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "47790:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1264,
										"name": "IPeripheryImmutableState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1261,
										"src": "47944:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPeripheryImmutableState_$1261",
											"typeString": "contract IPeripheryImmutableState"
										}
									},
									"id": 1265,
									"nodeType": "InheritanceSpecifier",
									"src": "47944:24:0"
								}
							],
							"contractDependencies": [
								1261
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1263,
								"nodeType": "StructuredDocumentation",
								"src": "47816:83:0",
								"text": "@title Immutable state\n @notice Immutable state used by periphery contracts"
							},
							"fullyImplemented": true,
							"id": 1290,
							"linearizedBaseContracts": [
								1290,
								1261
							],
							"name": "PeripheryImmutableState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1254
									],
									"constant": false,
									"documentation": {
										"id": 1266,
										"nodeType": "StructuredDocumentation",
										"src": "47975:40:0",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "c45a0155",
									"id": 1269,
									"mutability": "immutable",
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1268,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "48045:8:0"
									},
									"scope": 1290,
									"src": "48020:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1267,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "48020:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1260
									],
									"constant": false,
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "48067:40:0",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "4aa4a4fc",
									"id": 1273,
									"mutability": "immutable",
									"name": "WETH9",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 1272,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "48137:8:0"
									},
									"scope": 1290,
									"src": "48112:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1271,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "48112:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1288,
										"nodeType": "Block",
										"src": "48204:59:0",
										"statements": [
											{
												"expression": {
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1280,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1269,
														"src": "48214:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1281,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1275,
														"src": "48224:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48214:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1283,
												"nodeType": "ExpressionStatement",
												"src": "48214:18:0"
											},
											{
												"expression": {
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1284,
														"name": "WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1273,
														"src": "48242:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1285,
														"name": "_WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1277,
														"src": "48250:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "48242:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1287,
												"nodeType": "ExpressionStatement",
												"src": "48242:14:0"
											}
										]
									},
									"id": 1289,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "_factory",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "48170:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48170:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "_WETH9",
												"nodeType": "VariableDeclaration",
												"scope": 1289,
												"src": "48188:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48169:34:0"
									},
									"returnParameters": {
										"id": 1279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48204:0:0"
									},
									"scope": 1290,
									"src": "48158:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2520,
							"src": "47899:366:0"
						},
						{
							"id": 1291,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "48322:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1292,
								"nodeType": "StructuredDocumentation",
								"src": "48348:92:0",
								"text": "@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"
							},
							"fullyImplemented": false,
							"id": 1315,
							"linearizedBaseContracts": [
								1315
							],
							"name": "IPeripheryPayments",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "48475:302:0",
										"text": "@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"
									},
									"functionSelector": "49404b7c",
									"id": 1300,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unwrapWETH9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "48803:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "48826:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1296,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "48826:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48802:42:0"
									},
									"returnParameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "48861:0:0"
									},
									"scope": 1315,
									"src": "48782:80:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1301,
										"nodeType": "StructuredDocumentation",
										"src": "48868:225:0",
										"text": "@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"
									},
									"functionSelector": "12210e8a",
									"id": 1304,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "refundETH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49116:2:0"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49135:0:0"
									},
									"scope": 1315,
									"src": "49098:38:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1305,
										"nodeType": "StructuredDocumentation",
										"src": "49142:427:0",
										"text": "@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"
									},
									"functionSelector": "df2ab5bb",
									"id": 1314,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sweepToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1307,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "49603:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49603:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "amountMinimum",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "49626:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49626:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1314,
												"src": "49657:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49657:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49593:87:0"
									},
									"returnParameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49697:0:0"
									},
									"scope": 1315,
									"src": "49574:124:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "48440:1260:0"
						},
						{
							"id": 1316,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "49755:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1317,
								"nodeType": "StructuredDocumentation",
								"src": "49781:194:0",
								"text": "@title Creates and initializes V3 Pools\n @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n require the pool to exist."
							},
							"fullyImplemented": false,
							"id": 1332,
							"linearizedBaseContracts": [
								1332
							],
							"name": "IPoolInitializer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1318,
										"nodeType": "StructuredDocumentation",
										"src": "50008:648:0",
										"text": "@notice Creates a new pool if it does not exist, then initializes if not initialized\n @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n @param token0 The contract address of token0 of the pool\n @param token1 The contract address of token1 of the pool\n @param fee The fee amount of the v3 pool for the specified token pair\n @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"
									},
									"functionSelector": "13ead562",
									"id": 1331,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "createAndInitializePoolIfNecessary",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1320,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "50714:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50714:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "50738:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1321,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "50762:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1323,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "50762:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "50782:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1325,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "50782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50704:104:0"
									},
									"returnParameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1331,
												"src": "50835:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50834:14:0"
									},
									"scope": 1332,
									"src": "50661:188:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "49975:876:0"
						},
						{
							"id": 1333,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "50899:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1335,
										"name": "IPoolInitializer",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1332,
										"src": "51009:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPoolInitializer_$1332",
											"typeString": "contract IPoolInitializer"
										}
									},
									"id": 1336,
									"nodeType": "InheritanceSpecifier",
									"src": "51009:16:0"
								},
								{
									"baseName": {
										"id": 1337,
										"name": "PeripheryImmutableState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1290,
										"src": "51027:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PeripheryImmutableState_$1290",
											"typeString": "contract PeripheryImmutableState"
										}
									},
									"id": 1338,
									"nodeType": "InheritanceSpecifier",
									"src": "51027:23:0"
								}
							],
							"contractDependencies": [
								1261,
								1290,
								1332
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1334,
								"nodeType": "StructuredDocumentation",
								"src": "50928:44:0",
								"text": "@title Creates and initializes V3 Pools"
							},
							"fullyImplemented": false,
							"id": 1419,
							"linearizedBaseContracts": [
								1419,
								1290,
								1261,
								1332
							],
							"name": "PoolInitializer",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1331
									],
									"body": {
										"id": 1417,
										"nodeType": "Block",
										"src": "51291:522:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1354,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "51309:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1355,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "51318:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "51309:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1353,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51301:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51301:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1358,
												"nodeType": "ExpressionStatement",
												"src": "51301:24:0"
											},
											{
												"expression": {
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1359,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "51335:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1364,
																"name": "token0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1341,
																"src": "51377:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1365,
																"name": "token1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1343,
																"src": "51385:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 1366,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1345,
																"src": "51393:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"id": 1361,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1269,
																		"src": "51360:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1360,
																	"name": "IUniswapV3Factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 511,
																	"src": "51342:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$511_$",
																		"typeString": "type(contract IUniswapV3Factory)"
																	}
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51342:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3Factory_$511",
																	"typeString": "contract IUniswapV3Factory"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getPool",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 484,
															"src": "51342:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
																"typeString": "function (address,address,uint24) view external returns (address)"
															}
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51342:55:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51335:62:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1369,
												"nodeType": "ExpressionStatement",
												"src": "51335:62:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1375,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1370,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1351,
														"src": "51412:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51428:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51420:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1371,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51420:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51420:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "51412:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1415,
													"nodeType": "Block",
													"src": "51587:220:0",
													"statements": [
														{
															"assignments": [
																1396,
																null,
																null,
																null,
																null,
																null,
																null
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1396,
																	"mutability": "mutable",
																	"name": "sqrtPriceX96Existing",
																	"nodeType": "VariableDeclaration",
																	"scope": 1415,
																	"src": "51602:28:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"typeName": {
																		"id": 1395,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "51602:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"visibility": "internal"
																},
																null,
																null,
																null,
																null,
																null,
																null
															],
															"id": 1402,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1398,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1351,
																				"src": "51661:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1397,
																			"name": "IUniswapV3Pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "51646:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$429_$",
																				"typeString": "type(contract IUniswapV3Pool)"
																			}
																		},
																		"id": 1399,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "51646:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$429",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	},
																	"id": 1400,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "slot0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 288,
																	"src": "51646:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
																		"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
																	}
																},
																"id": 1401,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51646:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
																	"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "51601:73:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1403,
																	"name": "sqrtPriceX96Existing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1396,
																	"src": "51692:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51716:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "51692:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1414,
															"nodeType": "IfStatement",
															"src": "51688:109:0",
															"trueBody": {
																"id": 1413,
																"nodeType": "Block",
																"src": "51719:78:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 1410,
																					"name": "sqrtPriceX96",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1347,
																					"src": "51769:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 1407,
																							"name": "pool",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1351,
																							"src": "51752:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1406,
																						"name": "IUniswapV3Pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 429,
																						"src": "51737:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$429_$",
																							"typeString": "type(contract IUniswapV3Pool)"
																						}
																					},
																					"id": 1408,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "51737:20:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IUniswapV3Pool_$429",
																						"typeString": "contract IUniswapV3Pool"
																					}
																				},
																				"id": 1409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "initialize",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 151,
																				"src": "51737:31:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_uint160_$returns$__$",
																					"typeString": "function (uint160) external"
																				}
																			},
																			"id": 1411,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "51737:45:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1412,
																		"nodeType": "ExpressionStatement",
																		"src": "51737:45:0"
																	}
																]
															}
														}
													]
												},
												"id": 1416,
												"nodeType": "IfStatement",
												"src": "51408:399:0",
												"trueBody": {
													"id": 1394,
													"nodeType": "Block",
													"src": "51432:149:0",
													"statements": [
														{
															"expression": {
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1376,
																	"name": "pool",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "51446:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1381,
																			"name": "token0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1341,
																			"src": "51491:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1382,
																			"name": "token1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1343,
																			"src": "51499:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1383,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1345,
																			"src": "51507:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		],
																		"expression": {
																			"arguments": [
																				{
																					"id": 1378,
																					"name": "factory",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1269,
																					"src": "51471:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1377,
																				"name": "IUniswapV3Factory",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 511,
																				"src": "51453:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_IUniswapV3Factory_$511_$",
																					"typeString": "type(contract IUniswapV3Factory)"
																				}
																			},
																			"id": 1379,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "51453:26:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV3Factory_$511",
																				"typeString": "contract IUniswapV3Factory"
																			}
																		},
																		"id": 1380,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "createPool",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 496,
																		"src": "51453:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$",
																			"typeString": "function (address,address,uint24) external returns (address)"
																		}
																	},
																	"id": 1384,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "51453:58:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "51446:65:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1386,
															"nodeType": "ExpressionStatement",
															"src": "51446:65:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1391,
																		"name": "sqrtPriceX96",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1347,
																		"src": "51557:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1388,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1351,
																				"src": "51540:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1387,
																			"name": "IUniswapV3Pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 429,
																			"src": "51525:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$429_$",
																				"typeString": "type(contract IUniswapV3Pool)"
																			}
																		},
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "51525:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$429",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	},
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "initialize",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 151,
																	"src": "51525:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_uint160_$returns$__$",
																		"typeString": "function (uint160) external"
																	}
																},
																"id": 1392,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51525:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1393,
															"nodeType": "ExpressionStatement",
															"src": "51525:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1339,
										"nodeType": "StructuredDocumentation",
										"src": "51057:32:0",
										"text": "@inheritdoc IPoolInitializer"
									},
									"functionSelector": "13ead562",
									"id": 1418,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createAndInitializePoolIfNecessary",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1349,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "51259:8:0"
									},
									"parameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "51147:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "51171:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51171:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "51195:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1344,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "51195:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1347,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "51215:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1346,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "51215:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51137:104:0"
									},
									"returnParameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1351,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1418,
												"src": "51277:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1350,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51277:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51276:14:0"
									},
									"scope": 1419,
									"src": "51094:719:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "50972:843:0"
						},
						{
							"id": 1420,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "51865:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1422,
										"name": "IMulticall",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 650,
										"src": "52039:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IMulticall_$650",
											"typeString": "contract IMulticall"
										}
									},
									"id": 1423,
									"nodeType": "InheritanceSpecifier",
									"src": "52039:10:0"
								},
								{
									"baseName": {
										"id": 1424,
										"name": "ISelfPermit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 636,
										"src": "52051:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISelfPermit_$636",
											"typeString": "contract ISelfPermit"
										}
									},
									"id": 1425,
									"nodeType": "InheritanceSpecifier",
									"src": "52051:11:0"
								},
								{
									"baseName": {
										"id": 1426,
										"name": "IPoolInitializer",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1332,
										"src": "52064:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPoolInitializer_$1332",
											"typeString": "contract IPoolInitializer"
										}
									},
									"id": 1427,
									"nodeType": "InheritanceSpecifier",
									"src": "52064:16:0"
								}
							],
							"contractDependencies": [
								636,
								650,
								1332
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1421,
								"nodeType": "StructuredDocumentation",
								"src": "51894:120:0",
								"text": "@title V3 Migrator\n @notice Enables migration of liqudity from Uniswap v2-compatible pairs into Uniswap v3 pools"
							},
							"fullyImplemented": false,
							"id": 1461,
							"linearizedBaseContracts": [
								1461,
								1332,
								636,
								650
							],
							"name": "IV3Migrator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "IV3Migrator.MigrateParams",
									"id": 1454,
									"members": [
										{
											"constant": false,
											"id": 1429,
											"mutability": "mutable",
											"name": "pair",
											"nodeType": "VariableDeclaration",
											"scope": 1454,
											"src": "52118:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1428,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "52118:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1431,
											"mutability": "mutable",
											"name": "liquidityToMigrate",
											"nodeType": "VariableDeclaration",
											"scope": 1454,
											"src": "52174:26:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1430,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "52174:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1433,
											"mutability": "mutable",
											"name": "percentageToMigrate",
											"nodeType": "VariableDeclaration",
											"scope": 1454,
											"src": "52250:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint8",
												"typeString": "uint8"
											},
											"typeName": {
												"id": 1432,
												"name": "uint8",
												"nodeType": "ElementaryTypeName",
												"src": "52250:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1435,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 1454,
											"src": "52324:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1434,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "52324:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1437,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 1454,
											"src": "52348:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1436,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "52348:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1439,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 1454,
											"src": "52372:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1438,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "52372:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1441,
											"mutability": "mutable",
											"name": "tickLower",
											"nodeType": "VariableDeclaration",
											"scope": 1454,
											"src": "52392:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1440,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "52392:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1443,
											"mutability": "mutable",
											"name": "tickUpper",
											"nodeType": "VariableDeclaration",
											"scope": 1454,
											"src": "52417:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1442,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "52417:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1445,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 1454,
											"src": "52442:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1444,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "52442:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1447,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 1454,
											"src": "52515:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1446,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "52515:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1449,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1454,
											"src": "52588:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1448,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "52588:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1451,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1454,
											"src": "52615:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1450,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "52615:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1453,
											"mutability": "mutable",
											"name": "refundAsETH",
											"nodeType": "VariableDeclaration",
											"scope": 1454,
											"src": "52641:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1452,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "52641:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MigrateParams",
									"nodeType": "StructDefinition",
									"scope": 1461,
									"src": "52087:577:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "52670:549:0",
										"text": "@notice Migrates liquidity to v3 by burning v2 liquidity and minting a new position for v3\n @dev Slippage protection is enforced via `amount{0,1}Min`, which should be a discount of the expected values of\n the maximum amount of v3 liquidity that the v2 liquidity can get. For the special case of migrating to an\n out-of-range position, `amount{0,1}Min` may be set to 0, enforcing that the position remains out of range\n @param params The params necessary to migrate v2 liquidity, encoded as `MigrateParams` in calldata"
									},
									"functionSelector": "d44f2bf2",
									"id": 1460,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1460,
												"src": "53241:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
													"typeString": "struct IV3Migrator.MigrateParams"
												},
												"typeName": {
													"id": 1456,
													"name": "MigrateParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1454,
													"src": "53241:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MigrateParams_$1454_storage_ptr",
														"typeString": "struct IV3Migrator.MigrateParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53240:31:0"
									},
									"returnParameters": {
										"id": 1459,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53280:0:0"
									},
									"scope": 1461,
									"src": "53224:57:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "52014:1269:0"
						},
						{
							"id": 1462,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "53347:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1463,
								"nodeType": "StructuredDocumentation",
								"src": "53372:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1472,
							"linearizedBaseContracts": [
								1472
							],
							"name": "IERC165",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "53676:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1471,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "interfaceId",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "54048:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1465,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "54048:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54047:20:0"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1471,
												"src": "54091:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1468,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54091:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54090:6:0"
									},
									"scope": 1472,
									"src": "54021:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "53652:447:0"
						},
						{
							"id": 1473,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "54162:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1475,
										"name": "IERC165",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1472,
										"src": "54277:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC165_$1472",
											"typeString": "contract IERC165"
										}
									},
									"id": 1476,
									"nodeType": "InheritanceSpecifier",
									"src": "54277:7:0"
								}
							],
							"contractDependencies": [
								1472
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1474,
								"nodeType": "StructuredDocumentation",
								"src": "54188:67:0",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1586,
							"linearizedBaseContracts": [
								1586,
								1472
							],
							"name": "IERC721",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1477,
										"nodeType": "StructuredDocumentation",
										"src": "54291:88:0",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 1485,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1479,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "54399:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1478,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54399:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1481,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "54421:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54421:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "54441:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54441:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54398:67:0"
									},
									"src": "54384:82:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "54472:94:0",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 1494,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "54586:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54586:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1490,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "54609:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1489,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1492,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "54635:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1491,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54635:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54585:74:0"
									},
									"src": "54571:89:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "54666:117:0",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 1503,
									"name": "ApprovalForAll",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "54809:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54809:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "54832:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54832:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "54858:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1500,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "54858:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54808:64:0"
									},
									"src": "54788:85:0"
								},
								{
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "54879:76:0",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1511,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "54979:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54979:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54978:15:0"
									},
									"returnParameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1509,
												"mutability": "mutable",
												"name": "balance",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "55017:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55017:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55016:17:0"
									},
									"scope": 1586,
									"src": "54960:74:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1512,
										"nodeType": "StructuredDocumentation",
										"src": "55040:131:0",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1514,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "55193:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55192:17:0"
									},
									"returnParameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "55233:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55232:15:0"
									},
									"scope": 1586,
									"src": "55176:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "55254:690:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1529,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "55975:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55975:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "55989:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55989:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "56001:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56001:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55974:43:0"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56026:0:0"
									},
									"scope": 1586,
									"src": "55949:78:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "56033:504:0",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1539,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "56564:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1534,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "56578:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1533,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1539,
												"src": "56590:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "56590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56563:43:0"
									},
									"returnParameters": {
										"id": 1538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "56615:0:0"
									},
									"scope": 1586,
									"src": "56542:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1540,
										"nodeType": "StructuredDocumentation",
										"src": "56622:452:0",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1547,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "57096:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57096:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1544,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1547,
												"src": "57108:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1543,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57108:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57095:29:0"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57133:0:0"
									},
									"scope": 1586,
									"src": "57079:55:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1548,
										"nodeType": "StructuredDocumentation",
										"src": "57140:139:0",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1555,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "57305:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "57305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57304:17:0"
									},
									"returnParameters": {
										"id": 1554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "57345:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57344:18:0"
									},
									"scope": 1586,
									"src": "57284:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "57369:309:0",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1563,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1558,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "57710:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57710:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "_approved",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "57728:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1559,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "57728:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57709:34:0"
									},
									"returnParameters": {
										"id": 1562,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57752:0:0"
									},
									"scope": 1586,
									"src": "57683:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "57759:138:0",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1573,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "57928:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57928:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "57943:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57943:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57927:33:0"
									},
									"returnParameters": {
										"id": 1572,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1571,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "57984:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1570,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "57984:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "57983:6:0"
									},
									"scope": 1586,
									"src": "57902:88:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1574,
										"nodeType": "StructuredDocumentation",
										"src": "57996:568:0",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1576,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "58595:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58595:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "58609:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "58609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "58621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58621:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 1585,
												"src": "58638:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1581,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "58638:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58594:64:0"
									},
									"returnParameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "58667:0:0"
									},
									"scope": 1586,
									"src": "58569:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "54256:4414:0"
						},
						{
							"id": 1587,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "58722:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1589,
										"name": "IERC721",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1586,
										"src": "58900:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$1586",
											"typeString": "contract IERC721"
										}
									},
									"id": 1590,
									"nodeType": "InheritanceSpecifier",
									"src": "58900:7:0"
								}
							],
							"contractDependencies": [
								1472,
								1586
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1588,
								"nodeType": "StructuredDocumentation",
								"src": "58749:124:0",
								"text": "@title ERC721 with permit\n @notice Extension to ERC721 that includes a permit function for signature based approvals"
							},
							"fullyImplemented": false,
							"id": 1619,
							"linearizedBaseContracts": [
								1619,
								1586,
								1472
							],
							"name": "IERC721Permit",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "58914:104:0",
										"text": "@notice The permit typehash used in the permit signature\n @return The typehash for the permit"
									},
									"functionSelector": "30adf81f",
									"id": 1596,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59047:2:0"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1596,
												"src": "59073:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1593,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "59073:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59072:9:0"
									},
									"scope": 1619,
									"src": "59023:59:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1597,
										"nodeType": "StructuredDocumentation",
										"src": "59088:135:0",
										"text": "@notice The domain separator used in the permit signature\n @return The domain seperator used in encoding of permit signature"
									},
									"functionSelector": "3644e515",
									"id": 1602,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59253:2:0"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1602,
												"src": "59279:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1599,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "59279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59278:9:0"
									},
									"scope": 1619,
									"src": "59228:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1603,
										"nodeType": "StructuredDocumentation",
										"src": "59294:605:0",
										"text": "@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"
									},
									"functionSelector": "7ac2ff7b",
									"id": 1618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "59929:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1604,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1607,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "59954:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1606,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59954:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1609,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "59979:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1608,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59979:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1611,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "60005:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1610,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "60005:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "60022:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1612,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "60022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "60041:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1614,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "60041:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59919:137:0"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60073:0:0"
									},
									"scope": 1619,
									"src": "59904:170:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "58873:1203:0"
						},
						{
							"id": 1620,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "60149:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1622,
										"name": "IERC721",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1586,
										"src": "60343:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$1586",
											"typeString": "contract IERC721"
										}
									},
									"id": 1623,
									"nodeType": "InheritanceSpecifier",
									"src": "60343:7:0"
								}
							],
							"contractDependencies": [
								1472,
								1586
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1621,
								"nodeType": "StructuredDocumentation",
								"src": "60175:136:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1648,
							"linearizedBaseContracts": [
								1648,
								1586,
								1472
							],
							"name": "IERC721Enumerable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1624,
										"nodeType": "StructuredDocumentation",
										"src": "60358:82:0",
										"text": " @dev Returns the total amount of tokens stored by the contract."
									},
									"functionSelector": "18160ddd",
									"id": 1629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60465:2:0"
									},
									"returnParameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1629,
												"src": "60491:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60491:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60490:9:0"
									},
									"scope": 1648,
									"src": "60445:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1630,
										"nodeType": "StructuredDocumentation",
										"src": "60506:171:0",
										"text": " @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."
									},
									"functionSelector": "2f745c59",
									"id": 1639,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenOfOwnerByIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1632,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "60711:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1631,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60711:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1634,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "60726:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60710:30:0"
									},
									"returnParameters": {
										"id": 1638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1637,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1639,
												"src": "60764:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60764:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60763:17:0"
									},
									"scope": 1648,
									"src": "60682:99:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1640,
										"nodeType": "StructuredDocumentation",
										"src": "60787:164:0",
										"text": " @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."
									},
									"functionSelector": "4f6ccce7",
									"id": 1647,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenByIndex",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "60978:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60977:15:0"
									},
									"returnParameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "61016:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61016:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61015:9:0"
									},
									"scope": 1648,
									"src": "60956:69:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "60312:715:0"
						},
						{
							"id": 1649,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "61098:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1651,
										"name": "IERC721",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1586,
										"src": "61287:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$1586",
											"typeString": "contract IERC721"
										}
									},
									"id": 1652,
									"nodeType": "InheritanceSpecifier",
									"src": "61287:7:0"
								}
							],
							"contractDependencies": [
								1472,
								1586
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1650,
								"nodeType": "StructuredDocumentation",
								"src": "61124:133:0",
								"text": " @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"
							},
							"fullyImplemented": false,
							"id": 1673,
							"linearizedBaseContracts": [
								1673,
								1586,
								1472
							],
							"name": "IERC721Metadata",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1653,
										"nodeType": "StructuredDocumentation",
										"src": "61302:58:0",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 1658,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1654,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61378:2:0"
									},
									"returnParameters": {
										"id": 1657,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1656,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1658,
												"src": "61404:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1655,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "61404:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61403:15:0"
									},
									"scope": 1673,
									"src": "61365:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1659,
										"nodeType": "StructuredDocumentation",
										"src": "61425:60:0",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 1664,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1660,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "61505:2:0"
									},
									"returnParameters": {
										"id": 1663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1662,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1664,
												"src": "61531:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1661,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "61531:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61530:15:0"
									},
									"scope": 1673,
									"src": "61490:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1665,
										"nodeType": "StructuredDocumentation",
										"src": "61552:90:0",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 1672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1667,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "61665:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61665:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61664:17:0"
									},
									"returnParameters": {
										"id": 1671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1670,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1672,
												"src": "61705:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1669,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "61705:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61704:15:0"
									},
									"scope": 1673,
									"src": "61647:73:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "61258:464:0"
						},
						{
							"id": 1674,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "61788:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1676,
										"name": "IPoolInitializer",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1332,
										"src": "62043:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPoolInitializer_$1332",
											"typeString": "contract IPoolInitializer"
										}
									},
									"id": 1677,
									"nodeType": "InheritanceSpecifier",
									"src": "62043:16:0"
								},
								{
									"baseName": {
										"id": 1678,
										"name": "IPeripheryPayments",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1315,
										"src": "62065:18:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPeripheryPayments_$1315",
											"typeString": "contract IPeripheryPayments"
										}
									},
									"id": 1679,
									"nodeType": "InheritanceSpecifier",
									"src": "62065:18:0"
								},
								{
									"baseName": {
										"id": 1680,
										"name": "IPeripheryImmutableState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1261,
										"src": "62089:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPeripheryImmutableState_$1261",
											"typeString": "contract IPeripheryImmutableState"
										}
									},
									"id": 1681,
									"nodeType": "InheritanceSpecifier",
									"src": "62089:24:0"
								},
								{
									"baseName": {
										"id": 1682,
										"name": "IERC721Metadata",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1673,
										"src": "62119:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Metadata_$1673",
											"typeString": "contract IERC721Metadata"
										}
									},
									"id": 1683,
									"nodeType": "InheritanceSpecifier",
									"src": "62119:15:0"
								},
								{
									"baseName": {
										"id": 1684,
										"name": "IERC721Enumerable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1648,
										"src": "62140:17:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Enumerable_$1648",
											"typeString": "contract IERC721Enumerable"
										}
									},
									"id": 1685,
									"nodeType": "InheritanceSpecifier",
									"src": "62140:17:0"
								},
								{
									"baseName": {
										"id": 1686,
										"name": "IERC721Permit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1619,
										"src": "62163:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Permit_$1619",
											"typeString": "contract IERC721Permit"
										}
									},
									"id": 1687,
									"nodeType": "InheritanceSpecifier",
									"src": "62163:13:0"
								}
							],
							"contractDependencies": [
								1261,
								1315,
								1332,
								1472,
								1586,
								1619,
								1648,
								1673
							],
							"contractKind": "interface",
							"documentation": {
								"id": 1675,
								"nodeType": "StructuredDocumentation",
								"src": "61821:177:0",
								"text": "@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."
							},
							"fullyImplemented": false,
							"id": 1859,
							"linearizedBaseContracts": [
								1859,
								1619,
								1648,
								1673,
								1586,
								1472,
								1261,
								1315,
								1332
							],
							"name": "INonfungiblePositionManager",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1688,
										"nodeType": "StructuredDocumentation",
										"src": "62183:458:0",
										"text": "@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"
									},
									"id": 1698,
									"name": "IncreaseLiquidity",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1697,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1690,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "62670:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "62670:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1692,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "62695:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1691,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "62695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1694,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "62714:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "62714:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1696,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1698,
												"src": "62731:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1695,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "62731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62669:78:0"
									},
									"src": "62646:102:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1699,
										"nodeType": "StructuredDocumentation",
										"src": "62753:419:0",
										"text": "@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"
									},
									"id": 1709,
									"name": "DecreaseLiquidity",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1701,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "63201:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63201:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1703,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "63226:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1702,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "63226:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1705,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "63245:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1707,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1709,
												"src": "63262:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63262:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63200:78:0"
									},
									"src": "63177:102:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "63284:522:0",
										"text": "@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"
									},
									"id": 1720,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "63825:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63825:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "63850:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1713,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "63850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "63869:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63869:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "63886:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63824:78:0"
									},
									"src": "63811:92:0"
								},
								{
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "63909:1157:0",
										"text": "@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"
									},
									"functionSelector": "99fbab88",
									"id": 1750,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "65090:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65090:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65089:17:0"
									},
									"returnParameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1726,
												"mutability": "mutable",
												"name": "nonce",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "65167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 1725,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "65167:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "operator",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "65193:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65193:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1730,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "65223:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1729,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "65251:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "65279:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1733,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "65279:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "65303:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1735,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "65303:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "65332:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1737,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "65332:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "65361:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1739,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "65361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "65392:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1741,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "65438:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65438:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "65484:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1745,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "65484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"scope": 1750,
												"src": "65517:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1747,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "65517:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65153:393:0"
									},
									"scope": 1859,
									"src": "65071:476:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.MintParams",
									"id": 1773,
									"members": [
										{
											"constant": false,
											"id": 1752,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 1773,
											"src": "65581:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1751,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "65581:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1754,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 1773,
											"src": "65605:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1753,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "65605:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1756,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 1773,
											"src": "65629:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1755,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "65629:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1758,
											"mutability": "mutable",
											"name": "tickLower",
											"nodeType": "VariableDeclaration",
											"scope": 1773,
											"src": "65649:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1757,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "65649:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1760,
											"mutability": "mutable",
											"name": "tickUpper",
											"nodeType": "VariableDeclaration",
											"scope": 1773,
											"src": "65674:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											},
											"typeName": {
												"id": 1759,
												"name": "int24",
												"nodeType": "ElementaryTypeName",
												"src": "65674:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1762,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nodeType": "VariableDeclaration",
											"scope": 1773,
											"src": "65699:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1761,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "65699:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1764,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nodeType": "VariableDeclaration",
											"scope": 1773,
											"src": "65731:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1763,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "65731:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1766,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 1773,
											"src": "65763:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1765,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "65763:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1768,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 1773,
											"src": "65791:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1767,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "65791:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1770,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1773,
											"src": "65819:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1769,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "65819:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1772,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1773,
											"src": "65846:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1771,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "65846:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "MintParams",
									"nodeType": "StructDefinition",
									"scope": 1859,
									"src": "65553:316:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "65875:586:0",
										"text": "@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"
									},
									"functionSelector": "88316456",
									"id": 1787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "66480:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MintParams_$1773_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.MintParams"
												},
												"typeName": {
													"id": 1775,
													"name": "MintParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1773,
													"src": "66480:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MintParams_$1773_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.MintParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66479:28:0"
									},
									"returnParameters": {
										"id": 1786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1779,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "66571:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66571:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "66600:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1780,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "66600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1783,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "66631:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1785,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1787,
												"src": "66660:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66557:128:0"
									},
									"scope": 1859,
									"src": "66466:220:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.IncreaseLiquidityParams",
									"id": 1800,
									"members": [
										{
											"constant": false,
											"id": 1789,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 1800,
											"src": "66733:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1788,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "66733:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1791,
											"mutability": "mutable",
											"name": "amount0Desired",
											"nodeType": "VariableDeclaration",
											"scope": 1800,
											"src": "66758:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1790,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "66758:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1793,
											"mutability": "mutable",
											"name": "amount1Desired",
											"nodeType": "VariableDeclaration",
											"scope": 1800,
											"src": "66790:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1792,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "66790:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1795,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 1800,
											"src": "66822:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1794,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "66822:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1797,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 1800,
											"src": "66850:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1796,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "66850:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1799,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1800,
											"src": "66878:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1798,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "66878:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "IncreaseLiquidityParams",
									"nodeType": "StructDefinition",
									"scope": 1859,
									"src": "66692:209:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1801,
										"nodeType": "StructuredDocumentation",
										"src": "66907:821:0",
										"text": "@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"
									},
									"functionSelector": "219f5d17",
									"id": 1812,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "67760:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1800_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
												},
												"typeName": {
													"id": 1802,
													"name": "IncreaseLiquidityParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1800,
													"src": "67760:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_IncreaseLiquidityParams_$1800_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.IncreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67759:41:0"
									},
									"returnParameters": {
										"id": 1811,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "67864:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 1805,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "67864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "67895:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "67895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1810,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "67924:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1809,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "67924:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67850:99:0"
									},
									"scope": 1859,
									"src": "67733:217:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.DecreaseLiquidityParams",
									"id": 1823,
									"members": [
										{
											"constant": false,
											"id": 1814,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 1823,
											"src": "67997:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1813,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "67997:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1816,
											"mutability": "mutable",
											"name": "liquidity",
											"nodeType": "VariableDeclaration",
											"scope": 1823,
											"src": "68022:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1815,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "68022:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1818,
											"mutability": "mutable",
											"name": "amount0Min",
											"nodeType": "VariableDeclaration",
											"scope": 1823,
											"src": "68049:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1817,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "68049:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1820,
											"mutability": "mutable",
											"name": "amount1Min",
											"nodeType": "VariableDeclaration",
											"scope": 1823,
											"src": "68077:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1819,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "68077:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1822,
											"mutability": "mutable",
											"name": "deadline",
											"nodeType": "VariableDeclaration",
											"scope": 1823,
											"src": "68105:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1821,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "68105:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "DecreaseLiquidityParams",
									"nodeType": "StructDefinition",
									"scope": 1859,
									"src": "67956:172:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "68134:702:0",
										"text": "@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"
									},
									"functionSelector": "0c49ccbe",
									"id": 1833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseLiquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "68868:39:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1823_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
												},
												"typeName": {
													"id": 1825,
													"name": "DecreaseLiquidityParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1823,
													"src": "68868:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_DecreaseLiquidityParams_$1823_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.DecreaseLiquidityParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68867:41:0"
									},
									"returnParameters": {
										"id": 1832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "68959:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68959:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1831,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1833,
												"src": "68976:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68976:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68958:34:0"
									},
									"scope": 1859,
									"src": "68841:152:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "INonfungiblePositionManager.CollectParams",
									"id": 1842,
									"members": [
										{
											"constant": false,
											"id": 1835,
											"mutability": "mutable",
											"name": "tokenId",
											"nodeType": "VariableDeclaration",
											"scope": 1842,
											"src": "69030:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1834,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "69030:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1837,
											"mutability": "mutable",
											"name": "recipient",
											"nodeType": "VariableDeclaration",
											"scope": 1842,
											"src": "69055:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1836,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "69055:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1839,
											"mutability": "mutable",
											"name": "amount0Max",
											"nodeType": "VariableDeclaration",
											"scope": 1842,
											"src": "69082:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1838,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "69082:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1841,
											"mutability": "mutable",
											"name": "amount1Max",
											"nodeType": "VariableDeclaration",
											"scope": 1842,
											"src": "69110:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 1840,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "69110:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "CollectParams",
									"nodeType": "StructDefinition",
									"scope": 1859,
									"src": "68999:136:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1843,
										"nodeType": "StructuredDocumentation",
										"src": "69141:489:0",
										"text": "@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "fc6f7865",
									"id": 1852,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1845,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "69652:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_CollectParams_$1842_calldata_ptr",
													"typeString": "struct INonfungiblePositionManager.CollectParams"
												},
												"typeName": {
													"id": 1844,
													"name": "CollectParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1842,
													"src": "69652:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_CollectParams_$1842_storage_ptr",
														"typeString": "struct INonfungiblePositionManager.CollectParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69651:31:0"
									},
									"returnParameters": {
										"id": 1851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1848,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "69709:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1847,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69709:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1850,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "69726:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69726:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69708:34:0"
									},
									"scope": 1859,
									"src": "69635:108:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "69749:213:0",
										"text": "@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"
									},
									"functionSelector": "42966c68",
									"id": 1858,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "tokenId",
												"nodeType": "VariableDeclaration",
												"scope": 1858,
												"src": "69981:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69980:17:0"
									},
									"returnParameters": {
										"id": 1857,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70014:0:0"
									},
									"scope": 1859,
									"src": "69967:48:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "61998:8019:0"
						},
						{
							"id": 1860,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "70086:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 2100,
							"linearizedBaseContracts": [
								2100
							],
							"name": "IUniswapV2Pair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"id": 1868,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1862,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "70158:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1864,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "70181:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70181:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1868,
												"src": "70206:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1865,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "70206:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70157:60:0"
									},
									"src": "70143:75:0"
								},
								{
									"anonymous": false,
									"id": 1876,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1870,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "70238:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1869,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70238:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "70260:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70260:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1874,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1876,
												"src": "70280:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1873,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "70280:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70237:54:0"
									},
									"src": "70223:69:0"
								},
								{
									"functionSelector": "06fdde03",
									"id": 1881,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70311:2:0"
									},
									"returnParameters": {
										"id": 1880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1879,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1881,
												"src": "70337:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1878,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "70337:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70336:15:0"
									},
									"scope": 2100,
									"src": "70298:54:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "95d89b41",
									"id": 1886,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70372:2:0"
									},
									"returnParameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1886,
												"src": "70398:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1883,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "70398:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70397:15:0"
									},
									"scope": 2100,
									"src": "70357:56:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "313ce567",
									"id": 1891,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70435:2:0"
									},
									"returnParameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1891,
												"src": "70461:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1888,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "70461:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70460:7:0"
									},
									"scope": 2100,
									"src": "70418:50:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "18160ddd",
									"id": 1896,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70493:2:0"
									},
									"returnParameters": {
										"id": 1895,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1894,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1896,
												"src": "70519:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1893,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "70519:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70518:6:0"
									},
									"scope": 2100,
									"src": "70473:52:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "70a08231",
									"id": 1903,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "70549:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70549:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70548:15:0"
									},
									"returnParameters": {
										"id": 1902,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1903,
												"src": "70587:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "70587:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70586:6:0"
									},
									"scope": 2100,
									"src": "70530:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "dd62ed3e",
									"id": 1912,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1905,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "70617:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1907,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "70632:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70632:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70616:32:0"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1910,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "70672:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "70672:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70671:6:0"
									},
									"scope": 2100,
									"src": "70598:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "095ea7b3",
									"id": 1921,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "70701:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70701:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "70718:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "70718:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70700:29:0"
									},
									"returnParameters": {
										"id": 1920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1919,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1921,
												"src": "70748:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1918,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "70748:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70747:6:0"
									},
									"scope": 2100,
									"src": "70684:70:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "a9059cbb",
									"id": 1930,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "70777:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70777:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "70789:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1924,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "70789:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70776:24:0"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1930,
												"src": "70819:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1927,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "70819:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70818:6:0"
									},
									"scope": 2100,
									"src": "70759:66:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "23b872dd",
									"id": 1941,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1932,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "70852:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1931,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "70866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1936,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "70878:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1935,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "70878:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70851:38:0"
									},
									"returnParameters": {
										"id": 1940,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1939,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1941,
												"src": "70908:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1938,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "70908:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70907:6:0"
									},
									"scope": 2100,
									"src": "70830:84:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "3644e515",
									"id": 1946,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1942,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70945:2:0"
									},
									"returnParameters": {
										"id": 1945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1944,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1946,
												"src": "70971:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1943,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "70971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70970:9:0"
									},
									"scope": 2100,
									"src": "70920:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "30adf81f",
									"id": 1951,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71009:2:0"
									},
									"returnParameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1951,
												"src": "71035:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1948,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "71035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71034:9:0"
									},
									"scope": 2100,
									"src": "70985:59:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7ecebe00",
									"id": 1958,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "71065:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71065:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71064:15:0"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1956,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "71103:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1955,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "71103:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71102:6:0"
									},
									"scope": 2100,
									"src": "71049:60:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d505accf",
									"id": 1975,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "71131:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71131:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1962,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "71146:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1961,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71146:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "71163:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1963,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "71163:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "71175:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1965,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "71175:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1968,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "71190:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1967,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "71190:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1970,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "71199:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1969,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "71199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1972,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "71210:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1971,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "71210:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71130:90:0"
									},
									"returnParameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71229:0:0"
									},
									"scope": 2100,
									"src": "71115:115:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"id": 1983,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "71247:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "71271:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1978,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "71271:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1981,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "71285:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1980,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "71285:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71246:52:0"
									},
									"src": "71236:63:0"
								},
								{
									"anonymous": false,
									"id": 1993,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1985,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "71315:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71315:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1987,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "71339:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1986,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "71339:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1989,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "71353:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "71353:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "71367:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1990,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71367:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71314:72:0"
									},
									"src": "71304:83:0"
								},
								{
									"anonymous": false,
									"id": 2007,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "71412:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71412:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "71444:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1996,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "71444:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "71468:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1998,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "71468:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "71492:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2000,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "71492:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2003,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "71517:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2002,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "71517:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2005,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2007,
												"src": "71542:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2004,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71542:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71402:164:0"
									},
									"src": "71392:175:0"
								},
								{
									"anonymous": false,
									"id": 2013,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2009,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "71583:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2008,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "71583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2011,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 2013,
												"src": "71601:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2010,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "71601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71582:36:0"
									},
									"src": "71572:47:0"
								},
								{
									"functionSelector": "ba9a7a56",
									"id": 2018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71651:2:0"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "71677:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2015,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "71677:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71676:6:0"
									},
									"scope": 2100,
									"src": "71625:58:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "c45a0155",
									"id": 2023,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2019,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71704:2:0"
									},
									"returnParameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "71730:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71730:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71729:9:0"
									},
									"scope": 2100,
									"src": "71688:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0dfe1681",
									"id": 2028,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71759:2:0"
									},
									"returnParameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "71785:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2025,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71785:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71784:9:0"
									},
									"scope": 2100,
									"src": "71744:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "d21220a7",
									"id": 2033,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71814:2:0"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2031,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2033,
												"src": "71840:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71840:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71839:9:0"
									},
									"scope": 2100,
									"src": "71799:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "0902f1ac",
									"id": 2042,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71874:2:0"
									},
									"returnParameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "71900:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2035,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "71900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "71918:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2037,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "71918:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "71936:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2039,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "71936:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71899:63:0"
									},
									"scope": 2100,
									"src": "71854:109:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5909c0d5",
									"id": 2047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2043,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71997:2:0"
									},
									"returnParameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "72023:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "72023:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72022:6:0"
									},
									"scope": 2100,
									"src": "71968:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "5a3d5493",
									"id": 2052,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72063:2:0"
									},
									"returnParameters": {
										"id": 2051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2050,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2052,
												"src": "72089:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2049,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "72089:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72088:6:0"
									},
									"scope": 2100,
									"src": "72034:61:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "7464fc3d",
									"id": 2057,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2053,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72114:2:0"
									},
									"returnParameters": {
										"id": 2056,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2055,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2057,
												"src": "72140:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2054,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "72140:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72139:6:0"
									},
									"scope": 2100,
									"src": "72100:46:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "6a627842",
									"id": 2064,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2060,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2059,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "72166:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2058,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72165:12:0"
									},
									"returnParameters": {
										"id": 2063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2062,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "72196:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2061,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "72196:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72195:16:0"
									},
									"scope": 2100,
									"src": "72152:60:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "89afcb44",
									"id": 2073,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2066,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "72231:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72231:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72230:12:0"
									},
									"returnParameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2069,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "72261:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2068,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "72261:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "72275:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2070,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "72275:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72260:28:0"
									},
									"scope": 2100,
									"src": "72217:72:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "022c0d9f",
									"id": 2084,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2075,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "72308:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2074,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "72308:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2077,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "72325:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2076,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "72325:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2079,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "72342:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2078,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 2084,
												"src": "72354:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2080,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "72354:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72307:67:0"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72383:0:0"
									},
									"scope": 2100,
									"src": "72294:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "bc25cf77",
									"id": 2089,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2087,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2086,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 2089,
												"src": "72403:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72403:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72402:12:0"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72423:0:0"
									},
									"scope": 2100,
									"src": "72389:35:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "fff6cae9",
									"id": 2092,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72442:2:0"
									},
									"returnParameters": {
										"id": 2091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72453:0:0"
									},
									"scope": 2100,
									"src": "72429:25:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "485cc955",
									"id": 2099,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2097,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2094,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "72480:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72480:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2096,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "72489:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72489:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72479:18:0"
									},
									"returnParameters": {
										"id": 2098,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72506:0:0"
									},
									"scope": 2100,
									"src": "72460:47:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "70112:2397:0"
						},
						{
							"id": 2101,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "72578:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2102,
								"nodeType": "StructuredDocumentation",
								"src": "72604:178:0",
								"text": "@title Optimized overflow and underflow safe math operations\n @notice Contains methods for doing math operations that revert on overflow or underflow for minimal gas cost"
							},
							"fullyImplemented": true,
							"id": 2229,
							"linearizedBaseContracts": [
								2229
							],
							"name": "LowGasSafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2123,
										"nodeType": "Block",
										"src": "73037:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2113,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2110,
																			"src": "73056:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2114,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2105,
																				"src": "73060:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"id": 2115,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2107,
																				"src": "73064:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "73060:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "73056:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2118,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "73055:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2119,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2105,
																"src": "73070:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "73055:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "73047:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73047:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2122,
												"nodeType": "ExpressionStatement",
												"src": "73047:25:0"
											}
										]
									},
									"documentation": {
										"id": 2103,
										"nodeType": "StructuredDocumentation",
										"src": "72811:152:0",
										"text": "@notice Returns x + y, reverts if sum overflows uint256\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 2124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2105,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "72981:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2104,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "72981:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2107,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "72992:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "72992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72980:22:0"
									},
									"returnParameters": {
										"id": 2111,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2110,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2124,
												"src": "73026:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73026:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73025:11:0"
									},
									"scope": 2229,
									"src": "72968:111:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2145,
										"nodeType": "Block",
										"src": "73312:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2139,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2135,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2132,
																			"src": "73331:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2138,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2136,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2127,
																				"src": "73335:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 2137,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2129,
																				"src": "73339:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "73335:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "73331:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2140,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "73330:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 2141,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2127,
																"src": "73345:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "73330:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2134,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "73322:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73322:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2144,
												"nodeType": "ExpressionStatement",
												"src": "73322:25:0"
											}
										]
									},
									"documentation": {
										"id": 2125,
										"nodeType": "StructuredDocumentation",
										"src": "73085:153:0",
										"text": "@notice Returns x - y, reverts if underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 2146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2127,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "73256:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73256:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2129,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "73267:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2128,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73255:22:0"
									},
									"returnParameters": {
										"id": 2133,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2132,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2146,
												"src": "73301:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2131,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73300:11:0"
									},
									"scope": 2229,
									"src": "73243:111:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2173,
										"nodeType": "Block",
										"src": "73588:56:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2159,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2157,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2149,
																	"src": "73606:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2158,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "73611:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "73606:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2167,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"id": 2164,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"id": 2160,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2154,
																					"src": "73617:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2163,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2161,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2149,
																						"src": "73621:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 2162,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2151,
																						"src": "73625:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "73621:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "73617:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2165,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "73616:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 2166,
																		"name": "x",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2149,
																		"src": "73630:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "73616:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2168,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2151,
																	"src": "73635:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "73616:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "73606:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "73598:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73598:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2172,
												"nodeType": "ExpressionStatement",
												"src": "73598:39:0"
											}
										]
									},
									"documentation": {
										"id": 2147,
										"nodeType": "StructuredDocumentation",
										"src": "73360:154:0",
										"text": "@notice Returns x * y, reverts if overflows\n @param x The multiplicand\n @param y The multiplier\n @return z The product of x and y"
									},
									"id": 2174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2149,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "73532:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2151,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "73543:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2150,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73543:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73531:22:0"
									},
									"returnParameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "73577:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "73577:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73576:11:0"
									},
									"scope": 2229,
									"src": "73519:125:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2200,
										"nodeType": "Block",
										"src": "73875:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 2189,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2185,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2182,
																				"src": "73894:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2188,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2186,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2177,
																					"src": "73898:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 2187,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2179,
																					"src": "73902:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "73898:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "73894:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2190,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "73893:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2191,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "73908:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "73893:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2193,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2179,
																			"src": "73914:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2194,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "73919:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "73914:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2196,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "73913:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "73893:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2184,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "73885:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73885:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2199,
												"nodeType": "ExpressionStatement",
												"src": "73885:37:0"
											}
										]
									},
									"documentation": {
										"id": 2175,
										"nodeType": "StructuredDocumentation",
										"src": "73650:154:0",
										"text": "@notice Returns x + y, reverts if overflows or underflows\n @param x The augend\n @param y The addend\n @return z The sum of x and y"
									},
									"id": 2201,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2180,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "73822:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2176,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "73822:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2179,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "73832:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2178,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "73832:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73821:20:0"
									},
									"returnParameters": {
										"id": 2183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2182,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2201,
												"src": "73865:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2181,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "73865:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73864:10:0"
									},
									"scope": 2229,
									"src": "73809:120:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2227,
										"nodeType": "Block",
										"src": "74172:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2224,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"id": 2216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2212,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2209,
																				"src": "74191:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				},
																				"id": 2215,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 2213,
																					"name": "x",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2204,
																					"src": "74195:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 2214,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2206,
																					"src": "74199:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				},
																				"src": "74195:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "74191:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 2217,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "74190:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2218,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2204,
																	"src": "74205:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "74190:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2220,
																			"name": "y",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2206,
																			"src": "74211:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 2221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "74216:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "74211:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 2223,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "74210:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "74190:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2211,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "74182:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "74182:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2226,
												"nodeType": "ExpressionStatement",
												"src": "74182:37:0"
											}
										]
									},
									"documentation": {
										"id": 2202,
										"nodeType": "StructuredDocumentation",
										"src": "73935:166:0",
										"text": "@notice Returns x - y, reverts if overflows or underflows\n @param x The minuend\n @param y The subtrahend\n @return z The difference of x and y"
									},
									"id": 2228,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "74119:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2203,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "74119:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2206,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "74129:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2205,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "74129:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74118:20:0"
									},
									"returnParameters": {
										"id": 2210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2209,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2228,
												"src": "74162:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2208,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "74162:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74161:10:0"
									},
									"scope": 2229,
									"src": "74106:120:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2520,
							"src": "72782:1446:0"
						},
						{
							"id": 2230,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "74266:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2232,
										"name": "IV3Migrator",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1461,
										"src": "74355:11:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IV3Migrator_$1461",
											"typeString": "contract IV3Migrator"
										}
									},
									"id": 2233,
									"nodeType": "InheritanceSpecifier",
									"src": "74355:11:0"
								},
								{
									"baseName": {
										"id": 2234,
										"name": "PeripheryImmutableState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1290,
										"src": "74368:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PeripheryImmutableState_$1290",
											"typeString": "contract PeripheryImmutableState"
										}
									},
									"id": 2235,
									"nodeType": "InheritanceSpecifier",
									"src": "74368:23:0"
								},
								{
									"baseName": {
										"id": 2236,
										"name": "PoolInitializer",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1419,
										"src": "74393:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PoolInitializer_$1419",
											"typeString": "contract PoolInitializer"
										}
									},
									"id": 2237,
									"nodeType": "InheritanceSpecifier",
									"src": "74393:15:0"
								},
								{
									"baseName": {
										"id": 2238,
										"name": "Multicall",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 732,
										"src": "74410:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Multicall_$732",
											"typeString": "contract Multicall"
										}
									},
									"id": 2239,
									"nodeType": "InheritanceSpecifier",
									"src": "74410:9:0"
								},
								{
									"baseName": {
										"id": 2240,
										"name": "SelfPermit",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 986,
										"src": "74421:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SelfPermit_$986",
											"typeString": "contract SelfPermit"
										}
									},
									"id": 2241,
									"nodeType": "InheritanceSpecifier",
									"src": "74421:10:0"
								}
							],
							"contractDependencies": [
								636,
								650,
								732,
								986,
								1261,
								1290,
								1332,
								1419,
								1461
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2231,
								"nodeType": "StructuredDocumentation",
								"src": "74301:31:0",
								"text": "@title Uniswap V3 Migrator"
							},
							"fullyImplemented": true,
							"id": 2519,
							"linearizedBaseContracts": [
								2519,
								986,
								732,
								1419,
								1290,
								1261,
								1461,
								1332,
								636,
								650
							],
							"name": "V3Migrator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2244,
									"libraryName": {
										"id": 2242,
										"name": "LowGasSafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2229,
										"src": "74444:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_LowGasSafeMath_$2229",
											"typeString": "library LowGasSafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "74438:33:0",
									"typeName": {
										"id": 2243,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "74463:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "b44a2722",
									"id": 2246,
									"mutability": "immutable",
									"name": "nonfungiblePositionManager",
									"nodeType": "VariableDeclaration",
									"scope": 2519,
									"src": "74477:51:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2245,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "74477:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 2263,
										"nodeType": "Block",
										"src": "74690:73:0",
										"statements": [
											{
												"expression": {
													"id": 2261,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2259,
														"name": "nonfungiblePositionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2246,
														"src": "74700:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2260,
														"name": "_nonfungiblePositionManager",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2252,
														"src": "74729:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "74700:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2262,
												"nodeType": "ExpressionStatement",
												"src": "74700:56:0"
											}
										]
									},
									"id": 2264,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2255,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2248,
													"src": "74672:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 2256,
													"name": "_WETH9",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2250,
													"src": "74682:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2257,
											"modifierName": {
												"id": 2254,
												"name": "PeripheryImmutableState",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1290,
												"src": "74648:23:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_PeripheryImmutableState_$1290_$",
													"typeString": "type(contract PeripheryImmutableState)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "74648:41:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2248,
												"mutability": "mutable",
												"name": "_factory",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "74556:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2247,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74556:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "_WETH9",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "74582:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2249,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74582:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "_nonfungiblePositionManager",
												"nodeType": "VariableDeclaration",
												"scope": 2264,
												"src": "74606:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74606:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74546:101:0"
									},
									"returnParameters": {
										"id": 2258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74690:0:0"
									},
									"scope": 2519,
									"src": "74535:228:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2275,
										"nodeType": "Block",
										"src": "74796:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2271,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2268,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "74814:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "74814:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2270,
																"name": "WETH9",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1273,
																"src": "74828:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "74814:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74205745544839",
															"id": 2272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "74835:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1",
																"typeString": "literal_string \"Not WETH9\""
															},
															"value": "Not WETH9"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a5f12903ee10b20c1ea1ca8d6f6723d553112d744fe8db2bc5453efb990e6b1",
																"typeString": "literal_string \"Not WETH9\""
															}
														],
														"id": 2267,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "74806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2273,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "74806:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2274,
												"nodeType": "ExpressionStatement",
												"src": "74806:41:0"
											}
										]
									},
									"id": 2276,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74776:2:0"
									},
									"returnParameters": {
										"id": 2266,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74796:0:0"
									},
									"scope": 2519,
									"src": "74769:85:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										1460
									],
									"body": {
										"id": 2517,
										"nodeType": "Block",
										"src": "74926:2837:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2283,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2278,
																	"src": "74944:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																		"typeString": "struct IV3Migrator.MigrateParams calldata"
																	}
																},
																"id": 2284,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "percentageToMigrate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1433,
																"src": "74944:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "74973:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "74944:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50657263656e7461676520746f6f20736d616c6c",
															"id": 2287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "74976:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_441c69a76c2d33fd9de54332033d9c05337cb9707baa639e0118d8dc01b47be7",
																"typeString": "literal_string \"Percentage too small\""
															},
															"value": "Percentage too small"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_441c69a76c2d33fd9de54332033d9c05337cb9707baa639e0118d8dc01b47be7",
																"typeString": "literal_string \"Percentage too small\""
															}
														],
														"id": 2282,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "74936:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "74936:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2289,
												"nodeType": "ExpressionStatement",
												"src": "74936:63:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															"id": 2294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2291,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2278,
																	"src": "75017:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																		"typeString": "struct IV3Migrator.MigrateParams calldata"
																	}
																},
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "percentageToMigrate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1433,
																"src": "75017:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"hexValue": "313030",
																"id": 2293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "75047:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "75017:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "50657263656e7461676520746f6f206c61726765",
															"id": 2295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "75052:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9a769b63cd4026b5e7e44da6e571c3cde616fe3a40029eab2d6b59e7b569424b",
																"typeString": "literal_string \"Percentage too large\""
															},
															"value": "Percentage too large"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9a769b63cd4026b5e7e44da6e571c3cde616fe3a40029eab2d6b59e7b569424b",
																"typeString": "literal_string \"Percentage too large\""
															}
														],
														"id": 2290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "75009:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75009:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2297,
												"nodeType": "ExpressionStatement",
												"src": "75009:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2303,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "75172:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "75172:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"expression": {
																"id": 2305,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "75184:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																	"typeString": "struct IV3Migrator.MigrateParams calldata"
																}
															},
															"id": 2306,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "pair",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1429,
															"src": "75184:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2307,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "75197:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																	"typeString": "struct IV3Migrator.MigrateParams calldata"
																}
															},
															"id": 2308,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "liquidityToMigrate",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1431,
															"src": "75197:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2299,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "75146:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																			"typeString": "struct IV3Migrator.MigrateParams calldata"
																		}
																	},
																	"id": 2300,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pair",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1429,
																	"src": "75146:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2298,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2100,
																"src": "75131:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$2100_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 2301,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "75131:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$2100",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1941,
														"src": "75131:40:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75131:92:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2310,
												"nodeType": "ExpressionStatement",
												"src": "75131:92:0"
											},
											{
												"assignments": [
													2312,
													2314
												],
												"declarations": [
													{
														"constant": false,
														"id": 2312,
														"mutability": "mutable",
														"name": "amount0V2",
														"nodeType": "VariableDeclaration",
														"scope": 2517,
														"src": "75234:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2311,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "75234:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2314,
														"mutability": "mutable",
														"name": "amount1V2",
														"nodeType": "VariableDeclaration",
														"scope": 2517,
														"src": "75253:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2313,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "75253:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2325,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2322,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "75315:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_V3Migrator_$2519",
																		"typeString": "contract V3Migrator"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_V3Migrator_$2519",
																		"typeString": "contract V3Migrator"
																	}
																],
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "75307:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2320,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "75307:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "75307:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2316,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "75289:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																			"typeString": "struct IV3Migrator.MigrateParams calldata"
																		}
																	},
																	"id": 2317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pair",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1429,
																	"src": "75289:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2315,
																"name": "IUniswapV2Pair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2100,
																"src": "75274:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$2100_$",
																	"typeString": "type(contract IUniswapV2Pair)"
																}
															},
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "75274:27:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV2Pair_$2100",
																"typeString": "contract IUniswapV2Pair"
															}
														},
														"id": 2319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "burn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2073,
														"src": "75274:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_uint256_$_t_uint256_$",
															"typeString": "function (address) external returns (uint256,uint256)"
														}
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75274:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "75233:88:0"
											},
											{
												"assignments": [
													2327
												],
												"declarations": [
													{
														"constant": false,
														"id": 2327,
														"mutability": "mutable",
														"name": "amount0V2ToMigrate",
														"nodeType": "VariableDeclaration",
														"scope": 2517,
														"src": "75382:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2326,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "75382:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2335,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 2330,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2278,
																	"src": "75425:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																		"typeString": "struct IV3Migrator.MigrateParams calldata"
																	}
																},
																"id": 2331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "percentageToMigrate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1433,
																"src": "75425:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 2328,
																"name": "amount0V2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2312,
																"src": "75411:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2174,
															"src": "75411:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2332,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75411:41:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2333,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "75455:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "75411:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "75382:76:0"
											},
											{
												"assignments": [
													2337
												],
												"declarations": [
													{
														"constant": false,
														"id": 2337,
														"mutability": "mutable",
														"name": "amount1V2ToMigrate",
														"nodeType": "VariableDeclaration",
														"scope": 2517,
														"src": "75468:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2336,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "75468:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2345,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 2340,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2278,
																	"src": "75511:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																		"typeString": "struct IV3Migrator.MigrateParams calldata"
																	}
																},
																"id": 2341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "percentageToMigrate",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1433,
																"src": "75511:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															],
															"expression": {
																"id": 2338,
																"name": "amount1V2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2314,
																"src": "75497:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "mul",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2174,
															"src": "75497:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 2342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75497:41:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 2343,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "75541:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "75497:47:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "75468:76:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2349,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "75654:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																	"typeString": "struct IV3Migrator.MigrateParams calldata"
																}
															},
															"id": 2350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1435,
															"src": "75654:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2351,
															"name": "nonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2246,
															"src": "75669:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2352,
															"name": "amount0V2ToMigrate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2327,
															"src": "75697:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2346,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "75627:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1155_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2348,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1128,
														"src": "75627:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2353,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75627:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2354,
												"nodeType": "ExpressionStatement",
												"src": "75627:89:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2358,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2278,
																"src": "75753:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																	"typeString": "struct IV3Migrator.MigrateParams calldata"
																}
															},
															"id": 2359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "token1",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1437,
															"src": "75753:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2360,
															"name": "nonfungiblePositionManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2246,
															"src": "75768:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2361,
															"name": "amount1V2ToMigrate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2337,
															"src": "75796:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2355,
															"name": "TransferHelper",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1155,
															"src": "75726:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1155_$",
																"typeString": "type(library TransferHelper)"
															}
														},
														"id": 2357,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeApprove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1128,
														"src": "75726:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 2362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75726:89:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2363,
												"nodeType": "ExpressionStatement",
												"src": "75726:89:0"
											},
											{
												"assignments": [
													null,
													null,
													2365,
													2367
												],
												"declarations": [
													null,
													null,
													{
														"constant": false,
														"id": 2365,
														"mutability": "mutable",
														"name": "amount0V3",
														"nodeType": "VariableDeclaration",
														"scope": 2517,
														"src": "75859:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2364,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "75859:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2367,
														"mutability": "mutable",
														"name": "amount1V3",
														"nodeType": "VariableDeclaration",
														"scope": 2517,
														"src": "75878:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2366,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "75878:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2396,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2374,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "76058:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																			"typeString": "struct IV3Migrator.MigrateParams calldata"
																		}
																	},
																	"id": 2375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "token0",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1435,
																	"src": "76058:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2376,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "76101:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																			"typeString": "struct IV3Migrator.MigrateParams calldata"
																		}
																	},
																	"id": 2377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "token1",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1437,
																	"src": "76101:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2378,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "76141:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																			"typeString": "struct IV3Migrator.MigrateParams calldata"
																		}
																	},
																	"id": 2379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1439,
																	"src": "76141:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"expression": {
																		"id": 2380,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "76184:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																			"typeString": "struct IV3Migrator.MigrateParams calldata"
																		}
																	},
																	"id": 2381,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tickLower",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1441,
																	"src": "76184:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																{
																	"expression": {
																		"id": 2382,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "76233:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																			"typeString": "struct IV3Migrator.MigrateParams calldata"
																		}
																	},
																	"id": 2383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tickUpper",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1443,
																	"src": "76233:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																{
																	"id": 2384,
																	"name": "amount0V2ToMigrate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2327,
																	"src": "76287:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2385,
																	"name": "amount1V2ToMigrate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2337,
																	"src": "76343:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2386,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "76395:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																			"typeString": "struct IV3Migrator.MigrateParams calldata"
																		}
																	},
																	"id": 2387,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount0Min",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1445,
																	"src": "76395:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2388,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "76446:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																			"typeString": "struct IV3Migrator.MigrateParams calldata"
																		}
																	},
																	"id": 2389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amount1Min",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1447,
																	"src": "76446:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"expression": {
																		"id": 2390,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "76496:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																			"typeString": "struct IV3Migrator.MigrateParams calldata"
																		}
																	},
																	"id": 2391,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "recipient",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1449,
																	"src": "76496:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2392,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "76544:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																			"typeString": "struct IV3Migrator.MigrateParams calldata"
																		}
																	},
																	"id": 2393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "deadline",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1451,
																	"src": "76544:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	{
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2372,
																	"name": "INonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "75989:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1859_$",
																		"typeString": "type(contract INonfungiblePositionManager)"
																	}
																},
																"id": 2373,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "MintParams",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1773,
																"src": "75989:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_MintParams_$1773_storage_ptr_$",
																	"typeString": "type(struct INonfungiblePositionManager.MintParams storage pointer)"
																}
															},
															"id": 2394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"names": [
																"token0",
																"token1",
																"fee",
																"tickLower",
																"tickUpper",
																"amount0Desired",
																"amount1Desired",
																"amount0Min",
																"amount1Min",
																"recipient",
																"deadline"
															],
															"nodeType": "FunctionCall",
															"src": "75989:589:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_MintParams_$1773_memory_ptr",
																"typeString": "struct INonfungiblePositionManager.MintParams memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_MintParams_$1773_memory_ptr",
																"typeString": "struct INonfungiblePositionManager.MintParams memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2369,
																	"name": "nonfungiblePositionManager",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2246,
																	"src": "75939:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2368,
																"name": "INonfungiblePositionManager",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1859,
																"src": "75911:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_INonfungiblePositionManager_$1859_$",
																	"typeString": "type(contract INonfungiblePositionManager)"
																}
															},
															"id": 2370,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "75911:55:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INonfungiblePositionManager_$1859",
																"typeString": "contract INonfungiblePositionManager"
															}
														},
														"id": 2371,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1787,
														"src": "75911:60:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_payable$_t_struct$_MintParams_$1773_memory_ptr_$returns$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
															"typeString": "function (struct INonfungiblePositionManager.MintParams memory) payable external returns (uint256,uint128,uint256,uint256)"
														}
													},
													"id": 2395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75911:681:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint128,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "75854:738:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2397,
														"name": "amount0V3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2365,
														"src": "76664:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2398,
														"name": "amount0V2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2312,
														"src": "76676:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "76664:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2456,
												"nodeType": "IfStatement",
												"src": "76660:544:0",
												"trueBody": {
													"id": 2455,
													"nodeType": "Block",
													"src": "76687:517:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2400,
																	"name": "amount0V3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2365,
																	"src": "76705:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2401,
																	"name": "amount0V2ToMigrate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2327,
																	"src": "76717:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "76705:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2413,
															"nodeType": "IfStatement",
															"src": "76701:141:0",
															"trueBody": {
																"id": 2412,
																"nodeType": "Block",
																"src": "76737:105:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2406,
																						"name": "params",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2278,
																						"src": "76782:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																							"typeString": "struct IV3Migrator.MigrateParams calldata"
																						}
																					},
																					"id": 2407,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1435,
																					"src": "76782:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2408,
																					"name": "nonfungiblePositionManager",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2246,
																					"src": "76797:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 2409,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "76825:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 2403,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "76755:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1155_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 2405,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeApprove",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1128,
																				"src": "76755:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2410,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "76755:72:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2411,
																		"nodeType": "ExpressionStatement",
																		"src": "76755:72:0"
																	}
																]
															}
														},
														{
															"assignments": [
																2415
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2415,
																	"mutability": "mutable",
																	"name": "refund0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2455,
																	"src": "76856:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2414,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "76856:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2419,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2418,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2416,
																	"name": "amount0V2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2312,
																	"src": "76874:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2417,
																	"name": "amount0V3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2365,
																	"src": "76886:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "76874:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "76856:39:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2420,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "76913:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																			"typeString": "struct IV3Migrator.MigrateParams calldata"
																		}
																	},
																	"id": 2421,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "refundAsETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1453,
																	"src": "76913:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2422,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2278,
																			"src": "76935:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																				"typeString": "struct IV3Migrator.MigrateParams calldata"
																			}
																		},
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token0",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1435,
																		"src": "76935:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2424,
																		"name": "WETH9",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "76952:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "76935:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "76913:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2453,
																"nodeType": "Block",
																"src": "77098:96:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2446,
																						"name": "params",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2278,
																						"src": "77144:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																							"typeString": "struct IV3Migrator.MigrateParams calldata"
																						}
																					},
																					"id": 2447,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token0",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1435,
																					"src": "77144:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 2448,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "77159:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2449,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "77159:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"id": 2450,
																					"name": "refund0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2415,
																					"src": "77171:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2443,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "77116:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1155_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 2445,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1082,
																				"src": "77116:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "77116:63:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2452,
																		"nodeType": "ExpressionStatement",
																		"src": "77116:63:0"
																	}
																]
															},
															"id": 2454,
															"nodeType": "IfStatement",
															"src": "76909:285:0",
															"trueBody": {
																"id": 2442,
																"nodeType": "Block",
																"src": "76959:133:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2431,
																					"name": "refund0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2415,
																					"src": "77000:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 2428,
																							"name": "WETH9",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1273,
																							"src": "76984:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2427,
																						"name": "IWETH9",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 824,
																						"src": "76977:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IWETH9_$824_$",
																							"typeString": "type(contract IWETH9)"
																						}
																					},
																					"id": 2429,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "76977:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IWETH9_$824",
																						"typeString": "contract IWETH9"
																					}
																				},
																				"id": 2430,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "withdraw",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 823,
																				"src": "76977:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) external"
																				}
																			},
																			"id": 2432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "76977:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2433,
																		"nodeType": "ExpressionStatement",
																		"src": "76977:31:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2437,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "77057:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2438,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "77057:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"id": 2439,
																					"name": "refund0",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2415,
																					"src": "77069:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2434,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "77026:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1155_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 2436,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransferETH",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1154,
																				"src": "77026:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 2440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "77026:51:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2441,
																		"nodeType": "ExpressionStatement",
																		"src": "77026:51:0"
																	}
																]
															}
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2457,
														"name": "amount1V3",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2367,
														"src": "77217:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2458,
														"name": "amount1V2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2314,
														"src": "77229:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "77217:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2516,
												"nodeType": "IfStatement",
												"src": "77213:544:0",
												"trueBody": {
													"id": 2515,
													"nodeType": "Block",
													"src": "77240:517:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2462,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2460,
																	"name": "amount1V3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2367,
																	"src": "77258:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2461,
																	"name": "amount1V2ToMigrate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2337,
																	"src": "77270:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "77258:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2473,
															"nodeType": "IfStatement",
															"src": "77254:141:0",
															"trueBody": {
																"id": 2472,
																"nodeType": "Block",
																"src": "77290:105:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2466,
																						"name": "params",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2278,
																						"src": "77335:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																							"typeString": "struct IV3Migrator.MigrateParams calldata"
																						}
																					},
																					"id": 2467,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1437,
																					"src": "77335:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2468,
																					"name": "nonfungiblePositionManager",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2246,
																					"src": "77350:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 2469,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "77378:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 2463,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "77308:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1155_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 2465,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeApprove",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1128,
																				"src": "77308:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2470,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "77308:72:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2471,
																		"nodeType": "ExpressionStatement",
																		"src": "77308:72:0"
																	}
																]
															}
														},
														{
															"assignments": [
																2475
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2475,
																	"mutability": "mutable",
																	"name": "refund1",
																	"nodeType": "VariableDeclaration",
																	"scope": 2515,
																	"src": "77409:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2474,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "77409:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2479,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2478,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2476,
																	"name": "amount1V2",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2314,
																	"src": "77427:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2477,
																	"name": "amount1V3",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2367,
																	"src": "77439:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "77427:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "77409:39:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2480,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2278,
																		"src": "77466:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																			"typeString": "struct IV3Migrator.MigrateParams calldata"
																		}
																	},
																	"id": 2481,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "refundAsETH",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1453,
																	"src": "77466:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"id": 2485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2482,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2278,
																			"src": "77488:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																				"typeString": "struct IV3Migrator.MigrateParams calldata"
																			}
																		},
																		"id": 2483,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "token1",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1437,
																		"src": "77488:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"id": 2484,
																		"name": "WETH9",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1273,
																		"src": "77505:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"src": "77488:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "77466:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2513,
																"nodeType": "Block",
																"src": "77651:96:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2506,
																						"name": "params",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2278,
																						"src": "77697:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
																							"typeString": "struct IV3Migrator.MigrateParams calldata"
																						}
																					},
																					"id": 2507,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "token1",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1437,
																					"src": "77697:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"expression": {
																						"id": 2508,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "77712:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2509,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "77712:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"id": 2510,
																					"name": "refund1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2475,
																					"src": "77724:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2503,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "77669:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1155_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 2505,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransfer",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1082,
																				"src": "77669:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,address,uint256)"
																				}
																			},
																			"id": 2511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "77669:63:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2512,
																		"nodeType": "ExpressionStatement",
																		"src": "77669:63:0"
																	}
																]
															},
															"id": 2514,
															"nodeType": "IfStatement",
															"src": "77462:285:0",
															"trueBody": {
																"id": 2502,
																"nodeType": "Block",
																"src": "77512:133:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2491,
																					"name": "refund1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2475,
																					"src": "77553:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"arguments": [
																						{
																							"id": 2488,
																							"name": "WETH9",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1273,
																							"src": "77537:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 2487,
																						"name": "IWETH9",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 824,
																						"src": "77530:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_IWETH9_$824_$",
																							"typeString": "type(contract IWETH9)"
																						}
																					},
																					"id": 2489,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "77530:13:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IWETH9_$824",
																						"typeString": "contract IWETH9"
																					}
																				},
																				"id": 2490,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "withdraw",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 823,
																				"src": "77530:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256) external"
																				}
																			},
																			"id": 2492,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "77530:31:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2493,
																		"nodeType": "ExpressionStatement",
																		"src": "77530:31:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2497,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "77610:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2498,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "77610:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					}
																				},
																				{
																					"id": 2499,
																					"name": "refund1",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2475,
																					"src": "77622:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address_payable",
																						"typeString": "address payable"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 2494,
																					"name": "TransferHelper",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1155,
																					"src": "77579:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TransferHelper_$1155_$",
																						"typeString": "type(library TransferHelper)"
																					}
																				},
																				"id": 2496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "safeTransferETH",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1154,
																				"src": "77579:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256)"
																				}
																			},
																			"id": 2500,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "77579:51:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2501,
																		"nodeType": "ExpressionStatement",
																		"src": "77579:51:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"functionSelector": "d44f2bf2",
									"id": 2518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "migrate",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2280,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "74917:8:0"
									},
									"parameters": {
										"id": 2279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2278,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 2518,
												"src": "74877:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_MigrateParams_$1454_calldata_ptr",
													"typeString": "struct IV3Migrator.MigrateParams"
												},
												"typeName": {
													"id": 2277,
													"name": "MigrateParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1454,
													"src": "74877:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_MigrateParams_$1454_storage_ptr",
														"typeString": "struct IV3Migrator.MigrateParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74876:31:0"
									},
									"returnParameters": {
										"id": 2281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "74926:0:0"
									},
									"scope": 2519,
									"src": "74860:2903:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2520,
							"src": "74332:3433:0"
						}
					],
					"src": "125:77641:0"
				},
				"id": 0
			}
		}
	}
}