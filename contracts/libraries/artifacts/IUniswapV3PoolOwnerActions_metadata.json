{
	"compiler": {
		"version": "0.7.6+commit.7338295f"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "recipient",
						"type": "address"
					},
					{
						"internalType": "uint128",
						"name": "amount0Requested",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "amount1Requested",
						"type": "uint128"
					}
				],
				"name": "collectProtocol",
				"outputs": [
					{
						"internalType": "uint128",
						"name": "amount0",
						"type": "uint128"
					},
					{
						"internalType": "uint128",
						"name": "amount1",
						"type": "uint128"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "feeProtocol0",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "feeProtocol1",
						"type": "uint8"
					}
				],
				"name": "setFeeProtocol",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {
				"collectProtocol(address,uint128,uint128)": {
					"params": {
						"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
						"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
						"recipient": "The address to which collected protocol fees should be sent"
					},
					"returns": {
						"amount0": "The protocol fee collected in token0",
						"amount1": "The protocol fee collected in token1"
					}
				},
				"setFeeProtocol(uint8,uint8)": {
					"params": {
						"feeProtocol0": "new protocol fee for token0 of the pool",
						"feeProtocol1": "new protocol fee for token1 of the pool"
					}
				}
			},
			"title": "Permissioned pool actions",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"collectProtocol(address,uint128,uint128)": {
					"notice": "Collect the protocol fee accrued to the pool"
				},
				"setFeeProtocol(uint8,uint8)": {
					"notice": "Set the denominator of the protocol's % share of the fees"
				}
			},
			"notice": "Contains pool methods that may only be called by the factory owner",
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/libraries/NFTDescriptor_flattened.sol": "IUniswapV3PoolOwnerActions"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/libraries/NFTDescriptor_flattened.sol": {
			"keccak256": "0xefdf158bf8d7f3260de3efca7636c3d02fe7d40bbfa2c4647498d9ca22b91113",
			"license": "GPL-2.0-or-later",
			"urls": [
				"bzz-raw://29576f160c7c6e81e1c82456b0aaf6cdee22cb0f63be23eb94c1ec5a73e239e1",
				"dweb:/ipfs/QmNedAQtJtQsqTxihARJqWx8gg5wxvsiM5EyoEuYxz2fqJ"
			]
		}
	},
	"version": 1
}