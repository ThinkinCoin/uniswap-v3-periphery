{
	"id": "d468810e38b3b45d9decff5861567fb1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/lens/QuoterV2_flattened.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\n// File: contracts/libraries/PoolAddress.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\nlibrary PoolAddress {\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\n\n    /// @notice The identifying key of the pool\n    struct PoolKey {\n        address token0;\n        address token1;\n        uint24 fee;\n    }\n\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\n    /// @param tokenA The first token of a pool, unsorted\n    /// @param tokenB The second token of a pool, unsorted\n    /// @param fee The fee level of the pool\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\n    function getPoolKey(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal pure returns (PoolKey memory) {\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\n    }\n\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\n    /// @param factory The Uniswap V3 factory contract address\n    /// @param key The PoolKey\n    /// @return pool The contract address of the V3 pool\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\n        require(key.token0 < key.token1);\n        pool = address(\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        hex'ff',\n                        factory,\n                        keccak256(abi.encode(key.token0, key.token1, key.fee)),\n                        POOL_INIT_CODE_HASH\n                    )\n                )\n            )\n        );\n    }\n}\n\n// File: contracts/libraries/BytesLib.sol\n\n\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.5.0 <0.8.0;\n\nlibrary BytesLib {\n    function slice(\n        bytes memory _bytes,\n        uint256 _start,\n        uint256 _length\n    ) internal pure returns (bytes memory) {\n        require(_length + 31 >= _length, 'slice_overflow');\n        require(_start + _length >= _start, 'slice_overflow');\n        require(_bytes.length >= _start + _length, 'slice_outOfBounds');\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n                case 0 {\n                    // Get a location of some free memory and store it in tempBytes as\n                    // Solidity does for memory variables.\n                    tempBytes := mload(0x40)\n\n                    // The first word of the slice result is potentially a partial\n                    // word read from the original array. To read it, we calculate\n                    // the length of that partial word and start copying that many\n                    // bytes into the array. The first word we copy will start with\n                    // data we don't care about, but the last `lengthmod` bytes will\n                    // land at the beginning of the contents of the new array. When\n                    // we're done copying, we overwrite the full first word with\n                    // the actual length of the slice.\n                    let lengthmod := and(_length, 31)\n\n                    // The multiplication in the next line is necessary\n                    // because when slicing multiples of 32 bytes (lengthmod == 0)\n                    // the following copy loop was copying the origin's length\n                    // and then ending prematurely not copying everything it should.\n                    let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                    let end := add(mc, _length)\n\n                    for {\n                        // The multiplication in the next line has the same exact purpose\n                        // as the one above.\n                        let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                    } lt(mc, end) {\n                        mc := add(mc, 0x20)\n                        cc := add(cc, 0x20)\n                    } {\n                        mstore(mc, mload(cc))\n                    }\n\n                    mstore(tempBytes, _length)\n\n                    //update free-memory pointer\n                    //allocating the array padded to 32 bytes like the compiler does now\n                    mstore(0x40, and(add(mc, 31), not(31)))\n                }\n                //if we want a zero-length slice let's just return a zero-length array\n                default {\n                    tempBytes := mload(0x40)\n                    //zero out the 32 bytes slice we are about to return\n                    //we need to do it because Solidity does not garbage collect\n                    mstore(tempBytes, 0)\n\n                    mstore(0x40, add(tempBytes, 0x20))\n                }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\n        require(_start + 20 >= _start, 'toAddress_overflow');\n        require(_bytes.length >= _start + 20, 'toAddress_outOfBounds');\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint24(bytes memory _bytes, uint256 _start) internal pure returns (uint24) {\n        require(_start + 3 >= _start, 'toUint24_overflow');\n        require(_bytes.length >= _start + 3, 'toUint24_outOfBounds');\n        uint24 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x3), _start))\n        }\n\n        return tempUint;\n    }\n}\n\n// File: contracts/libraries/Path.sol\n\n\npragma solidity >=0.6.0;\n\n\n/// @title Functions for manipulating path data for multihop swaps\nlibrary Path {\n    using BytesLib for bytes;\n\n    /// @dev The length of the bytes encoded address\n    uint256 private constant ADDR_SIZE = 20;\n    /// @dev The length of the bytes encoded fee\n    uint256 private constant FEE_SIZE = 3;\n\n    /// @dev The offset of a single token address and pool fee\n    uint256 private constant NEXT_OFFSET = ADDR_SIZE + FEE_SIZE;\n    /// @dev The offset of an encoded pool key\n    uint256 private constant POP_OFFSET = NEXT_OFFSET + ADDR_SIZE;\n    /// @dev The minimum length of an encoding that contains 2 or more pools\n    uint256 private constant MULTIPLE_POOLS_MIN_LENGTH = POP_OFFSET + NEXT_OFFSET;\n\n    /// @notice Returns true iff the path contains two or more pools\n    /// @param path The encoded swap path\n    /// @return True if path contains two or more pools, otherwise false\n    function hasMultiplePools(bytes memory path) internal pure returns (bool) {\n        return path.length >= MULTIPLE_POOLS_MIN_LENGTH;\n    }\n\n    /// @notice Returns the number of pools in the path\n    /// @param path The encoded swap path\n    /// @return The number of pools in the path\n    function numPools(bytes memory path) internal pure returns (uint256) {\n        // Ignore the first token address. From then on every fee and token offset indicates a pool.\n        return ((path.length - ADDR_SIZE) / NEXT_OFFSET);\n    }\n\n    /// @notice Decodes the first pool in path\n    /// @param path The bytes encoded swap path\n    /// @return tokenA The first token of the given pool\n    /// @return tokenB The second token of the given pool\n    /// @return fee The fee level of the pool\n    function decodeFirstPool(bytes memory path)\n        internal\n        pure\n        returns (\n            address tokenA,\n            address tokenB,\n            uint24 fee\n        )\n    {\n        tokenA = path.toAddress(0);\n        fee = path.toUint24(ADDR_SIZE);\n        tokenB = path.toAddress(NEXT_OFFSET);\n    }\n\n    /// @notice Gets the segment corresponding to the first pool in the path\n    /// @param path The bytes encoded swap path\n    /// @return The segment containing all data necessary to target the first pool in the path\n    function getFirstPool(bytes memory path) internal pure returns (bytes memory) {\n        return path.slice(0, POP_OFFSET);\n    }\n\n    /// @notice Skips a token + fee element from the buffer and returns the remainder\n    /// @param path The swap path\n    /// @return The remaining token + fee elements in the path\n    function skipToken(bytes memory path) internal pure returns (bytes memory) {\n        return path.slice(NEXT_OFFSET, path.length - NEXT_OFFSET);\n    }\n}\n\n// File: contracts/interfaces/IPeripheryImmutableState.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n\n// File: contracts/base/PeripheryImmutableState.sol\n\n\npragma solidity =0.7.6;\n\n\n/// @title Immutable state\n/// @notice Immutable state used by periphery contracts\nabstract contract PeripheryImmutableState is IPeripheryImmutableState {\n    /// @inheritdoc IPeripheryImmutableState\n    address public immutable override factory;\n    /// @inheritdoc IPeripheryImmutableState\n    address public immutable override WETH9;\n\n    constructor(address _factory, address _WETH9) {\n        factory = _factory;\n        WETH9 = _WETH9;\n    }\n}\n\n// File: contracts/interfaces/IQuoterV2.sol\n\n\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title QuoterV2 Interface\n/// @notice Supports quoting the calculated amounts from exact input or exact output swaps.\n/// @notice For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.\n/// @dev These functions are not marked view because they rely on calling non-view functions and reverting\n/// to compute the result. They are also not gas efficient and should not be called on-chain.\ninterface IQuoterV2 {\n    /// @notice Returns the amount out received for a given exact input swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\n    /// @param amountIn The amount of the first token to swap\n    /// @return amountOut The amount of the last token that would be received\n    /// @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n    /// @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactInput(bytes memory path, uint256 amountIn)\n        external\n        returns (\n            uint256 amountOut,\n            uint160[] memory sqrtPriceX96AfterList,\n            uint32[] memory initializedTicksCrossedList,\n            uint256 gasEstimate\n        );\n\n    struct QuoteExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 amountIn;\n        uint24 fee;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\n    /// @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\n    /// tokenIn The token being swapped in\n    /// tokenOut The token being swapped out\n    /// fee The fee of the token pool to consider for the pair\n    /// amountIn The desired input amount\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountOut The amount of `tokenOut` that would be received\n    /// @return sqrtPriceX96After The sqrt price of the pool after the swap\n    /// @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactInputSingle(QuoteExactInputSingleParams memory params)\n        external\n        returns (\n            uint256 amountOut,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256 gasEstimate\n        );\n\n    /// @notice Returns the amount in required for a given exact output swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n    /// @param amountOut The amount of the last token to receive\n    /// @return amountIn The amount of first token required to be paid\n    /// @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n    /// @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactOutput(bytes memory path, uint256 amountOut)\n        external\n        returns (\n            uint256 amountIn,\n            uint160[] memory sqrtPriceX96AfterList,\n            uint32[] memory initializedTicksCrossedList,\n            uint256 gasEstimate\n        );\n\n    struct QuoteExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint256 amount;\n        uint24 fee;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n    /// @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\n    /// tokenIn The token being swapped in\n    /// tokenOut The token being swapped out\n    /// fee The fee of the token pool to consider for the pair\n    /// amountOut The desired output amount\n    /// sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountIn The amount required as the input for the swap in order to receive `amountOut`\n    /// @return sqrtPriceX96After The sqrt price of the pool after the swap\n    /// @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n    /// @return gasEstimate The estimate of the gas that the swap consumes\n    function quoteExactOutputSingle(QuoteExactOutputSingleParams memory params)\n        external\n        returns (\n            uint256 amountIn,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256 gasEstimate\n        );\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n\n// File: @uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\n\n\npragma solidity >=0.5.0;\n\n\n\n\n\n\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n\n// File: contracts/libraries/PoolTicksCounter.sol\n\n\npragma solidity >=0.6.0;\n\n\nlibrary PoolTicksCounter {\n    /// @dev This function counts the number of initialized ticks that would incur a gas cost between tickBefore and tickAfter.\n    /// When tickBefore and/or tickAfter themselves are initialized, the logic over whether we should count them depends on the\n    /// direction of the swap. If we are swapping upwards (tickAfter > tickBefore) we don't want to count tickBefore but we do\n    /// want to count tickAfter. The opposite is true if we are swapping downwards.\n    function countInitializedTicksCrossed(\n        IUniswapV3Pool self,\n        int24 tickBefore,\n        int24 tickAfter\n    ) internal view returns (uint32 initializedTicksCrossed) {\n        int16 wordPosLower;\n        int16 wordPosHigher;\n        uint8 bitPosLower;\n        uint8 bitPosHigher;\n        bool tickBeforeInitialized;\n        bool tickAfterInitialized;\n\n        {\n            // Get the key and offset in the tick bitmap of the active tick before and after the swap.\n            int16 wordPos = int16((tickBefore / self.tickSpacing()) >> 8);\n            uint8 bitPos = uint8((tickBefore / self.tickSpacing()) % 256);\n\n            int16 wordPosAfter = int16((tickAfter / self.tickSpacing()) >> 8);\n            uint8 bitPosAfter = uint8((tickAfter / self.tickSpacing()) % 256);\n\n            // In the case where tickAfter is initialized, we only want to count it if we are swapping downwards.\n            // If the initializable tick after the swap is initialized, our original tickAfter is a\n            // multiple of tick spacing, and we are swapping downwards we know that tickAfter is initialized\n            // and we shouldn't count it.\n            tickAfterInitialized =\n                ((self.tickBitmap(wordPosAfter) & (1 << bitPosAfter)) > 0) &&\n                ((tickAfter % self.tickSpacing()) == 0) &&\n                (tickBefore > tickAfter);\n\n            // In the case where tickBefore is initialized, we only want to count it if we are swapping upwards.\n            // Use the same logic as above to decide whether we should count tickBefore or not.\n            tickBeforeInitialized =\n                ((self.tickBitmap(wordPos) & (1 << bitPos)) > 0) &&\n                ((tickBefore % self.tickSpacing()) == 0) &&\n                (tickBefore < tickAfter);\n\n            if (wordPos < wordPosAfter || (wordPos == wordPosAfter && bitPos <= bitPosAfter)) {\n                wordPosLower = wordPos;\n                bitPosLower = bitPos;\n                wordPosHigher = wordPosAfter;\n                bitPosHigher = bitPosAfter;\n            } else {\n                wordPosLower = wordPosAfter;\n                bitPosLower = bitPosAfter;\n                wordPosHigher = wordPos;\n                bitPosHigher = bitPos;\n            }\n        }\n\n        // Count the number of initialized ticks crossed by iterating through the tick bitmap.\n        // Our first mask should include the lower tick and everything to its left.\n        uint256 mask = type(uint256).max << bitPosLower;\n        while (wordPosLower <= wordPosHigher) {\n            // If we're on the final tick bitmap page, ensure we only count up to our\n            // ending tick.\n            if (wordPosLower == wordPosHigher) {\n                mask = mask & (type(uint256).max >> (255 - bitPosHigher));\n            }\n\n            uint256 masked = self.tickBitmap(wordPosLower) & mask;\n            initializedTicksCrossed += countOneBits(masked);\n            wordPosLower++;\n            // Reset our mask so we consider all bits on the next iteration.\n            mask = type(uint256).max;\n        }\n\n        if (tickAfterInitialized) {\n            initializedTicksCrossed -= 1;\n        }\n\n        if (tickBeforeInitialized) {\n            initializedTicksCrossed -= 1;\n        }\n\n        return initializedTicksCrossed;\n    }\n\n    function countOneBits(uint256 x) private pure returns (uint16) {\n        uint16 bits = 0;\n        while (x != 0) {\n            bits++;\n            x &= (x - 1);\n        }\n        return bits;\n    }\n}\n\n// File: contracts/libraries/CallbackValidation.sol\n\n\npragma solidity =0.7.6;\n\n\n\n/// @notice Provides validation for callbacks from Uniswap V3 Pools\nlibrary CallbackValidation {\n    /// @notice Returns the address of a valid Uniswap V3 Pool\n    /// @param factory The contract address of the Uniswap V3 factory\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The V3 pool contract address\n    function verifyCallback(\n        address factory,\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal view returns (IUniswapV3Pool pool) {\n        return verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee));\n    }\n\n    /// @notice Returns the address of a valid Uniswap V3 Pool\n    /// @param factory The contract address of the Uniswap V3 factory\n    /// @param poolKey The identifying key of the V3 pool\n    /// @return pool The V3 pool contract address\n    function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)\n        internal\n        view\n        returns (IUniswapV3Pool pool)\n    {\n        pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey));\n        require(msg.sender == address(pool));\n    }\n}\n\n// File: @uniswap/v3-core/contracts/libraries/BitMath.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title BitMath\n/// @dev This library provides functionality for computing bit properties of an unsigned integer\nlibrary BitMath {\n    /// @notice Returns the index of the most significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n    /// @param x the value for which to compute the most significant bit, must be greater than 0\n    /// @return r the index of the most significant bit\n    function mostSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        if (x >= 0x100000000000000000000000000000000) {\n            x >>= 128;\n            r += 128;\n        }\n        if (x >= 0x10000000000000000) {\n            x >>= 64;\n            r += 64;\n        }\n        if (x >= 0x100000000) {\n            x >>= 32;\n            r += 32;\n        }\n        if (x >= 0x10000) {\n            x >>= 16;\n            r += 16;\n        }\n        if (x >= 0x100) {\n            x >>= 8;\n            r += 8;\n        }\n        if (x >= 0x10) {\n            x >>= 4;\n            r += 4;\n        }\n        if (x >= 0x4) {\n            x >>= 2;\n            r += 2;\n        }\n        if (x >= 0x2) r += 1;\n    }\n\n    /// @notice Returns the index of the least significant bit of the number,\n    ///     where the least significant bit is at index 0 and the most significant bit is at index 255\n    /// @dev The function satisfies the property:\n    ///     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n    /// @param x the value for which to compute the least significant bit, must be greater than 0\n    /// @return r the index of the least significant bit\n    function leastSignificantBit(uint256 x) internal pure returns (uint8 r) {\n        require(x > 0);\n\n        r = 255;\n        if (x & type(uint128).max > 0) {\n            r -= 128;\n        } else {\n            x >>= 128;\n        }\n        if (x & type(uint64).max > 0) {\n            r -= 64;\n        } else {\n            x >>= 64;\n        }\n        if (x & type(uint32).max > 0) {\n            r -= 32;\n        } else {\n            x >>= 32;\n        }\n        if (x & type(uint16).max > 0) {\n            r -= 16;\n        } else {\n            x >>= 16;\n        }\n        if (x & type(uint8).max > 0) {\n            r -= 8;\n        } else {\n            x >>= 8;\n        }\n        if (x & 0xf > 0) {\n            r -= 4;\n        } else {\n            x >>= 4;\n        }\n        if (x & 0x3 > 0) {\n            r -= 2;\n        } else {\n            x >>= 2;\n        }\n        if (x & 0x1 > 0) r -= 1;\n    }\n}\n\n// File: @uniswap/v3-core/contracts/libraries/TickBitmap.sol\n\n\npragma solidity >=0.5.0;\n\n\n/// @title Packed tick initialized state library\n/// @notice Stores a packed mapping of tick index to its initialized state\n/// @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\nlibrary TickBitmap {\n    /// @notice Computes the position in the mapping where the initialized bit for a tick lives\n    /// @param tick The tick for which to compute the position\n    /// @return wordPos The key in the mapping containing the word in which the bit is stored\n    /// @return bitPos The bit position in the word where the flag is stored\n    function position(int24 tick) private pure returns (int16 wordPos, uint8 bitPos) {\n        wordPos = int16(tick >> 8);\n        bitPos = uint8(tick % 256);\n    }\n\n    /// @notice Flips the initialized state for a given tick from false to true, or vice versa\n    /// @param self The mapping in which to flip the tick\n    /// @param tick The tick to flip\n    /// @param tickSpacing The spacing between usable ticks\n    function flipTick(\n        mapping(int16 => uint256) storage self,\n        int24 tick,\n        int24 tickSpacing\n    ) internal {\n        require(tick % tickSpacing == 0); // ensure that the tick is spaced\n        (int16 wordPos, uint8 bitPos) = position(tick / tickSpacing);\n        uint256 mask = 1 << bitPos;\n        self[wordPos] ^= mask;\n    }\n\n    /// @notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n    /// to the left (less than or equal to) or right (greater than) of the given tick\n    /// @param self The mapping in which to compute the next initialized tick\n    /// @param tick The starting tick\n    /// @param tickSpacing The spacing between usable ticks\n    /// @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n    /// @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n    /// @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks\n    function nextInitializedTickWithinOneWord(\n        mapping(int16 => uint256) storage self,\n        int24 tick,\n        int24 tickSpacing,\n        bool lte\n    ) internal view returns (int24 next, bool initialized) {\n        int24 compressed = tick / tickSpacing;\n        if (tick < 0 && tick % tickSpacing != 0) compressed--; // round towards negative infinity\n\n        if (lte) {\n            (int16 wordPos, uint8 bitPos) = position(compressed);\n            // all the 1s at or to the right of the current bitPos\n            uint256 mask = (1 << bitPos) - 1 + (1 << bitPos);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the right of or at the current tick, return rightmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed - int24(bitPos - BitMath.mostSignificantBit(masked))) * tickSpacing\n                : (compressed - int24(bitPos)) * tickSpacing;\n        } else {\n            // start from the word of the next tick, since the current tick state doesn't matter\n            (int16 wordPos, uint8 bitPos) = position(compressed + 1);\n            // all the 1s at or to the left of the bitPos\n            uint256 mask = ~((1 << bitPos) - 1);\n            uint256 masked = self[wordPos] & mask;\n\n            // if there are no initialized ticks to the left of the current tick, return leftmost in the word\n            initialized = masked != 0;\n            // overflow/underflow is possible, but prevented externally by limiting both tickSpacing and tick\n            next = initialized\n                ? (compressed + 1 + int24(BitMath.leastSignificantBit(masked) - bitPos)) * tickSpacing\n                : (compressed + 1 + int24(type(uint8).max - bitPos)) * tickSpacing;\n        }\n    }\n}\n\n// File: @uniswap/v3-core/contracts/libraries/TickMath.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(MAX_TICK), 'T');\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n\n// File: @uniswap/v3-core/contracts/libraries/SafeCast.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Safe casting methods\n/// @notice Contains methods for safely casting between types\nlibrary SafeCast {\n    /// @notice Cast a uint256 to a uint160, revert on overflow\n    /// @param y The uint256 to be downcasted\n    /// @return z The downcasted integer, now type uint160\n    function toUint160(uint256 y) internal pure returns (uint160 z) {\n        require((z = uint160(y)) == y);\n    }\n\n    /// @notice Cast a int256 to a int128, revert on overflow or underflow\n    /// @param y The int256 to be downcasted\n    /// @return z The downcasted integer, now type int128\n    function toInt128(int256 y) internal pure returns (int128 z) {\n        require((z = int128(y)) == y);\n    }\n\n    /// @notice Cast a uint256 to a int256, revert on overflow\n    /// @param y The uint256 to be casted\n    /// @return z The casted integer, now type int256\n    function toInt256(uint256 y) internal pure returns (int256 z) {\n        require(y < 2**255);\n        z = int256(y);\n    }\n}\n\n// File: contracts/lens/QuoterV2.sol\n\n\npragma solidity =0.7.6;\n\n\n\n\n\n\n\n\n\n\n\n\n/// @title Provides quotes for swaps\n/// @notice Allows getting the expected amount out or amount in for a given swap without executing the swap\n/// @dev These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute\n/// the swap and check the amounts in the callback.\ncontract QuoterV2 is IQuoterV2, IUniswapV3SwapCallback, PeripheryImmutableState {\n    using Path for bytes;\n    using SafeCast for uint256;\n    using PoolTicksCounter for IUniswapV3Pool;\n\n    /// @dev Transient storage variable used to check a safety condition in exact output swaps.\n    uint256 private amountOutCached;\n\n    constructor(address _factory, address _WETH9) PeripheryImmutableState(_factory, _WETH9) {}\n\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) private view returns (IUniswapV3Pool) {\n        return IUniswapV3Pool(PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)));\n    }\n\n    /// @inheritdoc IUniswapV3SwapCallback\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes memory path\n    ) external view override {\n        require(amount0Delta > 0 || amount1Delta > 0); // swaps entirely within 0-liquidity regions are not supported\n        (address tokenIn, address tokenOut, uint24 fee) = path.decodeFirstPool();\n        CallbackValidation.verifyCallback(factory, tokenIn, tokenOut, fee);\n\n        (bool isExactInput, uint256 amountToPay, uint256 amountReceived) =\n            amount0Delta > 0\n                ? (tokenIn < tokenOut, uint256(amount0Delta), uint256(-amount1Delta))\n                : (tokenOut < tokenIn, uint256(amount1Delta), uint256(-amount0Delta));\n\n        IUniswapV3Pool pool = getPool(tokenIn, tokenOut, fee);\n        (uint160 sqrtPriceX96After, int24 tickAfter, , , , , ) = pool.slot0();\n\n        if (isExactInput) {\n            assembly {\n                let ptr := mload(0x40)\n                mstore(ptr, amountReceived)\n                mstore(add(ptr, 0x20), sqrtPriceX96After)\n                mstore(add(ptr, 0x40), tickAfter)\n                revert(ptr, 96)\n            }\n        } else {\n            // if the cache has been populated, ensure that the full output amount has been received\n            if (amountOutCached != 0) require(amountReceived == amountOutCached);\n            assembly {\n                let ptr := mload(0x40)\n                mstore(ptr, amountToPay)\n                mstore(add(ptr, 0x20), sqrtPriceX96After)\n                mstore(add(ptr, 0x40), tickAfter)\n                revert(ptr, 96)\n            }\n        }\n    }\n\n    /// @dev Parses a revert reason that should contain the numeric quote\n    function parseRevertReason(bytes memory reason)\n        private\n        pure\n        returns (\n            uint256 amount,\n            uint160 sqrtPriceX96After,\n            int24 tickAfter\n        )\n    {\n        if (reason.length != 96) {\n            if (reason.length < 68) revert('Unexpected error');\n            assembly {\n                reason := add(reason, 0x04)\n            }\n            revert(abi.decode(reason, (string)));\n        }\n        return abi.decode(reason, (uint256, uint160, int24));\n    }\n\n    function handleRevert(\n        bytes memory reason,\n        IUniswapV3Pool pool,\n        uint256 gasEstimate\n    )\n        private\n        view\n        returns (\n            uint256 amount,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256\n        )\n    {\n        int24 tickBefore;\n        int24 tickAfter;\n        (, tickBefore, , , , , ) = pool.slot0();\n        (amount, sqrtPriceX96After, tickAfter) = parseRevertReason(reason);\n\n        initializedTicksCrossed = pool.countInitializedTicksCrossed(tickBefore, tickAfter);\n\n        return (amount, sqrtPriceX96After, initializedTicksCrossed, gasEstimate);\n    }\n\n    function quoteExactInputSingle(QuoteExactInputSingleParams memory params)\n        public\n        override\n        returns (\n            uint256 amountOut,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256 gasEstimate\n        )\n    {\n        bool zeroForOne = params.tokenIn < params.tokenOut;\n        IUniswapV3Pool pool = getPool(params.tokenIn, params.tokenOut, params.fee);\n\n        uint256 gasBefore = gasleft();\n        try\n            pool.swap(\n                address(this), // address(0) might cause issues with some tokens\n                zeroForOne,\n                params.amountIn.toInt256(),\n                params.sqrtPriceLimitX96 == 0\n                    ? (zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1)\n                    : params.sqrtPriceLimitX96,\n                abi.encodePacked(params.tokenIn, params.fee, params.tokenOut)\n            )\n        {} catch (bytes memory reason) {\n            gasEstimate = gasBefore - gasleft();\n            return handleRevert(reason, pool, gasEstimate);\n        }\n    }\n\n    function quoteExactInput(bytes memory path, uint256 amountIn)\n        public\n        override\n        returns (\n            uint256 amountOut,\n            uint160[] memory sqrtPriceX96AfterList,\n            uint32[] memory initializedTicksCrossedList,\n            uint256 gasEstimate\n        )\n    {\n        sqrtPriceX96AfterList = new uint160[](path.numPools());\n        initializedTicksCrossedList = new uint32[](path.numPools());\n\n        uint256 i = 0;\n        while (true) {\n            (address tokenIn, address tokenOut, uint24 fee) = path.decodeFirstPool();\n\n            // the outputs of prior swaps become the inputs to subsequent ones\n            (uint256 _amountOut, uint160 _sqrtPriceX96After, uint32 _initializedTicksCrossed, uint256 _gasEstimate) =\n                quoteExactInputSingle(\n                    QuoteExactInputSingleParams({\n                        tokenIn: tokenIn,\n                        tokenOut: tokenOut,\n                        fee: fee,\n                        amountIn: amountIn,\n                        sqrtPriceLimitX96: 0\n                    })\n                );\n\n            sqrtPriceX96AfterList[i] = _sqrtPriceX96After;\n            initializedTicksCrossedList[i] = _initializedTicksCrossed;\n            amountIn = _amountOut;\n            gasEstimate += _gasEstimate;\n            i++;\n\n            // decide whether to continue or terminate\n            if (path.hasMultiplePools()) {\n                path = path.skipToken();\n            } else {\n                return (amountIn, sqrtPriceX96AfterList, initializedTicksCrossedList, gasEstimate);\n            }\n        }\n    }\n\n    function quoteExactOutputSingle(QuoteExactOutputSingleParams memory params)\n        public\n        override\n        returns (\n            uint256 amountIn,\n            uint160 sqrtPriceX96After,\n            uint32 initializedTicksCrossed,\n            uint256 gasEstimate\n        )\n    {\n        bool zeroForOne = params.tokenIn < params.tokenOut;\n        IUniswapV3Pool pool = getPool(params.tokenIn, params.tokenOut, params.fee);\n\n        // if no price limit has been specified, cache the output amount for comparison in the swap callback\n        if (params.sqrtPriceLimitX96 == 0) amountOutCached = params.amount;\n        uint256 gasBefore = gasleft();\n        try\n            pool.swap(\n                address(this), // address(0) might cause issues with some tokens\n                zeroForOne,\n                -params.amount.toInt256(),\n                params.sqrtPriceLimitX96 == 0\n                    ? (zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1)\n                    : params.sqrtPriceLimitX96,\n                abi.encodePacked(params.tokenOut, params.fee, params.tokenIn)\n            )\n        {} catch (bytes memory reason) {\n            gasEstimate = gasBefore - gasleft();\n            if (params.sqrtPriceLimitX96 == 0) delete amountOutCached; // clear cache\n            return handleRevert(reason, pool, gasEstimate);\n        }\n    }\n\n    function quoteExactOutput(bytes memory path, uint256 amountOut)\n        public\n        override\n        returns (\n            uint256 amountIn,\n            uint160[] memory sqrtPriceX96AfterList,\n            uint32[] memory initializedTicksCrossedList,\n            uint256 gasEstimate\n        )\n    {\n        sqrtPriceX96AfterList = new uint160[](path.numPools());\n        initializedTicksCrossedList = new uint32[](path.numPools());\n\n        uint256 i = 0;\n        while (true) {\n            (address tokenOut, address tokenIn, uint24 fee) = path.decodeFirstPool();\n\n            // the inputs of prior swaps become the outputs of subsequent ones\n            (uint256 _amountIn, uint160 _sqrtPriceX96After, uint32 _initializedTicksCrossed, uint256 _gasEstimate) =\n                quoteExactOutputSingle(\n                    QuoteExactOutputSingleParams({\n                        tokenIn: tokenIn,\n                        tokenOut: tokenOut,\n                        amount: amountOut,\n                        fee: fee,\n                        sqrtPriceLimitX96: 0\n                    })\n                );\n\n            sqrtPriceX96AfterList[i] = _sqrtPriceX96After;\n            initializedTicksCrossedList[i] = _initializedTicksCrossed;\n            amountOut = _amountIn;\n            gasEstimate += _gasEstimate;\n            i++;\n\n            // decide whether to continue or terminate\n            if (path.hasMultiplePools()) {\n                path = path.skipToken();\n            } else {\n                return (amountOut, sqrtPriceX96AfterList, initializedTicksCrossedList, gasEstimate);\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/lens/QuoterV2_flattened.sol": {
				"BitMath": {
					"abi": [],
					"devdoc": {
						"details": "This library provides functionality for computing bit properties of an unsigned integer",
						"kind": "dev",
						"methods": {},
						"title": "BitMath",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/QuoterV2_flattened.sol\":46942:49544  library BitMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46942:49544  library BitMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209645f077648caa55496ee1b42e20fcba3191f2370f89a2fdcebbb9ae54256c0764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209645f077648caa55496ee1b42e20fcba3191f2370f89a2fdcebbb9ae54256c0764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 GASLIMIT CREATE PUSH24 0x648CAA55496EE1B42E20FCBA3191F2370F89A2FDCEBBB9AE SLOAD 0x25 PUSH13 0x764736F6C6343000706003300 ",
							"sourceMap": "46942:2602:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209645f077648caa55496ee1b42e20fcba3191f2370f89a2fdcebbb9ae54256c0764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP7 GASLIMIT CREATE PUSH24 0x648CAA55496EE1B42E20FCBA3191F2370F89A2FDCEBBB9AE SLOAD 0x25 PUSH13 0x764736F6C6343000706003300 ",
							"sourceMap": "46942:2602:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"leastSignificantBit(uint256)": "infinite",
								"mostSignificantBit(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 46942,
									"end": 49544,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 46942,
									"end": 49544,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209645f077648caa55496ee1b42e20fcba3191f2370f89a2fdcebbb9ae54256c0764736f6c63430007060033",
									".code": [
										{
											"begin": 46942,
											"end": 49544,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 46942,
											"end": 49544,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 46942,
											"end": 49544,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46942,
											"end": 49544,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 46942,
											"end": 49544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 46942,
											"end": 49544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 46942,
											"end": 49544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46942,
											"end": 49544,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46942,
											"end": 49544,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"This library provides functionality for computing bit properties of an unsigned integer\",\"kind\":\"dev\",\"methods\":{},\"title\":\"BitMath\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"BitMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"BytesLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/QuoterV2_flattened.sol\":2243:6068  library BytesLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2243:6068  library BytesLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122083b4d8804deb1366411b11baca2137cd2faa57c886f6e195dc3ea20f2681fb5f64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122083b4d8804deb1366411b11baca2137cd2faa57c886f6e195dc3ea20f2681fb5f64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xB4 0xD8 DUP1 0x4D 0xEB SGT PUSH7 0x411B11BACA2137 0xCD 0x2F 0xAA JUMPI 0xC8 DUP7 0xF6 0xE1 SWAP6 0xDC RETURNDATACOPY LOG2 0xF 0x26 DUP2 0xFB 0x5F PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "2243:3825:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122083b4d8804deb1366411b11baca2137cd2faa57c886f6e195dc3ea20f2681fb5f64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP4 0xB4 0xD8 DUP1 0x4D 0xEB SGT PUSH7 0x411B11BACA2137 0xCD 0x2F 0xAA JUMPI 0xC8 DUP7 0xF6 0xE1 SWAP6 0xDC RETURNDATACOPY LOG2 0xF 0x26 DUP2 0xFB 0x5F PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "2243:3825:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"slice(bytes memory,uint256,uint256)": "infinite",
								"toAddress(bytes memory,uint256)": "infinite",
								"toUint24(bytes memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122083b4d8804deb1366411b11baca2137cd2faa57c886f6e195dc3ea20f2681fb5f64736f6c63430007060033",
									".code": [
										{
											"begin": 2243,
											"end": 6068,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"BytesLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"CallbackValidation": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/QuoterV2_flattened.sol\":45502:46738  library CallbackValidation {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45502:46738  library CallbackValidation {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220b80145658ca6c9c913fc9385c2ef2285c680e847a7f5e6119fe36ab70abdc2da64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b80145658ca6c9c913fc9385c2ef2285c680e847a7f5e6119fe36ab70abdc2da64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 ADD GASLIMIT PUSH6 0x8CA6C9C913FC SWAP4 DUP6 0xC2 0xEF 0x22 DUP6 0xC6 DUP1 0xE8 SELFBALANCE 0xA7 CREATE2 0xE6 GT SWAP16 0xE3 PUSH11 0xB70ABDC2DA64736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "45502:1236:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220b80145658ca6c9c913fc9385c2ef2285c680e847a7f5e6119fe36ab70abdc2da64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB8 ADD GASLIMIT PUSH6 0x8CA6C9C913FC SWAP4 DUP6 0xC2 0xEF 0x22 DUP6 0xC6 DUP1 0xE8 SELFBALANCE 0xA7 CREATE2 0xE6 GT SWAP16 0xE3 PUSH11 0xB70ABDC2DA64736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "45502:1236:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"verifyCallback(address,address,address,uint24)": "infinite",
								"verifyCallback(address,struct PoolAddress.PoolKey memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 45502,
									"end": 46738,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 45502,
									"end": 46738,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b80145658ca6c9c913fc9385c2ef2285c680e847a7f5e6119fe36ab70abdc2da64736f6c63430007060033",
									".code": [
										{
											"begin": 45502,
											"end": 46738,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 45502,
											"end": 46738,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 45502,
											"end": 46738,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 45502,
											"end": 46738,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 45502,
											"end": 46738,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 45502,
											"end": 46738,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 45502,
											"end": 46738,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45502,
											"end": 46738,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45502,
											"end": 46738,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides validation for callbacks from Uniswap V3 Pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"CallbackValidation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides validation for callbacks from Uniswap V3 Pools",
						"version": 1
					}
				},
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				},
				"IQuoterV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "quoteExactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160[]",
									"name": "sqrtPriceX96AfterList",
									"type": "uint160[]"
								},
								{
									"internalType": "uint32[]",
									"name": "initializedTicksCrossedList",
									"type": "uint32[]"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IQuoterV2.QuoteExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "quoteExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "initializedTicksCrossed",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "quoteExactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160[]",
									"name": "sqrtPriceX96AfterList",
									"type": "uint160[]"
								},
								{
									"internalType": "uint32[]",
									"name": "initializedTicksCrossedList",
									"type": "uint32[]"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IQuoterV2.QuoteExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "quoteExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "initializedTicksCrossed",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.",
						"kind": "dev",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"params": {
									"amountIn": "The amount of the first token to swap",
									"path": "The path of the swap, i.e. each token pair and the pool fee"
								},
								"returns": {
									"amountOut": "The amount of the last token that would be received",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
									"sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
								}
							},
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
								"params": {
									"params": "The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
								},
								"returns": {
									"amountOut": "The amount of `tokenOut` that would be received",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
									"sqrtPriceX96After": "The sqrt price of the pool after the swap"
								}
							},
							"quoteExactOutput(bytes,uint256)": {
								"params": {
									"amountOut": "The amount of the last token to receive",
									"path": "The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"
								},
								"returns": {
									"amountIn": "The amount of first token required to be paid",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
									"sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
								}
							},
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
								"params": {
									"params": "The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
								},
								"returns": {
									"amountIn": "The amount required as the input for the swap in order to receive `amountOut`",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
									"sqrtPriceX96After": "The sqrt price of the pool after the swap"
								}
							}
						},
						"title": "QuoterV2 Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"quoteExactInput(bytes,uint256)": "cdca1753",
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": "c6a5026a",
							"quoteExactOutput(bytes,uint256)": "2f80bb1d",
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": "bd21704a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token to receive\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\"},\"returns\":{\"amountIn\":\"The amount of first token required to be paid\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountIn\":\"The amount required as the input for the swap in order to receive `amountOut`\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}}},\"title\":\"QuoterV2 Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in required for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount in required to receive the given exact output amount but for a swap of a single pool\"}},\"notice\":\"Supports quoting the calculated amounts from exact input or exact output swaps.For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"IQuoterV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"notice": "Returns the amount out received for a given exact input swap without executing the swap"
							},
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
								"notice": "Returns the amount out received for a given exact input but for a swap of a single pool"
							},
							"quoteExactOutput(bytes,uint256)": {
								"notice": "Returns the amount in required for a given exact output swap without executing the swap"
							},
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
								"notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool"
							}
						},
						"notice": "Supports quoting the calculated amounts from exact input or exact output swaps.For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.",
						"version": 1
					}
				},
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				},
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				},
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				},
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				},
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				},
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				},
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				},
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				},
				"Path": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADDR_SIZE": {
								"details": "The length of the bytes encoded address"
							},
							"FEE_SIZE": {
								"details": "The length of the bytes encoded fee"
							},
							"MULTIPLE_POOLS_MIN_LENGTH": {
								"details": "The minimum length of an encoding that contains 2 or more pools"
							},
							"NEXT_OFFSET": {
								"details": "The offset of a single token address and pool fee"
							},
							"POP_OFFSET": {
								"details": "The offset of an encoded pool key"
							}
						},
						"title": "Functions for manipulating path data for multihop swaps",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/QuoterV2_flattened.sol\":6204:8826  library Path {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/QuoterV2_flattened.sol\":6204:8826  library Path {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209bb35bc69013ca441e11a2cd6ee45a1a7f9de118ec267fbfb8e2a374589f88b964736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bb35bc69013ca441e11a2cd6ee45a1a7f9de118ec267fbfb8e2a374589f88b964736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB3 JUMPDEST 0xC6 SWAP1 SGT 0xCA DIFFICULTY 0x1E GT LOG2 0xCD PUSH15 0xE45A1A7F9DE118EC267FBFB8E2A374 PC SWAP16 DUP9 0xB9 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "6204:2622:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209bb35bc69013ca441e11a2cd6ee45a1a7f9de118ec267fbfb8e2a374589f88b964736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP12 0xB3 JUMPDEST 0xC6 SWAP1 SGT 0xCA DIFFICULTY 0x1E GT LOG2 0xCD PUSH15 0xE45A1A7F9DE118EC267FBFB8E2A374 PC SWAP16 DUP9 0xB9 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "6204:2622:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"decodeFirstPool(bytes memory)": "infinite",
								"getFirstPool(bytes memory)": "infinite",
								"hasMultiplePools(bytes memory)": "infinite",
								"numPools(bytes memory)": "infinite",
								"skipToken(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209bb35bc69013ca441e11a2cd6ee45a1a7f9de118ec267fbfb8e2a374589f88b964736f6c63430007060033",
									".code": [
										{
											"begin": 6204,
											"end": 8826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADDR_SIZE\":{\"details\":\"The length of the bytes encoded address\"},\"FEE_SIZE\":{\"details\":\"The length of the bytes encoded fee\"},\"MULTIPLE_POOLS_MIN_LENGTH\":{\"details\":\"The minimum length of an encoding that contains 2 or more pools\"},\"NEXT_OFFSET\":{\"details\":\"The offset of a single token address and pool fee\"},\"POP_OFFSET\":{\"details\":\"The offset of an encoded pool key\"}},\"title\":\"Functions for manipulating path data for multihop swaps\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"Path\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"WETH9": {
								"return": "Returns the address of WETH9"
							},
							"factory": {
								"return": "Returns the address of the Uniswap V3 factory"
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"WETH9\":{\"return\":\"Returns the address of WETH9\"},\"factory\":{\"return\":\"Returns the address of the Uniswap V3 factory\"}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Immutable state used by periphery contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"PeripheryImmutableState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Immutable state used by periphery contracts",
						"version": 1
					}
				},
				"PoolAddress": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Provides functions for deriving a pool address from the factory, tokens, and the fee",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/QuoterV2_flattened.sol\":214:1866  library PoolAddress {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/QuoterV2_flattened.sol\":214:1866  library PoolAddress {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203d363d7fb86672c5696ef193903ac66631a10d78f19ee1413ce8aa14ee200a6564736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d363d7fb86672c5696ef193903ac66631a10d78f19ee1413ce8aa14ee200a6564736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE CALLDATASIZE RETURNDATASIZE PUSH32 0xB86672C5696EF193903AC66631A10D78F19EE1413CE8AA14EE200A6564736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "214:1652:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203d363d7fb86672c5696ef193903ac66631a10d78f19ee1413ce8aa14ee200a6564736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 RETURNDATASIZE CALLDATASIZE RETURNDATASIZE PUSH32 0xB86672C5696EF193903AC66631A10D78F19EE1413CE8AA14EE200A6564736F6C PUSH4 0x43000706 STOP CALLER ",
							"sourceMap": "214:1652:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"computeAddress(address,struct PoolAddress.PoolKey memory)": "infinite",
								"getPoolKey(address,address,uint24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203d363d7fb86672c5696ef193903ac66631a10d78f19ee1413ce8aa14ee200a6564736f6c63430007060033",
									".code": [
										{
											"begin": 214,
											"end": 1866,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the factory, tokens, and the fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"PoolAddress\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PoolTicksCounter": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/QuoterV2_flattened.sol\":41343:45351  library PoolTicksCounter {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/QuoterV2_flattened.sol\":41343:45351  library PoolTicksCounter {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200ab93b0d26357202cfe842f0d76e45c0b19862b0802a3c418080f4ba588b45e664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200ab93b0d26357202cfe842f0d76e45c0b19862b0802a3c418080f4ba588b45e664736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xB9 EXTCODESIZE 0xD 0x26 CALLDATALOAD PUSH19 0x2CFE842F0D76E45C0B19862B0802A3C418080 DELEGATECALL 0xBA PC DUP12 GASLIMIT 0xE6 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "41343:4008:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212200ab93b0d26357202cfe842f0d76e45c0b19862b0802a3c418080f4ba588b45e664736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXP 0xB9 EXTCODESIZE 0xD 0x26 CALLDATALOAD PUSH19 0x2CFE842F0D76E45C0B19862B0802A3C418080 DELEGATECALL 0xBA PC DUP12 GASLIMIT 0xE6 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "41343:4008:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"countInitializedTicksCrossed(contract IUniswapV3Pool,int24,int24)": "infinite",
								"countOneBits(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 41343,
									"end": 45351,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 41343,
									"end": 45351,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200ab93b0d26357202cfe842f0d76e45c0b19862b0802a3c418080f4ba588b45e664736f6c63430007060033",
									".code": [
										{
											"begin": 41343,
											"end": 45351,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 45351,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 45351,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 45351,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 41343,
											"end": 45351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41343,
											"end": 45351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 45351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41343,
											"end": 45351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41343,
											"end": 45351,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"PoolTicksCounter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"QuoterV2": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_WETH9",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "quoteExactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160[]",
									"name": "sqrtPriceX96AfterList",
									"type": "uint160[]"
								},
								{
									"internalType": "uint32[]",
									"name": "initializedTicksCrossedList",
									"type": "uint32[]"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amountIn",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IQuoterV2.QuoteExactInputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "quoteExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "initializedTicksCrossed",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "quoteExactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160[]",
									"name": "sqrtPriceX96AfterList",
									"type": "uint160[]"
								},
								{
									"internalType": "uint32[]",
									"name": "initializedTicksCrossedList",
									"type": "uint32[]"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"components": [
										{
											"internalType": "address",
											"name": "tokenIn",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "tokenOut",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "amount",
											"type": "uint256"
										},
										{
											"internalType": "uint24",
											"name": "fee",
											"type": "uint24"
										},
										{
											"internalType": "uint160",
											"name": "sqrtPriceLimitX96",
											"type": "uint160"
										}
									],
									"internalType": "struct IQuoterV2.QuoteExactOutputSingleParams",
									"name": "params",
									"type": "tuple"
								}
							],
							"name": "quoteExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96After",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "initializedTicksCrossed",
									"type": "uint32"
								},
								{
									"internalType": "uint256",
									"name": "gasEstimate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute the swap and check the amounts in the callback.",
						"kind": "dev",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"params": {
									"amountIn": "The amount of the first token to swap",
									"path": "The path of the swap, i.e. each token pair and the pool fee"
								},
								"returns": {
									"amountOut": "The amount of the last token that would be received",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
									"sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
								}
							},
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
								"params": {
									"params": "The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
								},
								"returns": {
									"amountOut": "The amount of `tokenOut` that would be received",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
									"sqrtPriceX96After": "The sqrt price of the pool after the swap"
								}
							},
							"quoteExactOutput(bytes,uint256)": {
								"params": {
									"amountOut": "The amount of the last token to receive",
									"path": "The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"
								},
								"returns": {
									"amountIn": "The amount of first token required to be paid",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossedList": "List of the initialized ticks that the swap crossed for each pool in the path",
									"sqrtPriceX96AfterList": "List of the sqrt price after the swap for each pool in the path"
								}
							},
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
								"params": {
									"params": "The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap"
								},
								"returns": {
									"amountIn": "The amount required as the input for the swap in order to receive `amountOut`",
									"gasEstimate": "The estimate of the gas that the swap consumes",
									"initializedTicksCrossed": "The number of initialized ticks that the swap crossed",
									"sqrtPriceX96After": "The sqrt price of the pool after the swap"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"stateVariables": {
							"amountOutCached": {
								"details": "Transient storage variable used to check a safety condition in exact output swaps."
							}
						},
						"title": "Provides quotes for swaps",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/QuoterV2_flattened.sol\":63769:73102  contract QuoterV2 is IQuoterV2, IUniswapV3SwapCallback, PeripheryImmutableState {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/lens/QuoterV2_flattened.sol\":64095:64185  constructor(address _factory, address _WETH9) PeripheryImmutableState(_factory, _WETH9) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"contracts/lens/QuoterV2_flattened.sol\":9742:9760  factory = _factory */\n  0x60\n  swap3\n  dup4\n  shl\n  dup2\n  and\n  0x80\n  mstore\n    /* \"contracts/lens/QuoterV2_flattened.sol\":9770:9784  WETH9 = _WETH9 */\n  swap2\n  shl\n  and\n  0xa0\n  mstore\n    /* \"contracts/lens/QuoterV2_flattened.sol\":63769:73102  contract QuoterV2 is IQuoterV2, IUniswapV3SwapCallback, PeripheryImmutableState {... */\n  jump(tag_9)\n    /* \"#utility.yul\":14:193   */\ntag_10:\n    /* \"#utility.yul\":95:108   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":137:168   */\n  dup2\n  and\n    /* \"#utility.yul\":127:169   */\n  dup2\n  eq\n    /* \"#utility.yul\":117:119   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":183:184   */\n  0x00\n    /* \"#utility.yul\":180:181   */\n  dup1\n    /* \"#utility.yul\":173:185   */\n  revert\n    /* \"#utility.yul\":117:119   */\ntag_12:\n    /* \"#utility.yul\":76:193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":198:505   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":338:340   */\n  0x40\n    /* \"#utility.yul\":326:335   */\n  dup4\n    /* \"#utility.yul\":317:324   */\n  dup6\n    /* \"#utility.yul\":313:336   */\n  sub\n    /* \"#utility.yul\":309:341   */\n  slt\n    /* \"#utility.yul\":306:308   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":359:365   */\n  dup2\n    /* \"#utility.yul\":351:357   */\n  dup3\n    /* \"#utility.yul\":344:366   */\n  revert\n    /* \"#utility.yul\":306:308   */\ntag_14:\n    /* \"#utility.yul\":387:429   */\n  tag_15\n    /* \"#utility.yul\":419:428   */\n  dup4\n    /* \"#utility.yul\":387:429   */\n  tag_10\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":377:429   */\n  swap2\n  pop\n    /* \"#utility.yul\":448:499   */\n  tag_16\n    /* \"#utility.yul\":495:497   */\n  0x20\n    /* \"#utility.yul\":484:493   */\n  dup5\n    /* \"#utility.yul\":480:498   */\n  add\n    /* \"#utility.yul\":448:499   */\n  tag_10\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":438:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":296:505   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_9:\n    /* \"contracts/lens/QuoterV2_flattened.sol\":63769:73102  contract QuoterV2 is IQuoterV2, IUniswapV3SwapCallback, PeripheryImmutableState {... */\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x4a2481aeb31e74f0e353ded3d8816b025fc54779281de96894ad2bca730528bd\")\n  assignImmutable(\"0x6b88fa438cae5c1216aa45b8d58426fb848d0ea4056264a8a6a1dd473ff0fc05\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/QuoterV2_flattened.sol\":63769:73102  contract QuoterV2 is IQuoterV2, IUniswapV3SwapCallback, PeripheryImmutableState {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc45a0155\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xc6a5026a\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xcdca1753\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfa461e33\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x2f80bb1d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x4aa4a4fc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xbd21704a\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71480:73100  function quoteExactOutput(bytes memory path, uint256 amountOut)... */\n    tag_3:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/lens/QuoterV2_flattened.sol\":9640:9679  address public immutable override WETH9 */\n    tag_4:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70099:71474  function quoteExactOutputSingle(QuoteExactOutputSingleParams memory params)... */\n    tag_5:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_15\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n        /* \"contracts/lens/QuoterV2_flattened.sol\":9548:9589  address public immutable override factory */\n    tag_6:\n      tag_17\n      tag_28\n      jump\t// in\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67365:68469  function quoteExactInputSingle(QuoteExactInputSingleParams memory params)... */\n    tag_7:\n      tag_21\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68475:70093  function quoteExactInput(bytes memory path, uint256 amountIn)... */\n    tag_8:\n      tag_11\n      tag_36\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_36:\n      tag_37\n      jump\t// in\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64489:66094  function uniswapV3SwapCallback(... */\n    tag_9:\n      tag_39\n      tag_40\n      calldatasize\n      0x04\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71480:73100  function quoteExactOutput(bytes memory path, uint256 amountOut)... */\n    tag_14:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71606:71622  uint256 amountIn */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71636:71674  uint160[] memory sqrtPriceX96AfterList */\n      0x60\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71688:71731  uint32[] memory initializedTicksCrossedList */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71745:71764  uint256 gasEstimate */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71827:71842  path.numPools() */\n      tag_44\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71827:71831  path */\n      dup7\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71827:71840  path.numPools */\n      tag_45\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71827:71842  path.numPools() */\n      jump\t// in\n    tag_44:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71813:71843  new uint160[](path.numPools()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_47\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_47:\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71789:71843  sqrtPriceX96AfterList = new uint160[](path.numPools()) */\n      swap3\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71896:71911  path.numPools() */\n      tag_48\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71896:71900  path */\n      dup7\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71896:71909  path.numPools */\n      tag_45\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71896:71911  path.numPools() */\n      jump\t// in\n    tag_48:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71883:71912  new uint32[](path.numPools()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_50\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_50:\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71853:71912  initializedTicksCrossedList = new uint32[](path.numPools()) */\n      swap2\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71923:71932  uint256 i */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71946:73094  while (true) {... */\n    tag_51:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71974:71990  address tokenOut */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71992:72007  address tokenIn */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72009:72019  uint24 fee */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72023:72045  path.decodeFirstPool() */\n      tag_53\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72023:72027  path */\n      dup11\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72023:72043  path.decodeFirstPool */\n      tag_54\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72023:72045  path.decodeFirstPool() */\n      jump\t// in\n    tag_53:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71973:72045  (address tokenOut, address tokenIn, uint24 fee) = path.decodeFirstPool() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72140:72157  uint256 _amountIn */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72159:72185  uint160 _sqrtPriceX96After */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72187:72218  uint32 _initializedTicksCrossed */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72220:72240  uint256 _gasEstimate */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72260:72583  quoteExactOutputSingle(... */\n      tag_55\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72304:72565  QuoteExactOutputSingleParams({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72368:72375  tokenIn */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72304:72565  QuoteExactOutputSingleParams({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72411:72419  tokenOut */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72304:72565  QuoteExactOutputSingleParams({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72453:72462  amountOut */\n      dup16\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72304:72565  QuoteExactOutputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72493:72496  fee */\n      dup8\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72304:72565  QuoteExactOutputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72541:72542  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72304:72565  QuoteExactOutputSingleParams({... */\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72260:72282  quoteExactOutputSingle */\n      tag_24\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72260:72583  quoteExactOutputSingle(... */\n      jump\t// in\n    tag_55:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72139:72583  (uint256 _amountIn, uint160 _sqrtPriceX96After, uint32 _initializedTicksCrossed, uint256 _gasEstimate) =... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72625:72643  _sqrtPriceX96After */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72598:72619  sqrtPriceX96AfterList */\n      dup12\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72620:72621  i */\n      dup10\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72598:72622  sqrtPriceX96AfterList[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_56\n      jumpi\n      invalid\n    tag_56:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72598:72643  sqrtPriceX96AfterList[i] = _sqrtPriceX96After */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72690:72714  _initializedTicksCrossed */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72657:72684  initializedTicksCrossedList */\n      dup11\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72685:72686  i */\n      dup10\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72657:72687  initializedTicksCrossedList[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_57\n      jumpi\n      invalid\n    tag_57:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72657:72714  initializedTicksCrossedList[i] = _initializedTicksCrossed */\n      0xffffffff\n      swap1\n      swap3\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72657:72687  initializedTicksCrossedList[i] */\n      0x20\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72657:72714  initializedTicksCrossedList[i] = _initializedTicksCrossed */\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72740:72749  _amountIn */\n      swap3\n      swap12\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72763:72790  gasEstimate += _gasEstimate */\n      swap7\n      dup3\n      add\n      swap7\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72804:72807  i++ */\n      0x01\n      swap1\n      swap7\n      add\n      swap6\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72740:72749  _amountIn */\n      dup12\n      swap3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72881:72904  path.hasMultiplePools() */\n      tag_58\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72881:72885  path */\n      dup15\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72881:72902  path.hasMultiplePools */\n      tag_59\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72881:72904  path.hasMultiplePools() */\n      jump\t// in\n    tag_58:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72877:73084  if (path.hasMultiplePools()) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72931:72947  path.skipToken() */\n      tag_61\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72931:72935  path */\n      dup15\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72931:72945  path.skipToken */\n      tag_62\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72931:72947  path.skipToken() */\n      jump\t// in\n    tag_61:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72924:72947  path = path.skipToken() */\n      swap14\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72877:73084  if (path.hasMultiplePools()) {... */\n      jump(tag_63)\n    tag_60:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72994:73003  amountOut */\n      dup13\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72986:73069  return (amountOut, sqrtPriceX96AfterList, initializedTicksCrossedList, gasEstimate) */\n      swap12\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_43)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":72877:73084  if (path.hasMultiplePools()) {... */\n    tag_63:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71946:73094  while (true) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_51)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71480:73100  function quoteExactOutput(bytes memory path, uint256 amountOut)... */\n    tag_43:\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":9640:9679  address public immutable override WETH9 */\n    tag_18:\n      immutable(\"0x4a2481aeb31e74f0e353ded3d8816b025fc54779281de96894ad2bca730528bd\")\n      dup2\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70099:71474  function quoteExactOutputSingle(QuoteExactOutputSingleParams memory params)... */\n    tag_24:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70429:70444  params.tokenOut */\n      0x20\n      dup2\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70412:70426  params.tokenIn */\n      dup2\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70517:70527  params.fee */\n      0x60\n      dup4\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70237:70253  uint256 amountIn */\n      0x00\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70412:70444  params.tokenIn < params.tokenOut */\n      dup1\n      dup3\n      and\n      swap1\n      dup5\n      and\n      lt\n      swap3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70237:70253  uint256 amountIn */\n      dup5\n      swap3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70476:70528  getPool(params.tokenIn, params.tokenOut, params.fee) */\n      tag_65\n      swap3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70429:70444  params.tokenOut */\n      swap1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70476:70483  getPool */\n      tag_66\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70476:70528  getPool(params.tokenIn, params.tokenOut, params.fee) */\n      jump\t// in\n    tag_65:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70454:70528  IUniswapV3Pool pool = getPool(params.tokenIn, params.tokenOut, params.fee) */\n      swap1\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70652:70658  params */\n      dup7\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70652:70676  params.sqrtPriceLimitX96 */\n      0x80\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70652:70681  params.sqrtPriceLimitX96 == 0 */\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70680:70681  0 */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70652:70681  params.sqrtPriceLimitX96 == 0 */\n      eq\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70648:70714  if (params.sqrtPriceLimitX96 == 0) amountOutCached = params.amount */\n      iszero\n      tag_67\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70701:70714  params.amount */\n      0x40\n      dup8\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70683:70698  amountOutCached */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70683:70714  amountOutCached = params.amount */\n      sstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70648:70714  if (params.sqrtPriceLimitX96 == 0) amountOutCached = params.amount */\n    tag_67:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70724:70741  uint256 gasBefore */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70744:70753  gasleft() */\n      gas\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70724:70753  uint256 gasBefore = gasleft() */\n      swap1\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70779:70783  pool */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70779:70788  pool.swap */\n      and\n      0x128acb08\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70814:70818  this */\n      address\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70887:70897  zeroForOne */\n      dup6\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70916:70940  params.amount.toInt256() */\n      tag_68\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70916:70922  params */\n      dup13\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70916:70929  params.amount */\n      0x40\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70916:70938  params.amount.toInt256 */\n      tag_69\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70916:70940  params.amount.toInt256() */\n      jump\t// in\n    tag_68:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70915:70940  -params.amount.toInt256() */\n      0x00\n      sub\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70958:70964  params */\n      dup13\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70958:70982  params.sqrtPriceLimitX96 */\n      0x80\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70958:70987  params.sqrtPriceLimitX96 == 0 */\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70986:70987  0 */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70958:70987  params.sqrtPriceLimitX96 == 0 */\n      eq\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70958:71129  params.sqrtPriceLimitX96 == 0... */\n      tag_70\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71105:71111  params */\n      dup13\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71105:71129  params.sqrtPriceLimitX96 */\n      0x80\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70958:71129  params.sqrtPriceLimitX96 == 0... */\n      jump(tag_73)\n    tag_70:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71011:71021  zeroForOne */\n      dup8\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71011:71081  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n      tag_72\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71054:71081  TickMath.MAX_SQRT_RATIO - 1 */\n      0xfffd8963efd1fc6a506488495d951d5263988d25\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71011:71081  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n      jump(tag_73)\n    tag_72:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71024:71051  TickMath.MIN_SQRT_RATIO + 1 */\n      0x01000276a4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71011:71081  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n    tag_73:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71164:71170  params */\n      dup14\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71164:71179  params.tokenOut */\n      0x20\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71181:71187  params */\n      dup15\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71181:71191  params.fee */\n      0x60\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71193:71199  params */\n      dup16\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71193:71207  params.tokenIn */\n      0x00\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71147:71208  abi.encodePacked(params.tokenOut, params.fee, params.tokenIn) */\n      add(0x20, mload(0x40))\n      tag_74\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70779:71222  pool.swap(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_76\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_79\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_80\n      swap2\n      dup2\n      add\n      swap1\n      tag_81\n      jump\t// in\n    tag_80:\n      0x01\n    tag_79:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70763:71468  try... */\n      tag_82\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_86\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_85)\n    tag_86:\n      0x60\n      swap2\n      pop\n    tag_85:\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71302:71311  gasleft() */\n      gas\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71290:71299  gasBefore */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71290:71311  gasBefore - gasleft() */\n      sub\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71276:71311  gasEstimate = gasBefore - gasleft() */\n      swap5\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71329:71335  params */\n      dup9\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71329:71353  params.sqrtPriceLimitX96 */\n      0x80\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71329:71358  params.sqrtPriceLimitX96 == 0 */\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71357:71358  0 */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71329:71358  params.sqrtPriceLimitX96 == 0 */\n      eq\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71325:71382  if (params.sqrtPriceLimitX96 == 0) delete amountOutCached */\n      iszero\n      tag_87\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71367:71382  amountOutCached */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71360:71382  delete amountOutCached */\n      dup1\n      sstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71325:71382  if (params.sqrtPriceLimitX96 == 0) delete amountOutCached */\n    tag_87:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71418:71457  handleRevert(reason, pool, gasEstimate) */\n      tag_88\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71431:71437  reason */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71439:71443  pool */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71445:71456  gasEstimate */\n      dup8\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71418:71430  handleRevert */\n      tag_89\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71418:71457  handleRevert(reason, pool, gasEstimate) */\n      jump\t// in\n    tag_88:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":71411:71457  return handleRevert(reason, pool, gasEstimate) */\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_64)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70763:71468  try... */\n    tag_82:\n      pop\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":70099:71474  function quoteExactOutputSingle(QuoteExactOutputSingleParams memory params)... */\n      pop\n      pop\n      pop\n    tag_64:\n      swap2\n      swap4\n      pop\n      swap2\n      swap4\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":9548:9589  address public immutable override factory */\n    tag_28:\n      immutable(\"0x6b88fa438cae5c1216aa45b8d58426fb848d0ea4056264a8a6a1dd473ff0fc05\")\n      dup2\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67365:68469  function quoteExactInputSingle(QuoteExactInputSingleParams memory params)... */\n    tag_33:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67694:67709  params.tokenOut */\n      0x20\n      dup2\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67677:67691  params.tokenIn */\n      dup2\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67782:67792  params.fee */\n      0x60\n      dup4\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67501:67518  uint256 amountOut */\n      0x00\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n      dup4\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67677:67709  params.tokenIn < params.tokenOut */\n      dup1\n      dup3\n      and\n      swap1\n      dup5\n      and\n      lt\n      swap3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67501:67518  uint256 amountOut */\n      dup5\n      swap3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67741:67793  getPool(params.tokenIn, params.tokenOut, params.fee) */\n      tag_92\n      swap3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67694:67709  params.tokenOut */\n      swap1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67741:67748  getPool */\n      tag_66\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67741:67793  getPool(params.tokenIn, params.tokenOut, params.fee) */\n      jump\t// in\n    tag_92:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67719:67793  IUniswapV3Pool pool = getPool(params.tokenIn, params.tokenOut, params.fee) */\n      swap1\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67804:67821  uint256 gasBefore */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67824:67833  gasleft() */\n      gas\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67804:67833  uint256 gasBefore = gasleft() */\n      swap1\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67859:67863  pool */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67859:67868  pool.swap */\n      and\n      0x128acb08\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67894:67898  this */\n      address\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67967:67977  zeroForOne */\n      dup6\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67995:68021  params.amountIn.toInt256() */\n      tag_93\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67995:68001  params */\n      dup13\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67995:68010  params.amountIn */\n      0x40\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67995:68019  params.amountIn.toInt256 */\n      tag_69\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67995:68021  params.amountIn.toInt256() */\n      jump\t// in\n    tag_93:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68039:68063  params.sqrtPriceLimitX96 */\n      0x80\n      dup14\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68039:68068  params.sqrtPriceLimitX96 == 0 */\n      and\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68039:68210  params.sqrtPriceLimitX96 == 0... */\n      tag_94\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68186:68192  params */\n      dup13\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68186:68210  params.sqrtPriceLimitX96 */\n      0x80\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68039:68210  params.sqrtPriceLimitX96 == 0... */\n      jump(tag_97)\n    tag_94:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68092:68102  zeroForOne */\n      dup8\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68092:68162  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n      tag_96\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68135:68162  TickMath.MAX_SQRT_RATIO - 1 */\n      0xfffd8963efd1fc6a506488495d951d5263988d25\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68092:68162  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n      jump(tag_97)\n    tag_96:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68105:68132  TickMath.MIN_SQRT_RATIO + 1 */\n      0x01000276a4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68092:68162  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n    tag_97:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68245:68251  params */\n      dup14\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68245:68259  params.tokenIn */\n      0x00\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68261:68267  params */\n      dup15\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68261:68271  params.fee */\n      0x60\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68273:68279  params */\n      dup16\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68273:68288  params.tokenOut */\n      0x20\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68228:68289  abi.encodePacked(params.tokenIn, params.fee, params.tokenOut) */\n      add(0x20, mload(0x40))\n      tag_98\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_75\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67859:68303  pool.swap(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_99:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_100:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_101\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_102\n      swap2\n      dup2\n      add\n      swap1\n      tag_81\n      jump\t// in\n    tag_102:\n      0x01\n    tag_101:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67843:68463  try... */\n      tag_82\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_107\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_106)\n    tag_107:\n      0x60\n      swap2\n      pop\n    tag_106:\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68383:68392  gasleft() */\n      gas\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68371:68380  gasBefore */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68371:68392  gasBefore - gasleft() */\n      sub\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68357:68392  gasEstimate = gasBefore - gasleft() */\n      swap5\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68413:68452  handleRevert(reason, pool, gasEstimate) */\n      tag_88\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68426:68432  reason */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68434:68438  pool */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68440:68451  gasEstimate */\n      dup8\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68413:68425  handleRevert */\n      tag_89\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68413:68452  handleRevert(reason, pool, gasEstimate) */\n      jump\t// in\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68475:70093  function quoteExactInput(bytes memory path, uint256 amountIn)... */\n    tag_37:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68599:68616  uint256 amountOut */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68630:68668  uint160[] memory sqrtPriceX96AfterList */\n      0x60\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68682:68725  uint32[] memory initializedTicksCrossedList */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68739:68758  uint256 gasEstimate */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68821:68836  path.numPools() */\n      tag_111\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68821:68825  path */\n      dup7\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68821:68834  path.numPools */\n      tag_45\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68821:68836  path.numPools() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68807:68837  new uint160[](path.numPools()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_112\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_112:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_113\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_113:\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68783:68837  sqrtPriceX96AfterList = new uint160[](path.numPools()) */\n      swap3\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68890:68905  path.numPools() */\n      tag_114\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68890:68894  path */\n      dup7\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68890:68903  path.numPools */\n      tag_45\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68890:68905  path.numPools() */\n      jump\t// in\n    tag_114:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68877:68906  new uint32[](path.numPools()) */\n      0xffffffffffffffff\n      dup2\n      gt\n      dup1\n      iszero\n      tag_115\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_115:\n      pop\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_116:\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68847:68906  initializedTicksCrossedList = new uint32[](path.numPools()) */\n      swap2\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68917:68926  uint256 i */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68940:70087  while (true) {... */\n    tag_117:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68968:68983  address tokenIn */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68985:69001  address tokenOut */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69003:69013  uint24 fee */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69017:69039  path.decodeFirstPool() */\n      tag_119\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69017:69021  path */\n      dup11\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69017:69037  path.decodeFirstPool */\n      tag_54\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69017:69039  path.decodeFirstPool() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68967:69039  (address tokenIn, address tokenOut, uint24 fee) = path.decodeFirstPool() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69134:69152  uint256 _amountOut */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69154:69180  uint160 _sqrtPriceX96After */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69182:69213  uint32 _initializedTicksCrossed */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69215:69235  uint256 _gasEstimate */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69255:69577  quoteExactInputSingle(... */\n      tag_120\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69298:69559  QuoteExactInputSingleParams({... */\n      mload(0x40)\n      dup1\n      0xa0\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69361:69368  tokenIn */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69298:69559  QuoteExactInputSingleParams({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69404:69412  tokenOut */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69298:69559  QuoteExactInputSingleParams({... */\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69482:69490  amountIn */\n      dup16\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69298:69559  QuoteExactInputSingleParams({... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69443:69446  fee */\n      dup8\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69298:69559  QuoteExactInputSingleParams({... */\n      0xffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69535:69536  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69298:69559  QuoteExactInputSingleParams({... */\n      and\n      dup2\n      mstore\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69255:69276  quoteExactInputSingle */\n      tag_33\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69255:69577  quoteExactInputSingle(... */\n      jump\t// in\n    tag_120:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69133:69577  (uint256 _amountOut, uint160 _sqrtPriceX96After, uint32 _initializedTicksCrossed, uint256 _gasEstimate) =... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69619:69637  _sqrtPriceX96After */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69592:69613  sqrtPriceX96AfterList */\n      dup12\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69614:69615  i */\n      dup10\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69592:69616  sqrtPriceX96AfterList[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_121\n      jumpi\n      invalid\n    tag_121:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69592:69637  sqrtPriceX96AfterList[i] = _sqrtPriceX96After */\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69684:69708  _initializedTicksCrossed */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69651:69678  initializedTicksCrossedList */\n      dup11\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69679:69680  i */\n      dup10\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69651:69681  initializedTicksCrossedList[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_122\n      jumpi\n      invalid\n    tag_122:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69651:69708  initializedTicksCrossedList[i] = _initializedTicksCrossed */\n      0xffffffff\n      swap1\n      swap3\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69651:69681  initializedTicksCrossedList[i] */\n      0x20\n      swap3\n      dup4\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69651:69708  initializedTicksCrossedList[i] = _initializedTicksCrossed */\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69733:69743  _amountOut */\n      swap3\n      swap12\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69757:69784  gasEstimate += _gasEstimate */\n      swap7\n      dup3\n      add\n      swap7\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69798:69801  i++ */\n      0x01\n      swap1\n      swap7\n      add\n      swap6\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69733:69743  _amountOut */\n      dup12\n      swap3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69875:69898  path.hasMultiplePools() */\n      tag_123\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69875:69879  path */\n      dup15\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69875:69896  path.hasMultiplePools */\n      tag_59\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69875:69898  path.hasMultiplePools() */\n      jump\t// in\n    tag_123:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69871:70077  if (path.hasMultiplePools()) {... */\n      iszero\n      tag_60\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69925:69941  path.skipToken() */\n      tag_125\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69925:69929  path */\n      dup15\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69925:69939  path.skipToken */\n      tag_62\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69925:69941  path.skipToken() */\n      jump\t// in\n    tag_125:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":69918:69941  path = path.skipToken() */\n      swap14\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":68940:70087  while (true) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_117)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64489:66094  function uniswapV3SwapCallback(... */\n    tag_42:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64667:64668  0 */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64652:64664  amount0Delta */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64652:64668  amount0Delta > 0 */\n      sgt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64652:64688  amount0Delta > 0 || amount1Delta > 0 */\n      dup1\n      tag_128\n      jumpi\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64687:64688  0 */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64672:64684  amount1Delta */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64672:64688  amount1Delta > 0 */\n      sgt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64652:64688  amount0Delta > 0 || amount1Delta > 0 */\n    tag_128:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64644:64689  require(amount0Delta > 0 || amount1Delta > 0) */\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64763:64778  address tokenIn */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64780:64796  address tokenOut */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64798:64808  uint24 fee */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64812:64834  path.decodeFirstPool() */\n      tag_130\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64812:64816  path */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64812:64832  path.decodeFirstPool */\n      tag_54\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64812:64834  path.decodeFirstPool() */\n      jump\t// in\n    tag_130:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64762:64834  (address tokenIn, address tokenOut, uint24 fee) = path.decodeFirstPool() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64844:64910  CallbackValidation.verifyCallback(factory, tokenIn, tokenOut, fee) */\n      tag_131\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64878:64885  factory */\n      immutable(\"0x6b88fa438cae5c1216aa45b8d58426fb848d0ea4056264a8a6a1dd473ff0fc05\")\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64887:64894  tokenIn */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64896:64904  tokenOut */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64906:64909  fee */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64844:64877  CallbackValidation.verifyCallback */\n      tag_132\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64844:64910  CallbackValidation.verifyCallback(factory, tokenIn, tokenOut, fee) */\n      jump\t// in\n    tag_131:\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64922:64939  bool isExactInput */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64941:64960  uint256 amountToPay */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64962:64984  uint256 amountReceived */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65015:65016  0 */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65000:65012  amount0Delta */\n      dup10\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65000:65016  amount0Delta > 0 */\n      sgt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65000:65188  amount0Delta > 0... */\n      tag_133\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65133:65140  tokenIn */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65122:65140  tokenOut < tokenIn */\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65122:65130  tokenOut */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65122:65140  tokenOut < tokenIn */\n      and\n      lt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65150:65162  amount1Delta */\n      dup9\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65174:65186  amount0Delta */\n      dup11\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65173:65186  -amount0Delta */\n      0x00\n      sub\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65000:65188  amount0Delta > 0... */\n      jump(tag_134)\n    tag_133:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65046:65054  tokenOut */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65036:65054  tokenIn < tokenOut */\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65036:65043  tokenIn */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65036:65054  tokenIn < tokenOut */\n      and\n      lt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65064:65076  amount0Delta */\n      dup10\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65088:65100  amount1Delta */\n      dup10\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65087:65100  -amount1Delta */\n      0x00\n      sub\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65000:65188  amount0Delta > 0... */\n    tag_134:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64921:65188  (bool isExactInput, uint256 amountToPay, uint256 amountReceived) =... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65199:65218  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65221:65252  getPool(tokenIn, tokenOut, fee) */\n      tag_135\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65229:65236  tokenIn */\n      dup8\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65238:65246  tokenOut */\n      dup8\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65248:65251  fee */\n      dup8\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65221:65228  getPool */\n      tag_66\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65221:65252  getPool(tokenIn, tokenOut, fee) */\n      jump\t// in\n    tag_135:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65199:65252  IUniswapV3Pool pool = getPool(tokenIn, tokenOut, fee) */\n      swap1\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65263:65288  uint160 sqrtPriceX96After */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65290:65305  int24 tickAfter */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65319:65323  pool */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65319:65329  pool.slot0 */\n      and\n      0x3850c7bd\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65319:65331  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_138\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_138:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_139\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65262:65331  (uint160 sqrtPriceX96After, int24 tickAfter, , , , , ) = pool.slot0() */\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65346:65358  isExactInput */\n      dup6\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65342:66088  if (isExactInput) {... */\n      iszero\n      tag_141\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65418:65422  0x40 */\n      0x40\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65412:65423  mload(0x40) */\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65452:65466  amountReceived */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65447:65450  ptr */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65440:65467  mstore(ptr, amountReceived) */\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65507:65524  sqrtPriceX96After */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65500:65504  0x20 */\n      0x20\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65495:65498  ptr */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65491:65505  add(ptr, 0x20) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65484:65525  mstore(add(ptr, 0x20), sqrtPriceX96After) */\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65565:65574  tickAfter */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65558:65562  0x40 */\n      0x40\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65553:65556  ptr */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65549:65563  add(ptr, 0x40) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65542:65575  mstore(add(ptr, 0x40), tickAfter) */\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65604:65606  96 */\n      0x60\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65599:65602  ptr */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65592:65607  revert(ptr, 96) */\n      revert\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65383:65621  {... */\n    tag_141:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65756:65771  amountOutCached */\n      sload(0x00)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65756:65776  amountOutCached != 0 */\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65752:65820  if (amountOutCached != 0) require(amountReceived == amountOutCached) */\n      tag_144\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65804:65819  amountOutCached */\n      sload(0x00)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65786:65800  amountReceived */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65786:65819  amountReceived == amountOutCached */\n      eq\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65778:65820  require(amountReceived == amountOutCached) */\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65878:65882  0x40 */\n      0x40\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65872:65883  mload(0x40) */\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65912:65923  amountToPay */\n      dup6\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65907:65910  ptr */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65900:65924  mstore(ptr, amountToPay) */\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65964:65981  sqrtPriceX96After */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65957:65961  0x20 */\n      0x20\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65952:65955  ptr */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65948:65962  add(ptr, 0x20) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65941:65982  mstore(add(ptr, 0x20), sqrtPriceX96After) */\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66022:66031  tickAfter */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66015:66019  0x40 */\n      0x40\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66010:66013  ptr */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66006:66020  add(ptr, 0x40) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":65999:66032  mstore(add(ptr, 0x40), tickAfter) */\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66061:66063  96 */\n      0x60\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66056:66059  ptr */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66049:66064  revert(ptr, 96) */\n      revert\n        /* \"contracts/lens/QuoterV2_flattened.sol\":7322:7557  function numPools(bytes memory path) internal pure returns (uint256) {... */\n    tag_45:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":7511:7522  path.length */\n      dup1\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":6547:6567  ADDR_SIZE + FEE_SIZE */\n      0x17\n      not(0x13)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":7511:7534  path.length - ADDR_SIZE */\n      swap1\n      swap2\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":7510:7549  (path.length - ADDR_SIZE) / NEXT_OFFSET */\n      div\n        /* \"contracts/lens/QuoterV2_flattened.sol\":7322:7557  function numPools(bytes memory path) internal pure returns (uint256) {... */\n    tag_145:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":7819:8133  function decodeFirstPool(bytes memory path)... */\n    tag_54:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":7923:7937  address tokenA */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8023:8040  path.toAddress(0) */\n      tag_148\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8023:8027  path */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":7923:7937  address tokenA */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8023:8037  path.toAddress */\n      tag_149\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8023:8040  path.toAddress(0) */\n      jump\t// in\n    tag_148:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8014:8040  tokenA = path.toAddress(0) */\n      swap3\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8056:8080  path.toUint24(ADDR_SIZE) */\n      tag_150\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8056:8060  path */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":6344:6346  20 */\n      0x14\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8056:8069  path.toUint24 */\n      tag_151\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8056:8080  path.toUint24(ADDR_SIZE) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8050:8080  fee = path.toUint24(ADDR_SIZE) */\n      swap1\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8099:8126  path.toAddress(NEXT_OFFSET) */\n      tag_152\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8099:8103  path */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":6547:6567  ADDR_SIZE + FEE_SIZE */\n      0x17\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8099:8113  path.toAddress */\n      tag_149\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8099:8126  path.toAddress(NEXT_OFFSET) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8090:8126  tokenB = path.toAddress(NEXT_OFFSET) */\n      swap2\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":7819:8133  function decodeFirstPool(bytes memory path)... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":7032:7170  function hasMultiplePools(bytes memory path) internal pure returns (bool) {... */\n    tag_59:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":7123:7134  path.length */\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":6817:6841  POP_OFFSET + NEXT_OFFSET */\n      0x42\n      gt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":7123:7163  path.length >= MULTIPLE_POOLS_MIN_LENGTH */\n      iszero\n      swap1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":7032:7170  function hasMultiplePools(bytes memory path) internal pure returns (bool) {... */\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8675:8824  function skipToken(bytes memory path) internal pure returns (bytes memory) {... */\n    tag_62:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8791:8802  path.length */\n      dup1\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8736:8748  bytes memory */\n      0x60\n      swap1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8767:8817  path.slice(NEXT_OFFSET, path.length - NEXT_OFFSET) */\n      tag_155\n      swap1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8791:8795  path */\n      dup4\n      swap1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":6547:6567  ADDR_SIZE + FEE_SIZE */\n      0x17\n      swap1\n      not(0x16)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8791:8816  path.length - NEXT_OFFSET */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8767:8777  path.slice */\n      tag_156\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8767:8817  path.slice(NEXT_OFFSET, path.length - NEXT_OFFSET) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8760:8817  return path.slice(NEXT_OFFSET, path.length - NEXT_OFFSET) */\n      swap3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":8675:8824  function skipToken(bytes memory path) internal pure returns (bytes memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64191:64440  function getPool(... */\n    tag_66:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64304:64318  IUniswapV3Pool */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64352:64432  PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      tag_158\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64379:64386  factory */\n      immutable(\"0x6b88fa438cae5c1216aa45b8d58426fb848d0ea4056264a8a6a1dd473ff0fc05\")\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64388:64431  PoolAddress.getPoolKey(tokenA, tokenB, fee) */\n      tag_159\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64411:64417  tokenA */\n      dup7\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64419:64425  tokenB */\n      dup7\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64427:64430  fee */\n      dup7\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64388:64410  PoolAddress.getPoolKey */\n      tag_160\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64388:64431  PoolAddress.getPoolKey(tokenA, tokenB, fee) */\n      jump\t// in\n    tag_159:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64352:64378  PoolAddress.computeAddress */\n      tag_161\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64352:64432  PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      jump\t// in\n    tag_158:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64330:64433  return IUniswapV3Pool(PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee))) */\n      swap5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":64191:64440  function getPool(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":63256:63377  function toInt256(uint256 y) internal pure returns (int256 z) {... */\n    tag_69:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":63308:63316  int256 z */\n      0x00\n      shl(0xff, 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":63336:63337  y */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":63336:63346  y < 2**255 */\n      lt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":63328:63347  require(y < 2**255) */\n      tag_163\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_163:\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":63368:63369  y */\n      swap1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":63256:63377  function toInt256(uint256 y) internal pure returns (int256 z) {... */\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66693:67359  function handleRevert(... */\n    tag_89:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66867:66881  uint256 amount */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66895:66920  uint160 sqrtPriceX96After */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66934:66964  uint32 initializedTicksCrossed */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66978:66985  uint256 */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67010:67026  int24 tickBefore */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67036:67051  int24 tickAfter */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67088:67092  pool */\n      dup8\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67088:67098  pool.slot0 */\n      and\n      0x3850c7bd\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67088:67100  pool.slot0() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0xe0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_140\n      jump\t// in\n    tag_168:\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67061:67100  (, tickBefore, , , , , ) = pool.slot0() */\n      swap4\n      swap7\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67151:67176  parseRevertReason(reason) */\n      tag_169\n      swap5\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67169:67175  reason */\n      dup14\n      swap4\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67151:67168  parseRevertReason */\n      tag_170\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67151:67176  parseRevertReason(reason) */\n      jump\t// in\n    tag_169:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67110:67176  (amount, sqrtPriceX96After, tickAfter) = parseRevertReason(reason) */\n      swap2\n      swap8\n      pop\n      swap6\n      pop\n      swap1\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67213:67269  pool.countInitializedTicksCrossed(tickBefore, tickAfter) */\n      tag_171\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67213:67246  pool.countInitializedTicksCrossed */\n      dup10\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67247:67257  tickBefore */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67110:67176  (amount, sqrtPriceX96After, tickAfter) = parseRevertReason(reason) */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67213:67246  pool.countInitializedTicksCrossed */\n      tag_172\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67213:67269  pool.countInitializedTicksCrossed(tickBefore, tickAfter) */\n      jump\t// in\n    tag_171:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67187:67269  initializedTicksCrossed = pool.countInitializedTicksCrossed(tickBefore, tickAfter) */\n      swap4\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":67340:67351  gasEstimate */\n      dup7\n      swap3\n      pop\n      pop\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66693:67359  function handleRevert(... */\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      pop\n      swap4\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45951:46210  function verifyCallback(... */\n    tag_132:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46097:46116  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46135:46203  verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      tag_174\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46150:46157  factory */\n      dup6\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46159:46202  PoolAddress.getPoolKey(tokenA, tokenB, fee) */\n      tag_175\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46182:46188  tokenA */\n      dup7\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46190:46196  tokenB */\n      dup7\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46198:46201  fee */\n      dup7\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46159:46181  PoolAddress.getPoolKey */\n      tag_160\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46159:46202  PoolAddress.getPoolKey(tokenA, tokenB, fee) */\n      jump\t// in\n    tag_175:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46135:46149  verifyCallback */\n      tag_176\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46135:46203  verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      jump\t// in\n    tag_174:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46128:46203  return verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      swap6\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45951:46210  function verifyCallback(... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5279:5695  function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {... */\n    tag_149:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5358:5365  address */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5400:5406  _start */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5385:5391  _start */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5394:5396  20 */\n      0x14\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5385:5396  _start + 20 */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5385:5406  _start + 20 >= _start */\n      lt\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5377:5429  require(_start + 20 >= _start, 'toAddress_overflow') */\n      tag_178\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_180\n      jump\t// in\n    tag_179:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_178:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5464:5470  _start */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5473:5475  20 */\n      0x14\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5464:5475  _start + 20 */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5447:5453  _bytes */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5447:5460  _bytes.length */\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5447:5475  _bytes.length >= _start + 20 */\n      lt\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5439:5501  require(_bytes.length >= _start + 20, 'toAddress_outOfBounds') */\n      tag_181\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_183\n      jump\t// in\n    tag_181:\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5589:5619  add(add(_bytes, 0x20), _start) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5605:5609  0x20 */\n      0x20\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5589:5619  add(add(_bytes, 0x20), _start) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5583:5620  mload(add(add(_bytes, 0x20), _start)) */\n      mload\n      shl(0x60, 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5579:5650  div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000) */\n      swap1\n      div\n      swap1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5279:5695  function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {... */\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5701:6066  function toUint24(bytes memory _bytes, uint256 _start) internal pure returns (uint24) {... */\n    tag_151:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5779:5785  uint24 */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5819:5825  _start */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5805:5811  _start */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5814:5815  3 */\n      0x03\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5805:5815  _start + 3 */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5805:5825  _start + 3 >= _start */\n      lt\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5797:5847  require(_start + 3 >= _start, 'toUint24_overflow') */\n      tag_185\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_187\n      jump\t// in\n    tag_185:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5882:5888  _start */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5891:5892  3 */\n      0x03\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5882:5892  _start + 3 */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5865:5871  _bytes */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5865:5878  _bytes.length */\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5865:5892  _bytes.length >= _start + 3 */\n      lt\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5857:5917  require(_bytes.length >= _start + 3, 'toUint24_outOfBounds') */\n      tag_188\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_190\n      jump\t// in\n    tag_188:\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5994:6023  add(add(_bytes, 0x3), _start) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":6010:6013  0x3 */\n      0x03\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5994:6023  add(add(_bytes, 0x3), _start) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5988:6024  mload(add(add(_bytes, 0x3), _start)) */\n      mload\n      swap1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5701:6066  function toUint24(bytes memory _bytes, uint256 _start) internal pure returns (uint24) {... */\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2266:5273  function slice(... */\n    tag_156:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2388:2400  bytes memory */\n      0x60\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2436:2443  _length */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2420:2427  _length */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2430:2432  31 */\n      0x1f\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2420:2432  _length + 31 */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2420:2443  _length + 31 >= _length */\n      lt\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2412:2462  require(_length + 31 >= _length, 'slice_overflow') */\n      tag_192\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_194\n      jump\t// in\n    tag_192:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2500:2506  _start */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2489:2496  _length */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2480:2486  _start */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2480:2496  _start + _length */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2480:2506  _start + _length >= _start */\n      lt\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2472:2525  require(_start + _length >= _start, 'slice_overflow') */\n      tag_195\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_194\n      jump\t// in\n    tag_195:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2569:2576  _length */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2560:2566  _start */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2560:2576  _start + _length */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2543:2549  _bytes */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2543:2556  _bytes.length */\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2543:2576  _bytes.length >= _start + _length */\n      lt\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2535:2598  require(_bytes.length >= _start + _length, 'slice_outOfBounds') */\n      tag_197\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_199\n      jump\t// in\n    tag_197:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2609:2631  bytes memory tempBytes */\n      0x60\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2672:2687  iszero(_length) */\n      dup3\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2704:4803  case 0 {... */\n      dup1\n      iszero\n      tag_201\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4956:4960  0x40 */\n      0x40\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4950:4961  mload(0x40) */\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4937:4961  tempBytes := mload(0x40) */\n      swap2\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5154:5155  0 */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5143:5152  tempBytes */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5136:5156  mstore(tempBytes, 0) */\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5206:5210  0x20 */\n      0x20\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5195:5204  tempBytes */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5191:5211  add(tempBytes, 0x20) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5185:5189  0x40 */\n      0x40\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5178:5212  mstore(0x40, add(tempBytes, 0x20)) */\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2665:5230  switch iszero(_length)... */\n      jump(tag_200)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2704:4803  case 0 {... */\n    tag_201:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2898:2902  0x40 */\n      0x40\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2892:2903  mload(0x40) */\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2879:2903  tempBytes := mload(0x40) */\n      swap2\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":3593:3595  31 */\n      0x1f\n        /* \"contracts/lens/QuoterV2_flattened.sol\":3584:3591  _length */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":3580:3596  and(_length, 31) */\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":3995:4004  lengthmod */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":3988:4005  iszero(lengthmod) */\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":3982:3986  0x20 */\n      0x20\n        /* \"contracts/lens/QuoterV2_flattened.sol\":3978:4006  mul(0x20, iszero(lengthmod)) */\n      mul\n        /* \"contracts/lens/QuoterV2_flattened.sol\":3966:3975  lengthmod */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":3955:3964  tempBytes */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":3951:3976  add(tempBytes, lengthmod) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":3947:4007  add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod))) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4047:4054  _length */\n      dup6\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4043:4045  mc */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4039:4055  add(mc, _length) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4315:4321  _start */\n      dup8\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4301:4310  lengthmod */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4294:4311  iszero(lengthmod) */\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4288:4292  0x20 */\n      0x20\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4284:4312  mul(0x20, iszero(lengthmod)) */\n      mul\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4272:4281  lengthmod */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4264:4270  _bytes */\n      dup12\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4260:4282  add(_bytes, lengthmod) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4256:4313  add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4252:4322  add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4077:4538  for {... */\n    tag_202:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4352:4355  end */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4348:4350  mc */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4345:4356  lt(mc, end) */\n      lt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4077:4538  for {... */\n      iszero\n      tag_204\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4506:4515  mload(cc) */\n      dup1\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4495:4516  mstore(mc, mload(cc)) */\n      dup4\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4397:4401  0x20 */\n      0x20\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4389:4402  add(mc, 0x20) */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4433:4446  add(cc, 0x20) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4077:4538  for {... */\n      jump(tag_202)\n    tag_204:\n      pop\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4560:4586  mstore(tempBytes, _length) */\n      dup6\n      dup5\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4780:4782  31 */\n      0x1f\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4763:4774  add(mc, 31) */\n      add\n      not(0x1f)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4759:4784  and(add(mc, 31), not(31)) */\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4753:4757  0x40 */\n      0x40\n        /* \"contracts/lens/QuoterV2_flattened.sol\":4746:4785  mstore(0x40, and(add(mc, 31), not(31))) */\n      mstore\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2665:5230  switch iszero(_length)... */\n    tag_200:\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":5257:5266  tempBytes */\n      swap5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":2266:5273  function slice(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":831:1105  function getPoolKey(... */\n    tag_160:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":948:962  PoolKey memory */\n      tag_205\n      tag_206\n      jump\t// in\n    tag_205:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":987:993  tokenB */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":978:993  tokenA > tokenB */\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":978:984  tokenA */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":978:993  tokenA > tokenB */\n      and\n      gt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":974:1030  if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA) */\n      iszero\n      tag_208\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1015:1021  tokenB */\n      swap2\n      swap3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1023:1029  tokenA */\n      swap2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":974:1030  if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA) */\n    tag_208:\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1047:1098  PoolKey({token0: tokenA, token1: tokenB, fee: fee}) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      dup2\n      mstore\n      swap3\n      swap1\n      swap4\n      and\n      0x20\n      dup4\n      add\n      mstore\n      0xffffff\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":831:1105  function getPoolKey(... */\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1352:1864  function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {... */\n    tag_161:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1436:1448  address pool */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1481:1484  key */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1481:1491  key.token1 */\n      0x20\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1468:1491  key.token0 < key.token1 */\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1468:1471  key */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1468:1478  key.token0 */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1468:1491  key.token0 < key.token1 */\n      and\n      lt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1460:1492  require(key.token0 < key.token1) */\n      tag_210\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_210:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1661:1668  factory */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1715:1718  key */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1715:1725  key.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1727:1730  key */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1727:1737  key.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1739:1742  key */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1739:1746  key.fee */\n      0x40\n      add\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1704:1747  abi.encode(key.token0, key.token1, key.fee) */\n      add(0x20, mload(0x40))\n      tag_211\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1694:1748  keccak256(abi.encode(key.token0, key.token1, key.fee)) */\n      dup1\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1704:1747  abi.encode(key.token0, key.token1, key.fee) */\n      0x20\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1694:1748  keccak256(abi.encode(key.token0, key.token1, key.fee)) */\n      swap2\n      dup3\n      add\n      keccak256\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1586:1815  abi.encodePacked(... */\n      tag_213\n      swap4\n      swap3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1694:1748  keccak256(abi.encode(key.token0, key.token1, key.fee)) */\n      swap1\n      swap2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":288:354  0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54 */\n      0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54\n      swap2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1586:1815  abi.encodePacked(... */\n      add\n      tag_214\n      jump\t// in\n    tag_213:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1555:1833  keccak256(... */\n      dup1\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1586:1815  abi.encodePacked(... */\n      0x20\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1555:1833  keccak256(... */\n      swap1\n      swap2\n      add\n      keccak256\n      swap4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":1352:1864  function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66174:66687  function parseRevertReason(bytes memory reason)... */\n    tag_170:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66281:66295  uint256 amount */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66309:66334  uint160 sqrtPriceX96After */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66348:66363  int24 tickAfter */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66392:66398  reason */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66392:66405  reason.length */\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66409:66411  96 */\n      0x60\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66392:66411  reason.length != 96 */\n      eq\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66388:66619  if (reason.length != 96) {... */\n      tag_216\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66447:66449  68 */\n      0x44\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66431:66437  reason */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66431:66444  reason.length */\n      mload\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66431:66449  reason.length < 68 */\n      lt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66427:66477  if (reason.length < 68) revert('Unexpected error') */\n      iszero\n      tag_217\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66451:66477  revert('Unexpected error') */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap1\n      tag_219\n      jump\t// in\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66427:66477  if (reason.length < 68) revert('Unexpected error') */\n    tag_217:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66540:66544  0x04 */\n      0x04\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66532:66538  reason */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66528:66545  add(reason, 0x04) */\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66518:66545  reason := add(reason, 0x04) */\n      swap4\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66590:66596  reason */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66579:66607  abi.decode(reason, (string)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_220\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66572:66608  revert(abi.decode(reason, (string))) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_179\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66388:66619  if (reason.length != 96) {... */\n    tag_216:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66646:66652  reason */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66635:66680  abi.decode(reason, (uint256, uint160, int24)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66628:66680  return abi.decode(reason, (uint256, uint160, int24)) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":66174:66687  function parseRevertReason(bytes memory reason)... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":41841:45146  function countInitializedTicksCrossed(... */\n    tag_172:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":41988:42018  uint32 initializedTicksCrossed */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42030:42048  int16 wordPosLower */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42058:42077  int16 wordPosHigher */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42087:42104  uint8 bitPosLower */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42114:42132  uint8 bitPosHigher */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42142:42168  bool tickBeforeInitialized */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42178:42203  bool tickAfterInitialized */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42331:42344  int16 wordPos */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42390:42391  8 */\n      0x08\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42367:42371  self */\n      dup12\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42367:42383  self.tickSpacing */\n      and\n      0xd0c93a7c\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42367:42385  self.tickSpacing() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_227\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_227:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_229\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_230\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_230:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42354:42385  tickBefore / self.tickSpacing() */\n      0x02\n      signextend\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42354:42364  tickBefore */\n      dup12\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42354:42385  tickBefore / self.tickSpacing() */\n      0x02\n      signextend\n      dup2\n      tag_232\n      jumpi\n      invalid\n    tag_232:\n      sdiv\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42353:42391  (tickBefore / self.tickSpacing()) >> 8 */\n      0x02\n      signextend\n      swap1\n      sar\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42331:42392  int16 wordPos = int16((tickBefore / self.tickSpacing()) >> 8) */\n      swap1\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42406:42418  uint8 bitPos */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42463:42466  256 */\n      0x0100\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42441:42445  self */\n      dup13\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42441:42457  self.tickSpacing */\n      and\n      0xd0c93a7c\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42441:42459  self.tickSpacing() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_233:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_235\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_235:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_236\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_236:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42428:42459  tickBefore / self.tickSpacing() */\n      0x02\n      signextend\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42428:42438  tickBefore */\n      dup13\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42428:42459  tickBefore / self.tickSpacing() */\n      0x02\n      signextend\n      dup2\n      tag_237\n      jumpi\n      invalid\n    tag_237:\n      sdiv\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42427:42466  (tickBefore / self.tickSpacing()) % 256 */\n      0x02\n      signextend\n      dup2\n      tag_238\n      jumpi\n      invalid\n    tag_238:\n      smod\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42406:42467  uint8 bitPos = uint8((tickBefore / self.tickSpacing()) % 256) */\n      swap1\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42482:42500  int16 wordPosAfter */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42545:42546  8 */\n      0x08\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42522:42526  self */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42522:42538  self.tickSpacing */\n      and\n      0xd0c93a7c\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42522:42540  self.tickSpacing() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_239\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_239:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_241\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_241:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_242\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_242:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42510:42540  tickAfter / self.tickSpacing() */\n      0x02\n      signextend\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42510:42519  tickAfter */\n      dup13\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42510:42540  tickAfter / self.tickSpacing() */\n      0x02\n      signextend\n      dup2\n      tag_243\n      jumpi\n      invalid\n    tag_243:\n      sdiv\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42509:42546  (tickAfter / self.tickSpacing()) >> 8 */\n      0x02\n      signextend\n      swap1\n      sar\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42482:42547  int16 wordPosAfter = int16((tickAfter / self.tickSpacing()) >> 8) */\n      swap1\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42561:42578  uint8 bitPosAfter */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42622:42625  256 */\n      0x0100\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42600:42604  self */\n      dup15\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42600:42616  self.tickSpacing */\n      and\n      0xd0c93a7c\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42600:42618  self.tickSpacing() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_244\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_244:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_246\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_246:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_247\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_247:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42588:42618  tickAfter / self.tickSpacing() */\n      0x02\n      signextend\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42588:42597  tickAfter */\n      dup14\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42588:42618  tickAfter / self.tickSpacing() */\n      0x02\n      signextend\n      dup2\n      tag_248\n      jumpi\n      invalid\n    tag_248:\n      sdiv\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42587:42625  (tickAfter / self.tickSpacing()) % 256 */\n      0x02\n      signextend\n      dup2\n      tag_249\n      jumpi\n      invalid\n    tag_249:\n      smod\n        /* \"contracts/lens/QuoterV2_flattened.sol\":42561:42626  uint8 bitPosAfter = uint8((tickAfter / self.tickSpacing()) % 256) */\n      swap1\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43101:43102  0 */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43085:43096  bitPosAfter */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43080:43096  1 << bitPosAfter */\n      0xff\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43080:43081  1 */\n      0x01\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43080:43096  1 << bitPosAfter */\n      swap1\n      shl\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43047:43051  self */\n      dup16\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43047:43062  self.tickBitmap */\n      and\n      0x5339c296\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43063:43075  wordPosAfter */\n      dup6\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43047:43076  self.tickBitmap(wordPosAfter) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_250\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_250:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_252\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_252:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_254\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_254:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_255\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_255:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43047:43097  self.tickBitmap(wordPosAfter) & (1 << bitPosAfter) */\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43046:43102  (self.tickBitmap(wordPosAfter) & (1 << bitPosAfter)) > 0 */\n      gt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43045:43162  ((self.tickBitmap(wordPosAfter) & (1 << bitPosAfter)) > 0) &&... */\n      dup1\n      iszero\n      tag_257\n      jumpi\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43137:43141  self */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43137:43153  self.tickSpacing */\n      and\n      0xd0c93a7c\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43137:43155  self.tickSpacing() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_258\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_258:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_260\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_260:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_261\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_261:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43125:43155  tickAfter % self.tickSpacing() */\n      0x02\n      signextend\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43125:43134  tickAfter */\n      dup13\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43125:43155  tickAfter % self.tickSpacing() */\n      0x02\n      signextend\n      dup2\n      tag_262\n      jumpi\n      invalid\n    tag_262:\n      smod\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43124:43161  (tickAfter % self.tickSpacing()) == 0 */\n      0x02\n      signextend\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43045:43162  ((self.tickBitmap(wordPosAfter) & (1 << bitPosAfter)) > 0) &&... */\n    tag_257:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43045:43206  ((self.tickBitmap(wordPosAfter) & (1 << bitPosAfter)) > 0) &&... */\n      dup1\n      iszero\n      tag_263\n      jumpi\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43196:43205  tickAfter */\n      dup12\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43183:43205  tickBefore > tickAfter */\n      0x02\n      signextend\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43183:43193  tickBefore */\n      dup14\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43183:43205  tickBefore > tickAfter */\n      0x02\n      signextend\n      sgt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43045:43206  ((self.tickBitmap(wordPosAfter) & (1 << bitPosAfter)) > 0) &&... */\n    tag_263:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43006:43206  tickAfterInitialized =... */\n      swap5\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43516:43517  0 */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43505:43511  bitPos */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43500:43511  1 << bitPos */\n      0xff\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43500:43501  1 */\n      0x01\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43500:43511  1 << bitPos */\n      swap1\n      shl\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43472:43476  self */\n      dup16\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43472:43487  self.tickBitmap */\n      and\n      0x5339c296\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43488:43495  wordPos */\n      dup8\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43472:43496  self.tickBitmap(wordPos) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_264:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_265\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_265:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_267\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_267:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_268\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_268:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43472:43512  self.tickBitmap(wordPos) & (1 << bitPos) */\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43471:43517  (self.tickBitmap(wordPos) & (1 << bitPos)) > 0 */\n      gt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43470:43578  ((self.tickBitmap(wordPos) & (1 << bitPos)) > 0) &&... */\n      dup1\n      iszero\n      tag_269\n      jumpi\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43553:43557  self */\n      dup14\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43553:43569  self.tickSpacing */\n      and\n      0xd0c93a7c\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43553:43571  self.tickSpacing() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_270\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_270:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_272\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_272:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_273\n      swap2\n      swap1\n      tag_231\n      jump\t// in\n    tag_273:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43540:43571  tickBefore % self.tickSpacing() */\n      0x02\n      signextend\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43540:43550  tickBefore */\n      dup14\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43540:43571  tickBefore % self.tickSpacing() */\n      0x02\n      signextend\n      dup2\n      tag_274\n      jumpi\n      invalid\n    tag_274:\n      smod\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43539:43577  (tickBefore % self.tickSpacing()) == 0 */\n      0x02\n      signextend\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43470:43578  ((self.tickBitmap(wordPos) & (1 << bitPos)) > 0) &&... */\n    tag_269:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43470:43622  ((self.tickBitmap(wordPos) & (1 << bitPos)) > 0) &&... */\n      dup1\n      iszero\n      tag_275\n      jumpi\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43612:43621  tickAfter */\n      dup12\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43599:43621  tickBefore < tickAfter */\n      0x02\n      signextend\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43599:43609  tickBefore */\n      dup14\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43599:43621  tickBefore < tickAfter */\n      0x02\n      signextend\n      slt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43470:43622  ((self.tickBitmap(wordPos) & (1 << bitPos)) > 0) &&... */\n    tag_275:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43430:43622  tickBeforeInitialized =... */\n      swap6\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43651:43663  wordPosAfter */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43641:43663  wordPos < wordPosAfter */\n      0x01\n      signextend\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43641:43648  wordPos */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43641:43663  wordPos < wordPosAfter */\n      0x01\n      signextend\n      slt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43641:43717  wordPos < wordPosAfter || (wordPos == wordPosAfter && bitPos <= bitPosAfter) */\n      dup1\n      tag_277\n      jumpi\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43679:43691  wordPosAfter */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43668:43691  wordPos == wordPosAfter */\n      0x01\n      signextend\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43668:43675  wordPos */\n      dup5\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43668:43691  wordPos == wordPosAfter */\n      0x01\n      signextend\n      eq\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43668:43716  wordPos == wordPosAfter && bitPos <= bitPosAfter */\n      dup1\n      iszero\n      tag_277\n      jumpi\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43705:43716  bitPosAfter */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43695:43716  bitPos <= bitPosAfter */\n      0xff\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43695:43701  bitPos */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43695:43716  bitPos <= bitPosAfter */\n      0xff\n      and\n      gt\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43668:43716  wordPos == wordPosAfter && bitPos <= bitPosAfter */\n    tag_277:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43637:44091  if (wordPos < wordPosAfter || (wordPos == wordPosAfter && bitPos <= bitPosAfter)) {... */\n      iszero\n      tag_278\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43752:43759  wordPos */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43737:43759  wordPosLower = wordPos */\n      swap10\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43791:43797  bitPos */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43777:43797  bitPosLower = bitPos */\n      swap8\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43831:43843  wordPosAfter */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43815:43843  wordPosHigher = wordPosAfter */\n      swap9\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43876:43887  bitPosAfter */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43861:43887  bitPosHigher = bitPosAfter */\n      swap7\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43637:44091  if (wordPos < wordPosAfter || (wordPos == wordPosAfter && bitPos <= bitPosAfter)) {... */\n      jump(tag_279)\n    tag_278:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43941:43953  wordPosAfter */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43926:43953  wordPosLower = wordPosAfter */\n      swap10\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43985:43996  bitPosAfter */\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43971:43996  bitPosLower = bitPosAfter */\n      swap8\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44030:44037  wordPos */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44014:44037  wordPosHigher = wordPos */\n      swap9\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44070:44076  bitPos */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44055:44076  bitPosHigher = bitPos */\n      swap7\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":43637:44091  if (wordPos < wordPosAfter || (wordPos == wordPosAfter && bitPos <= bitPosAfter)) {... */\n    tag_279:\n      pop\n      pop\n      not(0x00)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44305:44337  type(uint256).max << bitPosLower */\n      0xff\n      dup8\n      and\n      shl\n      swap2\n      pop\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44347:44920  while (wordPosLower <= wordPosHigher) {... */\n    tag_280:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44370:44383  wordPosHigher */\n      dup6\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44354:44383  wordPosLower <= wordPosHigher */\n      0x01\n      signextend\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44354:44366  wordPosLower */\n      dup8\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44354:44383  wordPosLower <= wordPosHigher */\n      0x01\n      signextend\n      sgt\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44347:44920  while (wordPosLower <= wordPosHigher) {... */\n      tag_281\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44533:44546  wordPosHigher */\n      dup6\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44517:44546  wordPosLower == wordPosHigher */\n      0x01\n      signextend\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44517:44529  wordPosLower */\n      dup8\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44517:44546  wordPosLower == wordPosHigher */\n      0x01\n      signextend\n      eq\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44513:44638  if (wordPosLower == wordPosHigher) {... */\n      iszero\n      tag_282\n      jumpi\n      not(0x00)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44603:44606  255 */\n      0xff\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44603:44621  255 - bitPosHigher */\n      dup6\n      dup2\n      sub\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44581:44622  type(uint256).max >> (255 - bitPosHigher) */\n      and\n      shr\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44573:44623  mask & (type(uint256).max >> (255 - bitPosHigher)) */\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44513:44638  if (wordPosLower == wordPosHigher) {... */\n    tag_282:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44652:44666  uint256 masked */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44701:44705  mask */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44669:44673  self */\n      dup13\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44669:44684  self.tickBitmap */\n      and\n      0x5339c296\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44685:44697  wordPosLower */\n      dup11\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44669:44698  self.tickBitmap(wordPosLower) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_283\n      swap2\n      swap1\n      tag_251\n      jump\t// in\n    tag_283:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_284\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_284:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_286\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_286:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_287\n      swap2\n      swap1\n      tag_256\n      jump\t// in\n    tag_287:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44669:44705  self.tickBitmap(wordPosLower) & mask */\n      and\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44652:44705  uint256 masked = self.tickBitmap(wordPosLower) & mask */\n      swap1\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44746:44766  countOneBits(masked) */\n      tag_288\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44759:44765  masked */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44746:44758  countOneBits */\n      tag_289\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44746:44766  countOneBits(masked) */\n      jump\t// in\n    tag_288:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44719:44766  initializedTicksCrossed += countOneBits(masked) */\n      0xffff\n      and\n      swap9\n      swap1\n      swap9\n      add\n      swap8\n      pop\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44780:44794  wordPosLower++ */\n      0x01\n      swap1\n      swap6\n      add\n      swap5\n      not(0x00)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44347:44920  while (wordPosLower <= wordPosHigher) {... */\n      jump(tag_280)\n    tag_281:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44934:44954  tickAfterInitialized */\n      dup2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44930:45009  if (tickAfterInitialized) {... */\n      iszero\n      tag_290\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44997:44998  1 */\n      0x01\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44970:44998  initializedTicksCrossed -= 1 */\n      dup9\n      sub\n      swap8\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":44930:45009  if (tickAfterInitialized) {... */\n    tag_290:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45023:45044  tickBeforeInitialized */\n      dup3\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45019:45099  if (tickBeforeInitialized) {... */\n      iszero\n      tag_291\n      jumpi\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45087:45088  1 */\n      0x01\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45060:45088  initializedTicksCrossed -= 1 */\n      dup9\n      sub\n      swap8\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45019:45099  if (tickBeforeInitialized) {... */\n    tag_291:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45109:45139  return initializedTicksCrossed */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":41841:45146  function countInitializedTicksCrossed(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46457:46736  function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)... */\n    tag_176:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46581:46600  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46638:46682  PoolAddress.computeAddress(factory, poolKey) */\n      tag_293\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46665:46672  factory */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46674:46681  poolKey */\n      dup4\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46638:46664  PoolAddress.computeAddress */\n      tag_161\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46638:46682  PoolAddress.computeAddress(factory, poolKey) */\n      jump\t// in\n    tag_293:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46616:46683  pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey)) */\n      swap1\n      pop\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46701:46711  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46701:46728  msg.sender == address(pool) */\n      dup3\n      and\n      eq\n        /* \"contracts/lens/QuoterV2_flattened.sol\":46693:46729  require(msg.sender == address(pool)) */\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45152:45349  function countOneBits(uint256 x) private pure returns (uint16) {... */\n    tag_289:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45207:45213  uint16 */\n      0x00\n      dup1\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45250:45322  while (x != 0) {... */\n    tag_296:\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45257:45263  x != 0 */\n      dup3\n      iszero\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45250:45322  while (x != 0) {... */\n      tag_155\n      jumpi\n      not(0x00)\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45305:45310  x - 1 */\n      dup4\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45299:45311  x &= (x - 1) */\n      swap1\n      swap3\n      and\n      swap2\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45279:45285  bits++ */\n      0x01\n      add\n        /* \"contracts/lens/QuoterV2_flattened.sol\":45250:45322  while (x != 0) {... */\n      jump(tag_296)\n    tag_206:\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:499   */\n    tag_299:\n      0x00\n        /* \"#utility.yul\":111:114   */\n      dup3\n        /* \"#utility.yul\":104:108   */\n      0x1f\n        /* \"#utility.yul\":96:102   */\n      dup4\n        /* \"#utility.yul\":92:109   */\n      add\n        /* \"#utility.yul\":88:115   */\n      slt\n        /* \"#utility.yul\":78:80   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":133:138   */\n      dup1\n        /* \"#utility.yul\":126:131   */\n      dup2\n        /* \"#utility.yul\":119:139   */\n      revert\n        /* \"#utility.yul\":78:80   */\n    tag_301:\n        /* \"#utility.yul\":173:179   */\n      dup2\n        /* \"#utility.yul\":160:180   */\n      calldataload\n        /* \"#utility.yul\":204:253   */\n      tag_302\n        /* \"#utility.yul\":219:252   */\n      tag_303\n        /* \"#utility.yul\":249:251   */\n      dup3\n        /* \"#utility.yul\":219:252   */\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":204:253   */\n      tag_305\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":278:280   */\n      dup2\n        /* \"#utility.yul\":269:276   */\n      dup2\n        /* \"#utility.yul\":262:281   */\n      mstore\n        /* \"#utility.yul\":324:327   */\n      dup5\n        /* \"#utility.yul\":317:321   */\n      0x20\n        /* \"#utility.yul\":312:314   */\n      dup4\n        /* \"#utility.yul\":304:310   */\n      dup7\n        /* \"#utility.yul\":300:315   */\n      add\n        /* \"#utility.yul\":296:322   */\n      add\n        /* \"#utility.yul\":293:328   */\n      gt\n        /* \"#utility.yul\":290:292   */\n      iszero\n      tag_306\n      jumpi\n        /* \"#utility.yul\":345:350   */\n      dup3\n        /* \"#utility.yul\":338:343   */\n      dup4\n        /* \"#utility.yul\":331:351   */\n      revert\n        /* \"#utility.yul\":290:292   */\n    tag_306:\n        /* \"#utility.yul\":414:416   */\n      dup2\n        /* \"#utility.yul\":407:411   */\n      0x20\n        /* \"#utility.yul\":399:405   */\n      dup6\n        /* \"#utility.yul\":395:412   */\n      add\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":379:386   */\n      dup4\n        /* \"#utility.yul\":375:393   */\n      add\n        /* \"#utility.yul\":362:417   */\n      calldatacopy\n        /* \"#utility.yul\":437:453   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":455:459   */\n      0x20\n        /* \"#utility.yul\":433:460   */\n      add\n        /* \"#utility.yul\":426:468   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":441:448   */\n      swap3\n        /* \"#utility.yul\":68:499   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":504:670   */\n    tag_307:\n        /* \"#utility.yul\":583:596   */\n      dup1\n      mload\n        /* \"#utility.yul\":636:637   */\n      0x02\n        /* \"#utility.yul\":625:645   */\n      dup2\n      swap1\n      signextend\n        /* \"#utility.yul\":615:646   */\n      dup2\n      eq\n        /* \"#utility.yul\":605:607   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      dup1\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":675:1630   */\n    tag_310:\n      0x00\n        /* \"#utility.yul\":800:804   */\n      0xa0\n        /* \"#utility.yul\":788:797   */\n      dup3\n        /* \"#utility.yul\":783:786   */\n      dup5\n        /* \"#utility.yul\":779:798   */\n      sub\n        /* \"#utility.yul\":775:805   */\n      slt\n        /* \"#utility.yul\":772:774   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":822:827   */\n      dup1\n        /* \"#utility.yul\":815:820   */\n      dup2\n        /* \"#utility.yul\":808:828   */\n      revert\n        /* \"#utility.yul\":772:774   */\n    tag_312:\n        /* \"#utility.yul\":859:861   */\n      0x40\n        /* \"#utility.yul\":853:862   */\n      mload\n        /* \"#utility.yul\":901:905   */\n      0xa0\n        /* \"#utility.yul\":893:899   */\n      dup2\n        /* \"#utility.yul\":889:906   */\n      add\n        /* \"#utility.yul\":972:978   */\n      dup2\n        /* \"#utility.yul\":960:970   */\n      dup2\n        /* \"#utility.yul\":957:979   */\n      lt\n        /* \"#utility.yul\":936:954   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":924:934   */\n      dup3\n        /* \"#utility.yul\":921:955   */\n      gt\n        /* \"#utility.yul\":918:980   */\n      or\n        /* \"#utility.yul\":915:917   */\n      iszero\n      tag_313\n      jumpi\n        /* \"#utility.yul\":983:992   */\n      invalid\n        /* \"#utility.yul\":915:917   */\n    tag_313:\n        /* \"#utility.yul\":1010:1012   */\n      0x40\n        /* \"#utility.yul\":1003:1025   */\n      mstore\n        /* \"#utility.yul\":1043:1049   */\n      swap1\n      pop\n      dup1\n        /* \"#utility.yul\":1073:1096   */\n      dup3\n      calldataload\n        /* \"#utility.yul\":1105:1140   */\n      tag_314\n        /* \"#utility.yul\":1073:1096   */\n      dup2\n        /* \"#utility.yul\":1105:1140   */\n      tag_315\n      jump\t// in\n    tag_314:\n        /* \"#utility.yul\":1149:1172   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1224:1226   */\n      0x20\n        /* \"#utility.yul\":1209:1227   */\n      dup4\n      add\n        /* \"#utility.yul\":1196:1228   */\n      calldataload\n        /* \"#utility.yul\":1237:1272   */\n      tag_316\n        /* \"#utility.yul\":1196:1228   */\n      dup2\n        /* \"#utility.yul\":1237:1272   */\n      tag_315\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":1300:1302   */\n      0x20\n        /* \"#utility.yul\":1288:1303   */\n      dup3\n      add\n        /* \"#utility.yul\":1281:1313   */\n      mstore\n        /* \"#utility.yul\":1374:1376   */\n      0x40\n        /* \"#utility.yul\":1359:1377   */\n      dup4\n      dup2\n      add\n        /* \"#utility.yul\":1346:1378   */\n      calldataload\n        /* \"#utility.yul\":1329:1344   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1322:1379   */\n      mstore\n        /* \"#utility.yul\":1431:1433   */\n      0x60\n        /* \"#utility.yul\":1416:1434   */\n      dup4\n      add\n        /* \"#utility.yul\":1403:1435   */\n      calldataload\n        /* \"#utility.yul\":1479:1487   */\n      0xffffff\n        /* \"#utility.yul\":1466:1488   */\n      dup2\n      and\n        /* \"#utility.yul\":1454:1489   */\n      dup2\n      eq\n        /* \"#utility.yul\":1444:1446   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":1503:1504   */\n      0x00\n        /* \"#utility.yul\":1500:1501   */\n      dup1\n        /* \"#utility.yul\":1493:1505   */\n      revert\n        /* \"#utility.yul\":1444:1446   */\n    tag_317:\n        /* \"#utility.yul\":1535:1537   */\n      0x60\n        /* \"#utility.yul\":1523:1538   */\n      dup3\n      add\n        /* \"#utility.yul\":1516:1548   */\n      mstore\n        /* \"#utility.yul\":1582:1623   */\n      tag_318\n        /* \"#utility.yul\":1618:1621   */\n      0x80\n        /* \"#utility.yul\":1603:1622   */\n      dup5\n      add\n        /* \"#utility.yul\":1582:1623   */\n      tag_319\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1576:1579   */\n      0x80\n        /* \"#utility.yul\":1568:1574   */\n      dup3\n        /* \"#utility.yul\":1564:1580   */\n      add\n        /* \"#utility.yul\":1557:1624   */\n      mstore\n      pop\n        /* \"#utility.yul\":762:1630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1635:1773   */\n    tag_319:\n        /* \"#utility.yul\":1705:1725   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":1734:1767   */\n      tag_145\n        /* \"#utility.yul\":1705:1725   */\n      dup2\n        /* \"#utility.yul\":1734:1767   */\n      tag_315\n      jump\t// in\n        /* \"#utility.yul\":1778:1943   */\n    tag_322:\n        /* \"#utility.yul\":1858:1871   */\n      dup1\n      mload\n        /* \"#utility.yul\":1911:1917   */\n      0xffff\n        /* \"#utility.yul\":1900:1918   */\n      dup2\n      and\n        /* \"#utility.yul\":1890:1919   */\n      dup2\n      eq\n        /* \"#utility.yul\":1880:1882   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":1933:1934   */\n      0x00\n        /* \"#utility.yul\":1930:1931   */\n      dup1\n        /* \"#utility.yul\":1923:1935   */\n      revert\n        /* \"#utility.yul\":1948:2358   */\n    tag_13:\n      0x00\n      dup1\n        /* \"#utility.yul\":2086:2088   */\n      0x40\n        /* \"#utility.yul\":2074:2083   */\n      dup4\n        /* \"#utility.yul\":2065:2072   */\n      dup6\n        /* \"#utility.yul\":2061:2084   */\n      sub\n        /* \"#utility.yul\":2057:2089   */\n      slt\n        /* \"#utility.yul\":2054:2056   */\n      iszero\n      tag_326\n      jumpi\n        /* \"#utility.yul\":2107:2113   */\n      dup2\n        /* \"#utility.yul\":2099:2105   */\n      dup3\n        /* \"#utility.yul\":2092:2114   */\n      revert\n        /* \"#utility.yul\":2054:2056   */\n    tag_326:\n        /* \"#utility.yul\":2152:2161   */\n      dup3\n        /* \"#utility.yul\":2139:2162   */\n      calldataload\n        /* \"#utility.yul\":2185:2203   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2177:2183   */\n      dup2\n        /* \"#utility.yul\":2174:2204   */\n      gt\n        /* \"#utility.yul\":2171:2173   */\n      iszero\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2222:2228   */\n      dup3\n        /* \"#utility.yul\":2214:2220   */\n      dup4\n        /* \"#utility.yul\":2207:2229   */\n      revert\n        /* \"#utility.yul\":2171:2173   */\n    tag_327:\n        /* \"#utility.yul\":2250:2301   */\n      tag_328\n        /* \"#utility.yul\":2293:2300   */\n      dup6\n        /* \"#utility.yul\":2284:2290   */\n      dup3\n        /* \"#utility.yul\":2273:2282   */\n      dup7\n        /* \"#utility.yul\":2269:2291   */\n      add\n        /* \"#utility.yul\":2250:2301   */\n      tag_299\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":2240:2301   */\n      swap6\n        /* \"#utility.yul\":2348:2350   */\n      0x20\n        /* \"#utility.yul\":2333:2351   */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":2320:2352   */\n      calldataload\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2044:2358   */\n      jump\t// out\n        /* \"#utility.yul\":2363:2579   */\n    tag_231:\n      0x00\n        /* \"#utility.yul\":2484:2486   */\n      0x20\n        /* \"#utility.yul\":2472:2481   */\n      dup3\n        /* \"#utility.yul\":2463:2470   */\n      dup5\n        /* \"#utility.yul\":2459:2482   */\n      sub\n        /* \"#utility.yul\":2455:2487   */\n      slt\n        /* \"#utility.yul\":2452:2454   */\n      iszero\n      tag_330\n      jumpi\n        /* \"#utility.yul\":2505:2511   */\n      dup1\n        /* \"#utility.yul\":2497:2503   */\n      dup2\n        /* \"#utility.yul\":2490:2512   */\n      revert\n        /* \"#utility.yul\":2452:2454   */\n    tag_330:\n        /* \"#utility.yul\":2533:2573   */\n      tag_331\n        /* \"#utility.yul\":2563:2572   */\n      dup3\n        /* \"#utility.yul\":2533:2573   */\n      tag_307\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2523:2573   */\n      swap4\n        /* \"#utility.yul\":2442:2579   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2584:2837   */\n    tag_81:\n      0x00\n      dup1\n        /* \"#utility.yul\":2722:2724   */\n      0x40\n        /* \"#utility.yul\":2710:2719   */\n      dup4\n        /* \"#utility.yul\":2701:2708   */\n      dup6\n        /* \"#utility.yul\":2697:2720   */\n      sub\n        /* \"#utility.yul\":2693:2725   */\n      slt\n        /* \"#utility.yul\":2690:2692   */\n      iszero\n      tag_333\n      jumpi\n        /* \"#utility.yul\":2743:2749   */\n      dup2\n        /* \"#utility.yul\":2735:2741   */\n      dup3\n        /* \"#utility.yul\":2728:2750   */\n      revert\n        /* \"#utility.yul\":2690:2692   */\n    tag_333:\n      pop\n      pop\n        /* \"#utility.yul\":2771:2787   */\n      dup1\n      mload\n        /* \"#utility.yul\":2827:2829   */\n      0x20\n        /* \"#utility.yul\":2812:2830   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2806:2831   */\n      mload\n        /* \"#utility.yul\":2771:2787   */\n      swap1\n      swap3\n        /* \"#utility.yul\":2806:2831   */\n      swap1\n      swap2\n      pop\n        /* \"#utility.yul\":2680:2837   */\n      jump\t// out\n        /* \"#utility.yul\":2842:3318   */\n    tag_41:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2995:2997   */\n      0x60\n        /* \"#utility.yul\":2983:2992   */\n      dup5\n        /* \"#utility.yul\":2974:2981   */\n      dup7\n        /* \"#utility.yul\":2970:2993   */\n      sub\n        /* \"#utility.yul\":2966:2998   */\n      slt\n        /* \"#utility.yul\":2963:2965   */\n      iszero\n      tag_335\n      jumpi\n        /* \"#utility.yul\":3016:3022   */\n      dup1\n        /* \"#utility.yul\":3008:3014   */\n      dup2\n        /* \"#utility.yul\":3001:3023   */\n      revert\n        /* \"#utility.yul\":2963:2965   */\n    tag_335:\n        /* \"#utility.yul\":3057:3066   */\n      dup4\n        /* \"#utility.yul\":3044:3067   */\n      calldataload\n        /* \"#utility.yul\":3034:3067   */\n      swap3\n      pop\n        /* \"#utility.yul\":3114:3116   */\n      0x20\n        /* \"#utility.yul\":3103:3112   */\n      dup5\n        /* \"#utility.yul\":3099:3117   */\n      add\n        /* \"#utility.yul\":3086:3118   */\n      calldataload\n        /* \"#utility.yul\":3076:3118   */\n      swap2\n      pop\n        /* \"#utility.yul\":3169:3171   */\n      0x40\n        /* \"#utility.yul\":3158:3167   */\n      dup5\n        /* \"#utility.yul\":3154:3172   */\n      add\n        /* \"#utility.yul\":3141:3173   */\n      calldataload\n        /* \"#utility.yul\":3196:3214   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3188:3194   */\n      dup2\n        /* \"#utility.yul\":3185:3215   */\n      gt\n        /* \"#utility.yul\":3182:3184   */\n      iszero\n      tag_336\n      jumpi\n        /* \"#utility.yul\":3233:3239   */\n      dup2\n        /* \"#utility.yul\":3225:3231   */\n      dup3\n        /* \"#utility.yul\":3218:3240   */\n      revert\n        /* \"#utility.yul\":3182:3184   */\n    tag_336:\n        /* \"#utility.yul\":3261:3312   */\n      tag_337\n        /* \"#utility.yul\":3304:3311   */\n      dup7\n        /* \"#utility.yul\":3295:3301   */\n      dup3\n        /* \"#utility.yul\":3284:3293   */\n      dup8\n        /* \"#utility.yul\":3280:3302   */\n      add\n        /* \"#utility.yul\":3261:3312   */\n      tag_299\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3251:3312   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2953:3318   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3323:3999   */\n    tag_221:\n      0x00\n        /* \"#utility.yul\":3456:3458   */\n      0x20\n        /* \"#utility.yul\":3444:3453   */\n      dup3\n        /* \"#utility.yul\":3435:3442   */\n      dup5\n        /* \"#utility.yul\":3431:3454   */\n      sub\n        /* \"#utility.yul\":3427:3459   */\n      slt\n        /* \"#utility.yul\":3424:3426   */\n      iszero\n      tag_339\n      jumpi\n        /* \"#utility.yul\":3477:3483   */\n      dup1\n        /* \"#utility.yul\":3469:3475   */\n      dup2\n        /* \"#utility.yul\":3462:3484   */\n      revert\n        /* \"#utility.yul\":3424:3426   */\n    tag_339:\n        /* \"#utility.yul\":3515:3524   */\n      dup2\n        /* \"#utility.yul\":3509:3525   */\n      mload\n        /* \"#utility.yul\":3548:3566   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3540:3546   */\n      dup2\n        /* \"#utility.yul\":3537:3567   */\n      gt\n        /* \"#utility.yul\":3534:3536   */\n      iszero\n      tag_340\n      jumpi\n        /* \"#utility.yul\":3585:3591   */\n      dup2\n        /* \"#utility.yul\":3577:3583   */\n      dup3\n        /* \"#utility.yul\":3570:3592   */\n      revert\n        /* \"#utility.yul\":3534:3536   */\n    tag_340:\n        /* \"#utility.yul\":3613:3635   */\n      dup3\n      add\n        /* \"#utility.yul\":3666:3670   */\n      0x1f\n        /* \"#utility.yul\":3658:3671   */\n      dup2\n      add\n        /* \"#utility.yul\":3654:3681   */\n      dup5\n      sgt\n        /* \"#utility.yul\":3644:3646   */\n      tag_341\n      jumpi\n        /* \"#utility.yul\":3700:3706   */\n      dup2\n        /* \"#utility.yul\":3692:3698   */\n      dup3\n        /* \"#utility.yul\":3685:3707   */\n      revert\n        /* \"#utility.yul\":3644:3646   */\n    tag_341:\n        /* \"#utility.yul\":3734:3736   */\n      dup1\n        /* \"#utility.yul\":3728:3737   */\n      mload\n        /* \"#utility.yul\":3759:3808   */\n      tag_342\n        /* \"#utility.yul\":3774:3807   */\n      tag_303\n        /* \"#utility.yul\":3804:3806   */\n      dup3\n        /* \"#utility.yul\":3774:3807   */\n      tag_304\n      jump\t// in\n        /* \"#utility.yul\":3759:3808   */\n    tag_342:\n        /* \"#utility.yul\":3831:3833   */\n      dup2\n        /* \"#utility.yul\":3824:3829   */\n      dup2\n        /* \"#utility.yul\":3817:3834   */\n      mstore\n        /* \"#utility.yul\":3871:3878   */\n      dup6\n        /* \"#utility.yul\":3866:3868   */\n      0x20\n        /* \"#utility.yul\":3861:3863   */\n      dup4\n        /* \"#utility.yul\":3857:3859   */\n      dup6\n        /* \"#utility.yul\":3853:3864   */\n      add\n        /* \"#utility.yul\":3849:3869   */\n      add\n        /* \"#utility.yul\":3846:3879   */\n      gt\n        /* \"#utility.yul\":3843:3845   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":3897:3903   */\n      dup4\n        /* \"#utility.yul\":3889:3895   */\n      dup5\n        /* \"#utility.yul\":3882:3904   */\n      revert\n        /* \"#utility.yul\":3843:3845   */\n    tag_344:\n        /* \"#utility.yul\":3915:3969   */\n      tag_174\n        /* \"#utility.yul\":3966:3968   */\n      dup3\n        /* \"#utility.yul\":3961:3963   */\n      0x20\n        /* \"#utility.yul\":3954:3959   */\n      dup4\n        /* \"#utility.yul\":3950:3964   */\n      add\n        /* \"#utility.yul\":3945:3947   */\n      0x20\n        /* \"#utility.yul\":3941:3943   */\n      dup7\n        /* \"#utility.yul\":3937:3948   */\n      add\n        /* \"#utility.yul\":3915:3969   */\n      tag_346\n      jump\t// in\n        /* \"#utility.yul\":4004:4284   */\n    tag_32:\n      0x00\n        /* \"#utility.yul\":4160:4163   */\n      0xa0\n        /* \"#utility.yul\":4148:4157   */\n      dup3\n        /* \"#utility.yul\":4139:4146   */\n      dup5\n        /* \"#utility.yul\":4135:4158   */\n      sub\n        /* \"#utility.yul\":4131:4164   */\n      slt\n        /* \"#utility.yul\":4128:4130   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":4182:4188   */\n      dup1\n        /* \"#utility.yul\":4174:4180   */\n      dup2\n        /* \"#utility.yul\":4167:4189   */\n      revert\n        /* \"#utility.yul\":4128:4130   */\n    tag_348:\n        /* \"#utility.yul\":4210:4278   */\n      tag_331\n        /* \"#utility.yul\":4270:4277   */\n      dup4\n        /* \"#utility.yul\":4259:4268   */\n      dup4\n        /* \"#utility.yul\":4210:4278   */\n      tag_310\n      jump\t// in\n        /* \"#utility.yul\":4575:5520   */\n    tag_140:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":4790:4793   */\n      0xe0\n        /* \"#utility.yul\":4778:4787   */\n      dup9\n        /* \"#utility.yul\":4769:4776   */\n      dup11\n        /* \"#utility.yul\":4765:4788   */\n      sub\n        /* \"#utility.yul\":4761:4794   */\n      slt\n        /* \"#utility.yul\":4758:4760   */\n      iszero\n      tag_354\n      jumpi\n        /* \"#utility.yul\":4812:4818   */\n      dup3\n        /* \"#utility.yul\":4804:4810   */\n      dup4\n        /* \"#utility.yul\":4797:4819   */\n      revert\n        /* \"#utility.yul\":4758:4760   */\n    tag_354:\n        /* \"#utility.yul\":4849:4858   */\n      dup8\n        /* \"#utility.yul\":4843:4859   */\n      mload\n        /* \"#utility.yul\":4868:4901   */\n      tag_355\n        /* \"#utility.yul\":4895:4900   */\n      dup2\n        /* \"#utility.yul\":4868:4901   */\n      tag_315\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4920:4925   */\n      swap7\n      pop\n        /* \"#utility.yul\":4944:4993   */\n      tag_356\n        /* \"#utility.yul\":4989:4991   */\n      0x20\n        /* \"#utility.yul\":4974:4992   */\n      dup10\n      add\n        /* \"#utility.yul\":4944:4993   */\n      tag_307\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4934:4993   */\n      swap6\n      pop\n        /* \"#utility.yul\":5012:5062   */\n      tag_357\n        /* \"#utility.yul\":5058:5060   */\n      0x40\n        /* \"#utility.yul\":5047:5056   */\n      dup10\n        /* \"#utility.yul\":5043:5061   */\n      add\n        /* \"#utility.yul\":5012:5062   */\n      tag_322\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":5002:5062   */\n      swap5\n      pop\n        /* \"#utility.yul\":5081:5131   */\n      tag_358\n        /* \"#utility.yul\":5127:5129   */\n      0x60\n        /* \"#utility.yul\":5116:5125   */\n      dup10\n        /* \"#utility.yul\":5112:5130   */\n      add\n        /* \"#utility.yul\":5081:5131   */\n      tag_322\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":5071:5131   */\n      swap4\n      pop\n        /* \"#utility.yul\":5150:5201   */\n      tag_359\n        /* \"#utility.yul\":5196:5199   */\n      0x80\n        /* \"#utility.yul\":5185:5194   */\n      dup10\n        /* \"#utility.yul\":5181:5200   */\n      add\n        /* \"#utility.yul\":5150:5201   */\n      tag_322\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":5140:5201   */\n      swap3\n      pop\n        /* \"#utility.yul\":5246:5249   */\n      0xa0\n        /* \"#utility.yul\":5235:5244   */\n      dup9\n        /* \"#utility.yul\":5231:5250   */\n      add\n        /* \"#utility.yul\":5225:5251   */\n      mload\n        /* \"#utility.yul\":5295:5299   */\n      0xff\n        /* \"#utility.yul\":5286:5293   */\n      dup2\n        /* \"#utility.yul\":5282:5300   */\n      and\n        /* \"#utility.yul\":5273:5280   */\n      dup2\n        /* \"#utility.yul\":5270:5301   */\n      eq\n        /* \"#utility.yul\":5260:5262   */\n      tag_360\n      jumpi\n        /* \"#utility.yul\":5320:5326   */\n      dup3\n        /* \"#utility.yul\":5312:5318   */\n      dup4\n        /* \"#utility.yul\":5305:5327   */\n      revert\n        /* \"#utility.yul\":5260:5262   */\n    tag_360:\n        /* \"#utility.yul\":5400:5403   */\n      0xc0\n        /* \"#utility.yul\":5385:5404   */\n      dup10\n      add\n        /* \"#utility.yul\":5379:5405   */\n      mload\n        /* \"#utility.yul\":5348:5355   */\n      swap1\n      swap3\n      pop\n        /* \"#utility.yul\":5443:5458   */\n      dup1\n      iszero\n        /* \"#utility.yul\":5436:5459   */\n      iszero\n        /* \"#utility.yul\":5424:5460   */\n      dup2\n      eq\n        /* \"#utility.yul\":5414:5416   */\n      tag_361\n      jumpi\n        /* \"#utility.yul\":5479:5485   */\n      dup2\n        /* \"#utility.yul\":5471:5477   */\n      dup3\n        /* \"#utility.yul\":5464:5486   */\n      revert\n        /* \"#utility.yul\":5414:5416   */\n    tag_361:\n        /* \"#utility.yul\":5507:5514   */\n      dup1\n        /* \"#utility.yul\":5497:5514   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4748:5520   */\n      swap3\n      swap6\n      swap9\n      swap2\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5525:5719   */\n    tag_256:\n      0x00\n        /* \"#utility.yul\":5648:5650   */\n      0x20\n        /* \"#utility.yul\":5636:5645   */\n      dup3\n        /* \"#utility.yul\":5627:5634   */\n      dup5\n        /* \"#utility.yul\":5623:5646   */\n      sub\n        /* \"#utility.yul\":5619:5651   */\n      slt\n        /* \"#utility.yul\":5616:5618   */\n      iszero\n      tag_363\n      jumpi\n        /* \"#utility.yul\":5669:5675   */\n      dup1\n        /* \"#utility.yul\":5661:5667   */\n      dup2\n        /* \"#utility.yul\":5654:5676   */\n      revert\n        /* \"#utility.yul\":5616:5618   */\n    tag_363:\n      pop\n        /* \"#utility.yul\":5697:5713   */\n      mload\n      swap2\n        /* \"#utility.yul\":5606:5719   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5724:6131   */\n    tag_225:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":5879:5881   */\n      0x60\n        /* \"#utility.yul\":5867:5876   */\n      dup5\n        /* \"#utility.yul\":5858:5865   */\n      dup7\n        /* \"#utility.yul\":5854:5877   */\n      sub\n        /* \"#utility.yul\":5850:5882   */\n      slt\n        /* \"#utility.yul\":5847:5849   */\n      iszero\n      tag_365\n      jumpi\n        /* \"#utility.yul\":5900:5906   */\n      dup1\n        /* \"#utility.yul\":5892:5898   */\n      dup2\n        /* \"#utility.yul\":5885:5907   */\n      revert\n        /* \"#utility.yul\":5847:5849   */\n    tag_365:\n        /* \"#utility.yul\":5934:5943   */\n      dup4\n        /* \"#utility.yul\":5928:5944   */\n      mload\n        /* \"#utility.yul\":5918:5944   */\n      swap3\n      pop\n        /* \"#utility.yul\":5987:5989   */\n      0x20\n        /* \"#utility.yul\":5976:5985   */\n      dup5\n        /* \"#utility.yul\":5972:5990   */\n      add\n        /* \"#utility.yul\":5966:5991   */\n      mload\n        /* \"#utility.yul\":6000:6033   */\n      tag_366\n        /* \"#utility.yul\":6027:6032   */\n      dup2\n        /* \"#utility.yul\":6000:6033   */\n      tag_315\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":6052:6057   */\n      swap2\n      pop\n        /* \"#utility.yul\":6076:6125   */\n      tag_367\n        /* \"#utility.yul\":6121:6123   */\n      0x40\n        /* \"#utility.yul\":6106:6124   */\n      dup6\n      add\n        /* \"#utility.yul\":6076:6125   */\n      tag_307\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6066:6125   */\n      swap1\n      pop\n        /* \"#utility.yul\":5837:6131   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6136:6395   */\n    tag_368:\n      0x00\n        /* \"#utility.yul\":6217:6222   */\n      dup2\n        /* \"#utility.yul\":6211:6223   */\n      mload\n        /* \"#utility.yul\":6244:6250   */\n      dup1\n        /* \"#utility.yul\":6239:6242   */\n      dup5\n        /* \"#utility.yul\":6232:6251   */\n      mstore\n        /* \"#utility.yul\":6260:6323   */\n      tag_370\n        /* \"#utility.yul\":6316:6322   */\n      dup2\n        /* \"#utility.yul\":6309:6313   */\n      0x20\n        /* \"#utility.yul\":6304:6307   */\n      dup7\n        /* \"#utility.yul\":6300:6314   */\n      add\n        /* \"#utility.yul\":6293:6297   */\n      0x20\n        /* \"#utility.yul\":6286:6291   */\n      dup7\n        /* \"#utility.yul\":6282:6298   */\n      add\n        /* \"#utility.yul\":6260:6323   */\n      tag_346\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":6377:6379   */\n      0x1f\n        /* \"#utility.yul\":6356:6371   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":6352:6381   */\n      and\n        /* \"#utility.yul\":6343:6382   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":6384:6388   */\n      0x20\n        /* \"#utility.yul\":6339:6389   */\n      add\n      swap3\n        /* \"#utility.yul\":6187:6395   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6400:6831   */\n    tag_75:\n        /* \"#utility.yul\":6653:6655   */\n      0x60\n        /* \"#utility.yul\":6649:6664   */\n      swap4\n      dup5\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":6645:6669   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":6633:6670   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6726:6729   */\n      0xe8\n        /* \"#utility.yul\":6704:6720   */\n      swap4\n      swap1\n      swap4\n      shl\n      not(sub(shl(0xe8, 0x01), 0x01))\n        /* \"#utility.yul\":6700:6741   */\n      and\n        /* \"#utility.yul\":6695:6697   */\n      0x14\n        /* \"#utility.yul\":6686:6698   */\n      dup3\n      add\n        /* \"#utility.yul\":6679:6742   */\n      mstore\n        /* \"#utility.yul\":6776:6791   */\n      swap3\n      shl\n        /* \"#utility.yul\":6772:6796   */\n      and\n        /* \"#utility.yul\":6767:6769   */\n      0x17\n        /* \"#utility.yul\":6758:6770   */\n      dup3\n      add\n        /* \"#utility.yul\":6751:6797   */\n      mstore\n        /* \"#utility.yul\":6822:6824   */\n      0x2b\n        /* \"#utility.yul\":6813:6825   */\n      add\n      swap1\n        /* \"#utility.yul\":6573:6831   */\n      jump\t// out\n        /* \"#utility.yul\":6836:7339   */\n    tag_214:\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"#utility.yul\":7122:7148   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7185:7187   */\n      0x60\n        /* \"#utility.yul\":7181:7196   */\n      swap4\n      swap1\n      swap4\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":7177:7230   */\n      and\n        /* \"#utility.yul\":7173:7174   */\n      0x01\n        /* \"#utility.yul\":7164:7175   */\n      dup5\n      add\n        /* \"#utility.yul\":7157:7231   */\n      mstore\n        /* \"#utility.yul\":7256:7258   */\n      0x15\n        /* \"#utility.yul\":7247:7259   */\n      dup4\n      add\n        /* \"#utility.yul\":7240:7268   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7293:7295   */\n      0x35\n        /* \"#utility.yul\":7284:7296   */\n      dup3\n      add\n        /* \"#utility.yul\":7277:7305   */\n      mstore\n        /* \"#utility.yul\":7330:7332   */\n      0x55\n        /* \"#utility.yul\":7321:7333   */\n      add\n      swap1\n        /* \"#utility.yul\":7112:7339   */\n      jump\t// out\n        /* \"#utility.yul\":7344:7547   */\n    tag_20:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7508:7540   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7490:7541   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7478:7480   */\n      0x20\n        /* \"#utility.yul\":7463:7481   */\n      add\n      swap1\n        /* \"#utility.yul\":7445:7547   */\n      jump\t// out\n        /* \"#utility.yul\":7552:7940   */\n    tag_212:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7808:7823   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":7790:7824   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7860:7875   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":7855:7857   */\n      0x20\n        /* \"#utility.yul\":7840:7858   */\n      dup3\n      add\n        /* \"#utility.yul\":7833:7876   */\n      mstore\n        /* \"#utility.yul\":7924:7932   */\n      0xffffff\n        /* \"#utility.yul\":7912:7933   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":7907:7909   */\n      0x40\n        /* \"#utility.yul\":7892:7910   */\n      dup3\n      add\n        /* \"#utility.yul\":7885:7934   */\n      mstore\n        /* \"#utility.yul\":7740:7742   */\n      0x60\n        /* \"#utility.yul\":7725:7743   */\n      add\n      swap1\n        /* \"#utility.yul\":7707:7940   */\n      jump\t// out\n        /* \"#utility.yul\":7945:8515   */\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":8234:8249   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":8216:8250   */\n      dup3\n      mstore\n        /* \"#utility.yul\":8293:8307   */\n      dup6\n      iszero\n        /* \"#utility.yul\":8286:8308   */\n      iszero\n        /* \"#utility.yul\":8281:8283   */\n      0x20\n        /* \"#utility.yul\":8266:8284   */\n      dup4\n      add\n        /* \"#utility.yul\":8259:8309   */\n      mstore\n        /* \"#utility.yul\":8340:8342   */\n      0x40\n        /* \"#utility.yul\":8325:8343   */\n      dup3\n      add\n        /* \"#utility.yul\":8318:8352   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":8388:8403   */\n      dup4\n      and\n        /* \"#utility.yul\":8383:8385   */\n      0x60\n        /* \"#utility.yul\":8368:8386   */\n      dup3\n      add\n        /* \"#utility.yul\":8361:8404   */\n      mstore\n        /* \"#utility.yul\":8196:8199   */\n      0xa0\n        /* \"#utility.yul\":8435:8438   */\n      0x80\n        /* \"#utility.yul\":8420:8439   */\n      dup3\n      add\n        /* \"#utility.yul\":8413:8445   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7945:8515   */\n      0x00\n      swap1\n        /* \"#utility.yul\":8462:8509   */\n      tag_376\n      swap1\n        /* \"#utility.yul\":8489:8508   */\n      dup4\n      add\n        /* \"#utility.yul\":8481:8487   */\n      dup5\n        /* \"#utility.yul\":8462:8509   */\n      tag_368\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":8454:8509   */\n      swap8\n        /* \"#utility.yul\":8168:8515   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8520:8708   */\n    tag_251:\n        /* \"#utility.yul\":8691:8692   */\n      0x01\n        /* \"#utility.yul\":8680:8701   */\n      swap2\n      swap1\n      swap2\n      signextend\n        /* \"#utility.yul\":8662:8702   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8650:8652   */\n      0x20\n        /* \"#utility.yul\":8635:8653   */\n      add\n      swap1\n        /* \"#utility.yul\":8617:8708   */\n      jump\t// out\n        /* \"#utility.yul\":8713:8934   */\n    tag_223:\n      0x00\n        /* \"#utility.yul\":8862:8864   */\n      0x20\n        /* \"#utility.yul\":8851:8860   */\n      dup3\n        /* \"#utility.yul\":8844:8865   */\n      mstore\n        /* \"#utility.yul\":8882:8928   */\n      tag_331\n        /* \"#utility.yul\":8924:8926   */\n      0x20\n        /* \"#utility.yul\":8913:8922   */\n      dup4\n        /* \"#utility.yul\":8909:8927   */\n      add\n        /* \"#utility.yul\":8901:8907   */\n      dup5\n        /* \"#utility.yul\":8882:8928   */\n      tag_368\n      jump\t// in\n        /* \"#utility.yul\":8939:9280   */\n    tag_187:\n        /* \"#utility.yul\":9141:9143   */\n      0x20\n        /* \"#utility.yul\":9123:9144   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9180:9182   */\n      0x11\n        /* \"#utility.yul\":9160:9178   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9153:9183   */\n      mstore\n      shl(0x78, 0x746f55696e7432345f6f766572666c6f77)\n        /* \"#utility.yul\":9214:9216   */\n      0x40\n        /* \"#utility.yul\":9199:9217   */\n      dup3\n      add\n        /* \"#utility.yul\":9192:9239   */\n      mstore\n        /* \"#utility.yul\":9271:9273   */\n      0x60\n        /* \"#utility.yul\":9256:9274   */\n      add\n      swap1\n        /* \"#utility.yul\":9113:9280   */\n      jump\t// out\n        /* \"#utility.yul\":9285:9623   */\n    tag_194:\n        /* \"#utility.yul\":9487:9489   */\n      0x20\n        /* \"#utility.yul\":9469:9490   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9526:9528   */\n      0x0e\n        /* \"#utility.yul\":9506:9524   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9499:9529   */\n      mstore\n      shl(0x90, 0x736c6963655f6f766572666c6f77)\n        /* \"#utility.yul\":9560:9562   */\n      0x40\n        /* \"#utility.yul\":9545:9563   */\n      dup3\n      add\n        /* \"#utility.yul\":9538:9582   */\n      mstore\n        /* \"#utility.yul\":9614:9616   */\n      0x60\n        /* \"#utility.yul\":9599:9617   */\n      add\n      swap1\n        /* \"#utility.yul\":9459:9623   */\n      jump\t// out\n        /* \"#utility.yul\":9628:9972   */\n    tag_190:\n        /* \"#utility.yul\":9830:9832   */\n      0x20\n        /* \"#utility.yul\":9812:9833   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9869:9871   */\n      0x14\n        /* \"#utility.yul\":9849:9867   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9842:9872   */\n      mstore\n      shl(0x60, 0x746f55696e7432345f6f75744f66426f756e6473)\n        /* \"#utility.yul\":9903:9905   */\n      0x40\n        /* \"#utility.yul\":9888:9906   */\n      dup3\n      add\n        /* \"#utility.yul\":9881:9931   */\n      mstore\n        /* \"#utility.yul\":9963:9965   */\n      0x60\n        /* \"#utility.yul\":9948:9966   */\n      add\n      swap1\n        /* \"#utility.yul\":9802:9972   */\n      jump\t// out\n        /* \"#utility.yul\":9977:10317   */\n    tag_219:\n        /* \"#utility.yul\":10179:10181   */\n      0x20\n        /* \"#utility.yul\":10161:10182   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10218:10220   */\n      0x10\n        /* \"#utility.yul\":10198:10216   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10191:10221   */\n      mstore\n      shl(0x81, 0x2ab732bc3832b1ba32b21032b93937b9)\n        /* \"#utility.yul\":10252:10254   */\n      0x40\n        /* \"#utility.yul\":10237:10255   */\n      dup3\n      add\n        /* \"#utility.yul\":10230:10276   */\n      mstore\n        /* \"#utility.yul\":10308:10310   */\n      0x60\n        /* \"#utility.yul\":10293:10311   */\n      add\n      swap1\n        /* \"#utility.yul\":10151:10317   */\n      jump\t// out\n        /* \"#utility.yul\":10322:10667   */\n    tag_183:\n        /* \"#utility.yul\":10524:10526   */\n      0x20\n        /* \"#utility.yul\":10506:10527   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10563:10565   */\n      0x15\n        /* \"#utility.yul\":10543:10561   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10536:10566   */\n      mstore\n      shl(0x58, 0x746f416464726573735f6f75744f66426f756e6473)\n        /* \"#utility.yul\":10597:10599   */\n      0x40\n        /* \"#utility.yul\":10582:10600   */\n      dup3\n      add\n        /* \"#utility.yul\":10575:10626   */\n      mstore\n        /* \"#utility.yul\":10658:10660   */\n      0x60\n        /* \"#utility.yul\":10643:10661   */\n      add\n      swap1\n        /* \"#utility.yul\":10496:10667   */\n      jump\t// out\n        /* \"#utility.yul\":10672:11013   */\n    tag_199:\n        /* \"#utility.yul\":10874:10876   */\n      0x20\n        /* \"#utility.yul\":10856:10877   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10913:10915   */\n      0x11\n        /* \"#utility.yul\":10893:10911   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10886:10916   */\n      mstore\n      shl(0x78, 0x736c6963655f6f75744f66426f756e6473)\n        /* \"#utility.yul\":10947:10949   */\n      0x40\n        /* \"#utility.yul\":10932:10950   */\n      dup3\n      add\n        /* \"#utility.yul\":10925:10972   */\n      mstore\n        /* \"#utility.yul\":11004:11006   */\n      0x60\n        /* \"#utility.yul\":10989:11007   */\n      add\n      swap1\n        /* \"#utility.yul\":10846:11013   */\n      jump\t// out\n        /* \"#utility.yul\":11018:11360   */\n    tag_180:\n        /* \"#utility.yul\":11220:11222   */\n      0x20\n        /* \"#utility.yul\":11202:11223   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11259:11261   */\n      0x12\n        /* \"#utility.yul\":11239:11257   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11232:11262   */\n      mstore\n      shl(0x70, 0x746f416464726573735f6f766572666c6f77)\n        /* \"#utility.yul\":11293:11295   */\n      0x40\n        /* \"#utility.yul\":11278:11296   */\n      dup3\n      add\n        /* \"#utility.yul\":11271:11319   */\n      mstore\n        /* \"#utility.yul\":11351:11353   */\n      0x60\n        /* \"#utility.yul\":11336:11354   */\n      add\n      swap1\n        /* \"#utility.yul\":11192:11360   */\n      jump\t// out\n        /* \"#utility.yul\":11365:12707   */\n    tag_16:\n      0x00\n        /* \"#utility.yul\":11687:11690   */\n      0x80\n        /* \"#utility.yul\":11676:11685   */\n      dup3\n        /* \"#utility.yul\":11672:11691   */\n      add\n        /* \"#utility.yul\":11718:11724   */\n      dup7\n        /* \"#utility.yul\":11707:11716   */\n      dup4\n        /* \"#utility.yul\":11700:11725   */\n      mstore\n        /* \"#utility.yul\":11744:11746   */\n      0x20\n        /* \"#utility.yul\":11782:11785   */\n      0x80\n        /* \"#utility.yul\":11777:11779   */\n      dup2\n        /* \"#utility.yul\":11766:11775   */\n      dup6\n        /* \"#utility.yul\":11762:11780   */\n      add\n        /* \"#utility.yul\":11755:11786   */\n      mstore\n        /* \"#utility.yul\":11806:11812   */\n      dup2\n        /* \"#utility.yul\":11841:11847   */\n      dup8\n        /* \"#utility.yul\":11835:11848   */\n      mload\n        /* \"#utility.yul\":11872:11878   */\n      dup1\n        /* \"#utility.yul\":11864:11870   */\n      dup5\n        /* \"#utility.yul\":11857:11879   */\n      mstore\n        /* \"#utility.yul\":11910:11913   */\n      0xa0\n        /* \"#utility.yul\":11899:11908   */\n      dup7\n        /* \"#utility.yul\":11895:11914   */\n      add\n        /* \"#utility.yul\":11888:11914   */\n      swap2\n      pop\n        /* \"#utility.yul\":11949:11951   */\n      dup3\n        /* \"#utility.yul\":11941:11947   */\n      dup10\n        /* \"#utility.yul\":11937:11952   */\n      add\n        /* \"#utility.yul\":11923:11952   */\n      swap4\n      pop\n        /* \"#utility.yul\":11970:11974   */\n      dup5\n        /* \"#utility.yul\":11983:12178   */\n    tag_388:\n        /* \"#utility.yul\":11997:12003   */\n      dup2\n        /* \"#utility.yul\":11994:11995   */\n      dup2\n        /* \"#utility.yul\":11991:12004   */\n      lt\n        /* \"#utility.yul\":11983:12178   */\n      iszero\n      tag_390\n      jumpi\n        /* \"#utility.yul\":12062:12075   */\n      dup5\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12058:12097   */\n      and\n        /* \"#utility.yul\":12046:12098   */\n      dup4\n      mstore\n        /* \"#utility.yul\":12153:12168   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":12118:12130   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":12094:12095   */\n      0x01\n        /* \"#utility.yul\":12012:12021   */\n      add\n        /* \"#utility.yul\":11983:12178   */\n      jump(tag_388)\n    tag_390:\n      pop\n      pop\n        /* \"#utility.yul\":12214:12233   */\n      dup5\n      dup2\n      sub\n        /* \"#utility.yul\":12209:12211   */\n      0x40\n        /* \"#utility.yul\":12194:12212   */\n      dup7\n      add\n        /* \"#utility.yul\":12187:12234   */\n      mstore\n        /* \"#utility.yul\":12284:12297   */\n      dup7\n      mload\n        /* \"#utility.yul\":12306:12327   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12345:12357   */\n      swap1\n      dup3\n      add\n      swap3\n      pop\n        /* \"#utility.yul\":12382:12397   */\n      dup2\n      dup8\n      add\n      swap1\n        /* \"#utility.yul\":12417:12421   */\n      dup5\n        /* \"#utility.yul\":12430:12636   */\n    tag_391:\n        /* \"#utility.yul\":12446:12454   */\n      dup2\n        /* \"#utility.yul\":12441:12444   */\n      dup2\n        /* \"#utility.yul\":12438:12455   */\n      lt\n        /* \"#utility.yul\":12430:12636   */\n      iszero\n      tag_393\n      jumpi\n        /* \"#utility.yul\":12519:12534   */\n      dup3\n      mload\n        /* \"#utility.yul\":12536:12546   */\n      0xffffffff\n        /* \"#utility.yul\":12515:12547   */\n      and\n        /* \"#utility.yul\":12501:12548   */\n      dup6\n      mstore\n        /* \"#utility.yul\":12570:12584   */\n      swap4\n      dup4\n      add\n      swap4\n        /* \"#utility.yul\":12609:12626   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":12474:12475   */\n      0x01\n        /* \"#utility.yul\":12465:12476   */\n      add\n        /* \"#utility.yul\":12430:12636   */\n      jump(tag_391)\n    tag_393:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12689:12691   */\n      0x60\n        /* \"#utility.yul\":12674:12692   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":12667:12701   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":12653:12658   */\n      swap5\n        /* \"#utility.yul\":11648:12707   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12712:13144   */\n    tag_26:\n        /* \"#utility.yul\":12941:12966   */\n      swap4\n      dup5\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13002:13034   */\n      swap3\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":12997:12999   */\n      0x20\n        /* \"#utility.yul\":12982:13000   */\n      dup5\n      add\n        /* \"#utility.yul\":12975:13035   */\n      mstore\n        /* \"#utility.yul\":13083:13093   */\n      0xffffffff\n        /* \"#utility.yul\":13071:13094   */\n      and\n        /* \"#utility.yul\":13066:13068   */\n      0x40\n        /* \"#utility.yul\":13051:13069   */\n      dup4\n      add\n        /* \"#utility.yul\":13044:13095   */\n      mstore\n        /* \"#utility.yul\":13126:13128   */\n      0x60\n        /* \"#utility.yul\":13111:13129   */\n      dup3\n      add\n        /* \"#utility.yul\":13104:13138   */\n      mstore\n        /* \"#utility.yul\":12928:12931   */\n      0x80\n        /* \"#utility.yul\":12913:12932   */\n      add\n      swap1\n        /* \"#utility.yul\":12895:13144   */\n      jump\t// out\n        /* \"#utility.yul\":13149:13391   */\n    tag_305:\n        /* \"#utility.yul\":13219:13221   */\n      0x40\n        /* \"#utility.yul\":13213:13222   */\n      mload\n        /* \"#utility.yul\":13249:13266   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":13296:13314   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13281:13315   */\n      dup2\n      gt\n        /* \"#utility.yul\":13317:13339   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":13278:13340   */\n      or\n        /* \"#utility.yul\":13275:13277   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":13343:13352   */\n      invalid\n        /* \"#utility.yul\":13275:13277   */\n    tag_396:\n        /* \"#utility.yul\":13370:13372   */\n      0x40\n        /* \"#utility.yul\":13363:13385   */\n      mstore\n        /* \"#utility.yul\":13193:13391   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13396:13577   */\n    tag_304:\n      0x00\n        /* \"#utility.yul\":13479:13497   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13471:13477   */\n      dup3\n        /* \"#utility.yul\":13468:13498   */\n      gt\n        /* \"#utility.yul\":13465:13467   */\n      iszero\n      tag_398\n      jumpi\n        /* \"#utility.yul\":13501:13510   */\n      invalid\n        /* \"#utility.yul\":13465:13467   */\n    tag_398:\n      pop\n        /* \"#utility.yul\":13560:13562   */\n      0x1f\n        /* \"#utility.yul\":13537:13554   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":13533:13564   */\n      and\n        /* \"#utility.yul\":13566:13570   */\n      0x20\n        /* \"#utility.yul\":13529:13571   */\n      add\n      swap1\n        /* \"#utility.yul\":13455:13577   */\n      jump\t// out\n        /* \"#utility.yul\":13582:13840   */\n    tag_346:\n        /* \"#utility.yul\":13654:13655   */\n      0x00\n        /* \"#utility.yul\":13664:13777   */\n    tag_400:\n        /* \"#utility.yul\":13678:13684   */\n      dup4\n        /* \"#utility.yul\":13675:13676   */\n      dup2\n        /* \"#utility.yul\":13672:13685   */\n      lt\n        /* \"#utility.yul\":13664:13777   */\n      iszero\n      tag_402\n      jumpi\n        /* \"#utility.yul\":13754:13765   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":13748:13766   */\n      mload\n        /* \"#utility.yul\":13735:13746   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":13728:13767   */\n      mstore\n        /* \"#utility.yul\":13700:13702   */\n      0x20\n        /* \"#utility.yul\":13693:13703   */\n      add\n        /* \"#utility.yul\":13664:13777   */\n      jump(tag_400)\n    tag_402:\n        /* \"#utility.yul\":13795:13801   */\n      dup4\n        /* \"#utility.yul\":13792:13793   */\n      dup2\n        /* \"#utility.yul\":13789:13802   */\n      gt\n        /* \"#utility.yul\":13786:13788   */\n      iszero\n      tag_403\n      jumpi\n        /* \"#utility.yul\":13830:13831   */\n      0x00\n        /* \"#utility.yul\":13821:13827   */\n      dup5\n        /* \"#utility.yul\":13816:13819   */\n      dup5\n        /* \"#utility.yul\":13812:13828   */\n      add\n        /* \"#utility.yul\":13805:13832   */\n      mstore\n        /* \"#utility.yul\":13786:13788   */\n    tag_403:\n      pop\n        /* \"#utility.yul\":13635:13840   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13845:13978   */\n    tag_315:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":13922:13953   */\n      dup2\n      and\n        /* \"#utility.yul\":13912:13954   */\n      dup2\n      eq\n        /* \"#utility.yul\":13902:13904   */\n      tag_405\n      jumpi\n        /* \"#utility.yul\":13968:13969   */\n      0x00\n        /* \"#utility.yul\":13965:13966   */\n      dup1\n        /* \"#utility.yul\":13958:13970   */\n      revert\n        /* \"#utility.yul\":13902:13904   */\n    tag_405:\n        /* \"#utility.yul\":13892:13978   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f9781e692a78af0d4cf3d953b2910c65f323dcbfa5050a9175ebdcd49f284adb64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:507:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "171:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "180:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "183:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "130:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "141:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "156:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "161:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "152:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "152:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "165:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "148:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "148:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "137:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "137:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "127:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "127:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:50:1"
															},
															"nodeType": "YulIf",
															"src": "117:2:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:1",
														"type": ""
													}
												],
												"src": "14:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "296:209:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "342:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "351:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "359:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "344:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "344:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "344:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "317:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "326:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "313:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "338:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:32:1"
															},
															"nodeType": "YulIf",
															"src": "306:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "377:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "419:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "387:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "387:42:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "377:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "438:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "484:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "495:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "480:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "448:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "448:51:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "438:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "254:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "265:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "277:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "285:6:1",
														"type": ""
													}
												],
												"src": "198:307:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c06040523480156200001157600080fd5b5060405162001c9c38038062001c9c833981016040819052620000349162000070565b6001600160601b0319606092831b8116608052911b1660a052620000a7565b80516001600160a01b03811681146200006b57600080fd5b919050565b6000806040838503121562000083578182fd5b6200008e8362000053565b91506200009e6020840162000053565b90509250929050565b60805160601c60a05160601c611bc1620000db600039806102e05250806104d7528061083752806109ef5250611bc16000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100e6578063c6a5026a146100ee578063cdca175314610101578063fa461e33146101145761007d565b80632f80bb1d146100825780634aa4a4fc146100ae578063bd21704a146100c3575b600080fd5b61009561009036600461157f565b610129565b6040516100a59493929190611a38565b60405180910390f35b6100b66102de565b6040516100a59190611864565b6100d66100d13660046116be565b610302565b6040516100a59493929190611ad3565b6100b66104d5565b6100d66100fc3660046116be565b6104f9565b61009561010f36600461157f565b61066f565b610127610122366004611606565b610806565b005b6000606080600061013986610981565b67ffffffffffffffff8111801561014f57600080fd5b50604051908082528060200260200182016040528015610179578160200160208202803683370190505b50925061018586610981565b67ffffffffffffffff8111801561019b57600080fd5b506040519080825280602002602001820160405280156101c5578160200160208202803683370190505b50915060005b60008060006101d98a610992565b9250925092506000806000806102356040518060a00160405280886001600160a01b03168152602001896001600160a01b031681526020018f81526020018762ffffff16815260200160006001600160a01b0316815250610302565b9350935093509350828b898151811061024a57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050818a898151811061027757fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926102a48e6109c3565b156102b9576102b28e6109cb565b9d506102c9565b8c9b5050505050505050506102d5565b505050505050506101cb565b92959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6020810151815160608301516000928392839283926001600160a01b038082169084161092849261033392906109e8565b905086608001516001600160a01b0316600014156103545760408701516000555b60005a9050816001600160a01b031663128acb0830856103778c60400151610a26565b6000038c608001516001600160a01b0316600014610399578c608001516103bf565b876103b85773fffd8963efd1fc6a506488495d951d5263988d256103bf565b6401000276a45b8d602001518e606001518f600001516040516020016103e0939291906117f1565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161040f9594939291906118a0565b6040805180830381600087803b15801561042857600080fd5b505af1925050508015610458575060408051601f3d908101601f19168201909252610455918101906115e3565b60015b6104c8573d808015610486576040519150601f19603f3d011682016040523d82523d6000602084013e61048b565b606091505b505a8203945088608001516001600160a01b0316600014156104ac57600080555b6104b7818487610a3c565b9750975097509750505050506104ce565b50505050505b9193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b6020810151815160608301516000928392839283926001600160a01b038082169084161092849261052a92906109e8565b905060005a9050816001600160a01b031663128acb08308561054f8c60400151610a26565b60808d01516001600160a01b03161561056c578c60800151610592565b8761058b5773fffd8963efd1fc6a506488495d951d5263988d25610592565b6401000276a45b8d600001518e606001518f602001516040516020016105b3939291906117f1565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016105e29594939291906118a0565b6040805180830381600087803b1580156105fb57600080fd5b505af192505050801561062b575060408051601f3d908101601f19168201909252610628918101906115e3565b60015b6104c8573d808015610659576040519150601f19603f3d011682016040523d82523d6000602084013e61065e565b606091505b505a820394506104b7818487610a3c565b6000606080600061067f86610981565b67ffffffffffffffff8111801561069557600080fd5b506040519080825280602002602001820160405280156106bf578160200160208202803683370190505b5092506106cb86610981565b67ffffffffffffffff811180156106e157600080fd5b5060405190808252806020026020018201604052801561070b578160200160208202803683370190505b50915060005b600080600061071f8a610992565b92509250925060008060008061077b6040518060a00160405280896001600160a01b03168152602001886001600160a01b031681526020018f81526020018762ffffff16815260200160006001600160a01b03168152506104f9565b9350935093509350828b898151811061079057fe5b60200260200101906001600160a01b031690816001600160a01b031681525050818a89815181106107bd57fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926107ea8e6109c3565b156102b9576107f88e6109cb565b9d5050505050505050610711565b60008313806108155750600082135b61081e57600080fd5b600080600061082c84610992565b92509250925061085e7f0000000000000000000000000000000000000000000000000000000000000000848484610af6565b50600080600080891361088a57856001600160a01b0316856001600160a01b031610888a6000036108a5565b846001600160a01b0316866001600160a01b03161089896000035b92509250925060006108b88787876109e8565b9050600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156108f657600080fd5b505afa15801561090a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092e91906116d9565b505050505091509150851561095457604051848152826020820152816040820152606081fd5b6000541561096a57600054841461096a57600080fd5b604051858152826020820152816040820152606081fd5b80516017601319909101045b919050565b600080806109a08482610b15565b92506109ad846014610b77565b90506109ba846017610b15565b91509193909250565b516042111590565b80516060906109e290839060179060161901610bc9565b92915050565b6000610a1e7f0000000000000000000000000000000000000000000000000000000000000000610a19868686610ca5565b610cfb565b949350505050565b6000600160ff1b8210610a3857600080fd5b5090565b600080600080600080876001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610a7e57600080fd5b505afa158015610a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab691906116d9565b50939650610acb94508d9350610dac92505050565b91975095509050610ae66001600160a01b0389168383610e30565b9350869250505093509350935093565b6000610b0c85610b07868686610ca5565b611410565b95945050505050565b600081826014011015610b435760405162461bcd60e51b8152600401610b3a90611a0c565b60405180910390fd5b8160140183511015610b675760405162461bcd60e51b8152600401610b3a906119b2565b500160200151600160601b900490565b600081826003011015610b9c5760405162461bcd60e51b8152600401610b3a90611907565b8160030183511015610bc05760405162461bcd60e51b8152600401610b3a9061195a565b50016003015190565b60608182601f011015610bee5760405162461bcd60e51b8152600401610b3a90611932565b828284011015610c105760405162461bcd60e51b8152600401610b3a90611932565b81830184511015610c335760405162461bcd60e51b8152600401610b3a906119e1565b606082158015610c525760405191506000825260208201604052610c9c565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610c8b578051835260209283019201610c73565b5050858452601f01601f1916604052505b50949350505050565b610cad61144e565b826001600160a01b0316846001600160a01b03161115610ccb579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b600081602001516001600160a01b031682600001516001600160a01b031610610d2357600080fd5b82826000015183602001518460400151604051602001610d4593929190611878565b60408051601f19818403018152908290528051602091820120610d8d939290917fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54910161182c565b60408051601f1981840301815291905280516020909101209392505050565b60008060008351606014610e0f57604484511015610ddc5760405162461bcd60e51b8152600401610b3a90611988565b60048401935083806020019051810190610df69190611654565b60405162461bcd60e51b8152600401610b3a91906118f4565b83806020019051810190610e239190611788565b9250925092509193909250565b60008060008060008060008060088b6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e7757600080fd5b505afa158015610e8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eaf91906115c2565b60020b8b60020b81610ebd57fe5b0560020b901d905060006101008c6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f0357600080fd5b505afa158015610f17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3b91906115c2565b60020b8c60020b81610f4957fe5b0560020b81610f5457fe5b079050600060088d6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f9457600080fd5b505afa158015610fa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcc91906115c2565b60020b8c60020b81610fda57fe5b0560020b901d905060006101008e6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561102057600080fd5b505afa158015611034573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105891906115c2565b60020b8d60020b8161106657fe5b0560020b8161107157fe5b07905060008160ff166001901b8f6001600160a01b0316635339c296856040518263ffffffff1660e01b81526004016110aa91906118e6565b60206040518083038186803b1580156110c257600080fd5b505afa1580156110d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fa9190611770565b1611801561118857508d6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561113c57600080fd5b505afa158015611150573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117491906115c2565b60020b8c60020b8161118257fe5b0760020b155b801561119957508b60020b8d60020b135b945060008360ff166001901b8f6001600160a01b0316635339c296876040518263ffffffff1660e01b81526004016111d191906118e6565b60206040518083038186803b1580156111e957600080fd5b505afa1580156111fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112219190611770565b161180156112af57508d6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561126357600080fd5b505afa158015611277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129b91906115c2565b60020b8d60020b816112a957fe5b0760020b155b80156112c057508b60020b8d60020b125b95508160010b8460010b12806112ec57508160010b8460010b1480156112ec57508060ff168360ff1611155b156113025783995082975081985080965061130f565b8199508097508398508296505b505060001960ff87161b9150505b8560010b8760010b136113e8578560010b8760010b14156113445760001960ff858103161c165b6000818c6001600160a01b0316635339c2968a6040518263ffffffff1660e01b815260040161137391906118e6565b60206040518083038186803b15801561138b57600080fd5b505afa15801561139f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c39190611770565b1690506113cf81611433565b61ffff169890980197505060019095019460001961131d565b81156113f5576001880397505b8215611402576001880397505b505050505050509392505050565b600061141c8383610cfb565b9050336001600160a01b038216146109e257600080fd5b6000805b82156109e257600019830190921691600101611437565b604080516060810182526000808252602082018190529181019190915290565b600082601f83011261147e578081fd5b813561149161148c82611b21565b611afd565b8181528460208386010111156114a5578283fd5b816020850160208301379081016020019190915292915050565b8051600281900b811461098d57600080fd5b600060a082840312156114e2578081fd5b60405160a0810181811067ffffffffffffffff821117156114ff57fe5b604052905080823561151081611b73565b8152602083013561152081611b73565b602082015260408381013590820152606083013562ffffff8116811461154557600080fd5b606082015261155660808401611562565b60808201525092915050565b803561098d81611b73565b805161ffff8116811461098d57600080fd5b60008060408385031215611591578182fd5b823567ffffffffffffffff8111156115a7578283fd5b6115b38582860161146e565b95602094909401359450505050565b6000602082840312156115d3578081fd5b6115dc826114bf565b9392505050565b600080604083850312156115f5578182fd5b505080516020909101519092909150565b60008060006060848603121561161a578081fd5b8335925060208401359150604084013567ffffffffffffffff81111561163e578182fd5b61164a8682870161146e565b9150509250925092565b600060208284031215611665578081fd5b815167ffffffffffffffff81111561167b578182fd5b8201601f8101841361168b578182fd5b805161169961148c82611b21565b8181528560208385010111156116ad578384fd5b610b0c826020830160208601611b43565b600060a082840312156116cf578081fd5b6115dc83836114d1565b600080600080600080600060e0888a0312156116f3578283fd5b87516116fe81611b73565b965061170c602089016114bf565b955061171a6040890161156d565b94506117286060890161156d565b93506117366080890161156d565b925060a088015160ff8116811461174b578283fd5b60c08901519092508015158114611760578182fd5b8091505092959891949750929550565b600060208284031215611781578081fd5b5051919050565b60008060006060848603121561179c578081fd5b8351925060208401516117ae81611b73565b91506117bc604085016114bf565b90509250925092565b600081518084526117dd816020860160208601611b43565b601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6001600160f81b0319815260609390931b6bffffffffffffffffffffffff191660018401526015830191909152603582015260550190565b6001600160a01b0391909116815260200190565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a0608082018190526000906118db908301846117c5565b979650505050505050565b60019190910b815260200190565b6000602082526115dc60208301846117c5565b602080825260119082015270746f55696e7432345f6f766572666c6f7760781b604082015260600190565b6020808252600e908201526d736c6963655f6f766572666c6f7760901b604082015260600190565b602080825260149082015273746f55696e7432345f6f75744f66426f756e647360601b604082015260600190565b60208082526010908201526f2ab732bc3832b1ba32b21032b93937b960811b604082015260600190565b602080825260159082015274746f416464726573735f6f75744f66426f756e647360581b604082015260600190565b602080825260119082015270736c6963655f6f75744f66426f756e647360781b604082015260600190565b602080825260129082015271746f416464726573735f6f766572666c6f7760701b604082015260600190565b600060808201868352602060808185015281875180845260a0860191508289019350845b81811015611a815784516001600160a01b031683529383019391830191600101611a5c565b505084810360408601528651808252908201925081870190845b81811015611abd57825163ffffffff1685529383019391830191600101611a9b565b5050505060609290920192909252949350505050565b9384526001600160a01b0392909216602084015263ffffffff166040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715611b1957fe5b604052919050565b600067ffffffffffffffff821115611b3557fe5b50601f01601f191660200190565b60005b83811015611b5e578181015183820152602001611b46565b83811115611b6d576000848401525b50505050565b6001600160a01b0381168114611b8857600080fd5b5056fea2646970667358221220f9781e692a78af0d4cf3d953b2910c65f323dcbfa5050a9175ebdcd49f284adb64736f6c63430007060033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1C9C CODESIZE SUB DUP1 PUSH3 0x1C9C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x70 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP3 DUP4 SHL DUP2 AND PUSH1 0x80 MSTORE SWAP2 SHL AND PUSH1 0xA0 MSTORE PUSH3 0xA7 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x6B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x83 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH3 0x8E DUP4 PUSH3 0x53 JUMP JUMPDEST SWAP2 POP PUSH3 0x9E PUSH1 0x20 DUP5 ADD PUSH3 0x53 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0x1BC1 PUSH3 0xDB PUSH1 0x0 CODECOPY DUP1 PUSH2 0x2E0 MSTORE POP DUP1 PUSH2 0x4D7 MSTORE DUP1 PUSH2 0x837 MSTORE DUP1 PUSH2 0x9EF MSTORE POP PUSH2 0x1BC1 PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC45A0155 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xC6A5026A EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xCDCA1753 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x114 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2F80BB1D EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xBD21704A EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x157F JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0xFC CALLDATASIZE PUSH1 0x4 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x157F JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST PUSH2 0x127 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x1606 JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x139 DUP7 PUSH2 0x981 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x179 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH2 0x185 DUP7 PUSH2 0x981 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D9 DUP11 PUSH2 0x992 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x235 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH2 0x302 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP3 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x24A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x277 JUMPI INVALID JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP12 POP SWAP7 DUP3 ADD SWAP7 PUSH1 0x1 SWAP1 SWAP7 ADD SWAP6 DUP12 SWAP3 PUSH2 0x2A4 DUP15 PUSH2 0x9C3 JUMP JUMPDEST ISZERO PUSH2 0x2B9 JUMPI PUSH2 0x2B2 DUP15 PUSH2 0x9CB JUMP JUMPDEST SWAP14 POP PUSH2 0x2C9 JUMP JUMPDEST DUP13 SWAP12 POP POP POP POP POP POP POP POP POP PUSH2 0x2D5 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x1CB JUMP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP5 AND LT SWAP3 DUP5 SWAP3 PUSH2 0x333 SWAP3 SWAP1 PUSH2 0x9E8 JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 EQ ISZERO PUSH2 0x354 JUMPI PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x0 SSTORE JUMPDEST PUSH1 0x0 GAS SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x128ACB08 ADDRESS DUP6 PUSH2 0x377 DUP13 PUSH1 0x40 ADD MLOAD PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x0 SUB DUP13 PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 EQ PUSH2 0x399 JUMPI DUP13 PUSH1 0x80 ADD MLOAD PUSH2 0x3BF JUMP JUMPDEST DUP8 PUSH2 0x3B8 JUMPI PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D25 PUSH2 0x3BF JUMP JUMPDEST PUSH5 0x1000276A4 JUMPDEST DUP14 PUSH1 0x20 ADD MLOAD DUP15 PUSH1 0x60 ADD MLOAD DUP16 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3E0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x458 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x455 SWAP2 DUP2 ADD SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x4C8 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x48B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP GAS DUP3 SUB SWAP5 POP DUP9 PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 EQ ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 SSTORE JUMPDEST PUSH2 0x4B7 DUP2 DUP5 DUP8 PUSH2 0xA3C JUMP JUMPDEST SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x4CE JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP5 AND LT SWAP3 DUP5 SWAP3 PUSH2 0x52A SWAP3 SWAP1 PUSH2 0x9E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 GAS SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x128ACB08 ADDRESS DUP6 PUSH2 0x54F DUP13 PUSH1 0x40 ADD MLOAD PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x80 DUP14 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x56C JUMPI DUP13 PUSH1 0x80 ADD MLOAD PUSH2 0x592 JUMP JUMPDEST DUP8 PUSH2 0x58B JUMPI PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D25 PUSH2 0x592 JUMP JUMPDEST PUSH5 0x1000276A4 JUMPDEST DUP14 PUSH1 0x0 ADD MLOAD DUP15 PUSH1 0x60 ADD MLOAD DUP16 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x62B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x628 SWAP2 DUP2 ADD SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x4C8 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x65E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP GAS DUP3 SUB SWAP5 POP PUSH2 0x4B7 DUP2 DUP5 DUP8 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x67F DUP7 PUSH2 0x981 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6BF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH2 0x6CB DUP7 PUSH2 0x981 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x70B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x71F DUP11 PUSH2 0x992 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x77B PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH2 0x4F9 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP3 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x790 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x7BD JUMPI INVALID JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP12 POP SWAP7 DUP3 ADD SWAP7 PUSH1 0x1 SWAP1 SWAP7 ADD SWAP6 DUP12 SWAP3 PUSH2 0x7EA DUP15 PUSH2 0x9C3 JUMP JUMPDEST ISZERO PUSH2 0x2B9 JUMPI PUSH2 0x7F8 DUP15 PUSH2 0x9CB JUMP JUMPDEST SWAP14 POP POP POP POP POP POP POP POP PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 DUP4 SGT DUP1 PUSH2 0x815 JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x82C DUP5 PUSH2 0x992 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x85E PUSH32 0x0 DUP5 DUP5 DUP5 PUSH2 0xAF6 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 SGT PUSH2 0x88A JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT DUP9 DUP11 PUSH1 0x0 SUB PUSH2 0x8A5 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT DUP10 DUP10 PUSH1 0x0 SUB JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0x8B8 DUP8 DUP8 DUP8 PUSH2 0x9E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x92E SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST POP POP POP POP POP SWAP2 POP SWAP2 POP DUP6 ISZERO PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 REVERT JUMPDEST PUSH1 0x0 SLOAD ISZERO PUSH2 0x96A JUMPI PUSH1 0x0 SLOAD DUP5 EQ PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x17 PUSH1 0x13 NOT SWAP1 SWAP2 ADD DIV JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x9A0 DUP5 DUP3 PUSH2 0xB15 JUMP JUMPDEST SWAP3 POP PUSH2 0x9AD DUP5 PUSH1 0x14 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP PUSH2 0x9BA DUP5 PUSH1 0x17 PUSH2 0xB15 JUMP JUMPDEST SWAP2 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST MLOAD PUSH1 0x42 GT ISZERO SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH2 0x9E2 SWAP1 DUP4 SWAP1 PUSH1 0x17 SWAP1 PUSH1 0x16 NOT ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1E PUSH32 0x0 PUSH2 0xA19 DUP7 DUP7 DUP7 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0xCFB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 LT PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB6 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST POP SWAP4 SWAP7 POP PUSH2 0xACB SWAP5 POP DUP14 SWAP4 POP PUSH2 0xDAC SWAP3 POP POP POP JUMP JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP1 POP PUSH2 0xAE6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP4 DUP4 PUSH2 0xE30 JUMP JUMPDEST SWAP4 POP DUP7 SWAP3 POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0C DUP6 PUSH2 0xB07 DUP7 DUP7 DUP7 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0x1410 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP3 PUSH1 0x14 ADD LT ISZERO PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x14 ADD DUP4 MLOAD LT ISZERO PUSH2 0xB67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x19B2 JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP3 PUSH1 0x3 ADD LT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x1907 JUMP JUMPDEST DUP2 PUSH1 0x3 ADD DUP4 MLOAD LT ISZERO PUSH2 0xBC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x195A JUMP JUMPDEST POP ADD PUSH1 0x3 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP3 PUSH1 0x1F ADD LT ISZERO PUSH2 0xBEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x1932 JUMP JUMPDEST DUP3 DUP3 DUP5 ADD LT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x1932 JUMP JUMPDEST DUP2 DUP4 ADD DUP5 MLOAD LT ISZERO PUSH2 0xC33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0xC8B JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xC73 JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xCAD PUSH2 0x144E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0xCCB JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0xD23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD45 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH2 0xD8D SWAP4 SWAP3 SWAP1 SWAP2 PUSH32 0xE34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54 SWAP2 ADD PUSH2 0x182C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x60 EQ PUSH2 0xE0F JUMPI PUSH1 0x44 DUP5 MLOAD LT ISZERO PUSH2 0xDDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x1988 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SWAP4 POP DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDF6 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xE23 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x8 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP12 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xEBD JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP1 POP PUSH1 0x0 PUSH2 0x100 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF3B SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP13 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xF49 JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xF54 JUMPI INVALID JUMPDEST SMOD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP13 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xFDA JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP1 POP PUSH1 0x0 PUSH2 0x100 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1020 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1034 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1058 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x1066 JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x1071 JUMPI INVALID JUMPDEST SMOD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP16 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5339C296 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10FA SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST AND GT DUP1 ISZERO PUSH2 0x1188 JUMPI POP DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1150 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1174 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP13 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x1182 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1199 JUMPI POP DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND SGT JUMPDEST SWAP5 POP PUSH1 0x0 DUP4 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP16 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5339C296 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D1 SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1221 SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST AND GT DUP1 ISZERO PUSH2 0x12AF JUMPI POP DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129B SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x12A9 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x12C0 JUMPI POP DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND SLT JUMPDEST SWAP6 POP DUP2 PUSH1 0x1 SIGNEXTEND DUP5 PUSH1 0x1 SIGNEXTEND SLT DUP1 PUSH2 0x12EC JUMPI POP DUP2 PUSH1 0x1 SIGNEXTEND DUP5 PUSH1 0x1 SIGNEXTEND EQ DUP1 ISZERO PUSH2 0x12EC JUMPI POP DUP1 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1302 JUMPI DUP4 SWAP10 POP DUP3 SWAP8 POP DUP2 SWAP9 POP DUP1 SWAP7 POP PUSH2 0x130F JUMP JUMPDEST DUP2 SWAP10 POP DUP1 SWAP8 POP DUP4 SWAP9 POP DUP3 SWAP7 POP JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0xFF DUP8 AND SHL SWAP2 POP POP JUMPDEST DUP6 PUSH1 0x1 SIGNEXTEND DUP8 PUSH1 0x1 SIGNEXTEND SGT PUSH2 0x13E8 JUMPI DUP6 PUSH1 0x1 SIGNEXTEND DUP8 PUSH1 0x1 SIGNEXTEND EQ ISZERO PUSH2 0x1344 JUMPI PUSH1 0x0 NOT PUSH1 0xFF DUP6 DUP2 SUB AND SHR AND JUMPDEST PUSH1 0x0 DUP2 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5339C296 DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1373 SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x139F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C3 SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST AND SWAP1 POP PUSH2 0x13CF DUP2 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP9 SWAP1 SWAP9 ADD SWAP8 POP POP PUSH1 0x1 SWAP1 SWAP6 ADD SWAP5 PUSH1 0x0 NOT PUSH2 0x131D JUMP JUMPDEST DUP2 ISZERO PUSH2 0x13F5 JUMPI PUSH1 0x1 DUP9 SUB SWAP8 POP JUMPDEST DUP3 ISZERO PUSH2 0x1402 JUMPI PUSH1 0x1 DUP9 SUB SWAP8 POP JUMPDEST POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141C DUP4 DUP4 PUSH2 0xCFB JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 NOT DUP4 ADD SWAP1 SWAP3 AND SWAP2 PUSH1 0x1 ADD PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x147E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1491 PUSH2 0x148C DUP3 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1AFD JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x14A5 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x14FF JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 CALLDATALOAD PUSH2 0x1510 DUP2 PUSH2 0x1B73 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1520 DUP2 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1556 PUSH1 0x80 DUP5 ADD PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x98D DUP2 PUSH2 0x1B73 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1591 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A7 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x15B3 DUP6 DUP3 DUP7 ADD PUSH2 0x146E JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x15DC DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F5 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x161A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x163E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x164A DUP7 DUP3 DUP8 ADD PUSH2 0x146E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1665 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x167B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x168B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1699 PUSH2 0x148C DUP3 PUSH2 0x1B21 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x16AD JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xB0C DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x15DC DUP4 DUP4 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x16F3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x16FE DUP2 PUSH2 0x1B73 JUMP JUMPDEST SWAP7 POP PUSH2 0x170C PUSH1 0x20 DUP10 ADD PUSH2 0x14BF JUMP JUMPDEST SWAP6 POP PUSH2 0x171A PUSH1 0x40 DUP10 ADD PUSH2 0x156D JUMP JUMPDEST SWAP5 POP PUSH2 0x1728 PUSH1 0x60 DUP10 ADD PUSH2 0x156D JUMP JUMPDEST SWAP4 POP PUSH2 0x1736 PUSH1 0x80 DUP10 ADD PUSH2 0x156D JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x174B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1760 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1781 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x179C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0x17AE DUP2 PUSH2 0x1B73 JUMP JUMPDEST SWAP2 POP PUSH2 0x17BC PUSH1 0x40 DUP6 ADD PUSH2 0x14BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x17DD DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 SWAP4 DUP5 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0xE8 SWAP4 SWAP1 SWAP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT AND PUSH1 0x14 DUP3 ADD MSTORE SWAP3 SHL AND PUSH1 0x17 DUP3 ADD MSTORE PUSH1 0x2B ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x18DB SWAP1 DUP4 ADD DUP5 PUSH2 0x17C5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x15DC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x746F55696E7432345F6F766572666C6F77 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x746F55696E7432345F6F75744F66426F756E6473 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x2AB732BC3832B1BA32B21032B93937B9 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x746F416464726573735F6F75744F66426F756E6473 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x746F416464726573735F6F766572666C6F77 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD DUP7 DUP4 MSTORE PUSH1 0x20 PUSH1 0x80 DUP2 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xA0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A81 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1A5C JUMP JUMPDEST POP POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE DUP7 MLOAD DUP1 DUP3 MSTORE SWAP1 DUP3 ADD SWAP3 POP DUP2 DUP8 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1ABD JUMPI DUP3 MLOAD PUSH4 0xFFFFFFFF AND DUP6 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1A9B JUMP JUMPDEST POP POP POP POP PUSH1 0x60 SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1B19 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B35 JUMPI INVALID JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B5E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B46 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1B6D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 PUSH25 0x1E692A78AF0D4CF3D953B2910C65F323DCBFA5050A9175EBDC 0xD4 SWAP16 0x28 0x4A 0xDB PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "63769:9333:0:-:0;;;64095:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;9742:18:0;;;;;;;;9770:14;;;;;63769:9333;;14:179:1;95:13;;-1:-1:-1;;;;;137:31:1;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:307::-;;;338:2;326:9;317:7;313:23;309:32;306:2;;;359:6;351;344:22;306:2;387:42;419:9;387:42;:::i;:::-;377:52;;448:51;495:2;484:9;480:18;448:51;:::i;:::-;438:61;;296:209;;;;;:::o;:::-;63769:9333:0;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:13980:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "68:431:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "117:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "126:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "133:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "119:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "119:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "119:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "96:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "104:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "92:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "92:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "111:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "88:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "81:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "81:35:1"
															},
															"nodeType": "YulIf",
															"src": "78:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "150:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "173:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "160:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "154:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "189:64:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "249:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes",
																			"nodeType": "YulIdentifier",
																			"src": "219:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "219:33:1"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "204:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "204:49:1"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "193:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "269:7:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "278:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "262:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "262:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "262:19:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "329:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "338:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "345:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "331:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "331:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "304:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "312:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "300:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "300:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "317:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:26:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "324:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "293:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "293:35:1"
															},
															"nodeType": "YulIf",
															"src": "290:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "379:7:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "388:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "375:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "399:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "407:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "395:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "395:17:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "414:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "362:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "362:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "441:7:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "450:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "437:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "437:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "455:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "433:27:1"
																	},
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "462:5:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "426:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "426:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "477:16:1",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "486:7:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "477:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "50:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "58:5:1",
														"type": ""
													}
												],
												"src": "14:485:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "564:106:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "574:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "589:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "583:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "583:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "574:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "648:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "657:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "660:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "618:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "636:1:1",
																						"type": "",
																						"value": "2"
																					},
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "639:5:1"
																					}
																				],
																				"functionName": {
																					"name": "signextend",
																					"nodeType": "YulIdentifier",
																					"src": "625:10:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "625:20:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "615:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "615:31:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "608:39:1"
															},
															"nodeType": "YulIf",
															"src": "605:2:1"
														}
													]
												},
												"name": "abi_decode_t_int24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "543:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "554:5:1",
														"type": ""
													}
												],
												"src": "504:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "762:868:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "806:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "815:5:1"
																				},
																				{
																					"name": "value",
																					"nodeType": "YulIdentifier",
																					"src": "822:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "808:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "808:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "808:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "783:3:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "788:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "779:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "779:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "800:4:1",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "775:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "775:30:1"
															},
															"nodeType": "YulIf",
															"src": "772:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "839:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "859:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "853:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "853:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "843:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "871:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "893:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "901:4:1",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "889:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "889:17:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "875:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "981:13:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "983:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "983:9:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "983:9:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "924:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "936:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "921:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "921:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "960:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "972:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "957:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "957:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "918:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:62:1"
															},
															"nodeType": "YulIf",
															"src": "915:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1010:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "1014:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1003:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1003:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1003:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1034:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1043:6:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1034:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1058:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1086:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1073:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1073:23:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1062:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1132:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1105:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1105:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1105:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "1156:6:1"
																	},
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "1164:7:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1149:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1149:23:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1149:23:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1181:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1213:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1224:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1209:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1209:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1196:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1196:32:1"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "1185:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "1264:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1237:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1237:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1237:35:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1292:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1300:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1288:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1288:15:1"
																	},
																	{
																		"name": "value_2",
																		"nodeType": "YulIdentifier",
																		"src": "1305:7:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1281:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1281:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1281:32:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1333:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1341:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1329:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1329:15:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1363:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1374:2:1",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1359:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1359:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1346:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1346:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1322:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1322:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1322:57:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1388:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1420:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1431:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1416:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1416:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1403:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:32:1"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "1392:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1491:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1500:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1503:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1493:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1493:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1493:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_3",
																				"nodeType": "YulIdentifier",
																				"src": "1457:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_3",
																						"nodeType": "YulIdentifier",
																						"src": "1470:7:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1479:8:1",
																						"type": "",
																						"value": "0xffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1466:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1466:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1454:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1454:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1447:43:1"
															},
															"nodeType": "YulIf",
															"src": "1444:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1527:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1535:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1523:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1523:15:1"
																	},
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "1540:7:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1516:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1516:32:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1568:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1576:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1564:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1564:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1607:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1618:3:1",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1603:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1603:19:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint160",
																			"nodeType": "YulIdentifier",
																			"src": "1582:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1582:41:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1557:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1557:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1557:67:1"
														}
													]
												},
												"name": "abi_decode_t_struct$_QuoteExactInputSingleParams",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "733:9:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "744:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "752:5:1",
														"type": ""
													}
												],
												"src": "675:955:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1686:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1696:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1718:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1705:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1705:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1696:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1761:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1734:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1734:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1734:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1665:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1676:5:1",
														"type": ""
													}
												],
												"src": "1635:138:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1839:104:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1849:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1864:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1858:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1849:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1921:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1930:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1933:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1923:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1923:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1923:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1893:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1904:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1911:6:1",
																						"type": "",
																						"value": "0xffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1900:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1900:18:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1890:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1890:29:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1883:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1883:37:1"
															},
															"nodeType": "YulIf",
															"src": "1880:2:1"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1818:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1829:5:1",
														"type": ""
													}
												],
												"src": "1778:165:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2044:314:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2090:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2099:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2107:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2092:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2092:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2092:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2065:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2074:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2061:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2061:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2086:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2057:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2057:32:1"
															},
															"nodeType": "YulIf",
															"src": "2054:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2125:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2152:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2139:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2139:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2129:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2205:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2214:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2222:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2207:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2207:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2207:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2177:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2185:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2174:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2174:30:1"
															},
															"nodeType": "YulIf",
															"src": "2171:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2240:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2273:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2284:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2269:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2293:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2250:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2250:51:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2240:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2310:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2337:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2348:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2333:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2333:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2320:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2310:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2002:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2013:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2025:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2033:6:1",
														"type": ""
													}
												],
												"src": "1948:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2442:137:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2488:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2497:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2505:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2490:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2490:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2490:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2463:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2472:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2459:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2459:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2484:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2455:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2455:32:1"
															},
															"nodeType": "YulIf",
															"src": "2452:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2523:50:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2563:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_int24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2533:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2533:40:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2523:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2408:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2419:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2431:6:1",
														"type": ""
													}
												],
												"src": "2363:216:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2680:157:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2726:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2735:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2743:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2728:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2728:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2728:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2701:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2710:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2697:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2697:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2722:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2693:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2693:32:1"
															},
															"nodeType": "YulIf",
															"src": "2690:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2761:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2777:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2771:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2761:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2796:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2816:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2827:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2812:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2812:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2806:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2806:25:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2796:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2638:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2649:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2661:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2669:6:1",
														"type": ""
													}
												],
												"src": "2584:253:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2953:365:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2999:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "3008:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "3016:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3001:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3001:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3001:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2974:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2983:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2970:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2970:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2995:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2966:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:32:1"
															},
															"nodeType": "YulIf",
															"src": "2963:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3034:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3057:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3044:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3044:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3034:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "3076:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3103:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3114:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3099:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3086:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3086:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "3076:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3127:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3158:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3169:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3154:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3154:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3141:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3141:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3131:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3216:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "3225:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "3233:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3218:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3218:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3218:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3188:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3196:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3185:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3185:30:1"
															},
															"nodeType": "YulIf",
															"src": "3182:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3251:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3284:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3295:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3280:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3280:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3304:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "3261:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3261:51:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "3251:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_int256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2903:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2914:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2926:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2934:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2942:6:1",
														"type": ""
													}
												],
												"src": "2842:476:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3414:585:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3460:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3469:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3477:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3462:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3462:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3462:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3435:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3444:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3431:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3431:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3456:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3427:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3427:32:1"
															},
															"nodeType": "YulIf",
															"src": "3424:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3495:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3515:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3509:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3509:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "3499:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3568:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3577:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3585:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3570:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3570:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3570:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3540:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3548:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3537:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3537:30:1"
															},
															"nodeType": "YulIf",
															"src": "3534:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3603:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3617:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3628:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3613:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3613:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3607:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3683:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3692:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3700:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3685:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3685:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3685:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3662:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3666:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3658:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3658:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3673:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3654:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3654:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3647:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3647:35:1"
															},
															"nodeType": "YulIf",
															"src": "3644:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3718:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3734:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3728:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3728:9:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "3722:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3746:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "3804:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes",
																			"nodeType": "YulIdentifier",
																			"src": "3774:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3774:33:1"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "3759:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3759:49:1"
															},
															"variables": [
																{
																	"name": "array",
																	"nodeType": "YulTypedName",
																	"src": "3750:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "3824:5:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3831:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3817:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3817:17:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3817:17:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3880:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3889:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3897:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3882:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3882:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3882:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3857:2:1"
																					},
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "3861:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3853:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3853:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3866:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3849:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3871:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3846:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3846:33:1"
															},
															"nodeType": "YulIf",
															"src": "3843:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3941:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3945:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3937:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3937:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nodeType": "YulIdentifier",
																				"src": "3954:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3961:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3950:14:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3966:2:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3915:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3915:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3915:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3978:15:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "3988:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3978:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3380:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3391:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3403:6:1",
														"type": ""
													}
												],
												"src": "3323:676:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4118:166:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4165:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4174:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4182:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4167:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4167:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4139:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4148:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4135:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4135:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4160:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4131:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4131:33:1"
															},
															"nodeType": "YulIf",
															"src": "4128:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4200:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4259:9:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4270:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_struct$_QuoteExactInputSingleParams",
																	"nodeType": "YulIdentifier",
																	"src": "4210:48:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4210:68:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4200:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4084:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4095:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4107:6:1",
														"type": ""
													}
												],
												"src": "4004:280:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4404:166:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4451:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4460:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "4468:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4453:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4453:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4453:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4425:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4434:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4421:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4446:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4417:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4417:33:1"
															},
															"nodeType": "YulIf",
															"src": "4414:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4486:78:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4545:9:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4556:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_struct$_QuoteExactInputSingleParams",
																	"nodeType": "YulIdentifier",
																	"src": "4496:48:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4496:68:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4486:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4370:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4381:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4393:6:1",
														"type": ""
													}
												],
												"src": "4289:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4748:772:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4795:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4804:6:1"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "4812:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4797:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4797:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4797:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4769:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4778:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4765:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4765:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4790:3:1",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4761:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4761:33:1"
															},
															"nodeType": "YulIf",
															"src": "4758:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4830:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4849:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4843:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4843:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "4834:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4895:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "4868:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4868:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4868:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4910:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4920:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4910:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4934:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4978:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4989:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4974:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_int24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "4944:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4944:49:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4934:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5002:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5047:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5058:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5043:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5043:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint16_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5012:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5012:50:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5002:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5071:60:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5116:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5127:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5112:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5112:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint16_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5081:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5081:50:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5071:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5140:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5185:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5196:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5181:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_uint16_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "5150:30:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5150:51:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5140:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5210:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5235:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5246:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5231:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5231:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5225:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5225:26:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "5214:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5303:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value5",
																					"nodeType": "YulIdentifier",
																					"src": "5312:6:1"
																				},
																				{
																					"name": "value5",
																					"nodeType": "YulIdentifier",
																					"src": "5320:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5305:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5305:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5305:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "5273:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nodeType": "YulIdentifier",
																						"src": "5286:7:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5295:4:1",
																						"type": "",
																						"value": "0xff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "5282:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5282:18:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5270:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5270:31:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5263:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5263:39:1"
															},
															"nodeType": "YulIf",
															"src": "5260:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5338:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "5348:7:1"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nodeType": "YulIdentifier",
																	"src": "5338:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5364:41:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5389:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5400:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5385:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5385:19:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5379:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5379:26:1"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "5368:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5462:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value6",
																					"nodeType": "YulIdentifier",
																					"src": "5471:6:1"
																				},
																				{
																					"name": "value6",
																					"nodeType": "YulIdentifier",
																					"src": "5479:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5464:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5464:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5464:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nodeType": "YulIdentifier",
																				"src": "5427:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value_2",
																								"nodeType": "YulIdentifier",
																								"src": "5450:7:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "5443:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5443:15:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5436:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5436:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "5424:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5424:36:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5417:44:1"
															},
															"nodeType": "YulIf",
															"src": "5414:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5497:17:1",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "5507:7:1"
															},
															"variableNames": [
																{
																	"name": "value6",
																	"nodeType": "YulIdentifier",
																	"src": "5497:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4666:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4677:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4689:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4697:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4705:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4713:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4721:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "4729:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "4737:6:1",
														"type": ""
													}
												],
												"src": "4575:945:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5606:113:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5652:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5661:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "5669:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5654:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5654:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5654:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5627:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5636:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5623:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5623:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5648:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5619:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:32:1"
															},
															"nodeType": "YulIf",
															"src": "5616:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5687:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5703:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5697:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5697:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5687:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5572:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5583:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5595:6:1",
														"type": ""
													}
												],
												"src": "5525:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5837:294:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5883:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "5892:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "5900:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5885:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5885:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5885:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5858:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5867:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5854:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5854:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5879:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5850:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5850:32:1"
															},
															"nodeType": "YulIf",
															"src": "5847:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5918:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5934:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5928:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5928:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5918:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5953:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5976:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5987:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5972:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5972:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5966:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5966:25:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "5957:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6027:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6000:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6000:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6000:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6042:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6052:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6042:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6066:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6110:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6121:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6106:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6106:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_int24_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "6076:29:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6076:49:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "6066:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint160t_int24_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5787:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5798:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5810:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5818:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5826:6:1",
														"type": ""
													}
												],
												"src": "5724:407:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6187:208:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6197:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6217:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6211:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6211:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6201:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6239:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6244:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6232:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6232:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "6286:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6293:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6282:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6282:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6304:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6309:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6300:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6300:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6316:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "6260:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6260:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6260:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6332:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6347:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "6360:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6368:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "6356:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6356:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6377:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "6373:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6373:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "6352:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6352:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6343:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6343:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6384:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6339:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6339:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6332:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6164:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6171:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6179:3:1",
														"type": ""
													}
												],
												"src": "6136:259:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6573:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6583:41:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6597:26:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "6593:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6593:31:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6587:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6640:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6653:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "6657:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6649:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6649:15:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6666:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6645:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6645:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6633:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6633:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6633:37:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6690:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6695:2:1",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6686:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6686:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6708:3:1",
																						"type": "",
																						"value": "232"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "6713:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6704:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6704:16:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6726:3:1",
																						"type": "",
																						"value": "232"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6731:8:1",
																						"type": "",
																						"value": "16777215"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6722:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6722:18:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6700:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6700:41:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6679:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6679:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6679:63:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6762:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6767:2:1",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6758:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6758:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6780:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "6784:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6776:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6776:15:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "6793:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "6772:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6772:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6751:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6751:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6751:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6806:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6817:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6822:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6813:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6813:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6806:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint24_t_address__to_t_address_t_uint24_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6533:3:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "6538:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6546:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6554:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6565:3:1",
														"type": ""
													}
												],
												"src": "6400:431:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7112:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7129:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7138:3:1",
																				"type": "",
																				"value": "248"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7143:3:1",
																				"type": "",
																				"value": "255"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7134:13:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7122:26:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7122:26:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7168:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7173:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7164:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7164:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7185:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "7189:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "7181:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7181:15:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7202:26:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "7198:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7198:31:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7177:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7177:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7157:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7157:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7157:74:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7251:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7256:2:1",
																				"type": "",
																				"value": "21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7247:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7247:12:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "7261:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7240:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7240:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7240:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7288:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7293:2:1",
																				"type": "",
																				"value": "53"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7284:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7284:12:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "7298:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7277:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7277:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7277:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7314:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7325:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7330:2:1",
																		"type": "",
																		"value": "85"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7321:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7321:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7314:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7072:3:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7077:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7085:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7093:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7104:3:1",
														"type": ""
													}
												],
												"src": "6836:503:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7445:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7455:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7467:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7478:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7463:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7463:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7455:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7497:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7512:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7528:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "7533:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "7524:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7524:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "7537:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "7520:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7520:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7508:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7508:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7490:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7490:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7490:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7414:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7425:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7436:4:1",
														"type": ""
													}
												],
												"src": "7344:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7707:233:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7717:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7729:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7740:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7725:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7725:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7717:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7752:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7770:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7775:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "7766:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7766:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7779:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "7762:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7762:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7756:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7797:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "7812:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7820:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7808:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7808:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7790:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7790:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7844:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7855:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7840:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "7864:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "7872:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7860:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7860:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7833:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7833:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7833:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7896:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7907:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7892:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7892:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "7916:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7924:8:1",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "7912:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7912:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7885:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7885:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7885:49:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7660:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7671:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7679:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7687:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7698:4:1",
														"type": ""
													}
												],
												"src": "7552:388:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8168:347:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8178:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8196:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8201:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "8192:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8192:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8205:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "8188:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8188:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "8182:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8223:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8238:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8246:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8234:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8216:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8216:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8216:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8270:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8281:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8266:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8266:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "8300:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "8293:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8293:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "8286:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8286:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8259:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8259:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8259:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8329:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8340:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8325:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8325:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "8345:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8318:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8318:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8318:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8372:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8383:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8368:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8368:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "8392:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "8400:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8388:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8388:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8361:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8361:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8361:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8424:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8435:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8420:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8420:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8441:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8413:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8413:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8413:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8454:55:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "8481:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8493:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8504:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8489:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8489:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8462:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8462:47:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8454:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__to_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8105:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "8116:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8124:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8132:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8140:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8148:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8159:4:1",
														"type": ""
													}
												],
												"src": "7945:570:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8617:91:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8627:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8639:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8650:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8635:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8635:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8627:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8669:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8691:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "8694:6:1"
																			}
																		],
																		"functionName": {
																			"name": "signextend",
																			"nodeType": "YulIdentifier",
																			"src": "8680:10:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8680:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8662:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8662:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8662:40:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_int16__to_t_int16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8586:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8597:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8608:4:1",
														"type": ""
													}
												],
												"src": "8520:188:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8834:100:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8851:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8862:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8844:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8844:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8844:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8874:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8901:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8913:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8924:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8909:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8882:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8882:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8874:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8803:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8814:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8825:4:1",
														"type": ""
													}
												],
												"src": "8713:221:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9113:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9130:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9141:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9123:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9123:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9164:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9175:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9160:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9160:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9180:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9153:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9153:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9153:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9203:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9214:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9199:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9199:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9219:19:1",
																		"type": "",
																		"value": "toUint24_overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9192:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9192:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9192:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9248:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9260:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9271:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9256:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9248:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_428a8ba368fc474210479d5009a3c2ddaf9d762393b1b3cd3cf1b440d48791c5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9090:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9104:4:1",
														"type": ""
													}
												],
												"src": "8939:341:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9459:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9476:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9487:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9469:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9469:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9469:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9510:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9521:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9506:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9526:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9499:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9499:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9499:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9549:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9560:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9545:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9545:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9565:16:1",
																		"type": "",
																		"value": "slice_overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9538:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9538:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9538:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9591:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9603:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9614:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9599:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9599:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9591:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9436:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9450:4:1",
														"type": ""
													}
												],
												"src": "9285:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9802:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9819:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9830:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9812:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9812:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9812:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9853:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9864:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9849:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9869:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9842:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9842:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9892:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9903:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9888:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9888:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9908:22:1",
																		"type": "",
																		"value": "toUint24_outOfBounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9881:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9881:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9881:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9940:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9952:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9963:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9948:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9948:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9940:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_92c5fac6e5cb4f75ffccd9c8f373ae2e2c333a8b9c2fdc616c52c36fa31575dc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9779:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9793:4:1",
														"type": ""
													}
												],
												"src": "9628:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10151:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10168:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10179:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10161:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10161:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10161:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10202:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10213:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10198:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10198:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10218:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10191:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10191:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10241:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10252:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10237:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10237:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10257:18:1",
																		"type": "",
																		"value": "Unexpected error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10230:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10230:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10230:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10285:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10297:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10308:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10293:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10293:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10285:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10128:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10142:4:1",
														"type": ""
													}
												],
												"src": "9977:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10496:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10513:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10524:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10506:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10506:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10506:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10547:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10558:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10543:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10543:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10563:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10536:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10536:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10536:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10586:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10597:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10582:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10582:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10602:23:1",
																		"type": "",
																		"value": "toAddress_outOfBounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10575:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10575:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10575:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10635:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10647:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10658:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10643:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10643:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10635:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10473:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10487:4:1",
														"type": ""
													}
												],
												"src": "10322:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10846:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10863:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10874:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10856:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10856:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10856:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10897:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10908:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10893:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10893:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10913:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10886:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10886:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10886:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10936:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10947:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10932:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10932:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10952:19:1",
																		"type": "",
																		"value": "slice_outOfBounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10925:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10925:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10925:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10981:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10993:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11004:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10989:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10989:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10981:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10823:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10837:4:1",
														"type": ""
													}
												],
												"src": "10672:341:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11192:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11209:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11220:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11202:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11202:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11202:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11243:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11254:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11239:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11259:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11232:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11232:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11282:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11293:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11278:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11278:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11298:20:1",
																		"type": "",
																		"value": "toAddress_overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11271:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11271:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11271:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11328:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11340:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11351:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11336:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11336:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11328:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f71efb0937d5d9d75bbebe9d7207dad811fd47ced903ea9404d5e8d77eb17a95__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11169:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11183:4:1",
														"type": ""
													}
												],
												"src": "11018:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11648:1059:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11658:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11676:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11687:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11672:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11672:19:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11662:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11707:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11718:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11700:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11700:25:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11734:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "11744:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "11738:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11766:9:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "11777:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11762:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11762:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11782:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11755:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11755:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11755:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11795:17:1",
															"value": {
																"name": "tail_1",
																"nodeType": "YulIdentifier",
																"src": "11806:6:1"
															},
															"variables": [
																{
																	"name": "pos",
																	"nodeType": "YulTypedName",
																	"src": "11799:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11821:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11841:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "11835:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11835:13:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "11825:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11864:6:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11872:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11857:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11857:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11857:22:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11888:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11899:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11910:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11895:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11895:19:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "11888:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11923:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11941:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "11949:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11937:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11937:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "11927:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11961:13:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "11970:4:1"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "11965:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12032:146:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "12053:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr",
																									"nodeType": "YulIdentifier",
																									"src": "12068:6:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "12062:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12062:13:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "12085:3:1",
																											"type": "",
																											"value": "160"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "12090:1:1",
																											"type": "",
																											"value": "1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "12081:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "12081:11:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "12094:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "12077:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12077:19:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "12058:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12058:39:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12046:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12046:52:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12046:52:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12111:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "12122:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "12127:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12118:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12118:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12111:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12143:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "12157:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "12165:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12153:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12153:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "12143:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "11994:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "11997:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "11991:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11991:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12005:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12007:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "12016:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12019:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12012:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12012:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "12007:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "11987:3:1",
																"statements": []
															},
															"src": "11983:195:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12198:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12209:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12194:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12194:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "12218:3:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12223:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12214:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12214:19:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12187:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12187:47:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12243:16:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "12256:3:1"
															},
															"variables": [
																{
																	"name": "pos_1",
																	"nodeType": "YulTypedName",
																	"src": "12247:5:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12268:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12290:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "12284:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12284:13:1"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nodeType": "YulTypedName",
																	"src": "12272:8:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12313:3:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "12318:8:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12306:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12306:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12306:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12336:21:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "12349:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12354:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12345:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12345:12:1"
															},
															"variableNames": [
																{
																	"name": "pos_1",
																	"nodeType": "YulIdentifier",
																	"src": "12336:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12366:31:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12386:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "12394:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12382:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12382:15:1"
															},
															"variables": [
																{
																	"name": "srcPtr_1",
																	"nodeType": "YulTypedName",
																	"src": "12370:8:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12406:15:1",
															"value": {
																"name": "tail",
																"nodeType": "YulIdentifier",
																"src": "12417:4:1"
															},
															"variables": [
																{
																	"name": "i_1",
																	"nodeType": "YulTypedName",
																	"src": "12410:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12487:149:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos_1",
																					"nodeType": "YulIdentifier",
																					"src": "12508:5:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "srcPtr_1",
																									"nodeType": "YulIdentifier",
																									"src": "12525:8:1"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nodeType": "YulIdentifier",
																								"src": "12519:5:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "12519:15:1"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "12536:10:1",
																							"type": "",
																							"value": "0xffffffff"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "12515:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "12515:32:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "12501:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12501:47:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12501:47:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12561:23:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos_1",
																					"nodeType": "YulIdentifier",
																					"src": "12574:5:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "12581:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12570:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12570:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos_1",
																				"nodeType": "YulIdentifier",
																				"src": "12561:5:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "12597:29:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr_1",
																					"nodeType": "YulIdentifier",
																					"src": "12613:8:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "12623:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12609:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12609:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr_1",
																				"nodeType": "YulIdentifier",
																				"src": "12597:8:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i_1",
																		"nodeType": "YulIdentifier",
																		"src": "12441:3:1"
																	},
																	{
																		"name": "length_1",
																		"nodeType": "YulIdentifier",
																		"src": "12446:8:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "12438:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12438:17:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "12456:22:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "12458:18:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i_1",
																					"nodeType": "YulIdentifier",
																					"src": "12469:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12474:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "12465:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12465:11:1"
																		},
																		"variableNames": [
																			{
																				"name": "i_1",
																				"nodeType": "YulIdentifier",
																				"src": "12458:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "12434:3:1",
																"statements": []
															},
															"src": "12430:206:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12645:13:1",
															"value": {
																"name": "pos_1",
																"nodeType": "YulIdentifier",
																"src": "12653:5:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12645:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12678:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12689:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12674:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12674:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "12694:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12667:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12667:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12667:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_array$_t_uint160_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint256__to_t_uint256_t_array$_t_uint160_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11593:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "11604:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11612:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11620:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11628:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11639:4:1",
														"type": ""
													}
												],
												"src": "11365:1342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12895:249:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12905:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12917:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12928:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12913:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12913:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12905:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12948:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12959:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12941:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12941:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12941:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12986:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12997:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12982:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12982:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13006:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13022:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13027:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "13018:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13018:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13031:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "13014:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13014:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13002:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12975:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12975:60:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12975:60:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13055:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13066:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13051:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13051:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "13075:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13083:10:1",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13071:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13071:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13044:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13044:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13044:51:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13115:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13126:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13111:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13111:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13131:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13104:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13104:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13104:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint160_t_uint32_t_uint256__to_t_uint256_t_uint160_t_uint32_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12840:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12851:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12859:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12867:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12875:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12886:4:1",
														"type": ""
													}
												],
												"src": "12712:432:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13193:198:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13203:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13219:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13213:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13213:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "13203:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13231:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "13253:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "13261:4:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13249:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13249:17:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "13235:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13341:13:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "13343:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13343:9:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13343:9:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "13284:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13296:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13281:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13281:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "13320:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13332:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "13317:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13317:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "13278:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13278:62:1"
															},
															"nodeType": "YulIf",
															"src": "13275:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13370:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "13374:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13363:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13363:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13363:22:1"
														}
													]
												},
												"name": "allocateMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "13173:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13182:6:1",
														"type": ""
													}
												],
												"src": "13149:242:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13455:122:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13499:13:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "13501:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13501:9:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13501:9:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13471:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13479:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13468:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13468:30:1"
															},
															"nodeType": "YulIf",
															"src": "13465:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13521:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "13541:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13549:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "13537:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13537:17:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "13560:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "13556:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13556:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13533:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13533:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13566:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13529:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13529:42:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13521:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13435:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "13446:4:1",
														"type": ""
													}
												],
												"src": "13396:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13635:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13645:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13654:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "13649:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13714:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13739:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "13744:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13735:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13735:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "13758:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "13763:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "13754:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "13754:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13748:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13748:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13728:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13728:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13728:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13675:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13678:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13672:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13672:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "13686:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "13688:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "13697:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13700:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "13693:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13693:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "13688:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "13668:3:1",
																"statements": []
															},
															"src": "13664:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13803:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "13816:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "13821:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "13812:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13812:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13830:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "13805:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13805:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13805:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "13792:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13795:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13789:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13789:13:1"
															},
															"nodeType": "YulIf",
															"src": "13786:2:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "13613:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "13618:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13623:6:1",
														"type": ""
													}
												],
												"src": "13582:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13892:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13956:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13965:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13968:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13958:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13958:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13958:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13915:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "13926:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13941:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "13946:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "13937:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "13937:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "13950:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "13933:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "13933:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "13922:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13922:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "13912:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13912:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "13905:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13905:50:1"
															},
															"nodeType": "YulIf",
															"src": "13902:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13881:5:1",
														"type": ""
													}
												],
												"src": "13845:133:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let array_1 := allocateMemory(array_allocation_size_t_bytes(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), array)\n        array := array_1\n    }\n    function abi_decode_t_int24_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, signextend(2, value))) { revert(0, 0) }\n    }\n    function abi_decode_t_struct$_QuoteExactInputSingleParams(headStart, end) -> value\n    {\n        if slt(sub(end, headStart), 0xa0) { revert(value, value) }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, 0xa0)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n        value := memPtr\n        let value_1 := calldataload(headStart)\n        validator_revert_t_address(value_1)\n        mstore(memPtr, value_1)\n        let value_2 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_2)\n        mstore(add(memPtr, 32), value_2)\n        mstore(add(memPtr, 64), calldataload(add(headStart, 64)))\n        let value_3 := calldataload(add(headStart, 96))\n        if iszero(eq(value_3, and(value_3, 0xffffff))) { revert(0, 0) }\n        mstore(add(memPtr, 96), value_3)\n        mstore(add(memPtr, 128), abi_decode_t_uint160(add(headStart, 128)))\n    }\n    function abi_decode_t_uint160(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n    function abi_decode_t_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_int24_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_int24_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_int256t_int256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_int256t_int256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        value2 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _2 := mload(_1)\n        let array := allocateMemory(array_allocation_size_t_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(value0, value0) }\n        copy_memory_to_memory(add(_1, 32), add(array, 32), _2)\n        value0 := array\n    }\n    function abi_decode_tuple_t_struct$_QuoteExactInputSingleParams_$416_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value0, value0) }\n        value0 := abi_decode_t_struct$_QuoteExactInputSingleParams(headStart, dataEnd)\n    }\n    function abi_decode_tuple_t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value0, value0) }\n        value0 := abi_decode_t_struct$_QuoteExactInputSingleParams(headStart, dataEnd)\n    }\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value4, value4) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := abi_decode_t_int24_fromMemory(add(headStart, 32))\n        value2 := abi_decode_t_uint16_fromMemory(add(headStart, 64))\n        value3 := abi_decode_t_uint16_fromMemory(add(headStart, 96))\n        value4 := abi_decode_t_uint16_fromMemory(add(headStart, 128))\n        let value_1 := mload(add(headStart, 160))\n        if iszero(eq(value_1, and(value_1, 0xff))) { revert(value5, value5) }\n        value5 := value_1\n        let value_2 := mload(add(headStart, 192))\n        if iszero(eq(value_2, iszero(iszero(value_2)))) { revert(value6, value6) }\n        value6 := value_2\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_uint160t_int24_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value1 := value\n        value2 := abi_decode_t_int24_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint24_t_address__to_t_address_t_uint24_t_address__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(232, value1), shl(232, 16777215)))\n        mstore(add(pos, 23), and(shl(96, value2), _1))\n        end := add(pos, 43)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, shl(248, 255))\n        mstore(add(pos, 1), and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 21), value1)\n        mstore(add(pos, 53), value2)\n        end := add(pos, 85)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n    }\n    function abi_encode_tuple_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__to_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_t_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_int16__to_t_int16__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, signextend(1, value0))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_428a8ba368fc474210479d5009a3c2ddaf9d762393b1b3cd3cf1b440d48791c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"toUint24_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"slice_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_92c5fac6e5cb4f75ffccd9c8f373ae2e2c333a8b9c2fdc616c52c36fa31575dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"toUint24_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Unexpected error\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"toAddress_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"slice_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f71efb0937d5d9d75bbebe9d7207dad811fd47ced903ea9404d5e8d77eb17a95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"toAddress_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256_t_array$_t_uint160_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint256__to_t_uint256_t_array$_t_uint160_$dyn_memory_ptr_t_array$_t_uint32_$dyn_memory_ptr_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 128)\n        mstore(headStart, value0)\n        let _1 := 32\n        mstore(add(headStart, _1), 128)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(headStart, 160)\n        let srcPtr := add(value1, _1)\n        let i := tail\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), sub(shl(160, 1), 1)))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        mstore(add(headStart, 64), sub(pos, headStart))\n        let pos_1 := pos\n        let length_1 := mload(value2)\n        mstore(pos, length_1)\n        pos_1 := add(pos, _1)\n        let srcPtr_1 := add(value2, _1)\n        let i_1 := tail\n        for { } lt(i_1, length_1) { i_1 := add(i_1, 1) }\n        {\n            mstore(pos_1, and(mload(srcPtr_1), 0xffffffff))\n            pos_1 := add(pos_1, _1)\n            srcPtr_1 := add(srcPtr_1, _1)\n        }\n        tail := pos_1\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_uint256_t_uint160_t_uint32_t_uint256__to_t_uint256_t_uint160_t_uint32_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), and(value2, 0xffffffff))\n        mstore(add(headStart, 96), value3)\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_t_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { invalid() }\n        size := add(and(add(length, 0x1f), not(31)), 0x20)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"363": [
									{
										"length": 32,
										"start": 1239
									},
									{
										"length": 32,
										"start": 2103
									},
									{
										"length": 32,
										"start": 2543
									}
								],
								"367": [
									{
										"length": 32,
										"start": 736
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100e6578063c6a5026a146100ee578063cdca175314610101578063fa461e33146101145761007d565b80632f80bb1d146100825780634aa4a4fc146100ae578063bd21704a146100c3575b600080fd5b61009561009036600461157f565b610129565b6040516100a59493929190611a38565b60405180910390f35b6100b66102de565b6040516100a59190611864565b6100d66100d13660046116be565b610302565b6040516100a59493929190611ad3565b6100b66104d5565b6100d66100fc3660046116be565b6104f9565b61009561010f36600461157f565b61066f565b610127610122366004611606565b610806565b005b6000606080600061013986610981565b67ffffffffffffffff8111801561014f57600080fd5b50604051908082528060200260200182016040528015610179578160200160208202803683370190505b50925061018586610981565b67ffffffffffffffff8111801561019b57600080fd5b506040519080825280602002602001820160405280156101c5578160200160208202803683370190505b50915060005b60008060006101d98a610992565b9250925092506000806000806102356040518060a00160405280886001600160a01b03168152602001896001600160a01b031681526020018f81526020018762ffffff16815260200160006001600160a01b0316815250610302565b9350935093509350828b898151811061024a57fe5b60200260200101906001600160a01b031690816001600160a01b031681525050818a898151811061027757fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926102a48e6109c3565b156102b9576102b28e6109cb565b9d506102c9565b8c9b5050505050505050506102d5565b505050505050506101cb565b92959194509250565b7f000000000000000000000000000000000000000000000000000000000000000081565b6020810151815160608301516000928392839283926001600160a01b038082169084161092849261033392906109e8565b905086608001516001600160a01b0316600014156103545760408701516000555b60005a9050816001600160a01b031663128acb0830856103778c60400151610a26565b6000038c608001516001600160a01b0316600014610399578c608001516103bf565b876103b85773fffd8963efd1fc6a506488495d951d5263988d256103bf565b6401000276a45b8d602001518e606001518f600001516040516020016103e0939291906117f1565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161040f9594939291906118a0565b6040805180830381600087803b15801561042857600080fd5b505af1925050508015610458575060408051601f3d908101601f19168201909252610455918101906115e3565b60015b6104c8573d808015610486576040519150601f19603f3d011682016040523d82523d6000602084013e61048b565b606091505b505a8203945088608001516001600160a01b0316600014156104ac57600080555b6104b7818487610a3c565b9750975097509750505050506104ce565b50505050505b9193509193565b7f000000000000000000000000000000000000000000000000000000000000000081565b6020810151815160608301516000928392839283926001600160a01b038082169084161092849261052a92906109e8565b905060005a9050816001600160a01b031663128acb08308561054f8c60400151610a26565b60808d01516001600160a01b03161561056c578c60800151610592565b8761058b5773fffd8963efd1fc6a506488495d951d5263988d25610592565b6401000276a45b8d600001518e606001518f602001516040516020016105b3939291906117f1565b6040516020818303038152906040526040518663ffffffff1660e01b81526004016105e29594939291906118a0565b6040805180830381600087803b1580156105fb57600080fd5b505af192505050801561062b575060408051601f3d908101601f19168201909252610628918101906115e3565b60015b6104c8573d808015610659576040519150601f19603f3d011682016040523d82523d6000602084013e61065e565b606091505b505a820394506104b7818487610a3c565b6000606080600061067f86610981565b67ffffffffffffffff8111801561069557600080fd5b506040519080825280602002602001820160405280156106bf578160200160208202803683370190505b5092506106cb86610981565b67ffffffffffffffff811180156106e157600080fd5b5060405190808252806020026020018201604052801561070b578160200160208202803683370190505b50915060005b600080600061071f8a610992565b92509250925060008060008061077b6040518060a00160405280896001600160a01b03168152602001886001600160a01b031681526020018f81526020018762ffffff16815260200160006001600160a01b03168152506104f9565b9350935093509350828b898151811061079057fe5b60200260200101906001600160a01b031690816001600160a01b031681525050818a89815181106107bd57fe5b63ffffffff90921660209283029190910190910152929b50968201966001909601958b926107ea8e6109c3565b156102b9576107f88e6109cb565b9d5050505050505050610711565b60008313806108155750600082135b61081e57600080fd5b600080600061082c84610992565b92509250925061085e7f0000000000000000000000000000000000000000000000000000000000000000848484610af6565b50600080600080891361088a57856001600160a01b0316856001600160a01b031610888a6000036108a5565b846001600160a01b0316866001600160a01b03161089896000035b92509250925060006108b88787876109e8565b9050600080826001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b1580156108f657600080fd5b505afa15801561090a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092e91906116d9565b505050505091509150851561095457604051848152826020820152816040820152606081fd5b6000541561096a57600054841461096a57600080fd5b604051858152826020820152816040820152606081fd5b80516017601319909101045b919050565b600080806109a08482610b15565b92506109ad846014610b77565b90506109ba846017610b15565b91509193909250565b516042111590565b80516060906109e290839060179060161901610bc9565b92915050565b6000610a1e7f0000000000000000000000000000000000000000000000000000000000000000610a19868686610ca5565b610cfb565b949350505050565b6000600160ff1b8210610a3857600080fd5b5090565b600080600080600080876001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b158015610a7e57600080fd5b505afa158015610a92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ab691906116d9565b50939650610acb94508d9350610dac92505050565b91975095509050610ae66001600160a01b0389168383610e30565b9350869250505093509350935093565b6000610b0c85610b07868686610ca5565b611410565b95945050505050565b600081826014011015610b435760405162461bcd60e51b8152600401610b3a90611a0c565b60405180910390fd5b8160140183511015610b675760405162461bcd60e51b8152600401610b3a906119b2565b500160200151600160601b900490565b600081826003011015610b9c5760405162461bcd60e51b8152600401610b3a90611907565b8160030183511015610bc05760405162461bcd60e51b8152600401610b3a9061195a565b50016003015190565b60608182601f011015610bee5760405162461bcd60e51b8152600401610b3a90611932565b828284011015610c105760405162461bcd60e51b8152600401610b3a90611932565b81830184511015610c335760405162461bcd60e51b8152600401610b3a906119e1565b606082158015610c525760405191506000825260208201604052610c9c565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610c8b578051835260209283019201610c73565b5050858452601f01601f1916604052505b50949350505050565b610cad61144e565b826001600160a01b0316846001600160a01b03161115610ccb579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b600081602001516001600160a01b031682600001516001600160a01b031610610d2357600080fd5b82826000015183602001518460400151604051602001610d4593929190611878565b60408051601f19818403018152908290528051602091820120610d8d939290917fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54910161182c565b60408051601f1981840301815291905280516020909101209392505050565b60008060008351606014610e0f57604484511015610ddc5760405162461bcd60e51b8152600401610b3a90611988565b60048401935083806020019051810190610df69190611654565b60405162461bcd60e51b8152600401610b3a91906118f4565b83806020019051810190610e239190611788565b9250925092509193909250565b60008060008060008060008060088b6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610e7757600080fd5b505afa158015610e8b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eaf91906115c2565b60020b8b60020b81610ebd57fe5b0560020b901d905060006101008c6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f0357600080fd5b505afa158015610f17573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3b91906115c2565b60020b8c60020b81610f4957fe5b0560020b81610f5457fe5b079050600060088d6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610f9457600080fd5b505afa158015610fa8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fcc91906115c2565b60020b8c60020b81610fda57fe5b0560020b901d905060006101008e6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561102057600080fd5b505afa158015611034573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061105891906115c2565b60020b8d60020b8161106657fe5b0560020b8161107157fe5b07905060008160ff166001901b8f6001600160a01b0316635339c296856040518263ffffffff1660e01b81526004016110aa91906118e6565b60206040518083038186803b1580156110c257600080fd5b505afa1580156110d6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110fa9190611770565b1611801561118857508d6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561113c57600080fd5b505afa158015611150573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061117491906115c2565b60020b8c60020b8161118257fe5b0760020b155b801561119957508b60020b8d60020b135b945060008360ff166001901b8f6001600160a01b0316635339c296876040518263ffffffff1660e01b81526004016111d191906118e6565b60206040518083038186803b1580156111e957600080fd5b505afa1580156111fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112219190611770565b161180156112af57508d6001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b15801561126357600080fd5b505afa158015611277573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061129b91906115c2565b60020b8d60020b816112a957fe5b0760020b155b80156112c057508b60020b8d60020b125b95508160010b8460010b12806112ec57508160010b8460010b1480156112ec57508060ff168360ff1611155b156113025783995082975081985080965061130f565b8199508097508398508296505b505060001960ff87161b9150505b8560010b8760010b136113e8578560010b8760010b14156113445760001960ff858103161c165b6000818c6001600160a01b0316635339c2968a6040518263ffffffff1660e01b815260040161137391906118e6565b60206040518083038186803b15801561138b57600080fd5b505afa15801561139f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c39190611770565b1690506113cf81611433565b61ffff169890980197505060019095019460001961131d565b81156113f5576001880397505b8215611402576001880397505b505050505050509392505050565b600061141c8383610cfb565b9050336001600160a01b038216146109e257600080fd5b6000805b82156109e257600019830190921691600101611437565b604080516060810182526000808252602082018190529181019190915290565b600082601f83011261147e578081fd5b813561149161148c82611b21565b611afd565b8181528460208386010111156114a5578283fd5b816020850160208301379081016020019190915292915050565b8051600281900b811461098d57600080fd5b600060a082840312156114e2578081fd5b60405160a0810181811067ffffffffffffffff821117156114ff57fe5b604052905080823561151081611b73565b8152602083013561152081611b73565b602082015260408381013590820152606083013562ffffff8116811461154557600080fd5b606082015261155660808401611562565b60808201525092915050565b803561098d81611b73565b805161ffff8116811461098d57600080fd5b60008060408385031215611591578182fd5b823567ffffffffffffffff8111156115a7578283fd5b6115b38582860161146e565b95602094909401359450505050565b6000602082840312156115d3578081fd5b6115dc826114bf565b9392505050565b600080604083850312156115f5578182fd5b505080516020909101519092909150565b60008060006060848603121561161a578081fd5b8335925060208401359150604084013567ffffffffffffffff81111561163e578182fd5b61164a8682870161146e565b9150509250925092565b600060208284031215611665578081fd5b815167ffffffffffffffff81111561167b578182fd5b8201601f8101841361168b578182fd5b805161169961148c82611b21565b8181528560208385010111156116ad578384fd5b610b0c826020830160208601611b43565b600060a082840312156116cf578081fd5b6115dc83836114d1565b600080600080600080600060e0888a0312156116f3578283fd5b87516116fe81611b73565b965061170c602089016114bf565b955061171a6040890161156d565b94506117286060890161156d565b93506117366080890161156d565b925060a088015160ff8116811461174b578283fd5b60c08901519092508015158114611760578182fd5b8091505092959891949750929550565b600060208284031215611781578081fd5b5051919050565b60008060006060848603121561179c578081fd5b8351925060208401516117ae81611b73565b91506117bc604085016114bf565b90509250925092565b600081518084526117dd816020860160208601611b43565b601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6001600160f81b0319815260609390931b6bffffffffffffffffffffffff191660018401526015830191909152603582015260550190565b6001600160a01b0391909116815260200190565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a0608082018190526000906118db908301846117c5565b979650505050505050565b60019190910b815260200190565b6000602082526115dc60208301846117c5565b602080825260119082015270746f55696e7432345f6f766572666c6f7760781b604082015260600190565b6020808252600e908201526d736c6963655f6f766572666c6f7760901b604082015260600190565b602080825260149082015273746f55696e7432345f6f75744f66426f756e647360601b604082015260600190565b60208082526010908201526f2ab732bc3832b1ba32b21032b93937b960811b604082015260600190565b602080825260159082015274746f416464726573735f6f75744f66426f756e647360581b604082015260600190565b602080825260119082015270736c6963655f6f75744f66426f756e647360781b604082015260600190565b602080825260129082015271746f416464726573735f6f766572666c6f7760701b604082015260600190565b600060808201868352602060808185015281875180845260a0860191508289019350845b81811015611a815784516001600160a01b031683529383019391830191600101611a5c565b505084810360408601528651808252908201925081870190845b81811015611abd57825163ffffffff1685529383019391830191600101611a9b565b5050505060609290920192909252949350505050565b9384526001600160a01b0392909216602084015263ffffffff166040830152606082015260800190565b60405181810167ffffffffffffffff81118282101715611b1957fe5b604052919050565b600067ffffffffffffffff821115611b3557fe5b50601f01601f191660200190565b60005b83811015611b5e578181015183820152602001611b46565b83811115611b6d576000848401525b50505050565b6001600160a01b0381168114611b8857600080fd5b5056fea2646970667358221220f9781e692a78af0d4cf3d953b2910c65f323dcbfa5050a9175ebdcd49f284adb64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC45A0155 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xC6A5026A EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xCDCA1753 EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x114 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2F80BB1D EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0xBD21704A EQ PUSH2 0xC3 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x157F JUMP JUMPDEST PUSH2 0x129 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1A38 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB6 PUSH2 0x2DE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP2 SWAP1 PUSH2 0x1864 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0xD1 CALLDATASIZE PUSH1 0x4 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x302 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA5 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1AD3 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x4D5 JUMP JUMPDEST PUSH2 0xD6 PUSH2 0xFC CALLDATASIZE PUSH1 0x4 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x4F9 JUMP JUMPDEST PUSH2 0x95 PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x157F JUMP JUMPDEST PUSH2 0x66F JUMP JUMPDEST PUSH2 0x127 PUSH2 0x122 CALLDATASIZE PUSH1 0x4 PUSH2 0x1606 JUMP JUMPDEST PUSH2 0x806 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x139 DUP7 PUSH2 0x981 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x179 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH2 0x185 DUP7 PUSH2 0x981 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1C5 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x1D9 DUP11 PUSH2 0x992 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x235 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH2 0x302 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP3 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x24A JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x277 JUMPI INVALID JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP12 POP SWAP7 DUP3 ADD SWAP7 PUSH1 0x1 SWAP1 SWAP7 ADD SWAP6 DUP12 SWAP3 PUSH2 0x2A4 DUP15 PUSH2 0x9C3 JUMP JUMPDEST ISZERO PUSH2 0x2B9 JUMPI PUSH2 0x2B2 DUP15 PUSH2 0x9CB JUMP JUMPDEST SWAP14 POP PUSH2 0x2C9 JUMP JUMPDEST DUP13 SWAP12 POP POP POP POP POP POP POP POP POP PUSH2 0x2D5 JUMP JUMPDEST POP POP POP POP POP POP POP PUSH2 0x1CB JUMP JUMPDEST SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP5 AND LT SWAP3 DUP5 SWAP3 PUSH2 0x333 SWAP3 SWAP1 PUSH2 0x9E8 JUMP JUMPDEST SWAP1 POP DUP7 PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 EQ ISZERO PUSH2 0x354 JUMPI PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x0 SSTORE JUMPDEST PUSH1 0x0 GAS SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x128ACB08 ADDRESS DUP6 PUSH2 0x377 DUP13 PUSH1 0x40 ADD MLOAD PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x0 SUB DUP13 PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 EQ PUSH2 0x399 JUMPI DUP13 PUSH1 0x80 ADD MLOAD PUSH2 0x3BF JUMP JUMPDEST DUP8 PUSH2 0x3B8 JUMPI PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D25 PUSH2 0x3BF JUMP JUMPDEST PUSH5 0x1000276A4 JUMPDEST DUP14 PUSH1 0x20 ADD MLOAD DUP15 PUSH1 0x60 ADD MLOAD DUP16 PUSH1 0x0 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x3E0 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x40F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x428 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x458 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x455 SWAP2 DUP2 ADD SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x4C8 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x486 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x48B JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP GAS DUP3 SUB SWAP5 POP DUP9 PUSH1 0x80 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 EQ ISZERO PUSH2 0x4AC JUMPI PUSH1 0x0 DUP1 SSTORE JUMPDEST PUSH2 0x4B7 DUP2 DUP5 DUP8 PUSH2 0xA3C JUMP JUMPDEST SWAP8 POP SWAP8 POP SWAP8 POP SWAP8 POP POP POP POP POP PUSH2 0x4CE JUMP JUMPDEST POP POP POP POP POP JUMPDEST SWAP2 SWAP4 POP SWAP2 SWAP4 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD DUP2 MLOAD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x0 SWAP3 DUP4 SWAP3 DUP4 SWAP3 DUP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND SWAP1 DUP5 AND LT SWAP3 DUP5 SWAP3 PUSH2 0x52A SWAP3 SWAP1 PUSH2 0x9E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 GAS SWAP1 POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x128ACB08 ADDRESS DUP6 PUSH2 0x54F DUP13 PUSH1 0x40 ADD MLOAD PUSH2 0xA26 JUMP JUMPDEST PUSH1 0x80 DUP14 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x56C JUMPI DUP13 PUSH1 0x80 ADD MLOAD PUSH2 0x592 JUMP JUMPDEST DUP8 PUSH2 0x58B JUMPI PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D25 PUSH2 0x592 JUMP JUMPDEST PUSH5 0x1000276A4 JUMPDEST DUP14 PUSH1 0x0 ADD MLOAD DUP15 PUSH1 0x60 ADD MLOAD DUP16 PUSH1 0x20 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x5B3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17F1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E2 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x18A0 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x62B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x628 SWAP2 DUP2 ADD SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x4C8 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x659 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x65E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP GAS DUP3 SUB SWAP5 POP PUSH2 0x4B7 DUP2 DUP5 DUP8 PUSH2 0xA3C JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP1 PUSH1 0x0 PUSH2 0x67F DUP7 PUSH2 0x981 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x6BF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP3 POP PUSH2 0x6CB DUP7 PUSH2 0x981 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP1 ISZERO PUSH2 0x6E1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x70B JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP2 POP PUSH1 0x0 JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x71F DUP11 PUSH2 0x992 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x77B PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP16 DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP PUSH2 0x4F9 JUMP JUMPDEST SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 POP DUP3 DUP12 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x790 JUMPI INVALID JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP POP DUP2 DUP11 DUP10 DUP2 MLOAD DUP2 LT PUSH2 0x7BD JUMPI INVALID JUMPDEST PUSH4 0xFFFFFFFF SWAP1 SWAP3 AND PUSH1 0x20 SWAP3 DUP4 MUL SWAP2 SWAP1 SWAP2 ADD SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP12 POP SWAP7 DUP3 ADD SWAP7 PUSH1 0x1 SWAP1 SWAP7 ADD SWAP6 DUP12 SWAP3 PUSH2 0x7EA DUP15 PUSH2 0x9C3 JUMP JUMPDEST ISZERO PUSH2 0x2B9 JUMPI PUSH2 0x7F8 DUP15 PUSH2 0x9CB JUMP JUMPDEST SWAP14 POP POP POP POP POP POP POP POP PUSH2 0x711 JUMP JUMPDEST PUSH1 0x0 DUP4 SGT DUP1 PUSH2 0x815 JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST PUSH2 0x81E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x82C DUP5 PUSH2 0x992 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x85E PUSH32 0x0 DUP5 DUP5 DUP5 PUSH2 0xAF6 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 SGT PUSH2 0x88A JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT DUP9 DUP11 PUSH1 0x0 SUB PUSH2 0x8A5 JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT DUP10 DUP10 PUSH1 0x0 SUB JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH1 0x0 PUSH2 0x8B8 DUP8 DUP8 DUP8 PUSH2 0x9E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x90A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x92E SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST POP POP POP POP POP SWAP2 POP SWAP2 POP DUP6 ISZERO PUSH2 0x954 JUMPI PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 REVERT JUMPDEST PUSH1 0x0 SLOAD ISZERO PUSH2 0x96A JUMPI PUSH1 0x0 SLOAD DUP5 EQ PUSH2 0x96A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP6 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP2 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP2 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x17 PUSH1 0x13 NOT SWAP1 SWAP2 ADD DIV JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x9A0 DUP5 DUP3 PUSH2 0xB15 JUMP JUMPDEST SWAP3 POP PUSH2 0x9AD DUP5 PUSH1 0x14 PUSH2 0xB77 JUMP JUMPDEST SWAP1 POP PUSH2 0x9BA DUP5 PUSH1 0x17 PUSH2 0xB15 JUMP JUMPDEST SWAP2 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST MLOAD PUSH1 0x42 GT ISZERO SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH2 0x9E2 SWAP1 DUP4 SWAP1 PUSH1 0x17 SWAP1 PUSH1 0x16 NOT ADD PUSH2 0xBC9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xA1E PUSH32 0x0 PUSH2 0xA19 DUP7 DUP7 DUP7 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0xCFB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 LT PUSH2 0xA38 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAB6 SWAP2 SWAP1 PUSH2 0x16D9 JUMP JUMPDEST POP SWAP4 SWAP7 POP PUSH2 0xACB SWAP5 POP DUP14 SWAP4 POP PUSH2 0xDAC SWAP3 POP POP POP JUMP JUMPDEST SWAP2 SWAP8 POP SWAP6 POP SWAP1 POP PUSH2 0xAE6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP4 DUP4 PUSH2 0xE30 JUMP JUMPDEST SWAP4 POP DUP7 SWAP3 POP POP POP SWAP4 POP SWAP4 POP SWAP4 POP SWAP4 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB0C DUP6 PUSH2 0xB07 DUP7 DUP7 DUP7 PUSH2 0xCA5 JUMP JUMPDEST PUSH2 0x1410 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP3 PUSH1 0x14 ADD LT ISZERO PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x1A0C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x14 ADD DUP4 MLOAD LT ISZERO PUSH2 0xB67 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x19B2 JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP3 PUSH1 0x3 ADD LT ISZERO PUSH2 0xB9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x1907 JUMP JUMPDEST DUP2 PUSH1 0x3 ADD DUP4 MLOAD LT ISZERO PUSH2 0xBC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x195A JUMP JUMPDEST POP ADD PUSH1 0x3 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP3 PUSH1 0x1F ADD LT ISZERO PUSH2 0xBEE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x1932 JUMP JUMPDEST DUP3 DUP3 DUP5 ADD LT ISZERO PUSH2 0xC10 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x1932 JUMP JUMPDEST DUP2 DUP4 ADD DUP5 MLOAD LT ISZERO PUSH2 0xC33 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x19E1 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0xC52 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0xC9C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0xC8B JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0xC73 JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0xCAD PUSH2 0x144E JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0xCCB JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0xD23 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xD45 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1878 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH2 0xD8D SWAP4 SWAP3 SWAP1 SWAP2 PUSH32 0xE34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54 SWAP2 ADD PUSH2 0x182C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 MLOAD PUSH1 0x60 EQ PUSH2 0xE0F JUMPI PUSH1 0x44 DUP5 MLOAD LT ISZERO PUSH2 0xDDC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP1 PUSH2 0x1988 JUMP JUMPDEST PUSH1 0x4 DUP5 ADD SWAP4 POP DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xDF6 SWAP2 SWAP1 PUSH2 0x1654 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB3A SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0xE23 SWAP2 SWAP1 PUSH2 0x1788 JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x8 DUP12 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xE8B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xEAF SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP12 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xEBD JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP1 POP PUSH1 0x0 PUSH2 0x100 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xF17 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF3B SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP13 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xF49 JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xF54 JUMPI INVALID JUMPDEST SMOD SWAP1 POP PUSH1 0x0 PUSH1 0x8 DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xF94 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFA8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFCC SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP13 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0xFDA JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND SWAP1 SAR SWAP1 POP PUSH1 0x0 PUSH2 0x100 DUP15 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1020 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1034 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1058 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x1066 JUMPI INVALID JUMPDEST SDIV PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x1071 JUMPI INVALID JUMPDEST SMOD SWAP1 POP PUSH1 0x0 DUP2 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP16 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5339C296 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10AA SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x10C2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10FA SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST AND GT DUP1 ISZERO PUSH2 0x1188 JUMPI POP DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x113C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1150 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1174 SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP13 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x1182 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x1199 JUMPI POP DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND SGT JUMPDEST SWAP5 POP PUSH1 0x0 DUP4 PUSH1 0xFF AND PUSH1 0x1 SWAP1 SHL DUP16 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5339C296 DUP8 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11D1 SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1221 SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST AND GT DUP1 ISZERO PUSH2 0x12AF JUMPI POP DUP14 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1263 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1277 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x129B SWAP2 SWAP1 PUSH2 0x15C2 JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x12A9 JUMPI INVALID JUMPDEST SMOD PUSH1 0x2 SIGNEXTEND ISZERO JUMPDEST DUP1 ISZERO PUSH2 0x12C0 JUMPI POP DUP12 PUSH1 0x2 SIGNEXTEND DUP14 PUSH1 0x2 SIGNEXTEND SLT JUMPDEST SWAP6 POP DUP2 PUSH1 0x1 SIGNEXTEND DUP5 PUSH1 0x1 SIGNEXTEND SLT DUP1 PUSH2 0x12EC JUMPI POP DUP2 PUSH1 0x1 SIGNEXTEND DUP5 PUSH1 0x1 SIGNEXTEND EQ DUP1 ISZERO PUSH2 0x12EC JUMPI POP DUP1 PUSH1 0xFF AND DUP4 PUSH1 0xFF AND GT ISZERO JUMPDEST ISZERO PUSH2 0x1302 JUMPI DUP4 SWAP10 POP DUP3 SWAP8 POP DUP2 SWAP9 POP DUP1 SWAP7 POP PUSH2 0x130F JUMP JUMPDEST DUP2 SWAP10 POP DUP1 SWAP8 POP DUP4 SWAP9 POP DUP3 SWAP7 POP JUMPDEST POP POP PUSH1 0x0 NOT PUSH1 0xFF DUP8 AND SHL SWAP2 POP POP JUMPDEST DUP6 PUSH1 0x1 SIGNEXTEND DUP8 PUSH1 0x1 SIGNEXTEND SGT PUSH2 0x13E8 JUMPI DUP6 PUSH1 0x1 SIGNEXTEND DUP8 PUSH1 0x1 SIGNEXTEND EQ ISZERO PUSH2 0x1344 JUMPI PUSH1 0x0 NOT PUSH1 0xFF DUP6 DUP2 SUB AND SHR AND JUMPDEST PUSH1 0x0 DUP2 DUP13 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x5339C296 DUP11 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1373 SWAP2 SWAP1 PUSH2 0x18E6 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x138B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x139F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x13C3 SWAP2 SWAP1 PUSH2 0x1770 JUMP JUMPDEST AND SWAP1 POP PUSH2 0x13CF DUP2 PUSH2 0x1433 JUMP JUMPDEST PUSH2 0xFFFF AND SWAP9 SWAP1 SWAP9 ADD SWAP8 POP POP PUSH1 0x1 SWAP1 SWAP6 ADD SWAP5 PUSH1 0x0 NOT PUSH2 0x131D JUMP JUMPDEST DUP2 ISZERO PUSH2 0x13F5 JUMPI PUSH1 0x1 DUP9 SUB SWAP8 POP JUMPDEST DUP3 ISZERO PUSH2 0x1402 JUMPI PUSH1 0x1 DUP9 SUB SWAP8 POP JUMPDEST POP POP POP POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x141C DUP4 DUP4 PUSH2 0xCFB JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x9E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 JUMPDEST DUP3 ISZERO PUSH2 0x9E2 JUMPI PUSH1 0x0 NOT DUP4 ADD SWAP1 SWAP3 AND SWAP2 PUSH1 0x1 ADD PUSH2 0x1437 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x147E JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1491 PUSH2 0x148C DUP3 PUSH2 0x1B21 JUMP JUMPDEST PUSH2 0x1AFD JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x14A5 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x2 DUP2 SWAP1 SIGNEXTEND DUP2 EQ PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14E2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xA0 DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x14FF JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP1 POP DUP1 DUP3 CALLDATALOAD PUSH2 0x1510 DUP2 PUSH2 0x1B73 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1520 DUP2 PUSH2 0x1B73 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP4 DUP2 ADD CALLDATALOAD SWAP1 DUP3 ADD MSTORE PUSH1 0x60 DUP4 ADD CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1545 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x1556 PUSH1 0x80 DUP5 ADD PUSH2 0x1562 JUMP JUMPDEST PUSH1 0x80 DUP3 ADD MSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x98D DUP2 PUSH2 0x1B73 JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x98D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1591 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x15A7 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x15B3 DUP6 DUP3 DUP7 ADD PUSH2 0x146E JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15D3 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x15DC DUP3 PUSH2 0x14BF JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x15F5 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x161A JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x163E JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x164A DUP7 DUP3 DUP8 ADD PUSH2 0x146E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1665 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x167B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x168B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x1699 PUSH2 0x148C DUP3 PUSH2 0x1B21 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x16AD JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0xB0C DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16CF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x15DC DUP4 DUP4 PUSH2 0x14D1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x16F3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x16FE DUP2 PUSH2 0x1B73 JUMP JUMPDEST SWAP7 POP PUSH2 0x170C PUSH1 0x20 DUP10 ADD PUSH2 0x14BF JUMP JUMPDEST SWAP6 POP PUSH2 0x171A PUSH1 0x40 DUP10 ADD PUSH2 0x156D JUMP JUMPDEST SWAP5 POP PUSH2 0x1728 PUSH1 0x60 DUP10 ADD PUSH2 0x156D JUMP JUMPDEST SWAP4 POP PUSH2 0x1736 PUSH1 0x80 DUP10 ADD PUSH2 0x156D JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x174B JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1760 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1781 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x179C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH2 0x17AE DUP2 PUSH2 0x1B73 JUMP JUMPDEST SWAP2 POP PUSH2 0x17BC PUSH1 0x40 DUP6 ADD PUSH2 0x14BF JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x17DD DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B43 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 SWAP4 DUP5 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0xE8 SWAP4 SWAP1 SWAP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT AND PUSH1 0x14 DUP3 ADD MSTORE SWAP3 SHL AND PUSH1 0x17 DUP3 ADD MSTORE PUSH1 0x2B ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x18DB SWAP1 DUP4 ADD DUP5 PUSH2 0x17C5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x15DC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x17C5 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x746F55696E7432345F6F766572666C6F77 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x746F55696E7432345F6F75744F66426F756E6473 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x2AB732BC3832B1BA32B21032B93937B9 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x746F416464726573735F6F75744F66426F756E6473 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x746F416464726573735F6F766572666C6F77 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD DUP7 DUP4 MSTORE PUSH1 0x20 PUSH1 0x80 DUP2 DUP6 ADD MSTORE DUP2 DUP8 MLOAD DUP1 DUP5 MSTORE PUSH1 0xA0 DUP7 ADD SWAP2 POP DUP3 DUP10 ADD SWAP4 POP DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1A81 JUMPI DUP5 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1A5C JUMP JUMPDEST POP POP DUP5 DUP2 SUB PUSH1 0x40 DUP7 ADD MSTORE DUP7 MLOAD DUP1 DUP3 MSTORE SWAP1 DUP3 ADD SWAP3 POP DUP2 DUP8 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1ABD JUMPI DUP3 MLOAD PUSH4 0xFFFFFFFF AND DUP6 MSTORE SWAP4 DUP4 ADD SWAP4 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1A9B JUMP JUMPDEST POP POP POP POP PUSH1 0x60 SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH4 0xFFFFFFFF AND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1B19 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1B35 JUMPI INVALID JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B5E JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B46 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x1B6D JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1B88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF9 PUSH25 0x1E692A78AF0D4CF3D953B2910C65F323DCBFA5050A9175EBDC 0xD4 SWAP16 0x28 0x4A 0xDB PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "63769:9333:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;71480:1620;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;9640:39;;;:::i;:::-;;;;;;;:::i;70099:1375::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;9548:41::-;;;:::i;67365:1104::-;;;;;;:::i;:::-;;:::i;68475:1618::-;;;;;;:::i;:::-;;:::i;64489:1605::-;;;;;;:::i;:::-;;:::i;:::-;;71480:1620;71606:16;71636:38;71688:43;71745:19;71827:15;:4;:13;:15::i;:::-;71813:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;71813:30:0;;71789:54;;71896:15;:4;:13;:15::i;:::-;71883:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;71883:29:0;;71853:59;;71923:9;71946:1148;71974:16;71992:15;72009:10;72023:22;:4;:20;:22::i;:::-;71973:72;;;;;;72140:17;72159:26;72187:31;72220:20;72260:323;72304:261;;;;;;;;72368:7;-1:-1:-1;;;;;72304:261:0;;;;;72411:8;-1:-1:-1;;;;;72304:261:0;;;;;72453:9;72304:261;;;;72493:3;72304:261;;;;;;72541:1;-1:-1:-1;;;;;72304:261:0;;;;72260:22;:323::i;:::-;72139:444;;;;;;;;72625:18;72598:21;72620:1;72598:24;;;;;;;;;;;;;:45;-1:-1:-1;;;;;72598:45:0;;;-1:-1:-1;;;;;72598:45:0;;;;;72690:24;72657:27;72685:1;72657:30;;;;;;;;:57;;;;:30;;;;;;;;;;;:57;72740:9;;-1:-1:-1;72763:27:0;;;;72804:3;;;;;72740:9;;72881:23;:4;:21;:23::i;:::-;72877:207;;;72931:16;:4;:14;:16::i;:::-;72924:23;;72877:207;;;72994:9;72986:83;;;;;;;;;;;;72877:207;71946:1148;;;;;;;;;71480:1620;;;;;;;;:::o;9640:39::-;;;:::o;70099:1375::-;70429:15;;;;70412:14;;70517:10;;;;70237:16;;;;;;;;-1:-1:-1;;;;;70412:32:0;;;;;;;;70237:16;;70476:52;;70429:15;70476:7;:52::i;:::-;70454:74;;70652:6;:24;;;-1:-1:-1;;;;;70652:29:0;70680:1;70652:29;70648:66;;;70701:13;;;;70683:15;:31;70648:66;70724:17;70744:9;70724:29;;70779:4;-1:-1:-1;;;;;70779:9:0;;70814:4;70887:10;70916:24;:6;:13;;;:22;:24::i;:::-;70915:25;;70958:6;:24;;;-1:-1:-1;;;;;70958:29:0;70986:1;70958:29;:171;;71105:6;:24;;;70958:171;;;71011:10;:70;;71054:27;71011:70;;;71024:27;71011:70;71164:6;:15;;;71181:6;:10;;;71193:6;:14;;;71147:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;70779:443;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;70779:443:0;;;;;;;;-1:-1:-1;;70779:443:0;;;;;;;;;;;;:::i;:::-;;;70763:705;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;71302:9;71290;:21;71276:35;;71329:6;:24;;;-1:-1:-1;;;;;71329:29:0;71357:1;71329:29;71325:57;;;71367:15;71360:22;;71325:57;71418:39;71431:6;71439:4;71445:11;71418:12;:39::i;:::-;71411:46;;;;;;;;;;;;;;70763:705;;;70099:1375;;;;;;;;;:::o;9548:41::-;;;:::o;67365:1104::-;67694:15;;;;67677:14;;67782:10;;;;67501:17;;;;;;;;-1:-1:-1;;;;;67677:32:0;;;;;;;;67501:17;;67741:52;;67694:15;67741:7;:52::i;:::-;67719:74;;67804:17;67824:9;67804:29;;67859:4;-1:-1:-1;;;;;67859:9:0;;67894:4;67967:10;67995:26;:6;:15;;;:24;:26::i;:::-;68039:24;;;;-1:-1:-1;;;;;68039:29:0;;:171;;68186:6;:24;;;68039:171;;;68092:10;:70;;68135:27;68092:70;;;68105:27;68092:70;68245:6;:14;;;68261:6;:10;;;68273:6;:15;;;68228:61;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;67859:444;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;67859:444:0;;;;;;;;-1:-1:-1;;67859:444:0;;;;;;;;;;;;:::i;:::-;;;67843:620;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;68383:9;68371;:21;68357:35;;68413:39;68426:6;68434:4;68440:11;68413:12;:39::i;68475:1618::-;68599:17;68630:38;68682:43;68739:19;68821:15;:4;:13;:15::i;:::-;68807:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;68807:30:0;;68783:54;;68890:15;:4;:13;:15::i;:::-;68877:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;68877:29:0;;68847:59;;68917:9;68940:1147;68968:15;68985:16;69003:10;69017:22;:4;:20;:22::i;:::-;68967:72;;;;;;69134:18;69154:26;69182:31;69215:20;69255:322;69298:261;;;;;;;;69361:7;-1:-1:-1;;;;;69298:261:0;;;;;69404:8;-1:-1:-1;;;;;69298:261:0;;;;;69482:8;69298:261;;;;69443:3;69298:261;;;;;;69535:1;-1:-1:-1;;;;;69298:261:0;;;;69255:21;:322::i;:::-;69133:444;;;;;;;;69619:18;69592:21;69614:1;69592:24;;;;;;;;;;;;;:45;-1:-1:-1;;;;;69592:45:0;;;-1:-1:-1;;;;;69592:45:0;;;;;69684:24;69651:27;69679:1;69651:30;;;;;;;;:57;;;;:30;;;;;;;;;;;:57;69733:10;;-1:-1:-1;69757:27:0;;;;69798:3;;;;;69733:10;;69875:23;:4;:21;:23::i;:::-;69871:206;;;69925:16;:4;:14;:16::i;:::-;69918:23;;68940:1147;;;;;;;;;64489:1605;64667:1;64652:12;:16;:36;;;;64687:1;64672:12;:16;64652:36;64644:45;;;;;;64763:15;64780:16;64798:10;64812:22;:4;:20;:22::i;:::-;64762:72;;;;;;64844:66;64878:7;64887;64896:8;64906:3;64844:33;:66::i;:::-;;64922:17;64941:19;64962:22;65015:1;65000:12;:16;:188;;65133:7;-1:-1:-1;;;;;65122:18:0;:8;-1:-1:-1;;;;;65122:18:0;;65150:12;65174;65173:13;;65000:188;;;65046:8;-1:-1:-1;;;;;65036:18:0;:7;-1:-1:-1;;;;;65036:18:0;;65064:12;65088;65087:13;;65000:188;64921:267;;;;;;65199:19;65221:31;65229:7;65238:8;65248:3;65221:7;:31::i;:::-;65199:53;;65263:25;65290:15;65319:4;-1:-1:-1;;;;;65319:10:0;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;65262:69;;;;;;;;;65346:12;65342:746;;;65418:4;65412:11;65452:14;65447:3;65440:27;65507:17;65500:4;65495:3;65491:14;65484:41;65565:9;65558:4;65553:3;65549:14;65542:33;65604:2;65599:3;65592:15;65383:238;65756:15;;:20;65752:68;;65804:15;;65786:14;:33;65778:42;;;;;;65878:4;65872:11;65912;65907:3;65900:24;65964:17;65957:4;65952:3;65948:14;65941:41;66022:9;66015:4;66010:3;66006:14;65999:33;66061:2;66056:3;66049:15;7322:235;7511:11;;6547:20;-1:-1:-1;;7511:23:0;;;7510:39;7322:235;;;;:::o;7819:314::-;7923:14;;;8023:17;:4;7923:14;8023;:17::i;:::-;8014:26;-1:-1:-1;8056:24:0;:4;6344:2;8056:13;:24::i;:::-;8050:30;-1:-1:-1;8099:27:0;:4;6547:20;8099:14;:27::i;:::-;8090:36;;7819:314;;;;;:::o;7032:138::-;7123:11;6817:24;-1:-1:-1;7123:40:0;;7032:138::o;8675:149::-;8791:11;;8736:12;;8767:50;;8791:4;;6547:20;;-1:-1:-1;;8791:25:0;8767:10;:50::i;:::-;8760:57;8675:149;-1:-1:-1;;8675:149:0:o;64191:249::-;64304:14;64352:80;64379:7;64388:43;64411:6;64419;64427:3;64388:22;:43::i;:::-;64352:26;:80::i;:::-;64330:103;64191:249;-1:-1:-1;;;;64191:249:0:o;63256:121::-;63308:8;-1:-1:-1;;;63336:1:0;:10;63328:19;;;;;;-1:-1:-1;63368:1:0;63256:121::o;66693:666::-;66867:14;66895:25;66934:30;66978:7;67010:16;67036:15;67088:4;-1:-1:-1;;;;;67088:10:0;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;67061:39:0;;-1:-1:-1;67151:25:0;;-1:-1:-1;67169:6:0;;-1:-1:-1;67151:17:0;;-1:-1:-1;;;67151:25:0:i;:::-;67110:66;;-1:-1:-1;67110:66:0;-1:-1:-1;67110:66:0;-1:-1:-1;67213:56:0;-1:-1:-1;;;;;67213:33:0;;67247:10;67110:66;67213:33;:56::i;:::-;67187:82;-1:-1:-1;67340:11:0;;-1:-1:-1;;;66693:666:0;;;;;;;:::o;45951:259::-;46097:19;46135:68;46150:7;46159:43;46182:6;46190;46198:3;46159:22;:43::i;:::-;46135:14;:68::i;:::-;46128:75;45951:259;-1:-1:-1;;;;;45951:259:0:o;5279:416::-;5358:7;5400:6;5385;5394:2;5385:11;:21;;5377:52;;;;-1:-1:-1;;;5377:52:0;;;;;;;:::i;:::-;;;;;;;;;5464:6;5473:2;5464:11;5447:6;:13;:28;;5439:62;;;;-1:-1:-1;;;5439:62:0;;;;;;;:::i;:::-;-1:-1:-1;5589:30:0;5605:4;5589:30;5583:37;-1:-1:-1;;;5579:71:0;;;5279:416::o;5701:365::-;5779:6;5819;5805;5814:1;5805:10;:20;;5797:50;;;;-1:-1:-1;;;5797:50:0;;;;;;;:::i;:::-;5882:6;5891:1;5882:10;5865:6;:13;:27;;5857:60;;;;-1:-1:-1;;;5857:60:0;;;;;;;:::i;:::-;-1:-1:-1;5994:29:0;6010:3;5994:29;5988:36;;5701:365::o;2266:3007::-;2388:12;2436:7;2420;2430:2;2420:12;:23;;2412:50;;;;-1:-1:-1;;;2412:50:0;;;;;;;:::i;:::-;2500:6;2489:7;2480:6;:16;:26;;2472:53;;;;-1:-1:-1;;;2472:53:0;;;;;;;:::i;:::-;2569:7;2560:6;:16;2543:6;:13;:33;;2535:63;;;;-1:-1:-1;;;2535:63:0;;;;;;;:::i;:::-;2609:22;2672:15;;2704:2099;;;;4956:4;4950:11;4937:24;;5154:1;5143:9;5136:20;5206:4;5195:9;5191:20;5185:4;5178:34;2665:2565;;2704:2099;2898:4;2892:11;2879:24;;3593:2;3584:7;3580:16;3995:9;3988:17;3982:4;3978:28;3966:9;3955;3951:25;3947:60;4047:7;4043:2;4039:16;4315:6;4301:9;4294:17;4288:4;4284:28;4272:9;4264:6;4260:22;4256:57;4252:70;4077:461;4352:3;4348:2;4345:11;4077:461;;;4506:9;;4495:21;;4397:4;4389:13;;;;4433;4077:461;;;-1:-1:-1;;4560:26:0;;;4780:2;4763:11;-1:-1:-1;;4759:25:0;4753:4;4746:39;-1:-1:-1;2665:2565:0;-1:-1:-1;5257:9:0;2266:3007;-1:-1:-1;;;;2266:3007:0:o;831:274::-;948:14;;:::i;:::-;987:6;-1:-1:-1;;;;;978:15:0;:6;-1:-1:-1;;;;;978:15:0;;974:56;;;1015:6;;1023;974:56;-1:-1:-1;1047:51:0;;;;;;;;-1:-1:-1;;;;;1047:51:0;;;;;;;;;;;;;;;;;;;;;;;831:274::o;1352:512::-;1436:12;1481:3;:10;;;-1:-1:-1;;;;;1468:23:0;:3;:10;;;-1:-1:-1;;;;;1468:23:0;;1460:32;;;;;;1661:7;1715:3;:10;;;1727:3;:10;;;1739:3;:7;;;1704:43;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1704:43:0;;;;;;;;;;1694:54;;1704:43;1694:54;;;;1586:229;;;1694:54;;288:66;;1586:229;;:::i;:::-;;;;-1:-1:-1;;1586:229:0;;;;;;;;;1555:278;;1586:229;1555:278;;;;;1352:512;-1:-1:-1;;;1352:512:0:o;66174:513::-;66281:14;66309:25;66348:15;66392:6;:13;66409:2;66392:19;66388:231;;66447:2;66431:6;:13;:18;66427:50;;;66451:26;;-1:-1:-1;;;66451:26:0;;;;;;;:::i;66427:50::-;66540:4;66532:6;66528:17;66518:27;;66590:6;66579:28;;;;;;;;;;;;:::i;:::-;66572:36;;-1:-1:-1;;;66572:36:0;;;;;;;;:::i;66388:231::-;66646:6;66635:45;;;;;;;;;;;;:::i;:::-;66628:52;;;;;;66174:513;;;;;:::o;41841:3305::-;41988:30;42030:18;42058:19;42087:17;42114:18;42142:26;42178:25;42331:13;42390:1;42367:4;-1:-1:-1;;;;;42367:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;42354:31;;:10;:31;;;;;;;;42353:38;;;;42331:61;;42406:12;42463:3;42441:4;-1:-1:-1;;;;;42441:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;42428:31;;:10;:31;;;;;;;;42427:39;;;;;;;;42406:61;;42482:18;42545:1;42522:4;-1:-1:-1;;;;;42522:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;42510:30;;:9;:30;;;;;;;;42509:37;;;;42482:65;;42561:17;42622:3;42600:4;-1:-1:-1;;;;;42600:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;42588:30;;:9;:30;;;;;;;;42587:38;;;;;;;;42561:65;;43101:1;43085:11;43080:16;;:1;:16;;43047:4;-1:-1:-1;;;;;43047:15:0;;43063:12;43047:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;43046:56;43045:117;;;;;43137:4;-1:-1:-1;;;;;43137:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;43125:30;;:9;:30;;;;;;;;43124:37;;;43045:117;:161;;;;;43196:9;43183:22;;:10;:22;;;43045:161;43006:200;;43516:1;43505:6;43500:11;;:1;:11;;43472:4;-1:-1:-1;;;;;43472:15:0;;43488:7;43472:24;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;43471:46;43470:108;;;;;43553:4;-1:-1:-1;;;;;43553:16:0;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;43540:31;;:10;:31;;;;;;;;43539:38;;;43470:108;:152;;;;;43612:9;43599:22;;:10;:22;;;43470:152;43430:192;;43651:12;43641:22;;:7;:22;;;:76;;;;43679:12;43668:23;;:7;:23;;;:48;;;;;43705:11;43695:21;;:6;:21;;;;43668:48;43637:454;;;43752:7;43737:22;;43791:6;43777:20;;43831:12;43815:28;;43876:11;43861:26;;43637:454;;;43941:12;43926:27;;43985:11;43971:25;;44030:7;44014:23;;44070:6;44055:21;;43637:454;-1:-1:-1;;;;44305:32:0;;;;;-1:-1:-1;;44347:573:0;44370:13;44354:29;;:12;:29;;;44347:573;;44533:13;44517:29;;:12;:29;;;44513:125;;;-1:-1:-1;;44603:3:0;:18;;;44581:41;;44573:50;44513:125;44652:14;44701:4;44669;-1:-1:-1;;;;;44669:15:0;;44685:12;44669:29;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;44652:53;;44746:20;44759:6;44746:12;:20::i;:::-;44719:47;;;;;;;-1:-1:-1;;44780:14:0;;;;;-1:-1:-1;;44347:573:0;;;44934:20;44930:79;;;44997:1;44970:28;;;;44930:79;45023:21;45019:80;;;45087:1;45060:28;;;;45019:80;45109:30;;;;;;;41841:3305;;;;;:::o;46457:279::-;46581:19;46638:44;46665:7;46674;46638:26;:44::i;:::-;46616:67;-1:-1:-1;46701:10:0;-1:-1:-1;;;;;46701:27:0;;;46693:36;;;;;45152:197;45207:6;;45250:72;45257:6;;45250:72;;-1:-1:-1;;45305:5:0;;45299:12;;;;45279:6;;45250:72;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:485:1:-;;111:3;104:4;96:6;92:17;88:27;78:2;;133:5;126;119:20;78:2;173:6;160:20;204:49;219:33;249:2;219:33;:::i;:::-;204:49;:::i;:::-;278:2;269:7;262:19;324:3;317:4;312:2;304:6;300:15;296:26;293:35;290:2;;;345:5;338;331:20;290:2;414;407:4;399:6;395:17;388:4;379:7;375:18;362:55;437:16;;;455:4;433:27;426:42;;;;441:7;68:431;-1:-1:-1;;68:431:1:o;504:166::-;583:13;;636:1;625:20;;;615:31;;605:2;;660:1;657;650:12;675:955;;800:4;788:9;783:3;779:19;775:30;772:2;;;822:5;815;808:20;772:2;859;853:9;901:4;893:6;889:17;972:6;960:10;957:22;936:18;924:10;921:34;918:62;915:2;;;983:9;915:2;1010;1003:22;1043:6;-1:-1:-1;1043:6:1;1073:23;;1105:35;1073:23;1105:35;:::i;:::-;1149:23;;1224:2;1209:18;;1196:32;1237:35;1196:32;1237:35;:::i;:::-;1300:2;1288:15;;1281:32;1374:2;1359:18;;;1346:32;1329:15;;;1322:57;1431:2;1416:18;;1403:32;1479:8;1466:22;;1454:35;;1444:2;;1503:1;1500;1493:12;1444:2;1535;1523:15;;1516:32;1582:41;1618:3;1603:19;;1582:41;:::i;:::-;1576:3;1568:6;1564:16;1557:67;;762:868;;;;:::o;1635:138::-;1705:20;;1734:33;1705:20;1734:33;:::i;1778:165::-;1858:13;;1911:6;1900:18;;1890:29;;1880:2;;1933:1;1930;1923:12;1948:410;;;2086:2;2074:9;2065:7;2061:23;2057:32;2054:2;;;2107:6;2099;2092:22;2054:2;2152:9;2139:23;2185:18;2177:6;2174:30;2171:2;;;2222:6;2214;2207:22;2171:2;2250:51;2293:7;2284:6;2273:9;2269:22;2250:51;:::i;:::-;2240:61;2348:2;2333:18;;;;2320:32;;-1:-1:-1;;;;2044:314:1:o;2363:216::-;;2484:2;2472:9;2463:7;2459:23;2455:32;2452:2;;;2505:6;2497;2490:22;2452:2;2533:40;2563:9;2533:40;:::i;:::-;2523:50;2442:137;-1:-1:-1;;;2442:137:1:o;2584:253::-;;;2722:2;2710:9;2701:7;2697:23;2693:32;2690:2;;;2743:6;2735;2728:22;2690:2;-1:-1:-1;;2771:16:1;;2827:2;2812:18;;;2806:25;2771:16;;2806:25;;-1:-1:-1;2680:157:1:o;2842:476::-;;;;2995:2;2983:9;2974:7;2970:23;2966:32;2963:2;;;3016:6;3008;3001:22;2963:2;3057:9;3044:23;3034:33;;3114:2;3103:9;3099:18;3086:32;3076:42;;3169:2;3158:9;3154:18;3141:32;3196:18;3188:6;3185:30;3182:2;;;3233:6;3225;3218:22;3182:2;3261:51;3304:7;3295:6;3284:9;3280:22;3261:51;:::i;:::-;3251:61;;;2953:365;;;;;:::o;3323:676::-;;3456:2;3444:9;3435:7;3431:23;3427:32;3424:2;;;3477:6;3469;3462:22;3424:2;3515:9;3509:16;3548:18;3540:6;3537:30;3534:2;;;3585:6;3577;3570:22;3534:2;3613:22;;3666:4;3658:13;;3654:27;-1:-1:-1;3644:2:1;;3700:6;3692;3685:22;3644:2;3734;3728:9;3759:49;3774:33;3804:2;3774:33;:::i;3759:49::-;3831:2;3824:5;3817:17;3871:7;3866:2;3861;3857;3853:11;3849:20;3846:33;3843:2;;;3897:6;3889;3882:22;3843:2;3915:54;3966:2;3961;3954:5;3950:14;3945:2;3941;3937:11;3915:54;:::i;4004:280::-;;4160:3;4148:9;4139:7;4135:23;4131:33;4128:2;;;4182:6;4174;4167:22;4128:2;4210:68;4270:7;4259:9;4210:68;:::i;4575:945::-;;;;;;;;4790:3;4778:9;4769:7;4765:23;4761:33;4758:2;;;4812:6;4804;4797:22;4758:2;4849:9;4843:16;4868:33;4895:5;4868:33;:::i;:::-;4920:5;-1:-1:-1;4944:49:1;4989:2;4974:18;;4944:49;:::i;:::-;4934:59;;5012:50;5058:2;5047:9;5043:18;5012:50;:::i;:::-;5002:60;;5081:50;5127:2;5116:9;5112:18;5081:50;:::i;:::-;5071:60;;5150:51;5196:3;5185:9;5181:19;5150:51;:::i;:::-;5140:61;;5246:3;5235:9;5231:19;5225:26;5295:4;5286:7;5282:18;5273:7;5270:31;5260:2;;5320:6;5312;5305:22;5260:2;5400:3;5385:19;;5379:26;5348:7;;-1:-1:-1;5443:15:1;;5436:23;5424:36;;5414:2;;5479:6;5471;5464:22;5414:2;5507:7;5497:17;;;4748:772;;;;;;;;;;:::o;5525:194::-;;5648:2;5636:9;5627:7;5623:23;5619:32;5616:2;;;5669:6;5661;5654:22;5616:2;-1:-1:-1;5697:16:1;;5606:113;-1:-1:-1;5606:113:1:o;5724:407::-;;;;5879:2;5867:9;5858:7;5854:23;5850:32;5847:2;;;5900:6;5892;5885:22;5847:2;5934:9;5928:16;5918:26;;5987:2;5976:9;5972:18;5966:25;6000:33;6027:5;6000:33;:::i;:::-;6052:5;-1:-1:-1;6076:49:1;6121:2;6106:18;;6076:49;:::i;:::-;6066:59;;5837:294;;;;;:::o;6136:259::-;;6217:5;6211:12;6244:6;6239:3;6232:19;6260:63;6316:6;6309:4;6304:3;6300:14;6293:4;6286:5;6282:16;6260:63;:::i;:::-;6377:2;6356:15;-1:-1:-1;;6352:29:1;6343:39;;;;6384:4;6339:50;;6187:208;-1:-1:-1;;6187:208:1:o;6400:431::-;6653:2;6649:15;;;-1:-1:-1;;6645:24:1;;;6633:37;;6726:3;6704:16;;;;-1:-1:-1;;;;;;6700:41:1;6695:2;6686:12;;6679:63;6776:15;;6772:24;6767:2;6758:12;;6751:46;6822:2;6813:12;;6573:258::o;6836:503::-;-1:-1:-1;;;;;;7122:26:1;;7185:2;7181:15;;;;-1:-1:-1;;7177:53:1;7173:1;7164:11;;7157:74;7256:2;7247:12;;7240:28;;;;7293:2;7284:12;;7277:28;7330:2;7321:12;;7112:227::o;7344:203::-;-1:-1:-1;;;;;7508:32:1;;;;7490:51;;7478:2;7463:18;;7445:102::o;7552:388::-;-1:-1:-1;;;;;7808:15:1;;;7790:34;;7860:15;;;;7855:2;7840:18;;7833:43;7924:8;7912:21;;;7907:2;7892:18;;7885:49;7740:2;7725:18;;7707:233::o;7945:570::-;-1:-1:-1;;;;;8234:15:1;;;8216:34;;8293:14;;8286:22;8281:2;8266:18;;8259:50;8340:2;8325:18;;8318:34;;;8388:15;;8383:2;8368:18;;8361:43;8196:3;8435;8420:19;;8413:32;;;7945:570;;8462:47;;8489:19;;8481:6;8462:47;:::i;:::-;8454:55;8168:347;-1:-1:-1;;;;;;;8168:347:1:o;8520:188::-;8691:1;8680:21;;;;8662:40;;8650:2;8635:18;;8617:91::o;8713:221::-;;8862:2;8851:9;8844:21;8882:46;8924:2;8913:9;8909:18;8901:6;8882:46;:::i;8939:341::-;9141:2;9123:21;;;9180:2;9160:18;;;9153:30;-1:-1:-1;;;9214:2:1;9199:18;;9192:47;9271:2;9256:18;;9113:167::o;9285:338::-;9487:2;9469:21;;;9526:2;9506:18;;;9499:30;-1:-1:-1;;;9560:2:1;9545:18;;9538:44;9614:2;9599:18;;9459:164::o;9628:344::-;9830:2;9812:21;;;9869:2;9849:18;;;9842:30;-1:-1:-1;;;9903:2:1;9888:18;;9881:50;9963:2;9948:18;;9802:170::o;9977:340::-;10179:2;10161:21;;;10218:2;10198:18;;;10191:30;-1:-1:-1;;;10252:2:1;10237:18;;10230:46;10308:2;10293:18;;10151:166::o;10322:345::-;10524:2;10506:21;;;10563:2;10543:18;;;10536:30;-1:-1:-1;;;10597:2:1;10582:18;;10575:51;10658:2;10643:18;;10496:171::o;10672:341::-;10874:2;10856:21;;;10913:2;10893:18;;;10886:30;-1:-1:-1;;;10947:2:1;10932:18;;10925:47;11004:2;10989:18;;10846:167::o;11018:342::-;11220:2;11202:21;;;11259:2;11239:18;;;11232:30;-1:-1:-1;;;11293:2:1;11278:18;;11271:48;11351:2;11336:18;;11192:168::o;11365:1342::-;;11687:3;11676:9;11672:19;11718:6;11707:9;11700:25;11744:2;11782:3;11777:2;11766:9;11762:18;11755:31;11806:6;11841;11835:13;11872:6;11864;11857:22;11910:3;11899:9;11895:19;11888:26;;11949:2;11941:6;11937:15;11923:29;;11970:4;11983:195;11997:6;11994:1;11991:13;11983:195;;;12062:13;;-1:-1:-1;;;;;12058:39:1;12046:52;;12153:15;;;;12118:12;;;;12094:1;12012:9;11983:195;;;-1:-1:-1;;12214:19:1;;;12209:2;12194:18;;12187:47;12284:13;;12306:21;;;12345:12;;;;-1:-1:-1;12382:15:1;;;;12417:4;12430:206;12446:8;12441:3;12438:17;12430:206;;;12519:15;;12536:10;12515:32;12501:47;;12570:14;;;;12609:17;;;;12474:1;12465:11;12430:206;;;-1:-1:-1;;;;12689:2:1;12674:18;;;;12667:34;;;;12653:5;11648:1059;-1:-1:-1;;;;11648:1059:1:o;12712:432::-;12941:25;;;-1:-1:-1;;;;;13002:32:1;;;;12997:2;12982:18;;12975:60;13083:10;13071:23;13066:2;13051:18;;13044:51;13126:2;13111:18;;13104:34;12928:3;12913:19;;12895:249::o;13149:242::-;13219:2;13213:9;13249:17;;;13296:18;13281:34;;13317:22;;;13278:62;13275:2;;;13343:9;13275:2;13370;13363:22;13193:198;;-1:-1:-1;13193:198:1:o;13396:181::-;;13479:18;13471:6;13468:30;13465:2;;;13501:9;13465:2;-1:-1:-1;13560:2:1;13537:17;-1:-1:-1;;13533:31:1;13566:4;13529:42;;13455:122::o;13582:258::-;13654:1;13664:113;13678:6;13675:1;13672:13;13664:113;;;13754:11;;;13748:18;13735:11;;;13728:39;13700:2;13693:10;13664:113;;;13795:6;13792:1;13789:13;13786:2;;;13830:1;13821:6;13816:3;13812:16;13805:27;13786:2;;13635:205;;;:::o;13845:133::-;-1:-1:-1;;;;;13922:31:1;;13912:42;;13902:2;;13968:1;13965;13958:12;13902:2;13892:86;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1421000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH9()": "infinite",
								"factory()": "infinite",
								"quoteExactInput(bytes,uint256)": "infinite",
								"quoteExactInputSingle((address,address,uint256,uint24,uint160))": "infinite",
								"quoteExactOutput(bytes,uint256)": "infinite",
								"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": "infinite",
								"uniswapV3SwapCallback(int256,int256,bytes)": "infinite"
							},
							"internal": {
								"getPool(address,address,uint24)": "infinite",
								"handleRevert(bytes memory,contract IUniswapV3Pool,uint256)": "infinite",
								"parseRevertReason(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 63769,
									"end": 73102,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 64095,
									"end": 64185,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9770,
									"end": 9784,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9770,
									"end": 9784,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9770,
									"end": 9784,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9770,
									"end": 9784,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 9770,
									"end": 9784,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 193,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 193,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 95,
									"end": 108,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 95,
									"end": 108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 137,
									"end": 168,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 137,
									"end": 168,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 127,
									"end": 169,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 127,
									"end": 169,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 117,
									"end": 119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 183,
									"end": 184,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 181,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 173,
									"end": 185,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 117,
									"end": 119,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 198,
									"end": 505,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 338,
									"end": 340,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 326,
									"end": 335,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 317,
									"end": 324,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 313,
									"end": 336,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 309,
									"end": 341,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 306,
									"end": 308,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 306,
									"end": 308,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 306,
									"end": 308,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 359,
									"end": 365,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 351,
									"end": 357,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 344,
									"end": 366,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 306,
									"end": 308,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 306,
									"end": 308,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 387,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 419,
									"end": 428,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 387,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 377,
									"end": 429,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 377,
									"end": 429,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 448,
									"end": 499,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 495,
									"end": 497,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 484,
									"end": 493,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 480,
									"end": 498,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 448,
									"end": 499,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 438,
									"end": 499,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 438,
									"end": 499,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 296,
									"end": 505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 296,
									"end": 505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 296,
									"end": 505,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 296,
									"end": 505,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 296,
									"end": 505,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "367"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "363"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 63769,
									"end": 73102,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f9781e692a78af0d4cf3d953b2910c65f323dcbfa5050a9175ebdcd49f284adb64736f6c63430007060033",
									".code": [
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "C45A0155"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "C45A0155"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "C6A5026A"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "CDCA1753"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "FA461E33"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "2F80BB1D"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "4AA4A4FC"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "BD21704A"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63769,
											"end": 73102,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71606,
											"end": 71622,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71636,
											"end": 71674,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 71688,
											"end": 71731,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71745,
											"end": 71764,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71827,
											"end": 71842,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 71827,
											"end": 71831,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 71827,
											"end": 71840,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 71827,
											"end": 71842,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 71827,
											"end": 71842,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 71827,
											"end": 71842,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71813,
											"end": 71843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71789,
											"end": 71843,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 71789,
											"end": 71843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71896,
											"end": 71911,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 71896,
											"end": 71900,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 71896,
											"end": 71909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 71896,
											"end": 71911,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 71896,
											"end": 71911,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 71896,
											"end": 71911,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71883,
											"end": 71912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71853,
											"end": 71912,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71853,
											"end": 71912,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71923,
											"end": 71932,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71946,
											"end": 73094,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 71946,
											"end": 73094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71974,
											"end": 71990,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71992,
											"end": 72007,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72009,
											"end": 72019,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72023,
											"end": 72045,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 72023,
											"end": 72027,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 72023,
											"end": 72043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 72023,
											"end": 72045,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 72023,
											"end": 72045,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 72023,
											"end": 72045,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71973,
											"end": 72045,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 71973,
											"end": 72045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71973,
											"end": 72045,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 71973,
											"end": 72045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71973,
											"end": 72045,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 71973,
											"end": 72045,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72140,
											"end": 72157,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72159,
											"end": 72185,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72187,
											"end": 72218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 72220,
											"end": 72240,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72260,
											"end": 72583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 72368,
											"end": 72375,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72411,
											"end": 72419,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72453,
											"end": 72462,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72493,
											"end": 72496,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72541,
											"end": 72542,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72304,
											"end": 72565,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72260,
											"end": 72282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 72260,
											"end": 72583,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 72260,
											"end": 72583,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 72260,
											"end": 72583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72139,
											"end": 72583,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72139,
											"end": 72583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72139,
											"end": 72583,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72139,
											"end": 72583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72139,
											"end": 72583,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72139,
											"end": 72583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72139,
											"end": 72583,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 72139,
											"end": 72583,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72625,
											"end": 72643,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72619,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 72620,
											"end": 72621,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72622,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72598,
											"end": 72643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72643,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 72598,
											"end": 72643,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72643,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72643,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72598,
											"end": 72643,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72690,
											"end": 72714,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72684,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 72685,
											"end": 72686,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72714,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 72657,
											"end": 72714,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72714,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72714,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72657,
											"end": 72714,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 72740,
											"end": 72749,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 72740,
											"end": 72749,
											"name": "SWAP12",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 72763,
											"end": 72790,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 72790,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 72790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72763,
											"end": 72790,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 72804,
											"end": 72807,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 72804,
											"end": 72807,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 72804,
											"end": 72807,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 72804,
											"end": 72807,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 72804,
											"end": 72807,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 72740,
											"end": 72749,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 72740,
											"end": 72749,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 72881,
											"end": 72904,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 72881,
											"end": 72885,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 72881,
											"end": 72902,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 72881,
											"end": 72904,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 72881,
											"end": 72904,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 72881,
											"end": 72904,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72877,
											"end": 73084,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 72877,
											"end": 73084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 72877,
											"end": 73084,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 72931,
											"end": 72947,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 72931,
											"end": 72935,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 72931,
											"end": 72945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 72931,
											"end": 72947,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 72931,
											"end": 72947,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 72931,
											"end": 72947,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72924,
											"end": 72947,
											"name": "SWAP14",
											"source": 0
										},
										{
											"begin": 72924,
											"end": 72947,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72877,
											"end": 73084,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 72877,
											"end": 73084,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72877,
											"end": 73084,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 72877,
											"end": 73084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 72994,
											"end": 73003,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 72986,
											"end": 73069,
											"name": "SWAP12",
											"source": 0
										},
										{
											"begin": 72986,
											"end": 73069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72986,
											"end": 73069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72986,
											"end": 73069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72986,
											"end": 73069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72986,
											"end": 73069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72986,
											"end": 73069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72986,
											"end": 73069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72986,
											"end": 73069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72986,
											"end": 73069,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 72986,
											"end": 73069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 72986,
											"end": 73069,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 72877,
											"end": 73084,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 72877,
											"end": 73084,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71946,
											"end": 73094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71946,
											"end": 73094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71946,
											"end": 73094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71946,
											"end": 73094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71946,
											"end": 73094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71946,
											"end": 73094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71946,
											"end": 73094,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71946,
											"end": 73094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 71946,
											"end": 73094,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71480,
											"end": 73100,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70429,
											"end": 70444,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 70429,
											"end": 70444,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70429,
											"end": 70444,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70429,
											"end": 70444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70412,
											"end": 70426,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70412,
											"end": 70426,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70517,
											"end": 70527,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 70517,
											"end": 70527,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 70517,
											"end": 70527,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70517,
											"end": 70527,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70237,
											"end": 70253,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70237,
											"end": 70253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70237,
											"end": 70253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 70237,
											"end": 70253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70237,
											"end": 70253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 70237,
											"end": 70253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70237,
											"end": 70253,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 70237,
											"end": 70253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 70412,
											"end": 70444,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70412,
											"end": 70444,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 70412,
											"end": 70444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70412,
											"end": 70444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70412,
											"end": 70444,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 70412,
											"end": 70444,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70412,
											"end": 70444,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 70412,
											"end": 70444,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70237,
											"end": 70253,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 70237,
											"end": 70253,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70476,
											"end": 70528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 70476,
											"end": 70528,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70429,
											"end": 70444,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70476,
											"end": 70483,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 70476,
											"end": 70528,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 70476,
											"end": 70528,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 70476,
											"end": 70528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70454,
											"end": 70528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70454,
											"end": 70528,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70652,
											"end": 70658,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 70652,
											"end": 70676,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70652,
											"end": 70676,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70652,
											"end": 70676,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 70652,
											"end": 70681,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70680,
											"end": 70681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70652,
											"end": 70681,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70648,
											"end": 70714,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70648,
											"end": 70714,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 70648,
											"end": 70714,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70701,
											"end": 70714,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70701,
											"end": 70714,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 70701,
											"end": 70714,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70701,
											"end": 70714,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70683,
											"end": 70698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70683,
											"end": 70714,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 70648,
											"end": 70714,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 70648,
											"end": 70714,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70724,
											"end": 70741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70744,
											"end": 70753,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 70724,
											"end": 70753,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70724,
											"end": 70753,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 70783,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 70779,
											"end": 70788,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 70788,
											"name": "PUSH",
											"source": 0,
											"value": "128ACB08"
										},
										{
											"begin": 70814,
											"end": 70818,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 70887,
											"end": 70897,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 70916,
											"end": 70940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 70916,
											"end": 70922,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 70916,
											"end": 70929,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70916,
											"end": 70929,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70916,
											"end": 70929,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70916,
											"end": 70938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 70916,
											"end": 70940,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 70916,
											"end": 70940,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 70916,
											"end": 70940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70915,
											"end": 70940,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70915,
											"end": 70940,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70958,
											"end": 70964,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 70958,
											"end": 70982,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70958,
											"end": 70982,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70958,
											"end": 70982,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 70958,
											"end": 70987,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70986,
											"end": 70987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70958,
											"end": 70987,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 70958,
											"end": 71129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 70958,
											"end": 71129,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71105,
											"end": 71111,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 71105,
											"end": 71129,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 71105,
											"end": 71129,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71105,
											"end": 71129,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70958,
											"end": 71129,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 70958,
											"end": 71129,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70958,
											"end": 71129,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 70958,
											"end": 71129,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71011,
											"end": 71021,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 71011,
											"end": 71081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 71011,
											"end": 71081,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71054,
											"end": 71081,
											"name": "PUSH",
											"source": 0,
											"value": "FFFD8963EFD1FC6A506488495D951D5263988D25"
										},
										{
											"begin": 71011,
											"end": 71081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 71011,
											"end": 71081,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 71011,
											"end": 71081,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 71011,
											"end": 71081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71024,
											"end": 71051,
											"name": "PUSH",
											"source": 0,
											"value": "1000276A4"
										},
										{
											"begin": 71011,
											"end": 71081,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 71011,
											"end": 71081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71164,
											"end": 71170,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 71164,
											"end": 71179,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71164,
											"end": 71179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71164,
											"end": 71179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71181,
											"end": 71187,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 71181,
											"end": 71191,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 71181,
											"end": 71191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71181,
											"end": 71191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71193,
											"end": 71199,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 71193,
											"end": 71207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71193,
											"end": 71207,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71193,
											"end": 71207,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 71147,
											"end": 71208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 70779,
											"end": 71222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71302,
											"end": 71311,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 71290,
											"end": 71299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 71290,
											"end": 71311,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 71276,
											"end": 71311,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 71276,
											"end": 71311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71329,
											"end": 71335,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 71329,
											"end": 71353,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 71329,
											"end": 71353,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 71329,
											"end": 71353,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 71329,
											"end": 71358,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 71357,
											"end": 71358,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71329,
											"end": 71358,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 71325,
											"end": 71382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 71367,
											"end": 71382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 71360,
											"end": 71382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 71360,
											"end": 71382,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 71325,
											"end": 71382,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 71325,
											"end": 71382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71418,
											"end": 71457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 71431,
											"end": 71437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 71439,
											"end": 71443,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 71445,
											"end": 71456,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 71418,
											"end": 71430,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 71418,
											"end": 71457,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 71418,
											"end": 71457,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 71418,
											"end": 71457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 71411,
											"end": 71457,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70763,
											"end": 71468,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 70099,
											"end": 71474,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 67365,
											"end": 68469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67694,
											"end": 67709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67694,
											"end": 67709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67694,
											"end": 67709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67694,
											"end": 67709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67677,
											"end": 67691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67677,
											"end": 67691,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67782,
											"end": 67792,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 67782,
											"end": 67792,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67782,
											"end": 67792,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67782,
											"end": 67792,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67501,
											"end": 67518,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67501,
											"end": 67518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67501,
											"end": 67518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67501,
											"end": 67518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67501,
											"end": 67518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67501,
											"end": 67518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67501,
											"end": 67518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67501,
											"end": 67518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 67677,
											"end": 67709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67677,
											"end": 67709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67677,
											"end": 67709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67677,
											"end": 67709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67677,
											"end": 67709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 67677,
											"end": 67709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67677,
											"end": 67709,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 67677,
											"end": 67709,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67501,
											"end": 67518,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 67501,
											"end": 67518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67741,
											"end": 67793,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 67741,
											"end": 67793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67694,
											"end": 67709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67741,
											"end": 67748,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 67741,
											"end": 67793,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 67741,
											"end": 67793,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 67741,
											"end": 67793,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67719,
											"end": 67793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67719,
											"end": 67793,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67804,
											"end": 67821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67824,
											"end": 67833,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 67804,
											"end": 67833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67804,
											"end": 67833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 67863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 67859,
											"end": 67868,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 67868,
											"name": "PUSH",
											"source": 0,
											"value": "128ACB08"
										},
										{
											"begin": 67894,
											"end": 67898,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 67967,
											"end": 67977,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 67995,
											"end": 68021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 67995,
											"end": 68001,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 67995,
											"end": 68010,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67995,
											"end": 68010,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67995,
											"end": 68010,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67995,
											"end": 68019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 67995,
											"end": 68021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 67995,
											"end": 68021,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 67995,
											"end": 68021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68039,
											"end": 68063,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 68039,
											"end": 68063,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 68039,
											"end": 68063,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68039,
											"end": 68063,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 68039,
											"end": 68068,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 68039,
											"end": 68068,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68039,
											"end": 68210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 68039,
											"end": 68210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68186,
											"end": 68192,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 68186,
											"end": 68210,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 68186,
											"end": 68210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68186,
											"end": 68210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68039,
											"end": 68210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 68039,
											"end": 68210,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68039,
											"end": 68210,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 68039,
											"end": 68210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68092,
											"end": 68102,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 68092,
											"end": 68162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 68092,
											"end": 68162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68135,
											"end": 68162,
											"name": "PUSH",
											"source": 0,
											"value": "FFFD8963EFD1FC6A506488495D951D5263988D25"
										},
										{
											"begin": 68092,
											"end": 68162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 68092,
											"end": 68162,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 68092,
											"end": 68162,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 68092,
											"end": 68162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68105,
											"end": 68132,
											"name": "PUSH",
											"source": 0,
											"value": "1000276A4"
										},
										{
											"begin": 68092,
											"end": 68162,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 68092,
											"end": 68162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68245,
											"end": 68251,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 68245,
											"end": 68259,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68245,
											"end": 68259,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68245,
											"end": 68259,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68261,
											"end": 68267,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 68261,
											"end": 68271,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 68261,
											"end": 68271,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68261,
											"end": 68271,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68273,
											"end": 68279,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 68273,
											"end": 68288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68273,
											"end": 68288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68273,
											"end": 68288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68228,
											"end": 68289,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 67859,
											"end": 68303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67843,
											"end": 68463,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68383,
											"end": 68392,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 68371,
											"end": 68380,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68371,
											"end": 68392,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 68357,
											"end": 68392,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 68357,
											"end": 68392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68413,
											"end": 68452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 68426,
											"end": 68432,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68434,
											"end": 68438,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 68440,
											"end": 68451,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 68413,
											"end": 68425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 68413,
											"end": 68452,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 68475,
											"end": 70093,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68599,
											"end": 68616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68630,
											"end": 68668,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 68682,
											"end": 68725,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68739,
											"end": 68758,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68821,
											"end": 68836,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 68821,
											"end": 68825,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 68821,
											"end": 68834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 68821,
											"end": 68836,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 68821,
											"end": 68836,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 68821,
											"end": 68836,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68807,
											"end": 68837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68783,
											"end": 68837,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 68783,
											"end": 68837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68890,
											"end": 68905,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 68890,
											"end": 68894,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 68890,
											"end": 68903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 68890,
											"end": 68905,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 68890,
											"end": 68905,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 68890,
											"end": 68905,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68877,
											"end": 68906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68847,
											"end": 68906,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 68847,
											"end": 68906,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68917,
											"end": 68926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68940,
											"end": 70087,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 68940,
											"end": 70087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68968,
											"end": 68983,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 68985,
											"end": 69001,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69003,
											"end": 69013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69017,
											"end": 69039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 69017,
											"end": 69021,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 69017,
											"end": 69037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 69017,
											"end": 69039,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 69017,
											"end": 69039,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 69017,
											"end": 69039,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 68967,
											"end": 69039,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 68967,
											"end": 69039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68967,
											"end": 69039,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 68967,
											"end": 69039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68967,
											"end": 69039,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 68967,
											"end": 69039,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69134,
											"end": 69152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69154,
											"end": 69180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69182,
											"end": 69213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 69215,
											"end": 69235,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69255,
											"end": 69577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 69361,
											"end": 69368,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69404,
											"end": 69412,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69482,
											"end": 69490,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69443,
											"end": 69446,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69535,
											"end": 69536,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69298,
											"end": 69559,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69255,
											"end": 69276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 69255,
											"end": 69577,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 69255,
											"end": 69577,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 69255,
											"end": 69577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69133,
											"end": 69577,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 69133,
											"end": 69577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69133,
											"end": 69577,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 69133,
											"end": 69577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69133,
											"end": 69577,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 69133,
											"end": 69577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69133,
											"end": 69577,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 69133,
											"end": 69577,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69619,
											"end": 69637,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69613,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 69614,
											"end": 69615,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 69592,
											"end": 69637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69637,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 69592,
											"end": 69637,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69637,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69637,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69592,
											"end": 69637,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 69684,
											"end": 69708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69678,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 69679,
											"end": 69680,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69708,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 69651,
											"end": 69708,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69708,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69708,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69651,
											"end": 69708,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 69733,
											"end": 69743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69733,
											"end": 69743,
											"name": "SWAP12",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 69757,
											"end": 69784,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 69757,
											"end": 69784,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 69757,
											"end": 69784,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69757,
											"end": 69784,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 69798,
											"end": 69801,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 69798,
											"end": 69801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 69798,
											"end": 69801,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 69798,
											"end": 69801,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 69798,
											"end": 69801,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 69733,
											"end": 69743,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 69733,
											"end": 69743,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 69875,
											"end": 69898,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 69875,
											"end": 69879,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 69875,
											"end": 69896,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 69875,
											"end": 69898,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 69875,
											"end": 69898,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 69875,
											"end": 69898,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69871,
											"end": 70077,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 69871,
											"end": 70077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 69871,
											"end": 70077,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 69925,
											"end": 69941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 69925,
											"end": 69929,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 69925,
											"end": 69939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 69925,
											"end": 69941,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 69925,
											"end": 69941,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 69925,
											"end": 69941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 69918,
											"end": 69941,
											"name": "SWAP14",
											"source": 0
										},
										{
											"begin": 69918,
											"end": 69941,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68940,
											"end": 70087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68940,
											"end": 70087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68940,
											"end": 70087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68940,
											"end": 70087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68940,
											"end": 70087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68940,
											"end": 70087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68940,
											"end": 70087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 68940,
											"end": 70087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 68940,
											"end": 70087,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 64489,
											"end": 66094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64667,
											"end": 64668,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64652,
											"end": 64664,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 64652,
											"end": 64668,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 64652,
											"end": 64688,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64652,
											"end": 64688,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 64652,
											"end": 64688,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64652,
											"end": 64688,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64687,
											"end": 64688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64672,
											"end": 64684,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 64672,
											"end": 64688,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 64652,
											"end": 64688,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 64652,
											"end": 64688,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64644,
											"end": 64689,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 64644,
											"end": 64689,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 64644,
											"end": 64689,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64644,
											"end": 64689,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64644,
											"end": 64689,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 64644,
											"end": 64689,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 64644,
											"end": 64689,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64763,
											"end": 64778,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64780,
											"end": 64796,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64798,
											"end": 64808,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64812,
											"end": 64834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 64812,
											"end": 64816,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 64812,
											"end": 64832,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 64812,
											"end": 64834,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 64812,
											"end": 64834,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 64812,
											"end": 64834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64762,
											"end": 64834,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 64762,
											"end": 64834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64762,
											"end": 64834,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 64762,
											"end": 64834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64762,
											"end": 64834,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 64762,
											"end": 64834,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64844,
											"end": 64910,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 64878,
											"end": 64885,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 64887,
											"end": 64894,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 64896,
											"end": 64904,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 64906,
											"end": 64909,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 64844,
											"end": 64877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 64844,
											"end": 64910,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 64844,
											"end": 64910,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 64844,
											"end": 64910,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64844,
											"end": 64910,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64922,
											"end": 64939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64941,
											"end": 64960,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 64962,
											"end": 64984,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65015,
											"end": 65016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65000,
											"end": 65012,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 65000,
											"end": 65016,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 65000,
											"end": 65188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 65000,
											"end": 65188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65133,
											"end": 65140,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 65122,
											"end": 65140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 65122,
											"end": 65130,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 65122,
											"end": 65140,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 65122,
											"end": 65140,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 65150,
											"end": 65162,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 65174,
											"end": 65186,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 65173,
											"end": 65186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65173,
											"end": 65186,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 65000,
											"end": 65188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 65000,
											"end": 65188,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 65000,
											"end": 65188,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 65000,
											"end": 65188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65046,
											"end": 65054,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 65036,
											"end": 65054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 65036,
											"end": 65043,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 65036,
											"end": 65054,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 65036,
											"end": 65054,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 65064,
											"end": 65076,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 65088,
											"end": 65100,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 65087,
											"end": 65100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65087,
											"end": 65100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 65000,
											"end": 65188,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 65000,
											"end": 65188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64921,
											"end": 65188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 64921,
											"end": 65188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64921,
											"end": 65188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 64921,
											"end": 65188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 64921,
											"end": 65188,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 64921,
											"end": 65188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65199,
											"end": 65218,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65221,
											"end": 65252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 65229,
											"end": 65236,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 65238,
											"end": 65246,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 65248,
											"end": 65251,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 65221,
											"end": 65228,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 65221,
											"end": 65252,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 65221,
											"end": 65252,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 65221,
											"end": 65252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65199,
											"end": 65252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 65199,
											"end": 65252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65263,
											"end": 65288,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65290,
											"end": 65305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 65319,
											"end": 65329,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65329,
											"name": "PUSH",
											"source": 0,
											"value": "3850C7BD"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 65319,
											"end": 65331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65262,
											"end": 65331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65262,
											"end": 65331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65262,
											"end": 65331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65262,
											"end": 65331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65262,
											"end": 65331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65262,
											"end": 65331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 65262,
											"end": 65331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65262,
											"end": 65331,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 65262,
											"end": 65331,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 65346,
											"end": 65358,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 65342,
											"end": 66088,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 65342,
											"end": 66088,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 65342,
											"end": 66088,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65418,
											"end": 65422,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65412,
											"end": 65423,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 65452,
											"end": 65466,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 65447,
											"end": 65450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 65440,
											"end": 65467,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65507,
											"end": 65524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 65500,
											"end": 65504,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 65495,
											"end": 65498,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 65491,
											"end": 65505,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 65484,
											"end": 65525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65565,
											"end": 65574,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 65558,
											"end": 65562,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65553,
											"end": 65556,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 65549,
											"end": 65563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 65542,
											"end": 65575,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65604,
											"end": 65606,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 65599,
											"end": 65602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 65592,
											"end": 65607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 65383,
											"end": 65621,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 65383,
											"end": 65621,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65756,
											"end": 65771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65756,
											"end": 65771,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 65756,
											"end": 65776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 65752,
											"end": 65820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 65752,
											"end": 65820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65804,
											"end": 65819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65804,
											"end": 65819,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 65786,
											"end": 65800,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 65786,
											"end": 65819,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 65778,
											"end": 65820,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 65778,
											"end": 65820,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 65778,
											"end": 65820,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 65778,
											"end": 65820,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 65778,
											"end": 65820,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 65778,
											"end": 65820,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 65778,
											"end": 65820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 65878,
											"end": 65882,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 65872,
											"end": 65883,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 65912,
											"end": 65923,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 65907,
											"end": 65910,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 65900,
											"end": 65924,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 65964,
											"end": 65981,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 65957,
											"end": 65961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 65952,
											"end": 65955,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 65948,
											"end": 65962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 65941,
											"end": 65982,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66022,
											"end": 66031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66015,
											"end": 66019,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66010,
											"end": 66013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 66006,
											"end": 66020,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 65999,
											"end": 66032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66061,
											"end": 66063,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 66056,
											"end": 66059,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66049,
											"end": 66064,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7557,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7322,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7522,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7522,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6567,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7511,
											"end": 7534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7534,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7511,
											"end": 7534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7510,
											"end": 7549,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7557,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 7322,
											"end": 7557,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7557,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7557,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7557,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7322,
											"end": 7557,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7923,
											"end": 7937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8023,
											"end": 8027,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8023,
											"end": 8040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8023,
											"end": 8040,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 8023,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8040,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8056,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6344,
											"end": 6346,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8056,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 8056,
											"end": 8080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8056,
											"end": 8080,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 8056,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8099,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 8099,
											"end": 8103,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6567,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 8099,
											"end": 8126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8099,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 8099,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7032,
											"end": 7170,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 7032,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7123,
											"end": 7134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6841,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 7123,
											"end": 7163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7123,
											"end": 7163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7032,
											"end": 7170,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8675,
											"end": 8824,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 8675,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8791,
											"end": 8802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8791,
											"end": 8802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8767,
											"end": 8817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8791,
											"end": 8795,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8791,
											"end": 8795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6567,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6547,
											"end": 6567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "16"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8791,
											"end": 8816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 8767,
											"end": 8817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8767,
											"end": 8817,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 8767,
											"end": 8817,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8760,
											"end": 8817,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8675,
											"end": 8824,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8675,
											"end": 8824,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 64191,
											"end": 64440,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 64191,
											"end": 64440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64304,
											"end": 64318,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 64352,
											"end": 64432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 64379,
											"end": 64386,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 64388,
											"end": 64431,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 64411,
											"end": 64417,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 64419,
											"end": 64425,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 64427,
											"end": 64430,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 64388,
											"end": 64410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 64388,
											"end": 64431,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 64388,
											"end": 64431,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 64388,
											"end": 64431,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64352,
											"end": 64378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 64352,
											"end": 64432,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 64352,
											"end": 64432,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 64352,
											"end": 64432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 64330,
											"end": 64433,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 64191,
											"end": 64440,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 64191,
											"end": 64440,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 63256,
											"end": 63377,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 63256,
											"end": 63377,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 63308,
											"end": 63316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 63336,
											"end": 63337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 63336,
											"end": 63346,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 63328,
											"end": 63347,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 63328,
											"end": 63347,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 63328,
											"end": 63347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 63328,
											"end": 63347,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 63328,
											"end": 63347,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 63328,
											"end": 63347,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 63328,
											"end": 63347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 63368,
											"end": 63369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 63256,
											"end": 63377,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 66693,
											"end": 67359,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 66693,
											"end": 67359,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66867,
											"end": 66881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66895,
											"end": 66920,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66934,
											"end": 66964,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66978,
											"end": 66985,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67010,
											"end": 67026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67036,
											"end": 67051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67092,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 67088,
											"end": 67098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67098,
											"name": "PUSH",
											"source": 0,
											"value": "3850C7BD"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 67088,
											"end": 67100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67061,
											"end": 67100,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 67061,
											"end": 67100,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67151,
											"end": 67176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 67151,
											"end": 67176,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67169,
											"end": 67175,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 67169,
											"end": 67175,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67151,
											"end": 67168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 67151,
											"end": 67168,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67151,
											"end": 67176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 67151,
											"end": 67176,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 67151,
											"end": 67176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67110,
											"end": 67176,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 67110,
											"end": 67176,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67110,
											"end": 67176,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67110,
											"end": 67176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67213,
											"end": 67269,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 67213,
											"end": 67246,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 67213,
											"end": 67246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 67247,
											"end": 67257,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67110,
											"end": 67176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 67213,
											"end": 67246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 67213,
											"end": 67269,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 67213,
											"end": 67269,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 67213,
											"end": 67269,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 67187,
											"end": 67269,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 67340,
											"end": 67351,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 67340,
											"end": 67351,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 66693,
											"end": 67359,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 66693,
											"end": 67359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66693,
											"end": 67359,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 66693,
											"end": 67359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66693,
											"end": 67359,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 66693,
											"end": 67359,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66693,
											"end": 67359,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 66693,
											"end": 67359,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 45951,
											"end": 46210,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 45951,
											"end": 46210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46097,
											"end": 46116,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46135,
											"end": 46203,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 46150,
											"end": 46157,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 46159,
											"end": 46202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 46182,
											"end": 46188,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46190,
											"end": 46196,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46198,
											"end": 46201,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 46159,
											"end": 46181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 46159,
											"end": 46202,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46159,
											"end": 46202,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 46159,
											"end": 46202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46135,
											"end": 46149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 46135,
											"end": 46203,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46135,
											"end": 46203,
											"name": "tag",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 46135,
											"end": 46203,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46128,
											"end": 46203,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 45951,
											"end": 46210,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 45951,
											"end": 46210,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5279,
											"end": 5695,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 5279,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5358,
											"end": 5365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5400,
											"end": 5406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5394,
											"end": 5396,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5385,
											"end": 5396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5406,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5406,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5464,
											"end": 5470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5473,
											"end": 5475,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5464,
											"end": 5475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5475,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5589,
											"end": 5619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5605,
											"end": 5609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5583,
											"end": 5620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5695,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5701,
											"end": 6066,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 5701,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5819,
											"end": 5825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5805,
											"end": 5811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5814,
											"end": 5815,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5805,
											"end": 5815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5805,
											"end": 5825,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5805,
											"end": 5825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5891,
											"end": 5892,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5882,
											"end": 5892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5865,
											"end": 5871,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5865,
											"end": 5878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5865,
											"end": 5892,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5865,
											"end": 5892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5994,
											"end": 6023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6013,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5994,
											"end": 6023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5988,
											"end": 6024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5988,
											"end": 6024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 6066,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2266,
											"end": 5273,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 2266,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2400,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2436,
											"end": 2443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2432,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2420,
											"end": 2432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2443,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2443,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2506,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2549,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2576,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "tag",
											"source": 0,
											"value": "197"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2631,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2672,
											"end": 2687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 4803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 4803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2704,
											"end": 4803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4956,
											"end": 4960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4937,
											"end": 4961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4937,
											"end": 4961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5143,
											"end": 5152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5136,
											"end": 5156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5195,
											"end": 5204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5191,
											"end": 5211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2665,
											"end": 5230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 4803,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 2704,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2898,
											"end": 2902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2892,
											"end": 2903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3595,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3584,
											"end": 3591,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 3596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 4004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4005,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3964,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 4007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4054,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4321,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4310,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4311,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4284,
											"end": 4312,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4281,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4270,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 4260,
											"end": 4282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4352,
											"end": 4355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4356,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4560,
											"end": 4586,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4560,
											"end": 4586,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4560,
											"end": 4586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4780,
											"end": 4782,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4763,
											"end": 4774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2665,
											"end": 5230,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 2665,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 5273,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2266,
											"end": 5273,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 831,
											"end": 1105,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 831,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 987,
											"end": 993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 978,
											"end": 993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 978,
											"end": 984,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 978,
											"end": 993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 978,
											"end": 993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 831,
											"end": 1105,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1864,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 1352,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1468,
											"end": 1491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1468,
											"end": 1491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1491,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1742,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 288,
											"end": 354,
											"name": "PUSH",
											"source": 0,
											"value": "E34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54"
										},
										{
											"begin": 288,
											"end": 354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1864,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1864,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 66174,
											"end": 66687,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 66174,
											"end": 66687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66281,
											"end": 66295,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66309,
											"end": 66334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66348,
											"end": 66363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 66392,
											"end": 66398,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 66392,
											"end": 66405,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66409,
											"end": 66411,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 66392,
											"end": 66411,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 66388,
											"end": 66619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 66388,
											"end": 66619,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66447,
											"end": 66449,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 66431,
											"end": 66437,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 66431,
											"end": 66444,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66431,
											"end": 66449,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 66427,
											"end": 66477,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 66427,
											"end": 66477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 66427,
											"end": 66477,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 66451,
											"end": 66477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66451,
											"end": 66477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 66451,
											"end": 66477,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66451,
											"end": 66477,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66451,
											"end": 66477,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66451,
											"end": 66477,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66451,
											"end": 66477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 66451,
											"end": 66477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66451,
											"end": 66477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 66451,
											"end": 66477,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 66427,
											"end": 66477,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 66427,
											"end": 66477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66540,
											"end": 66544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66532,
											"end": 66538,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 66528,
											"end": 66545,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66518,
											"end": 66545,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 66518,
											"end": 66545,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66590,
											"end": 66596,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 66579,
											"end": 66607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66572,
											"end": 66608,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 66572,
											"end": 66608,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 66572,
											"end": 66608,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66572,
											"end": 66608,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 66572,
											"end": 66608,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 66572,
											"end": 66608,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66572,
											"end": 66608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 66572,
											"end": 66608,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66572,
											"end": 66608,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66572,
											"end": 66608,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "223"
										},
										{
											"begin": 66572,
											"end": 66608,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 66388,
											"end": 66619,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 66388,
											"end": 66619,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66646,
											"end": 66652,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 66635,
											"end": 66680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 66628,
											"end": 66680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 66628,
											"end": 66680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66628,
											"end": 66680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 66628,
											"end": 66680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66628,
											"end": 66680,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 66628,
											"end": 66680,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66174,
											"end": 66687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 66174,
											"end": 66687,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 66174,
											"end": 66687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 66174,
											"end": 66687,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 66174,
											"end": 66687,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 66174,
											"end": 66687,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 41841,
											"end": 45146,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 41841,
											"end": 45146,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41988,
											"end": 42018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42030,
											"end": 42048,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42058,
											"end": 42077,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42087,
											"end": 42104,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42114,
											"end": 42132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42142,
											"end": 42168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42178,
											"end": 42203,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42331,
											"end": 42344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42390,
											"end": 42391,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 42367,
											"end": 42371,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42367,
											"end": 42383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42383,
											"name": "PUSH",
											"source": 0,
											"value": "D0C93A7C"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 42367,
											"end": 42385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42354,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42354,
											"end": 42385,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 42354,
											"end": 42364,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 42354,
											"end": 42385,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42354,
											"end": 42385,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 42354,
											"end": 42385,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42354,
											"end": 42385,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 42354,
											"end": 42385,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42354,
											"end": 42385,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 42354,
											"end": 42385,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 42354,
											"end": 42385,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42354,
											"end": 42385,
											"name": "SDIV",
											"source": 0
										},
										{
											"begin": 42353,
											"end": 42391,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42353,
											"end": 42391,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 42353,
											"end": 42391,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42353,
											"end": 42391,
											"name": "SAR",
											"source": 0
										},
										{
											"begin": 42331,
											"end": 42392,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42331,
											"end": 42392,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42406,
											"end": 42418,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42463,
											"end": 42466,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42441,
											"end": 42445,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42441,
											"end": 42457,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42457,
											"name": "PUSH",
											"source": 0,
											"value": "D0C93A7C"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 42441,
											"end": 42459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42428,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42428,
											"end": 42459,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 42428,
											"end": 42438,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 42428,
											"end": 42459,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42428,
											"end": 42459,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 42428,
											"end": 42459,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42428,
											"end": 42459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 42428,
											"end": 42459,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42428,
											"end": 42459,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 42428,
											"end": 42459,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 42428,
											"end": 42459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42428,
											"end": 42459,
											"name": "SDIV",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42466,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42427,
											"end": 42466,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 42427,
											"end": 42466,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42466,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42466,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 42427,
											"end": 42466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42427,
											"end": 42466,
											"name": "SMOD",
											"source": 0
										},
										{
											"begin": 42406,
											"end": 42467,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42406,
											"end": 42467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42482,
											"end": 42500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42545,
											"end": 42546,
											"name": "PUSH",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 42522,
											"end": 42526,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42522,
											"end": 42538,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42538,
											"name": "PUSH",
											"source": 0,
											"value": "D0C93A7C"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "tag",
											"source": 0,
											"value": "241"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "tag",
											"source": 0,
											"value": "242"
										},
										{
											"begin": 42522,
											"end": 42540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42510,
											"end": 42540,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42519,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42540,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42510,
											"end": 42540,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42540,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 42510,
											"end": 42540,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42540,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42540,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 42510,
											"end": 42540,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42510,
											"end": 42540,
											"name": "SDIV",
											"source": 0
										},
										{
											"begin": 42509,
											"end": 42546,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42509,
											"end": 42546,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 42509,
											"end": 42546,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42509,
											"end": 42546,
											"name": "SAR",
											"source": 0
										},
										{
											"begin": 42482,
											"end": 42547,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42482,
											"end": 42547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42561,
											"end": 42578,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42622,
											"end": 42625,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 42600,
											"end": 42604,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42600,
											"end": 42616,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42616,
											"name": "PUSH",
											"source": 0,
											"value": "D0C93A7C"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 42600,
											"end": 42618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42588,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42588,
											"end": 42618,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 42588,
											"end": 42597,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 42588,
											"end": 42618,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42588,
											"end": 42618,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 42588,
											"end": 42618,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42588,
											"end": 42618,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 42588,
											"end": 42618,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42588,
											"end": 42618,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 42588,
											"end": 42618,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 42588,
											"end": 42618,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42588,
											"end": 42618,
											"name": "SDIV",
											"source": 0
										},
										{
											"begin": 42587,
											"end": 42625,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42587,
											"end": 42625,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 42587,
											"end": 42625,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42587,
											"end": 42625,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 42587,
											"end": 42625,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42587,
											"end": 42625,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 42587,
											"end": 42625,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 42587,
											"end": 42625,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42587,
											"end": 42625,
											"name": "SMOD",
											"source": 0
										},
										{
											"begin": 42561,
											"end": 42626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42561,
											"end": 42626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43101,
											"end": 43102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43085,
											"end": 43096,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43080,
											"end": 43096,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 43080,
											"end": 43096,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43080,
											"end": 43081,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43080,
											"end": 43096,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43080,
											"end": 43096,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43051,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43047,
											"end": 43062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43062,
											"name": "PUSH",
											"source": 0,
											"value": "5339C296"
										},
										{
											"begin": 43063,
											"end": 43075,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 43047,
											"end": 43076,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43047,
											"end": 43097,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43046,
											"end": 43102,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43045,
											"end": 43162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43045,
											"end": 43162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43045,
											"end": 43162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 43045,
											"end": 43162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43045,
											"end": 43162,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43141,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43137,
											"end": 43153,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43153,
											"name": "PUSH",
											"source": 0,
											"value": "D0C93A7C"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "tag",
											"source": 0,
											"value": "260"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "tag",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 43137,
											"end": 43155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43125,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43125,
											"end": 43155,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43125,
											"end": 43134,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 43125,
											"end": 43155,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43125,
											"end": 43155,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43125,
											"end": 43155,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43125,
											"end": 43155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 43125,
											"end": 43155,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43125,
											"end": 43155,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 43125,
											"end": 43155,
											"name": "tag",
											"source": 0,
											"value": "262"
										},
										{
											"begin": 43125,
											"end": 43155,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43125,
											"end": 43155,
											"name": "SMOD",
											"source": 0
										},
										{
											"begin": 43124,
											"end": 43161,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43124,
											"end": 43161,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43124,
											"end": 43161,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43045,
											"end": 43162,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 43045,
											"end": 43162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43045,
											"end": 43206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43045,
											"end": 43206,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43045,
											"end": 43206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 43045,
											"end": 43206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43045,
											"end": 43206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43196,
											"end": 43205,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 43183,
											"end": 43205,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43183,
											"end": 43205,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43183,
											"end": 43193,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 43183,
											"end": 43205,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43183,
											"end": 43205,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43183,
											"end": 43205,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 43045,
											"end": 43206,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 43045,
											"end": 43206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43006,
											"end": 43206,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 43006,
											"end": 43206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43516,
											"end": 43517,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43505,
											"end": 43511,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43500,
											"end": 43511,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 43500,
											"end": 43511,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43500,
											"end": 43501,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43500,
											"end": 43511,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43500,
											"end": 43511,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43476,
											"name": "DUP16",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43472,
											"end": 43487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43487,
											"name": "PUSH",
											"source": 0,
											"value": "5339C296"
										},
										{
											"begin": 43488,
											"end": 43495,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "tag",
											"source": 0,
											"value": "267"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 43472,
											"end": 43496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43472,
											"end": 43512,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43471,
											"end": 43517,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43470,
											"end": 43578,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43470,
											"end": 43578,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43470,
											"end": 43578,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 43470,
											"end": 43578,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43470,
											"end": 43578,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43557,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 43553,
											"end": 43569,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43569,
											"name": "PUSH",
											"source": 0,
											"value": "D0C93A7C"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "tag",
											"source": 0,
											"value": "272"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "tag",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 43553,
											"end": 43571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43540,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43540,
											"end": 43571,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43540,
											"end": 43550,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 43540,
											"end": 43571,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43540,
											"end": 43571,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43540,
											"end": 43571,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43540,
											"end": 43571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 43540,
											"end": 43571,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43540,
											"end": 43571,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 43540,
											"end": 43571,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 43540,
											"end": 43571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43540,
											"end": 43571,
											"name": "SMOD",
											"source": 0
										},
										{
											"begin": 43539,
											"end": 43577,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43539,
											"end": 43577,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43539,
											"end": 43577,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43470,
											"end": 43578,
											"name": "tag",
											"source": 0,
											"value": "269"
										},
										{
											"begin": 43470,
											"end": 43578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43470,
											"end": 43622,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43470,
											"end": 43622,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43470,
											"end": 43622,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 43470,
											"end": 43622,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43470,
											"end": 43622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43612,
											"end": 43621,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 43599,
											"end": 43621,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43599,
											"end": 43621,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43599,
											"end": 43609,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 43599,
											"end": 43621,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 43599,
											"end": 43621,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43599,
											"end": 43621,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43470,
											"end": 43622,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 43470,
											"end": 43622,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43430,
											"end": 43622,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 43430,
											"end": 43622,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43651,
											"end": 43663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43641,
											"end": 43663,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43641,
											"end": 43663,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43641,
											"end": 43648,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43641,
											"end": 43663,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43641,
											"end": 43663,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43641,
											"end": 43663,
											"name": "SLT",
											"source": 0
										},
										{
											"begin": 43641,
											"end": 43717,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43641,
											"end": 43717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 43641,
											"end": 43717,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43641,
											"end": 43717,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43679,
											"end": 43691,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43668,
											"end": 43691,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43668,
											"end": 43691,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43668,
											"end": 43675,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43668,
											"end": 43691,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 43668,
											"end": 43691,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 43668,
											"end": 43691,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 43668,
											"end": 43716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43668,
											"end": 43716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43668,
											"end": 43716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 43668,
											"end": 43716,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43668,
											"end": 43716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43705,
											"end": 43716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43695,
											"end": 43716,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 43695,
											"end": 43716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43695,
											"end": 43701,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43695,
											"end": 43716,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 43695,
											"end": 43716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 43695,
											"end": 43716,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 43695,
											"end": 43716,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43668,
											"end": 43716,
											"name": "tag",
											"source": 0,
											"value": "277"
										},
										{
											"begin": 43668,
											"end": 43716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43637,
											"end": 44091,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 43637,
											"end": 44091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 43637,
											"end": 44091,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 43752,
											"end": 43759,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 43737,
											"end": 43759,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 43737,
											"end": 43759,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43791,
											"end": 43797,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 43777,
											"end": 43797,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 43777,
											"end": 43797,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43831,
											"end": 43843,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43815,
											"end": 43843,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 43815,
											"end": 43843,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43876,
											"end": 43887,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43861,
											"end": 43887,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 43861,
											"end": 43887,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43637,
											"end": 44091,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 43637,
											"end": 44091,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43637,
											"end": 44091,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 43637,
											"end": 44091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43941,
											"end": 43953,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 43926,
											"end": 43953,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 43926,
											"end": 43953,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43985,
											"end": 43996,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 43971,
											"end": 43996,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 43971,
											"end": 43996,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44030,
											"end": 44037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44014,
											"end": 44037,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 44014,
											"end": 44037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44070,
											"end": 44076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44055,
											"end": 44076,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 44055,
											"end": 44076,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43637,
											"end": 44091,
											"name": "tag",
											"source": 0,
											"value": "279"
										},
										{
											"begin": 43637,
											"end": 44091,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 44305,
											"end": 44337,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 44305,
											"end": 44337,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44305,
											"end": 44337,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44305,
											"end": 44337,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 44305,
											"end": 44337,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44347,
											"end": 44920,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 44347,
											"end": 44920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44370,
											"end": 44383,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44354,
											"end": 44383,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44354,
											"end": 44383,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 44354,
											"end": 44366,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44354,
											"end": 44383,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44354,
											"end": 44383,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 44354,
											"end": 44383,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 44347,
											"end": 44920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 44347,
											"end": 44920,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44533,
											"end": 44546,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44517,
											"end": 44546,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44517,
											"end": 44546,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 44517,
											"end": 44529,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 44517,
											"end": 44546,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44517,
											"end": 44546,
											"name": "SIGNEXTEND",
											"source": 0
										},
										{
											"begin": 44517,
											"end": 44546,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 44513,
											"end": 44638,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44513,
											"end": 44638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 44513,
											"end": 44638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 44603,
											"end": 44606,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 44603,
											"end": 44621,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 44603,
											"end": 44621,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44603,
											"end": 44621,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44581,
											"end": 44622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44581,
											"end": 44622,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 44573,
											"end": 44623,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44513,
											"end": 44638,
											"name": "tag",
											"source": 0,
											"value": "282"
										},
										{
											"begin": 44513,
											"end": 44638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44652,
											"end": 44666,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44701,
											"end": 44705,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44673,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 44669,
											"end": 44684,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44684,
											"name": "PUSH",
											"source": 0,
											"value": "5339C296"
										},
										{
											"begin": 44685,
											"end": 44697,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "tag",
											"source": 0,
											"value": "284"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "256"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "tag",
											"source": 0,
											"value": "287"
										},
										{
											"begin": 44669,
											"end": 44698,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44669,
											"end": 44705,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44652,
											"end": 44705,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44652,
											"end": 44705,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44746,
											"end": 44766,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 44759,
											"end": 44765,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44746,
											"end": 44758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 44746,
											"end": 44766,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 44746,
											"end": 44766,
											"name": "tag",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 44746,
											"end": 44766,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44719,
											"end": 44766,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 44719,
											"end": 44766,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 44719,
											"end": 44766,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 44719,
											"end": 44766,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44719,
											"end": 44766,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 44719,
											"end": 44766,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44719,
											"end": 44766,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44780,
											"end": 44794,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44780,
											"end": 44794,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 44780,
											"end": 44794,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 44780,
											"end": 44794,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 44780,
											"end": 44794,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 44347,
											"end": 44920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 44347,
											"end": 44920,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 44347,
											"end": 44920,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 44347,
											"end": 44920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 44934,
											"end": 44954,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 44930,
											"end": 45009,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 44930,
											"end": 45009,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 44930,
											"end": 45009,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 44997,
											"end": 44998,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 44970,
											"end": 44998,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 44998,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 44998,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 44970,
											"end": 44998,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 44930,
											"end": 45009,
											"name": "tag",
											"source": 0,
											"value": "290"
										},
										{
											"begin": 44930,
											"end": 45009,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45023,
											"end": 45044,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45019,
											"end": 45099,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45019,
											"end": 45099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 45019,
											"end": 45099,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 45087,
											"end": 45088,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45060,
											"end": 45088,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 45060,
											"end": 45088,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 45060,
											"end": 45088,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 45060,
											"end": 45088,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45019,
											"end": 45099,
											"name": "tag",
											"source": 0,
											"value": "291"
										},
										{
											"begin": 45019,
											"end": 45099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45109,
											"end": 45139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45109,
											"end": 45139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45109,
											"end": 45139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45109,
											"end": 45139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45109,
											"end": 45139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45109,
											"end": 45139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 45109,
											"end": 45139,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41841,
											"end": 45146,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 41841,
											"end": 45146,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41841,
											"end": 45146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41841,
											"end": 45146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41841,
											"end": 45146,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41841,
											"end": 45146,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 46457,
											"end": 46736,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 46457,
											"end": 46736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46581,
											"end": 46600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46638,
											"end": 46682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 46665,
											"end": 46672,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46674,
											"end": 46681,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 46638,
											"end": 46664,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 46638,
											"end": 46682,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 46638,
											"end": 46682,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 46638,
											"end": 46682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 46616,
											"end": 46683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 46701,
											"end": 46711,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 46701,
											"end": 46728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 46701,
											"end": 46728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 46701,
											"end": 46728,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 46693,
											"end": 46729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 46693,
											"end": 46729,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 46693,
											"end": 46729,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 46693,
											"end": 46729,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 46693,
											"end": 46729,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 45152,
											"end": 45349,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 45152,
											"end": 45349,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45207,
											"end": 45213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 45207,
											"end": 45213,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 45250,
											"end": 45322,
											"name": "tag",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 45250,
											"end": 45322,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 45257,
											"end": 45263,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 45257,
											"end": 45263,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 45250,
											"end": 45322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 45250,
											"end": 45322,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 45305,
											"end": 45310,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 45305,
											"end": 45310,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45299,
											"end": 45311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 45299,
											"end": 45311,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 45299,
											"end": 45311,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 45299,
											"end": 45311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 45279,
											"end": 45285,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 45279,
											"end": 45285,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 45250,
											"end": 45322,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "296"
										},
										{
											"begin": 45250,
											"end": 45322,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "206"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 499,
											"name": "tag",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 14,
											"end": 499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 104,
											"end": 108,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 96,
											"end": 102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 92,
											"end": 109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 88,
											"end": 115,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 78,
											"end": 80,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 78,
											"end": 80,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 133,
											"end": 138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 126,
											"end": 131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 119,
											"end": 139,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 78,
											"end": 80,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 78,
											"end": 80,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 173,
											"end": 179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 180,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 219,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 249,
											"end": 251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 219,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 219,
											"end": 252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 219,
											"end": 252,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 219,
											"end": 252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 278,
											"end": 280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 269,
											"end": 276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 262,
											"end": 281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 324,
											"end": 327,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 317,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 312,
											"end": 314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 304,
											"end": 310,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 300,
											"end": 315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 296,
											"end": 322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 293,
											"end": 328,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 290,
											"end": 292,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 290,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 290,
											"end": 292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 345,
											"end": 350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 338,
											"end": 343,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 331,
											"end": 351,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 290,
											"end": 292,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 290,
											"end": 292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 411,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 395,
											"end": 412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 379,
											"end": 386,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 375,
											"end": 393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 362,
											"end": 417,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 437,
											"end": 453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 437,
											"end": 453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 455,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 441,
											"end": 448,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 68,
											"end": 499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 68,
											"end": 499,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 504,
											"end": 670,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 504,
											"end": 670,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 583,
											"end": 596,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 636,
											"end": 637,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 625,
											"end": 645,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 625,
											"end": 645,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 625,
											"end": 645,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 615,
											"end": 646,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 646,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 605,
											"end": 607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 605,
											"end": 607,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 675,
											"end": 1630,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 675,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 675,
											"end": 1630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 804,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 788,
											"end": 797,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 783,
											"end": 786,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 779,
											"end": 798,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 775,
											"end": 805,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 772,
											"end": 774,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 772,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 772,
											"end": 774,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 822,
											"end": 827,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 815,
											"end": 820,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 808,
											"end": 828,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 772,
											"end": 774,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 772,
											"end": 774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 859,
											"end": 861,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 901,
											"end": 905,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 893,
											"end": 899,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 889,
											"end": 906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 972,
											"end": 978,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 960,
											"end": 970,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 957,
											"end": 979,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 936,
											"end": 954,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 924,
											"end": 934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 921,
											"end": 955,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 918,
											"end": 980,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 915,
											"end": 917,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 915,
											"end": 917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 983,
											"end": 992,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 915,
											"end": 917,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 915,
											"end": 917,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1010,
											"end": 1012,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1003,
											"end": 1025,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1049,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1043,
											"end": 1049,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 1073,
											"end": 1096,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1105,
											"end": 1140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 1105,
											"end": 1140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1105,
											"end": 1140,
											"name": "tag",
											"source": 1,
											"value": "314"
										},
										{
											"begin": 1105,
											"end": 1140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1149,
											"end": 1172,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1224,
											"end": 1226,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1209,
											"end": 1227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1196,
											"end": 1228,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 1196,
											"end": 1228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1237,
											"end": 1272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 1237,
											"end": 1272,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1237,
											"end": 1272,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 1237,
											"end": 1272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1300,
											"end": 1302,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1288,
											"end": 1303,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1288,
											"end": 1303,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1281,
											"end": 1313,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1374,
											"end": 1376,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1378,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1344,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1344,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1322,
											"end": 1379,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1431,
											"end": 1433,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1416,
											"end": 1434,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1435,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1479,
											"end": 1487,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 1466,
											"end": 1488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1466,
											"end": 1488,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1454,
											"end": 1489,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1500,
											"end": 1501,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1493,
											"end": 1505,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1537,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1523,
											"end": 1538,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1523,
											"end": 1538,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1516,
											"end": 1548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 1618,
											"end": 1621,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1603,
											"end": 1622,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1603,
											"end": 1622,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1582,
											"end": 1623,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 1582,
											"end": 1623,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1582,
											"end": 1623,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 1582,
											"end": 1623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1576,
											"end": 1579,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1568,
											"end": 1574,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1564,
											"end": 1580,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1624,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1557,
											"end": 1624,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 1630,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 762,
											"end": 1630,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 762,
											"end": 1630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 1630,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 762,
											"end": 1630,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1635,
											"end": 1773,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 1635,
											"end": 1773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1725,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1705,
											"end": 1725,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1734,
											"end": 1767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 1734,
											"end": 1767,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1778,
											"end": 1943,
											"name": "tag",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 1778,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1871,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1911,
											"end": 1917,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 1900,
											"end": 1918,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1900,
											"end": 1918,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1890,
											"end": 1919,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1880,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 1880,
											"end": 1882,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1933,
											"end": 1934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1930,
											"end": 1931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1923,
											"end": 1935,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2358,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1948,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1948,
											"end": 2358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1948,
											"end": 2358,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2086,
											"end": 2088,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2083,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2065,
											"end": 2072,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2061,
											"end": 2084,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2057,
											"end": 2089,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2056,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 2054,
											"end": 2056,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2107,
											"end": 2113,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2099,
											"end": 2105,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2092,
											"end": 2114,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2054,
											"end": 2056,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 2054,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2152,
											"end": 2161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2139,
											"end": 2162,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2185,
											"end": 2203,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2177,
											"end": 2183,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2174,
											"end": 2204,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2222,
											"end": 2228,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2214,
											"end": 2220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2207,
											"end": 2229,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "tag",
											"source": 1,
											"value": "327"
										},
										{
											"begin": 2171,
											"end": 2173,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 2293,
											"end": 2300,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2284,
											"end": 2290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2273,
											"end": 2282,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2269,
											"end": 2291,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2250,
											"end": 2301,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 2250,
											"end": 2301,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2250,
											"end": 2301,
											"name": "tag",
											"source": 1,
											"value": "328"
										},
										{
											"begin": 2250,
											"end": 2301,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2240,
											"end": 2301,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 2348,
											"end": 2350,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2333,
											"end": 2351,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2351,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2351,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 2333,
											"end": 2351,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2352,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2352,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2044,
											"end": 2358,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2363,
											"end": 2579,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2363,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2363,
											"end": 2579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2484,
											"end": 2486,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2472,
											"end": 2481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2463,
											"end": 2470,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2459,
											"end": 2482,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2455,
											"end": 2487,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2454,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2454,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 2452,
											"end": 2454,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2505,
											"end": 2511,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2497,
											"end": 2503,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2490,
											"end": 2512,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2452,
											"end": 2454,
											"name": "tag",
											"source": 1,
											"value": "330"
										},
										{
											"begin": 2452,
											"end": 2454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 2563,
											"end": 2572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2533,
											"end": 2573,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 2533,
											"end": 2573,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2533,
											"end": 2573,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 2533,
											"end": 2573,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2523,
											"end": 2573,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 2442,
											"end": 2579,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2442,
											"end": 2579,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2584,
											"end": 2837,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 2584,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2584,
											"end": 2837,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2584,
											"end": 2837,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2722,
											"end": 2724,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2710,
											"end": 2719,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2701,
											"end": 2708,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2720,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2693,
											"end": 2725,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2692,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 2690,
											"end": 2692,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2743,
											"end": 2749,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2735,
											"end": 2741,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2728,
											"end": 2750,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2690,
											"end": 2692,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 2690,
											"end": 2692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2771,
											"end": 2787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2829,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2812,
											"end": 2830,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2831,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2787,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2806,
											"end": 2831,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2680,
											"end": 2837,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2842,
											"end": 3318,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2842,
											"end": 3318,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 3318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2842,
											"end": 3318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2995,
											"end": 2997,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2983,
											"end": 2992,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2974,
											"end": 2981,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2970,
											"end": 2993,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2998,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2965,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 2963,
											"end": 2965,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3016,
											"end": 3022,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3008,
											"end": 3014,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3023,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2963,
											"end": 2965,
											"name": "tag",
											"source": 1,
											"value": "335"
										},
										{
											"begin": 2963,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3057,
											"end": 3066,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3044,
											"end": 3067,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3067,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3114,
											"end": 3116,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3103,
											"end": 3112,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3117,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3086,
											"end": 3118,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3118,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3076,
											"end": 3118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3169,
											"end": 3171,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3158,
											"end": 3167,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3154,
											"end": 3172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3141,
											"end": 3173,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3214,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3188,
											"end": 3194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3185,
											"end": 3215,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 3182,
											"end": 3184,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3239,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3225,
											"end": 3231,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3218,
											"end": 3240,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3182,
											"end": 3184,
											"name": "tag",
											"source": 1,
											"value": "336"
										},
										{
											"begin": 3182,
											"end": 3184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 3304,
											"end": 3311,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3301,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3284,
											"end": 3293,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3302,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "299"
										},
										{
											"begin": 3261,
											"end": 3312,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3261,
											"end": 3312,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 3261,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3251,
											"end": 3312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3318,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3318,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3318,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3318,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2953,
											"end": 3318,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3323,
											"end": 3999,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 3323,
											"end": 3999,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3323,
											"end": 3999,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3456,
											"end": 3458,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3444,
											"end": 3453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3435,
											"end": 3442,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3431,
											"end": 3454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3427,
											"end": 3459,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3426,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 3424,
											"end": 3426,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3477,
											"end": 3483,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3469,
											"end": 3475,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3484,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3426,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 3424,
											"end": 3426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3515,
											"end": 3524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3525,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3548,
											"end": 3566,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3540,
											"end": 3546,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3537,
											"end": 3567,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3536,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 3534,
											"end": 3536,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3585,
											"end": 3591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3577,
											"end": 3583,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3592,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3536,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 3534,
											"end": 3536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3635,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3613,
											"end": 3635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3666,
											"end": 3670,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3658,
											"end": 3671,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3658,
											"end": 3671,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3654,
											"end": 3681,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3644,
											"end": 3646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 3644,
											"end": 3646,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3700,
											"end": 3706,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3692,
											"end": 3698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3685,
											"end": 3707,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3644,
											"end": 3646,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 3644,
											"end": 3646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3734,
											"end": 3736,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3728,
											"end": 3737,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3759,
											"end": 3808,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 3774,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 3804,
											"end": 3806,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3774,
											"end": 3807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 3774,
											"end": 3807,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3759,
											"end": 3808,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 3759,
											"end": 3808,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3831,
											"end": 3833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3824,
											"end": 3829,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3817,
											"end": 3834,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3871,
											"end": 3878,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 3868,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3863,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3857,
											"end": 3859,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3853,
											"end": 3864,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3869,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3846,
											"end": 3879,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3889,
											"end": 3895,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3882,
											"end": 3904,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3843,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 3966,
											"end": 3968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3961,
											"end": 3963,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3954,
											"end": 3959,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3950,
											"end": 3964,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3945,
											"end": 3947,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3941,
											"end": 3943,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3937,
											"end": 3948,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3915,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 3915,
											"end": 3969,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4004,
											"end": 4284,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 4004,
											"end": 4284,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4004,
											"end": 4284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4160,
											"end": 4163,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4148,
											"end": 4157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4139,
											"end": 4146,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4135,
											"end": 4158,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4131,
											"end": 4164,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4182,
											"end": 4188,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4180,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4167,
											"end": 4189,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 4128,
											"end": 4130,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 4270,
											"end": 4277,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4259,
											"end": 4268,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4210,
											"end": 4278,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 4210,
											"end": 4278,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4575,
											"end": 5520,
											"name": "tag",
											"source": 1,
											"value": "140"
										},
										{
											"begin": 4575,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 5520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 5520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 5520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 5520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 5520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4575,
											"end": 5520,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4575,
											"end": 5520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4793,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 4778,
											"end": 4787,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4769,
											"end": 4776,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4788,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4761,
											"end": 4794,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4758,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4812,
											"end": 4818,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4804,
											"end": 4810,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4797,
											"end": 4819,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4758,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4758,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4849,
											"end": 4858,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4843,
											"end": 4859,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 4895,
											"end": 4900,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4868,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 4868,
											"end": 4901,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4868,
											"end": 4901,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 4868,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4920,
											"end": 4925,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4944,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4989,
											"end": 4991,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4974,
											"end": 4992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4944,
											"end": 4993,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 4944,
											"end": 4993,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4944,
											"end": 4993,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4944,
											"end": 4993,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4993,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4934,
											"end": 4993,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 5058,
											"end": 5060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5047,
											"end": 5056,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5043,
											"end": 5061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5012,
											"end": 5062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5012,
											"end": 5062,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5012,
											"end": 5062,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 5012,
											"end": 5062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5062,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5002,
											"end": 5062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 5127,
											"end": 5129,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5116,
											"end": 5125,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5081,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5081,
											"end": 5131,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5081,
											"end": 5131,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 5081,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5071,
											"end": 5131,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5071,
											"end": 5131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 5196,
											"end": 5199,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5185,
											"end": 5194,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5200,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5150,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "322"
										},
										{
											"begin": 5150,
											"end": 5201,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5150,
											"end": 5201,
											"name": "tag",
											"source": 1,
											"value": "359"
										},
										{
											"begin": 5150,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5201,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5140,
											"end": 5201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5249,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5235,
											"end": 5244,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5231,
											"end": 5250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5225,
											"end": 5251,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5295,
											"end": 5299,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 5286,
											"end": 5293,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5282,
											"end": 5300,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5273,
											"end": 5280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5270,
											"end": 5301,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5320,
											"end": 5326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5312,
											"end": 5318,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5305,
											"end": 5327,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5400,
											"end": 5403,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 5385,
											"end": 5404,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5385,
											"end": 5404,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5379,
											"end": 5405,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5355,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5443,
											"end": 5458,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5443,
											"end": 5458,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5459,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5460,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5424,
											"end": 5460,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5416,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 5414,
											"end": 5416,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5479,
											"end": 5485,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5464,
											"end": 5486,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5414,
											"end": 5416,
											"name": "tag",
											"source": 1,
											"value": "361"
										},
										{
											"begin": 5414,
											"end": 5416,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5507,
											"end": 5514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5497,
											"end": 5514,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5497,
											"end": 5514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5497,
											"end": 5514,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 5520,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 5520,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 5520,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 5520,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 5520,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 5520,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 5520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 5520,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 5520,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 5520,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4748,
											"end": 5520,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5525,
											"end": 5719,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 5525,
											"end": 5719,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5525,
											"end": 5719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5648,
											"end": 5650,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5636,
											"end": 5645,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5627,
											"end": 5634,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5623,
											"end": 5646,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5651,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5618,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5618,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 5616,
											"end": 5618,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5669,
											"end": 5675,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5654,
											"end": 5676,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5618,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 5616,
											"end": 5618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5697,
											"end": 5713,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5697,
											"end": 5713,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5606,
											"end": 5719,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5606,
											"end": 5719,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5724,
											"end": 6131,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 5724,
											"end": 6131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 6131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5724,
											"end": 6131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5724,
											"end": 6131,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5879,
											"end": 5881,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5867,
											"end": 5876,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5858,
											"end": 5865,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5854,
											"end": 5877,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5850,
											"end": 5882,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5847,
											"end": 5849,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5847,
											"end": 5849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5847,
											"end": 5849,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5900,
											"end": 5906,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5892,
											"end": 5898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5885,
											"end": 5907,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5847,
											"end": 5849,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5847,
											"end": 5849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5934,
											"end": 5943,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5944,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 5944,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 5944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5987,
											"end": 5989,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5976,
											"end": 5985,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5972,
											"end": 5990,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 5991,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 6027,
											"end": 6032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6000,
											"end": 6033,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 6000,
											"end": 6033,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6000,
											"end": 6033,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 6000,
											"end": 6033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6052,
											"end": 6057,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6076,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 6121,
											"end": 6123,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6106,
											"end": 6124,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6076,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 6076,
											"end": 6125,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6076,
											"end": 6125,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 6076,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6066,
											"end": 6125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 6131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 6131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 6131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 6131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 6131,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5837,
											"end": 6131,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6136,
											"end": 6395,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 6136,
											"end": 6395,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6136,
											"end": 6395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6217,
											"end": 6222,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6211,
											"end": 6223,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6244,
											"end": 6250,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6239,
											"end": 6242,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6232,
											"end": 6251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6260,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 6316,
											"end": 6322,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6309,
											"end": 6313,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6304,
											"end": 6307,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6300,
											"end": 6314,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6286,
											"end": 6291,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6282,
											"end": 6298,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6260,
											"end": 6323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 6260,
											"end": 6323,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6260,
											"end": 6323,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 6260,
											"end": 6323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6379,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6356,
											"end": 6371,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6352,
											"end": 6381,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6343,
											"end": 6382,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6343,
											"end": 6382,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6343,
											"end": 6382,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6343,
											"end": 6382,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6384,
											"end": 6388,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6339,
											"end": 6389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6339,
											"end": 6389,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6187,
											"end": 6395,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6187,
											"end": 6395,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6400,
											"end": 6831,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 6400,
											"end": 6831,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6653,
											"end": 6655,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6649,
											"end": 6664,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6664,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6649,
											"end": 6664,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6645,
											"end": 6669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6669,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6645,
											"end": 6669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6670,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6633,
											"end": 6670,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6726,
											"end": 6729,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 6704,
											"end": 6720,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6720,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6720,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6720,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6700,
											"end": 6741,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6695,
											"end": 6697,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6686,
											"end": 6698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6686,
											"end": 6698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6679,
											"end": 6742,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6776,
											"end": 6791,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6776,
											"end": 6791,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6772,
											"end": 6796,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6767,
											"end": 6769,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 6758,
											"end": 6770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6758,
											"end": 6770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6751,
											"end": 6797,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6822,
											"end": 6824,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 6813,
											"end": 6825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6813,
											"end": 6825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6573,
											"end": 6831,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6836,
											"end": 7339,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 6836,
											"end": 7339,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7122,
											"end": 7148,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7122,
											"end": 7148,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7185,
											"end": 7187,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7181,
											"end": 7196,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7196,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7196,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7196,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7177,
											"end": 7230,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7173,
											"end": 7174,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7164,
											"end": 7175,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7164,
											"end": 7175,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7157,
											"end": 7231,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7256,
											"end": 7258,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 7247,
											"end": 7259,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7247,
											"end": 7259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7240,
											"end": 7268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7240,
											"end": 7268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7240,
											"end": 7268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7240,
											"end": 7268,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7293,
											"end": 7295,
											"name": "PUSH",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 7284,
											"end": 7296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7284,
											"end": 7296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7277,
											"end": 7305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7330,
											"end": 7332,
											"name": "PUSH",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 7321,
											"end": 7333,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7321,
											"end": 7333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7112,
											"end": 7339,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7344,
											"end": 7547,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7344,
											"end": 7547,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7508,
											"end": 7540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7508,
											"end": 7540,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7490,
											"end": 7541,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7490,
											"end": 7541,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7478,
											"end": 7480,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7463,
											"end": 7481,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7445,
											"end": 7547,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7552,
											"end": 7940,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 7552,
											"end": 7940,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7808,
											"end": 7823,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7808,
											"end": 7823,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7808,
											"end": 7823,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7790,
											"end": 7824,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7790,
											"end": 7824,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7860,
											"end": 7875,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7860,
											"end": 7875,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7860,
											"end": 7875,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7860,
											"end": 7875,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 7857,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7840,
											"end": 7858,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7840,
											"end": 7858,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7833,
											"end": 7876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7924,
											"end": 7932,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7912,
											"end": 7933,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7907,
											"end": 7909,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7885,
											"end": 7934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7740,
											"end": 7742,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7725,
											"end": 7743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7725,
											"end": 7743,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7940,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7945,
											"end": 8515,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 7945,
											"end": 8515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8234,
											"end": 8249,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8249,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8234,
											"end": 8249,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8216,
											"end": 8250,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8216,
											"end": 8250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8307,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8293,
											"end": 8307,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8286,
											"end": 8308,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8283,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8266,
											"end": 8284,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8309,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8340,
											"end": 8342,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8325,
											"end": 8343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8325,
											"end": 8343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8318,
											"end": 8352,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8318,
											"end": 8352,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8318,
											"end": 8352,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8388,
											"end": 8403,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8388,
											"end": 8403,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8383,
											"end": 8385,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8368,
											"end": 8386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8368,
											"end": 8386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8361,
											"end": 8404,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8196,
											"end": 8199,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 8435,
											"end": 8438,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8420,
											"end": 8439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8420,
											"end": 8439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8445,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8445,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8413,
											"end": 8445,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7945,
											"end": 8515,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7945,
											"end": 8515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8462,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 8462,
											"end": 8509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8489,
											"end": 8508,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8489,
											"end": 8508,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8481,
											"end": 8487,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8462,
											"end": 8509,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 8462,
											"end": 8509,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8462,
											"end": 8509,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 8462,
											"end": 8509,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8454,
											"end": 8509,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 8168,
											"end": 8515,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8168,
											"end": 8515,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8520,
											"end": 8708,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8520,
											"end": 8708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8691,
											"end": 8692,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8680,
											"end": 8701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8701,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8680,
											"end": 8701,
											"name": "SIGNEXTEND",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8702,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8662,
											"end": 8702,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8650,
											"end": 8652,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8635,
											"end": 8653,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8617,
											"end": 8708,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8713,
											"end": 8934,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 8713,
											"end": 8934,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8713,
											"end": 8934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8862,
											"end": 8864,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8851,
											"end": 8860,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8844,
											"end": 8865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8882,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 8924,
											"end": 8926,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8913,
											"end": 8922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8909,
											"end": 8927,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8901,
											"end": 8907,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8882,
											"end": 8928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 8882,
											"end": 8928,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8939,
											"end": 9280,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 8939,
											"end": 9280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9141,
											"end": 9143,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9123,
											"end": 9144,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9180,
											"end": 9182,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9160,
											"end": 9178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9153,
											"end": 9183,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746F55696E7432345F6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9214,
											"end": 9216,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9199,
											"end": 9217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9192,
											"end": 9239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9271,
											"end": 9273,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9256,
											"end": 9274,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9256,
											"end": 9274,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9113,
											"end": 9280,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9285,
											"end": 9623,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 9285,
											"end": 9623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9469,
											"end": 9490,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9469,
											"end": 9490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9469,
											"end": 9490,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9526,
											"end": 9528,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9499,
											"end": 9529,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "736C6963655F6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9560,
											"end": 9562,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9545,
											"end": 9563,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9545,
											"end": 9563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9538,
											"end": 9582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9614,
											"end": 9616,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9599,
											"end": 9617,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9459,
											"end": 9623,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9628,
											"end": 9972,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 9628,
											"end": 9972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9830,
											"end": 9832,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9812,
											"end": 9833,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9812,
											"end": 9833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9812,
											"end": 9833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9869,
											"end": 9871,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9849,
											"end": 9867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9842,
											"end": 9872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746F55696E7432345F6F75744F66426F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9903,
											"end": 9905,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9888,
											"end": 9906,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9888,
											"end": 9906,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9881,
											"end": 9931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9963,
											"end": 9965,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9948,
											"end": 9966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9802,
											"end": 9972,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9977,
											"end": 10317,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 9977,
											"end": 10317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10179,
											"end": 10181,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10161,
											"end": 10182,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10218,
											"end": 10220,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 10198,
											"end": 10216,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10198,
											"end": 10216,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10198,
											"end": 10216,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10191,
											"end": 10221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2AB732BC3832B1BA32B21032B93937B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10252,
											"end": 10254,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10237,
											"end": 10255,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10237,
											"end": 10255,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10308,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10293,
											"end": 10311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10293,
											"end": 10311,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10317,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10322,
											"end": 10667,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10322,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10526,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10506,
											"end": 10527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10527,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10506,
											"end": 10527,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10563,
											"end": 10565,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 10543,
											"end": 10561,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10543,
											"end": 10561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10536,
											"end": 10566,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746F416464726573735F6F75744F66426F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10597,
											"end": 10599,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10582,
											"end": 10600,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10582,
											"end": 10600,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10575,
											"end": 10626,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10658,
											"end": 10660,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10643,
											"end": 10661,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10661,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10496,
											"end": 10667,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 10672,
											"end": 11013,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 10672,
											"end": 11013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10874,
											"end": 10876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10856,
											"end": 10877,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10856,
											"end": 10877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10856,
											"end": 10877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10913,
											"end": 10915,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10893,
											"end": 10911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10886,
											"end": 10916,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "736C6963655F6F75744F66426F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10947,
											"end": 10949,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10932,
											"end": 10950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10932,
											"end": 10950,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10925,
											"end": 10972,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11004,
											"end": 11006,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10989,
											"end": 11007,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10989,
											"end": 11007,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10846,
											"end": 11013,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11018,
											"end": 11360,
											"name": "tag",
											"source": 1,
											"value": "180"
										},
										{
											"begin": 11018,
											"end": 11360,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11220,
											"end": 11222,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11202,
											"end": 11223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11202,
											"end": 11223,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11202,
											"end": 11223,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11259,
											"end": 11261,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 11239,
											"end": 11257,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11239,
											"end": 11257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11239,
											"end": 11257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11232,
											"end": 11262,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746F416464726573735F6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11293,
											"end": 11295,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11278,
											"end": 11296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11271,
											"end": 11319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11351,
											"end": 11353,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11336,
											"end": 11354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11336,
											"end": 11354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11192,
											"end": 11360,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11365,
											"end": 12707,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 11365,
											"end": 12707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11365,
											"end": 12707,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11687,
											"end": 11690,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11676,
											"end": 11685,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11672,
											"end": 11691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11718,
											"end": 11724,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11707,
											"end": 11716,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11700,
											"end": 11725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11744,
											"end": 11746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11782,
											"end": 11785,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11777,
											"end": 11779,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11766,
											"end": 11775,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11762,
											"end": 11780,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11755,
											"end": 11786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11806,
											"end": 11812,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11841,
											"end": 11847,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11835,
											"end": 11848,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 11872,
											"end": 11878,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11864,
											"end": 11870,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11857,
											"end": 11879,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11910,
											"end": 11913,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 11899,
											"end": 11908,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11895,
											"end": 11914,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11888,
											"end": 11914,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11888,
											"end": 11914,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11949,
											"end": 11951,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11941,
											"end": 11947,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 11937,
											"end": 11952,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11923,
											"end": 11952,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11923,
											"end": 11952,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11970,
											"end": 11974,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11983,
											"end": 12178,
											"name": "tag",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 11983,
											"end": 12178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11997,
											"end": 12003,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11994,
											"end": 11995,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11991,
											"end": 12004,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11983,
											"end": 12178,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11983,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 11983,
											"end": 12178,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12075,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12062,
											"end": 12075,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12058,
											"end": 12097,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12046,
											"end": 12098,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12046,
											"end": 12098,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12168,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12168,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12168,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12153,
											"end": 12168,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12118,
											"end": 12130,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12094,
											"end": 12095,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12012,
											"end": 12021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11983,
											"end": 12178,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "388"
										},
										{
											"begin": 11983,
											"end": 12178,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11983,
											"end": 12178,
											"name": "tag",
											"source": 1,
											"value": "390"
										},
										{
											"begin": 11983,
											"end": 12178,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12214,
											"end": 12233,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 12233,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12214,
											"end": 12233,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12209,
											"end": 12211,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12194,
											"end": 12212,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12194,
											"end": 12212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12187,
											"end": 12234,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12297,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12284,
											"end": 12297,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12306,
											"end": 12327,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12306,
											"end": 12327,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12306,
											"end": 12327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12345,
											"end": 12357,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12345,
											"end": 12357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12345,
											"end": 12357,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12345,
											"end": 12357,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12382,
											"end": 12397,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12397,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12397,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12397,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12417,
											"end": 12421,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12636,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 12430,
											"end": 12636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12446,
											"end": 12454,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12441,
											"end": 12444,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12438,
											"end": 12455,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12636,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 12430,
											"end": 12636,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12519,
											"end": 12534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12519,
											"end": 12534,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 12536,
											"end": 12546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12515,
											"end": 12547,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12501,
											"end": 12548,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12501,
											"end": 12548,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12584,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12584,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12570,
											"end": 12584,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12609,
											"end": 12626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12609,
											"end": 12626,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12609,
											"end": 12626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12609,
											"end": 12626,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12474,
											"end": 12475,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 12465,
											"end": 12476,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 12430,
											"end": 12636,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12430,
											"end": 12636,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 12430,
											"end": 12636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12689,
											"end": 12691,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12674,
											"end": 12692,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12692,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12692,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12674,
											"end": 12692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12667,
											"end": 12701,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12667,
											"end": 12701,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12667,
											"end": 12701,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12667,
											"end": 12701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12653,
											"end": 12658,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11648,
											"end": 12707,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11648,
											"end": 12707,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 12712,
											"end": 13144,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 12712,
											"end": 13144,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12941,
											"end": 12966,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12941,
											"end": 12966,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12941,
											"end": 12966,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13002,
											"end": 13034,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13002,
											"end": 13034,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13002,
											"end": 13034,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 13002,
											"end": 13034,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12997,
											"end": 12999,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12982,
											"end": 13000,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12982,
											"end": 13000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12975,
											"end": 13035,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13083,
											"end": 13093,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13071,
											"end": 13094,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13066,
											"end": 13068,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13051,
											"end": 13069,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13044,
											"end": 13095,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13126,
											"end": 13128,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13111,
											"end": 13129,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13111,
											"end": 13129,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13104,
											"end": 13138,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12928,
											"end": 12931,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12913,
											"end": 12932,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12913,
											"end": 12932,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12895,
											"end": 13144,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13149,
											"end": 13391,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 13149,
											"end": 13391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13219,
											"end": 13221,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13213,
											"end": 13222,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13249,
											"end": 13266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13249,
											"end": 13266,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13249,
											"end": 13266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13296,
											"end": 13314,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13281,
											"end": 13315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13281,
											"end": 13315,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13317,
											"end": 13339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13317,
											"end": 13339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13317,
											"end": 13339,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13278,
											"end": 13340,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13275,
											"end": 13277,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13275,
											"end": 13277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 13275,
											"end": 13277,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13343,
											"end": 13352,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 13275,
											"end": 13277,
											"name": "tag",
											"source": 1,
											"value": "396"
										},
										{
											"begin": 13275,
											"end": 13277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13370,
											"end": 13372,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13363,
											"end": 13385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13193,
											"end": 13391,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13193,
											"end": 13391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13193,
											"end": 13391,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13396,
											"end": 13577,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 13396,
											"end": 13577,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13396,
											"end": 13577,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13479,
											"end": 13497,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13471,
											"end": 13477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13468,
											"end": 13498,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13465,
											"end": 13467,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13465,
											"end": 13467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 13465,
											"end": 13467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13501,
											"end": 13510,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 13465,
											"end": 13467,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 13465,
											"end": 13467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13560,
											"end": 13562,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13537,
											"end": 13554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13533,
											"end": 13564,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13566,
											"end": 13570,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13529,
											"end": 13571,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13529,
											"end": 13571,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13455,
											"end": 13577,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13582,
											"end": 13840,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 13582,
											"end": 13840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13654,
											"end": 13655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13664,
											"end": 13777,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 13664,
											"end": 13777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13678,
											"end": 13684,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13675,
											"end": 13676,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13672,
											"end": 13685,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13664,
											"end": 13777,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13664,
											"end": 13777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 13664,
											"end": 13777,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13754,
											"end": 13765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13754,
											"end": 13765,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13754,
											"end": 13765,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13748,
											"end": 13766,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13735,
											"end": 13746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13735,
											"end": 13746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13735,
											"end": 13746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13728,
											"end": 13767,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13700,
											"end": 13702,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13693,
											"end": 13703,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13664,
											"end": 13777,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 13664,
											"end": 13777,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13664,
											"end": 13777,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 13664,
											"end": 13777,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13795,
											"end": 13801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13792,
											"end": 13793,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13789,
											"end": 13802,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13786,
											"end": 13788,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13786,
											"end": 13788,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 13786,
											"end": 13788,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13830,
											"end": 13831,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13821,
											"end": 13827,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13816,
											"end": 13819,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13812,
											"end": 13828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13805,
											"end": 13832,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13786,
											"end": 13788,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 13786,
											"end": 13788,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13786,
											"end": 13788,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13635,
											"end": 13840,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 13845,
											"end": 13978,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 13845,
											"end": 13978,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13922,
											"end": 13953,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13922,
											"end": 13953,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 13954,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13912,
											"end": 13954,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 13902,
											"end": 13904,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 13902,
											"end": 13904,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13968,
											"end": 13969,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13965,
											"end": 13966,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13958,
											"end": 13970,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13902,
											"end": 13904,
											"name": "tag",
											"source": 1,
											"value": "405"
										},
										{
											"begin": 13902,
											"end": 13904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13892,
											"end": 13978,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13892,
											"end": 13978,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155",
							"quoteExactInput(bytes,uint256)": "cdca1753",
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": "c6a5026a",
							"quoteExactOutput(bytes,uint256)": "2f80bb1d",
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": "bd21704a",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160[]\",\"name\":\"sqrtPriceX96AfterList\",\"type\":\"uint160[]\"},{\"internalType\":\"uint32[]\",\"name\":\"initializedTicksCrossedList\",\"type\":\"uint32[]\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct IQuoterV2.QuoteExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96After\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"initializedTicksCrossed\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"gasEstimate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute the swap and check the amounts in the callback.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactInputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountIn The desired input amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token to receive\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\"},\"returns\":{\"amountIn\":\"The amount of first token required to be paid\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossedList\":\"List of the initialized ticks that the swap crossed for each pool in the path\",\"sqrtPriceX96AfterList\":\"List of the sqrt price after the swap for each pool in the path\"}},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"params\":{\"params\":\"The params for the quote, encoded as `QuoteExactOutputSingleParams` tokenIn The token being swapped in tokenOut The token being swapped out fee The fee of the token pool to consider for the pair amountOut The desired output amount sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\"},\"returns\":{\"amountIn\":\"The amount required as the input for the swap in order to receive `amountOut`\",\"gasEstimate\":\"The estimate of the gas that the swap consumes\",\"initializedTicksCrossed\":\"The number of initialized ticks that the swap crossed\",\"sqrtPriceX96After\":\"The sqrt price of the pool after the swap\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"stateVariables\":{\"amountOutCached\":{\"details\":\"Transient storage variable used to check a safety condition in exact output swaps.\"}},\"title\":\"Provides quotes for swaps\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in required for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle((address,address,uint256,uint24,uint160))\":{\"notice\":\"Returns the amount in required to receive the given exact output amount but for a swap of a single pool\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Allows getting the expected amount out or amount in for a given swap without executing the swap\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"QuoterV2\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2436,
								"contract": "contracts/lens/QuoterV2_flattened.sol:QuoterV2",
								"label": "amountOutCached",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"notice": "Returns the amount out received for a given exact input swap without executing the swap"
							},
							"quoteExactInputSingle((address,address,uint256,uint24,uint160))": {
								"notice": "Returns the amount out received for a given exact input but for a swap of a single pool"
							},
							"quoteExactOutput(bytes,uint256)": {
								"notice": "Returns the amount in required for a given exact output swap without executing the swap"
							},
							"quoteExactOutputSingle((address,address,uint256,uint24,uint160))": {
								"notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Allows getting the expected amount out or amount in for a given swap without executing the swap",
						"version": 1
					}
				},
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Safe casting methods",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/QuoterV2_flattened.sol\":62497:63379  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/QuoterV2_flattened.sol\":62497:63379  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212202fbcb24421852b9358dad46ed45b6fc707c44f524cc8ffbdb9ef8f1ff4374ed164736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fbcb24421852b9358dad46ed45b6fc707c44f524cc8ffbdb9ef8f1ff4374ed164736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xBC 0xB2 DIFFICULTY 0x21 DUP6 0x2B SWAP4 PC 0xDA 0xD4 PUSH15 0xD45B6FC707C44F524CC8FFBDB9EF8F 0x1F DELEGATECALL CALLDATACOPY 0x4E 0xD1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "62497:882:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212202fbcb24421852b9358dad46ed45b6fc707c44f524cc8ffbdb9ef8f1ff4374ed164736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2F 0xBC 0xB2 DIFFICULTY 0x21 DUP6 0x2B SWAP4 PC 0xDA 0xD4 PUSH15 0xD45B6FC707C44F524CC8FFBDB9EF8F 0x1F DELEGATECALL CALLDATACOPY 0x4E 0xD1 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "62497:882:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toUint160(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62497,
									"end": 63379,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 62497,
									"end": 63379,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202fbcb24421852b9358dad46ed45b6fc707c44f524cc8ffbdb9ef8f1ff4374ed164736f6c63430007060033",
									".code": [
										{
											"begin": 62497,
											"end": 63379,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 62497,
											"end": 63379,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 62497,
											"end": 63379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 62497,
											"end": 63379,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 62497,
											"end": 63379,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 62497,
											"end": 63379,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 62497,
											"end": 63379,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 62497,
											"end": 63379,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 62497,
											"end": 63379,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Safe casting methods\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for safely casting between types\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for safely casting between types",
						"version": 1
					}
				},
				"TickBitmap": {
					"abi": [],
					"devdoc": {
						"details": "The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.",
						"kind": "dev",
						"methods": {},
						"title": "Packed tick initialized state library",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/QuoterV2_flattened.sol\":49879:53659  library TickBitmap {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/QuoterV2_flattened.sol\":49879:53659  library TickBitmap {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220139e641e8e37b7ed99a40ab090db95a47ed573329b47cbaac2709bec45d6178664736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220139e641e8e37b7ed99a40ab090db95a47ed573329b47cbaac2709bec45d6178664736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT SWAP15 PUSH5 0x1E8E37B7ED SWAP10 LOG4 EXP 0xB0 SWAP1 0xDB SWAP6 LOG4 PUSH31 0xD573329B47CBAAC2709BEC45D6178664736F6C634300070600330000000000 ",
							"sourceMap": "49879:3780:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220139e641e8e37b7ed99a40ab090db95a47ed573329b47cbaac2709bec45d6178664736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT SWAP15 PUSH5 0x1E8E37B7ED SWAP10 LOG4 EXP 0xB0 SWAP1 0xDB SWAP6 LOG4 PUSH31 0xD573329B47CBAAC2709BEC45D6178664736F6C634300070600330000000000 ",
							"sourceMap": "49879:3780:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"flipTick(mapping(int16 => uint256),int24,int24)": "infinite",
								"nextInitializedTickWithinOneWord(mapping(int16 => uint256),int24,int24,bool)": "infinite",
								"position(int24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 49879,
									"end": 53659,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49879,
									"end": 53659,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220139e641e8e37b7ed99a40ab090db95a47ed573329b47cbaac2709bec45d6178664736f6c63430007060033",
									".code": [
										{
											"begin": 49879,
											"end": 53659,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 49879,
											"end": 53659,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 49879,
											"end": 53659,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49879,
											"end": 53659,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 49879,
											"end": 53659,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49879,
											"end": 53659,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49879,
											"end": 53659,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49879,
											"end": 53659,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49879,
											"end": 53659,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Packed tick initialized state library\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Stores a packed mapping of tick index to its initialized state\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"TickBitmap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Stores a packed mapping of tick index to its initialized state",
						"version": 1
					}
				},
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/QuoterV2_flattened.sol\":53983:62314  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/QuoterV2_flattened.sol\":53983:62314  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208bb143528d598a98490c7debdf4c1c0540090a270b868ead6b44259927171b5764736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208bb143528d598a98490c7debdf4c1c0540090a270b868ead6b44259927171b5764736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xB1 NUMBER MSTORE DUP14 MSIZE DUP11 SWAP9 0x49 0xC PUSH30 0xEBDF4C1C0540090A270B868EAD6B44259927171B5764736F6C6343000706 STOP CALLER ",
							"sourceMap": "53983:8331:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208bb143528d598a98490c7debdf4c1c0540090a270b868ead6b44259927171b5764736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP12 0xB1 NUMBER MSTORE DUP14 MSIZE DUP11 SWAP9 0x49 0xC PUSH30 0xEBDF4C1C0540090A270B868EAD6B44259927171B5764736F6C6343000706 STOP CALLER ",
							"sourceMap": "53983:8331:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 53983,
									"end": 62314,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 53983,
									"end": 62314,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208bb143528d598a98490c7debdf4c1c0540090a270b868ead6b44259927171b5764736f6c63430007060033",
									".code": [
										{
											"begin": 53983,
											"end": 62314,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 53983,
											"end": 62314,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 53983,
											"end": 62314,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 53983,
											"end": 62314,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 53983,
											"end": 62314,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53983,
											"end": 62314,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53983,
											"end": 62314,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53983,
											"end": 62314,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53983,
											"end": 62314,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/QuoterV2_flattened.sol\":\"TickMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/QuoterV2_flattened.sol\":{\"keccak256\":\"0x22470056d996cfc8e77b3b6e4ada6d5115eee7938d07f04958fe15c35f011824\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://a4e68e8fdc8b7b8f97557cf55f3e6de3101be0686de3c9773849059eed1dabcb\",\"dweb:/ipfs/QmTmF4q7DGe2eRirhrQapCbBhgQNebjwdibzuQbh6iAvjv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/lens/QuoterV2_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/lens/QuoterV2_flattened.sol",
					"exportedSymbols": {
						"BitMath": [
							1559
						],
						"BytesLib": [
							209
						],
						"CallbackValidation": [
							1281
						],
						"IPeripheryImmutableState": [
							355
						],
						"IQuoterV2": [
							474
						],
						"IUniswapV3Pool": [
							916
						],
						"IUniswapV3PoolActions": [
							725
						],
						"IUniswapV3PoolDerivedState": [
							755
						],
						"IUniswapV3PoolEvents": [
							605
						],
						"IUniswapV3PoolImmutables": [
							901
						],
						"IUniswapV3PoolOwnerActions": [
							630
						],
						"IUniswapV3PoolState": [
							862
						],
						"IUniswapV3SwapCallback": [
							487
						],
						"Path": [
							340
						],
						"PeripheryImmutableState": [
							384
						],
						"PoolAddress": [
							91
						],
						"PoolTicksCounter": [
							1222
						],
						"QuoterV2": [
							3136
						],
						"SafeCast": [
							2416
						],
						"TickBitmap": [
							1813
						],
						"TickMath": [
							2347
						]
					},
					"id": 3137,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "118:96:0",
								"text": "@title Provides functions for deriving a pool address from the factory, tokens, and the fee"
							},
							"fullyImplemented": true,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "PoolAddress",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "POOL_INIT_CODE_HASH",
									"nodeType": "VariableDeclaration",
									"scope": 91,
									"src": "240:114:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "240:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865333466313939623139623262346634376636383434323631396435353535323764323434663738613332393765613839333235663834336638376238623534",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102814774271675688723325049954498779091328469440286648861889194717372678376276_by_1",
											"typeString": "int_const 1028...(70 digits omitted)...6276"
										},
										"value": "0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "PoolAddress.PoolKey",
									"id": 12,
									"members": [
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "434:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 6,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "434:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "458:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 8,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "458:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "482:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 10,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "482:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolKey",
									"nodeType": "StructDefinition",
									"scope": 91,
									"src": "409:90:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "964:141:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 24,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "978:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 25,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "987:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "978:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 35,
												"nodeType": "IfStatement",
												"src": "974:56:0",
												"trueBody": {
													"expression": {
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 27,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "996:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 28,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1004:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 29,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "995:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 30,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1015:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 31,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "1023:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 32,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1014:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"src": "995:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 34,
													"nodeType": "ExpressionStatement",
													"src": "995:35:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 37,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1064:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 38,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1080:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 39,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "1093:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 36,
														"name": "PoolKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1047:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PoolKey_$12_storage_ptr_$",
															"typeString": "type(struct PoolAddress.PoolKey storage pointer)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"token0",
														"token1",
														"fee"
													],
													"nodeType": "FunctionCall",
													"src": "1047:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
														"typeString": "struct PoolAddress.PoolKey memory"
													}
												},
												"functionReturnParameters": 23,
												"id": 41,
												"nodeType": "Return",
												"src": "1040:58:0"
											}
										]
									},
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "505:321:0",
										"text": "@notice Returns PoolKey: the ordered tokens with the matched fee levels\n @param tokenA The first token of a pool, unsorted\n @param tokenB The second token of a pool, unsorted\n @param fee The fee level of the pool\n @return Poolkey The pool details with ordered token0 and token1 assignments"
									},
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "884:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "908:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 18,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "908:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:74:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "948:14:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 21,
													"name": "PoolKey",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 12,
													"src": "948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$12_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:16:0"
									},
									"scope": 91,
									"src": "831:274:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1450:414:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 54,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "1468:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "1468:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 56,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "1481:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 9,
																"src": "1481:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1468:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1460:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1460:32:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 61,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1502:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "ff",
																						"id": 69,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "hexString",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1628:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																							"typeString": "literal_string hex\"ff\""
																						}
																					},
																					{
																						"id": 70,
																						"name": "factory",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 46,
																						"src": "1661:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"expression": {
																											"id": 74,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 48,
																											"src": "1715:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 75,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token0",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 7,
																										"src": "1715:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"expression": {
																											"id": 76,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 48,
																											"src": "1727:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 77,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token1",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 9,
																										"src": "1727:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"expression": {
																											"id": 78,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 48,
																											"src": "1739:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 79,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "fee",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 11,
																										"src": "1739:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint24",
																											"typeString": "uint24"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_uint24",
																											"typeString": "uint24"
																										}
																									],
																									"expression": {
																										"id": 72,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967295,
																										"src": "1704:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 73,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encode",
																									"nodeType": "MemberAccess",
																									"src": "1704:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 80,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1704:43:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 71,
																							"name": "keccak256",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967288,
																							"src": "1694:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																								"typeString": "function (bytes memory) pure returns (bytes32)"
																							}
																						},
																						"id": 81,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1694:54:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 82,
																						"name": "POOL_INIT_CODE_HASH",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5,
																						"src": "1774:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																							"typeString": "literal_string hex\"ff\""
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"expression": {
																						"id": 67,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "1586:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 68,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "1586:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 83,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1586:229:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 66,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "1555:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 84,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1555:278:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 65,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1530:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 64,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1530:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1530:317:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1509:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1509:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1509:348:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1502:355:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1502:355:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1111:236:0",
										"text": "@notice Deterministically computes the pool address given the factory and PoolKey\n @param factory The Uniswap V3 factory contract address\n @param key The PoolKey\n @return pool The contract address of the V3 pool"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1376:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1393:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 47,
													"name": "PoolKey",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 12,
													"src": "1393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$12_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1375:37:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1436:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:14:0"
									},
									"scope": 91,
									"src": "1352:512:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3137,
							"src": "214:1652:0"
						},
						{
							"id": 92,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2210:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "BytesLib",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "2402:2871:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 104,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "2420:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3331",
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2430:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31_by_1",
																		"typeString": "int_const 31"
																	},
																	"value": "31"
																},
																"src": "2420:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 107,
																"name": "_length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2436:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2420:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f766572666c6f77",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2445:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															},
															"value": "slice_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															}
														],
														"id": 103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2412:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "2412:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 113,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "2480:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 114,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "2489:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2480:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 116,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2500:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2480:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f766572666c6f77",
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2508:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															},
															"value": "slice_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															}
														],
														"id": 112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2472:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2472:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "2472:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 122,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "2543:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2543:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 124,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "2560:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 125,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "2569:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2560:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2543:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f75744f66426f756e6473",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2578:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0",
																"typeString": "literal_string \"slice_outOfBounds\""
															},
															"value": "slice_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0",
																"typeString": "literal_string \"slice_outOfBounds\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2535:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "2535:63:0"
											},
											{
												"assignments": [
													132
												],
												"declarations": [
													{
														"constant": false,
														"id": 132,
														"mutability": "mutable",
														"name": "tempBytes",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "2609:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 131,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2609:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 133,
												"nodeType": "VariableDeclarationStatement",
												"src": "2609:22:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2651:2589:0",
													"statements": [
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2711:2092:0",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "2879:24:0",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2898:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2892:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2892:11:0"
																				},
																				"variableNames": [
																					{
																						"name": "tempBytes",
																						"nodeType": "YulIdentifier",
																						"src": "2879:9:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3563:33:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "_length",
																							"nodeType": "YulIdentifier",
																							"src": "3584:7:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3593:2:0",
																							"type": "",
																							"value": "31"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3580:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3580:16:0"
																				},
																				"variables": [
																					{
																						"name": "lengthmod",
																						"nodeType": "YulTypedName",
																						"src": "3567:9:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3937:70:0",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tempBytes",
																									"nodeType": "YulIdentifier",
																									"src": "3955:9:0"
																								},
																								{
																									"name": "lengthmod",
																									"nodeType": "YulIdentifier",
																									"src": "3966:9:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3951:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3951:25:0"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3982:4:0",
																									"type": "",
																									"value": "0x20"
																								},
																								{
																									"arguments": [
																										{
																											"name": "lengthmod",
																											"nodeType": "YulIdentifier",
																											"src": "3995:9:0"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "3988:6:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3988:17:0"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "3978:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3978:28:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3947:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3947:60:0"
																				},
																				"variables": [
																					{
																						"name": "mc",
																						"nodeType": "YulTypedName",
																						"src": "3941:2:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4028:27:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "mc",
																							"nodeType": "YulIdentifier",
																							"src": "4043:2:0"
																						},
																						{
																							"name": "_length",
																							"nodeType": "YulIdentifier",
																							"src": "4047:7:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4039:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4039:16:0"
																				},
																				"variables": [
																					{
																						"name": "end",
																						"nodeType": "YulTypedName",
																						"src": "4032:3:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4469:69:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nodeType": "YulIdentifier",
																										"src": "4502:2:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "cc",
																												"nodeType": "YulIdentifier",
																												"src": "4512:2:0"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4506:5:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4506:9:0"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "4495:6:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4495:21:0"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4495:21:0"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "mc",
																							"nodeType": "YulIdentifier",
																							"src": "4348:2:0"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4352:3:0"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4345:2:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4345:11:0"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4357:111:0",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4383:19:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nodeType": "YulIdentifier",
																										"src": "4393:2:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4397:4:0",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4389:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4389:13:0"
																							},
																							"variableNames": [
																								{
																									"name": "mc",
																									"nodeType": "YulIdentifier",
																									"src": "4383:2:0"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4427:19:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "cc",
																										"nodeType": "YulIdentifier",
																										"src": "4437:2:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4441:4:0",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4433:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4433:13:0"
																							},
																							"variableNames": [
																								{
																									"name": "cc",
																									"nodeType": "YulIdentifier",
																									"src": "4427:2:0"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4081:263:0",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4242:80:0",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "_bytes",
																														"nodeType": "YulIdentifier",
																														"src": "4264:6:0"
																													},
																													{
																														"name": "lengthmod",
																														"nodeType": "YulIdentifier",
																														"src": "4272:9:0"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4260:3:0"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4260:22:0"
																											},
																											{
																												"arguments": [
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4288:4:0",
																														"type": "",
																														"value": "0x20"
																													},
																													{
																														"arguments": [
																															{
																																"name": "lengthmod",
																																"nodeType": "YulIdentifier",
																																"src": "4301:9:0"
																															}
																														],
																														"functionName": {
																															"name": "iszero",
																															"nodeType": "YulIdentifier",
																															"src": "4294:6:0"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "4294:17:0"
																													}
																												],
																												"functionName": {
																													"name": "mul",
																													"nodeType": "YulIdentifier",
																													"src": "4284:3:0"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4284:28:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4256:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4256:57:0"
																									},
																									{
																										"name": "_start",
																										"nodeType": "YulIdentifier",
																										"src": "4315:6:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4252:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4252:70:0"
																							},
																							"variables": [
																								{
																									"name": "cc",
																									"nodeType": "YulTypedName",
																									"src": "4246:2:0",
																									"type": ""
																								}
																							]
																						}
																					]
																				},
																				"src": "4077:461:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "tempBytes",
																							"nodeType": "YulIdentifier",
																							"src": "4567:9:0"
																						},
																						{
																							"name": "_length",
																							"nodeType": "YulIdentifier",
																							"src": "4578:7:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "4560:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4560:26:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4560:26:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4753:4:0",
																							"type": "",
																							"value": "0x40"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "mc",
																											"nodeType": "YulIdentifier",
																											"src": "4767:2:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4771:2:0",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "4763:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4763:11:0"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4780:2:0",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "4776:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4776:7:0"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "4759:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4759:25:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "4746:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4746:39:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4746:39:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2704:2099:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2709:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4915:315:0",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "4937:24:0",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4956:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4950:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4950:11:0"
																				},
																				"variableNames": [
																					{
																						"name": "tempBytes",
																						"nodeType": "YulIdentifier",
																						"src": "4937:9:0"
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "tempBytes",
																							"nodeType": "YulIdentifier",
																							"src": "5143:9:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5154:1:0",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "5136:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5136:20:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5136:20:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5185:4:0",
																							"type": "",
																							"value": "0x40"
																						},
																						{
																							"arguments": [
																								{
																									"name": "tempBytes",
																									"nodeType": "YulIdentifier",
																									"src": "5195:9:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5206:4:0",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5191:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5191:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "5178:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5178:34:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5178:34:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4907:323:0",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "_length",
																		"nodeType": "YulIdentifier",
																		"src": "2679:7:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2672:15:0"
															},
															"nodeType": "YulSwitch",
															"src": "2665:2565:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "4264:6:0",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "2679:7:0",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "3584:7:0",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "4047:7:0",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "4578:7:0",
														"valueSize": 1
													},
													{
														"declaration": 96,
														"isOffset": false,
														"isSlot": false,
														"src": "4315:6:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "2879:9:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "3955:9:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "4567:9:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "4937:9:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "5143:9:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "5195:9:0",
														"valueSize": 1
													}
												],
												"id": 134,
												"nodeType": "InlineAssembly",
												"src": "2642:2598:0"
											},
											{
												"expression": {
													"id": 135,
													"name": "tempBytes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 132,
													"src": "5257:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 102,
												"id": 136,
												"nodeType": "Return",
												"src": "5250:16:0"
											}
										]
									},
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "slice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "_bytes",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2290:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 93,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2290:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "_start",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2319:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "_length",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2343:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:84:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2388:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2388:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:14:0"
									},
									"scope": 209,
									"src": "2266:3007:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "5367:328:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 148,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "5385:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5394:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "5385:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 151,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "5400:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5385:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f416464726573735f6f766572666c6f77",
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5408:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f71efb0937d5d9d75bbebe9d7207dad811fd47ced903ea9404d5e8d77eb17a95",
																"typeString": "literal_string \"toAddress_overflow\""
															},
															"value": "toAddress_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f71efb0937d5d9d75bbebe9d7207dad811fd47ced903ea9404d5e8d77eb17a95",
																"typeString": "literal_string \"toAddress_overflow\""
															}
														],
														"id": 147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5377:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "5377:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 157,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "5447:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5447:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 159,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "5464:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5473:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "5464:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5447:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f416464726573735f6f75744f66426f756e6473",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5477:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d",
																"typeString": "literal_string \"toAddress_outOfBounds\""
															},
															"value": "toAddress_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d",
																"typeString": "literal_string \"toAddress_outOfBounds\""
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5439:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5439:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "5439:62:0"
											},
											{
												"assignments": [
													167
												],
												"declarations": [
													{
														"constant": false,
														"id": 167,
														"mutability": "mutable",
														"name": "tempAddress",
														"nodeType": "VariableDeclaration",
														"scope": 172,
														"src": "5511:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 166,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5511:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 168,
												"nodeType": "VariableDeclarationStatement",
												"src": "5511:19:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5550:110:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5564:86:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_bytes",
																								"nodeType": "YulIdentifier",
																								"src": "5597:6:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5605:4:0",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5593:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5593:17:0"
																					},
																					{
																						"name": "_start",
																						"nodeType": "YulIdentifier",
																						"src": "5612:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5589:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5589:30:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5583:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:37:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5622:27:0",
																		"type": "",
																		"value": "0x1000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5579:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5579:71:0"
															},
															"variableNames": [
																{
																	"name": "tempAddress",
																	"nodeType": "YulIdentifier",
																	"src": "5564:11:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 140,
														"isOffset": false,
														"isSlot": false,
														"src": "5597:6:0",
														"valueSize": 1
													},
													{
														"declaration": 142,
														"isOffset": false,
														"isSlot": false,
														"src": "5612:6:0",
														"valueSize": 1
													},
													{
														"declaration": 167,
														"isOffset": false,
														"isSlot": false,
														"src": "5564:11:0",
														"valueSize": 1
													}
												],
												"id": 169,
												"nodeType": "InlineAssembly",
												"src": "5541:119:0"
											},
											{
												"expression": {
													"id": 170,
													"name": "tempAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "5677:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 146,
												"id": 171,
												"nodeType": "Return",
												"src": "5670:18:0"
											}
										]
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "_bytes",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "5298:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5298:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "_start",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "5319:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5297:37:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "5358:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5357:9:0"
									},
									"scope": 209,
									"src": "5279:416:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "5787:279:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 183,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "5805:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5814:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "5805:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 186,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "5819:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5805:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e7432345f6f766572666c6f77",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5827:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_428a8ba368fc474210479d5009a3c2ddaf9d762393b1b3cd3cf1b440d48791c5",
																"typeString": "literal_string \"toUint24_overflow\""
															},
															"value": "toUint24_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_428a8ba368fc474210479d5009a3c2ddaf9d762393b1b3cd3cf1b440d48791c5",
																"typeString": "literal_string \"toUint24_overflow\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5797:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5797:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "5797:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 192,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "5865:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5865:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 194,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "5882:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5891:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "5882:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5865:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e7432345f6f75744f66426f756e6473",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5894:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_92c5fac6e5cb4f75ffccd9c8f373ae2e2c333a8b9c2fdc616c52c36fa31575dc",
																"typeString": "literal_string \"toUint24_outOfBounds\""
															},
															"value": "toUint24_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_92c5fac6e5cb4f75ffccd9c8f373ae2e2c333a8b9c2fdc616c52c36fa31575dc",
																"typeString": "literal_string \"toUint24_outOfBounds\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5857:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5857:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "5857:60:0"
											},
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "tempUint",
														"nodeType": "VariableDeclaration",
														"scope": 207,
														"src": "5927:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 201,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "5927:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"nodeType": "VariableDeclarationStatement",
												"src": "5927:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5962:72:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5976:48:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6002:6:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6010:3:0",
																						"type": "",
																						"value": "0x3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5998:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5998:16:0"
																			},
																			{
																				"name": "_start",
																				"nodeType": "YulIdentifier",
																				"src": "6016:6:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5994:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5994:29:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5988:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5988:36:0"
															},
															"variableNames": [
																{
																	"name": "tempUint",
																	"nodeType": "YulIdentifier",
																	"src": "5976:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 175,
														"isOffset": false,
														"isSlot": false,
														"src": "6002:6:0",
														"valueSize": 1
													},
													{
														"declaration": 177,
														"isOffset": false,
														"isSlot": false,
														"src": "6016:6:0",
														"valueSize": 1
													},
													{
														"declaration": 202,
														"isOffset": false,
														"isSlot": false,
														"src": "5976:8:0",
														"valueSize": 1
													}
												],
												"id": 204,
												"nodeType": "InlineAssembly",
												"src": "5953:81:0"
											},
											{
												"expression": {
													"id": 205,
													"name": "tempUint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 202,
													"src": "6051:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 181,
												"id": 206,
												"nodeType": "Return",
												"src": "6044:15:0"
											}
										]
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "_bytes",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5719:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "_start",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5740:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5718:37:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5779:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 179,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5779:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5778:8:0"
									},
									"scope": 209,
									"src": "5701:365:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3137,
							"src": "2243:3825:0"
						},
						{
							"id": 210,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6110:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 211,
								"nodeType": "StructuredDocumentation",
								"src": "6137:67:0",
								"text": "@title Functions for manipulating path data for multihop swaps"
							},
							"fullyImplemented": true,
							"id": 340,
							"linearizedBaseContracts": [
								340
							],
							"name": "Path",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 214,
									"libraryName": {
										"id": 212,
										"name": "BytesLib",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 209,
										"src": "6229:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BytesLib_$209",
											"typeString": "library BytesLib"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "6223:25:0",
									"typeName": {
										"id": 213,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "6242:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "6254:48:0",
										"text": "@dev The length of the bytes encoded address"
									},
									"id": 218,
									"mutability": "constant",
									"name": "ADDR_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "6307:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6307:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6344:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "6352:44:0",
										"text": "@dev The length of the bytes encoded fee"
									},
									"id": 222,
									"mutability": "constant",
									"name": "FEE_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "6401:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 220,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6401:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 221,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6437:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "6445:58:0",
										"text": "@dev The offset of a single token address and pool fee"
									},
									"id": 228,
									"mutability": "constant",
									"name": "NEXT_OFFSET",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "6508:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6508:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 227,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 225,
											"name": "ADDR_SIZE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 218,
											"src": "6547:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"id": 226,
											"name": "FEE_SIZE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 222,
											"src": "6559:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "6547:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6573:42:0",
										"text": "@dev The offset of an encoded pool key"
									},
									"id": 234,
									"mutability": "constant",
									"name": "POP_OFFSET",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "6620:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 230,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6620:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 231,
											"name": "NEXT_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 228,
											"src": "6658:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"id": 232,
											"name": "ADDR_SIZE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 218,
											"src": "6672:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "6658:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "6687:72:0",
										"text": "@dev The minimum length of an encoding that contains 2 or more pools"
									},
									"id": 240,
									"mutability": "constant",
									"name": "MULTIPLE_POOLS_MIN_LENGTH",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "6764:77:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 236,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6764:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 239,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 237,
											"name": "POP_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 234,
											"src": "6817:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"id": 238,
											"name": "NEXT_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 228,
											"src": "6830:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "6817:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "7106:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 248,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7123:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7123:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 250,
														"name": "MULTIPLE_POOLS_MIN_LENGTH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "7138:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7123:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 247,
												"id": 252,
												"nodeType": "Return",
												"src": "7116:47:0"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "6848:179:0",
										"text": "@notice Returns true iff the path contains two or more pools\n @param path The encoded swap path\n @return True if path contains two or more pools, otherwise false"
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasMultiplePools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "7058:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7058:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7057:19:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "7100:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7100:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7099:6:0"
									},
									"scope": 340,
									"src": "7032:138:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "7391:166:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 262,
																				"name": "path",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 257,
																				"src": "7511:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "7511:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 264,
																			"name": "ADDR_SIZE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "7525:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7511:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 266,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7510:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 267,
																"name": "NEXT_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "7538:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7510:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 269,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7509:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 261,
												"id": 270,
												"nodeType": "Return",
												"src": "7502:48:0"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "7176:141:0",
										"text": "@notice Returns the number of pools in the path\n @param path The encoded swap path\n @return The number of pools in the path"
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "numPools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "7340:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7340:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7339:19:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "7382:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7381:9:0"
									},
									"scope": 340,
									"src": "7322:235:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "8004:129:0",
										"statements": [
											{
												"expression": {
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8014:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8038:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"expression": {
																"id": 285,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "8023:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 173,
															"src": "8023:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (address)"
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8023:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8014:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "8014:26:0"
											},
											{
												"expression": {
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 291,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "8050:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 294,
																"name": "ADDR_SIZE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "8070:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 292,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "8056:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toUint24",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 208,
															"src": "8056:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint24)"
															}
														},
														"id": 295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8056:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "8050:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "8050:30:0"
											},
											{
												"expression": {
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "8090:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 301,
																"name": "NEXT_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "8114:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 299,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "8099:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 173,
															"src": "8099:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (address)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8099:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8090:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "8090:36:0"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "7563:251:0",
										"text": "@notice Decodes the first pool in path\n @param path The bytes encoded swap path\n @return tokenA The first token of the given pool\n @return tokenB The second token of the given pool\n @return fee The fee level of the pool"
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeFirstPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "7844:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7844:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7843:19:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "7923:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "7951:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "7979:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 281,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "7979:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7909:90:0"
									},
									"scope": 340,
									"src": "7819:314:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "8437:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8465:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 317,
															"name": "POP_OFFSET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "8468:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 314,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "8454:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "8454:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8454:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 313,
												"id": 319,
												"nodeType": "Return",
												"src": "8447:32:0"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "8139:215:0",
										"text": "@notice Gets the segment corresponding to the first pool in the path\n @param path The bytes encoded swap path\n @return The segment containing all data necessary to target the first pool in the path"
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFirstPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "8381:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8381:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8380:19:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "8423:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8423:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8422:14:0"
									},
									"scope": 340,
									"src": "8359:127:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "8750:74:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 331,
															"name": "NEXT_OFFSET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "8778:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 332,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "8791:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8791:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 334,
																"name": "NEXT_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "8805:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8791:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 329,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "8767:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "8767:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8767:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 328,
												"id": 337,
												"nodeType": "Return",
												"src": "8760:57:0"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "8492:178:0",
										"text": "@notice Skips a token + fee element from the buffer and returns the remainder\n @param path The swap path\n @return The remaining token + fee elements in the path"
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "skipToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "8694:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8694:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8693:19:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "8736:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8736:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8735:14:0"
									},
									"scope": 340,
									"src": "8675:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3137,
							"src": "6204:2622:0"
						},
						{
							"id": 341,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "8889:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 342,
								"nodeType": "StructuredDocumentation",
								"src": "8915:91:0",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 355,
							"linearizedBaseContracts": [
								355
							],
							"name": "IPeripheryImmutableState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "9047:57:0",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9125:2:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "9151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9150:9:0"
									},
									"scope": 355,
									"src": "9109:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "9166:40:0",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9225:2:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "9251:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9250:9:0"
									},
									"scope": 355,
									"src": "9211:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3137,
							"src": "9006:256:0"
						},
						{
							"id": 356,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "9318:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 358,
										"name": "IPeripheryImmutableState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 355,
										"src": "9472:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPeripheryImmutableState_$355",
											"typeString": "contract IPeripheryImmutableState"
										}
									},
									"id": 359,
									"nodeType": "InheritanceSpecifier",
									"src": "9472:24:0"
								}
							],
							"contractDependencies": [
								355
							],
							"contractKind": "contract",
							"documentation": {
								"id": 357,
								"nodeType": "StructuredDocumentation",
								"src": "9344:83:0",
								"text": "@title Immutable state\n @notice Immutable state used by periphery contracts"
							},
							"fullyImplemented": true,
							"id": 384,
							"linearizedBaseContracts": [
								384,
								355
							],
							"name": "PeripheryImmutableState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										348
									],
									"constant": false,
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "9503:40:0",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "c45a0155",
									"id": 363,
									"mutability": "immutable",
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 362,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9573:8:0"
									},
									"scope": 384,
									"src": "9548:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 361,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9548:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										354
									],
									"constant": false,
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "9595:40:0",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "4aa4a4fc",
									"id": 367,
									"mutability": "immutable",
									"name": "WETH9",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9665:8:0"
									},
									"scope": 384,
									"src": "9640:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 365,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9640:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "9732:59:0",
										"statements": [
											{
												"expression": {
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 374,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "9742:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 375,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "9752:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9742:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "9742:18:0"
											},
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 378,
														"name": "WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "9770:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 379,
														"name": "_WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "9778:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9770:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "9770:14:0"
											}
										]
									},
									"id": 383,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "_factory",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "9698:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "_WETH9",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "9716:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9697:34:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9732:0:0"
									},
									"scope": 384,
									"src": "9686:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3137,
							"src": "9427:366:0"
						},
						{
							"id": 385,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "9841:24:0"
						},
						{
							"id": 386,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "9866:19:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "9887:451:0",
								"text": "@title QuoterV2 Interface\n @notice Supports quoting the calculated amounts from exact input or exact output swaps.\n @notice For each pool also tells you the number of initialized ticks crossed and the sqrt price of the pool after the swap.\n @dev These functions are not marked view because they rely on calling non-view functions and reverting\n to compute the result. They are also not gas efficient and should not be called on-chain."
							},
							"fullyImplemented": false,
							"id": 474,
							"linearizedBaseContracts": [
								474
							],
							"name": "IQuoterV2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "10364:618:0",
										"text": "@notice Returns the amount out received for a given exact input swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee\n @param amountIn The amount of the first token to swap\n @return amountOut The amount of the last token that would be received\n @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "cdca1753",
									"id": 405,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11012:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11012:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11031:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11031:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11011:37:0"
									},
									"returnParameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11096:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11096:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "sqrtPriceX96AfterList",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11127:38:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 396,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "11127:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 397,
													"nodeType": "ArrayTypeName",
													"src": "11127:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "initializedTicksCrossedList",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11179:43:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 399,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "11179:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 400,
													"nodeType": "ArrayTypeName",
													"src": "11179:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 405,
												"src": "11236:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11236:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11082:183:0"
									},
									"scope": 474,
									"src": "10987:279:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IQuoterV2.QuoteExactInputSingleParams",
									"id": 416,
									"members": [
										{
											"constant": false,
											"id": 407,
											"mutability": "mutable",
											"name": "tokenIn",
											"nodeType": "VariableDeclaration",
											"scope": 416,
											"src": "11317:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 406,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11317:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 409,
											"mutability": "mutable",
											"name": "tokenOut",
											"nodeType": "VariableDeclaration",
											"scope": 416,
											"src": "11342:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 408,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "11342:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 411,
											"mutability": "mutable",
											"name": "amountIn",
											"nodeType": "VariableDeclaration",
											"scope": 416,
											"src": "11368:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 410,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "11368:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 413,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 416,
											"src": "11394:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 412,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "11394:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 415,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nodeType": "VariableDeclaration",
											"scope": 416,
											"src": "11414:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 414,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "11414:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "QuoteExactInputSingleParams",
									"nodeType": "StructDefinition",
									"scope": 474,
									"src": "11272:174:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 417,
										"nodeType": "StructuredDocumentation",
										"src": "11452:790:0",
										"text": "@notice Returns the amount out received for a given exact input but for a swap of a single pool\n @param params The params for the quote, encoded as `QuoteExactInputSingleParams`\n tokenIn The token being swapped in\n tokenOut The token being swapped out\n fee The fee of the token pool to consider for the pair\n amountIn The desired input amount\n sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountOut The amount of `tokenOut` that would be received\n @return sqrtPriceX96After The sqrt price of the pool after the swap\n @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "c6a5026a",
									"id": 430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "12278:41:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
													"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
												},
												"typeName": {
													"id": 418,
													"name": "QuoteExactInputSingleParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 416,
													"src": "12278:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_storage_ptr",
														"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12277:43:0"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "12368:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 421,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12368:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "12399:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 423,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "12399:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "12438:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 425,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "12438:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "12482:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 427,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12482:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12354:157:0"
									},
									"scope": 474,
									"src": "12247:265:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "12518:654:0",
										"text": "@notice Returns the amount in required for a given exact output swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n @param amountOut The amount of the last token to receive\n @return amountIn The amount of first token required to be paid\n @return sqrtPriceX96AfterList List of the sqrt price after the swap for each pool in the path\n @return initializedTicksCrossedList List of the initialized ticks that the swap crossed for each pool in the path\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "2f80bb1d",
									"id": 448,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "13203:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13203:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "13222:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13222:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13202:38:0"
									},
									"returnParameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "13288:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "sqrtPriceX96AfterList",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "13318:38:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 439,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "13318:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 440,
													"nodeType": "ArrayTypeName",
													"src": "13318:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "initializedTicksCrossedList",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "13370:43:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 442,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "13370:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 443,
													"nodeType": "ArrayTypeName",
													"src": "13370:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 448,
												"src": "13427:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13427:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13274:182:0"
									},
									"scope": 474,
									"src": "13177:280:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"canonicalName": "IQuoterV2.QuoteExactOutputSingleParams",
									"id": 459,
									"members": [
										{
											"constant": false,
											"id": 450,
											"mutability": "mutable",
											"name": "tokenIn",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "13509:15:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 449,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "13509:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 452,
											"mutability": "mutable",
											"name": "tokenOut",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "13534:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 451,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "13534:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 454,
											"mutability": "mutable",
											"name": "amount",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "13560:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 453,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "13560:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 456,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "13584:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 455,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "13584:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 458,
											"mutability": "mutable",
											"name": "sqrtPriceLimitX96",
											"nodeType": "VariableDeclaration",
											"scope": 459,
											"src": "13604:25:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint160",
												"typeString": "uint160"
											},
											"typeName": {
												"id": 457,
												"name": "uint160",
												"nodeType": "ElementaryTypeName",
												"src": "13604:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "QuoteExactOutputSingleParams",
									"nodeType": "StructDefinition",
									"scope": 474,
									"src": "13463:173:0",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 460,
										"nodeType": "StructuredDocumentation",
										"src": "13642:838:0",
										"text": "@notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n @param params The params for the quote, encoded as `QuoteExactOutputSingleParams`\n tokenIn The token being swapped in\n tokenOut The token being swapped out\n fee The fee of the token pool to consider for the pair\n amountOut The desired output amount\n sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountIn The amount required as the input for the swap in order to receive `amountOut`\n @return sqrtPriceX96After The sqrt price of the pool after the swap\n @return initializedTicksCrossed The number of initialized ticks that the swap crossed\n @return gasEstimate The estimate of the gas that the swap consumes"
									},
									"functionSelector": "bd21704a",
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14517:42:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
													"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams"
												},
												"typeName": {
													"id": 461,
													"name": "QuoteExactOutputSingleParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 459,
													"src": "14517:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_storage_ptr",
														"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14516:44:0"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14608:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14608:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14638:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 466,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "14638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14677:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 468,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "14677:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "14721:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14721:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14594:156:0"
									},
									"scope": 474,
									"src": "14485:266:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3137,
							"src": "10338:4415:0"
						},
						{
							"id": 475,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "14840:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 476,
								"nodeType": "StructuredDocumentation",
								"src": "14866:144:0",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 487,
							"linearizedBaseContracts": [
								487
							],
							"name": "IUniswapV3SwapCallback",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 477,
										"nodeType": "StructuredDocumentation",
										"src": "15049:898:0",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 486,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 479,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "15992:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 478,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "15992:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "16021:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 480,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "16021:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 486,
												"src": "16050:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 482,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "16050:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15982:93:0"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16084:0:0"
									},
									"scope": 487,
									"src": "15952:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3137,
							"src": "15010:1077:0"
						},
						{
							"id": 488,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16168:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 489,
								"nodeType": "StructuredDocumentation",
								"src": "16194:88:0",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 605,
							"linearizedBaseContracts": [
								605
							],
							"name": "IUniswapV3PoolEvents",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 490,
										"nodeType": "StructuredDocumentation",
										"src": "16319:344:0",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"id": 496,
									"name": "Initialize",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "16685:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 491,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "16685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 494,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "16707:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 493,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "16707:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16684:34:0"
									},
									"src": "16668:51:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "16725:551:0",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"id": 513,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17301:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17301:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17325:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17356:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 502,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "17356:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17389:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 504,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "17389:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17422:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 506,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "17422:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17446:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 508,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "17471:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17471:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17291:201:0"
									},
									"src": "17281:212:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "17499:493:0",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"id": 528,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "18020:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18020:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "18051:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "18078:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 519,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "18078:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "18111:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 521,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "18111:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "18144:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 523,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "18144:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 526,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "18169:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 525,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "18169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18010:180:0"
									},
									"src": "17997:194:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "18197:523:0",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"id": 543,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "18745:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18745:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "18776:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 532,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "18776:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "18809:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 534,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "18809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "18842:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 536,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "18842:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "18866:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 543,
												"src": "18891:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18891:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18735:177:0"
									},
									"src": "18725:188:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "18919:600:0",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"id": 560,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "19544:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "19576:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "19611:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 549,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19611:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 552,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "19635:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 551,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19635:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 554,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "19659:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 553,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "19659:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 556,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "19689:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 555,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "19689:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 558,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 560,
												"src": "19716:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 557,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "19716:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19534:198:0"
									},
									"src": "19524:209:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 561,
										"nodeType": "StructuredDocumentation",
										"src": "19739:562:0",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"id": 575,
									"name": "Flash",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "20327:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20327:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "20359:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 567,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "20394:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 566,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20394:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 569,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "20419:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 568,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "20444:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 570,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20444:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "20467:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20467:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20317:169:0"
									},
									"src": "20306:181:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "20493:451:0",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"id": 582,
									"name": "IncreaseObservationCardinalityNext",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "20999:36:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 577,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "20999:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "21045:36:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 579,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "21045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20989:98:0"
									},
									"src": "20949:139:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "21094:370:0",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"id": 593,
									"name": "SetFeeProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "21490:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 584,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "21490:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "21513:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 586,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "21513:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 589,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "21536:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 588,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "21536:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 591,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nodeType": "VariableDeclaration",
												"scope": 593,
												"src": "21559:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 590,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "21559:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21489:92:0"
									},
									"src": "21469:113:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "21588:384:0",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"id": 604,
									"name": "CollectProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "21999:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21999:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "22023:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "22050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 599,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "22050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 602,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "22067:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 601,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "22067:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21998:85:0"
									},
									"src": "21977:107:0"
								}
							],
							"scope": 3137,
							"src": "16282:5804:0"
						},
						{
							"id": 606,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "22173:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 607,
								"nodeType": "StructuredDocumentation",
								"src": "22199:116:0",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 630,
							"linearizedBaseContracts": [
								630
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "22358:205:0",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 615,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "22592:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 609,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "22592:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "22612:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 611,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "22612:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22591:40:0"
									},
									"returnParameters": {
										"id": 614,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22640:0:0"
									},
									"scope": 630,
									"src": "22568:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 616,
										"nodeType": "StructuredDocumentation",
										"src": "22647:483:0",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 629,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "23169:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 617,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "23196:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 619,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "23196:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 622,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "23230:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 621,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "23230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23159:101:0"
									},
									"returnParameters": {
										"id": 628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "23279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 624,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "23279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 629,
												"src": "23296:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 626,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "23296:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23278:34:0"
									},
									"scope": 630,
									"src": "23135:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3137,
							"src": "22315:1000:0"
						},
						{
							"id": 631,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "23397:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 632,
								"nodeType": "StructuredDocumentation",
								"src": "23423:102:0",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 725,
							"linearizedBaseContracts": [
								725
							],
							"name": "IUniswapV3PoolActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 633,
										"nodeType": "StructuredDocumentation",
										"src": "23563:206:0",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "23794:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 634,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "23794:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23793:22:0"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23824:0:0"
									},
									"scope": 725,
									"src": "23774:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 639,
										"nodeType": "StructuredDocumentation",
										"src": "23831:1029:0",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 656,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "24888:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24888:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "24915:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 642,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "24915:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "24940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 644,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "24940:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "24965:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 646,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "24965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 649,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "24989:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 648,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "24989:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24878:136:0"
									},
									"returnParameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "25033:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25033:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "25050:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25050:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25032:34:0"
									},
									"scope": 725,
									"src": "24865:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "25073:1053:0",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 674,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "26157:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "26184:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 660,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "26184:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "26209:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 662,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "26209:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "26234:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 664,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "26234:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "26268:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 666,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "26268:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26147:151:0"
									},
									"returnParameters": {
										"id": 673,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "26317:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 669,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "26317:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 674,
												"src": "26334:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 671,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "26334:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26316:34:0"
									},
									"scope": 725,
									"src": "26131:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 675,
										"nodeType": "StructuredDocumentation",
										"src": "26357:631:0",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 688,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "27016:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 676,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "27016:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "27041:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 678,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "27041:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "27066:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 680,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "27066:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27006:80:0"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "27105:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 683,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "27122:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27122:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27104:34:0"
									},
									"scope": 725,
									"src": "26993:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "27145:1015:0",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "28188:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28188:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "28215:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 692,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28215:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "28240:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 694,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28240:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "28272:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 696,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "28272:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "28307:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 698,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28307:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28178:154:0"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "28351:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 701,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28351:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "28367:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 703,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28367:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28350:32:0"
									},
									"scope": 725,
									"src": "28165:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "28389:657:0",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "29075:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 708,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "29102:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 710,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29102:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "29127:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "29152:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 714,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29152:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29065:112:0"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29186:0:0"
									},
									"scope": 725,
									"src": "29051:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "29193:367:0",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 724,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 724,
												"src": "29609:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 720,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "29609:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29608:35:0"
									},
									"returnParameters": {
										"id": 723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29652:0:0"
									},
									"scope": 725,
									"src": "29565:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3137,
							"src": "23525:6130:0"
						},
						{
							"id": 726,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "29742:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 727,
								"nodeType": "StructuredDocumentation",
								"src": "29768:222:0",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 755,
							"linearizedBaseContracts": [
								755
							],
							"name": "IUniswapV3PoolDerivedState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 728,
										"nodeType": "StructuredDocumentation",
										"src": "30033:1045:0",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 740,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "31100:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 729,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "31100:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 730,
													"nodeType": "ArrayTypeName",
													"src": "31100:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31099:31:0"
									},
									"returnParameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "31178:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 733,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "31178:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 734,
													"nodeType": "ArrayTypeName",
													"src": "31178:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"scope": 740,
												"src": "31210:51:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 736,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "31210:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 737,
													"nodeType": "ArrayTypeName",
													"src": "31210:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31177:85:0"
									},
									"scope": 755,
									"src": "31083:180:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 741,
										"nodeType": "StructuredDocumentation",
										"src": "31269:771:0",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 754,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "32080:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 742,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32080:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "32097:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 744,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32097:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32079:34:0"
									},
									"returnParameters": {
										"id": 753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "32174:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 747,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "32174:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "32214:37:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 749,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "32214:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "secondsInside",
												"nodeType": "VariableDeclaration",
												"scope": 754,
												"src": "32265:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 751,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "32265:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32160:135:0"
									},
									"scope": 755,
									"src": "32045:251:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3137,
							"src": "29990:2308:0"
						},
						{
							"id": 756,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32378:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 757,
								"nodeType": "StructuredDocumentation",
								"src": "32404:169:0",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 862,
							"linearizedBaseContracts": [
								862
							],
							"name": "IUniswapV3PoolState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 758,
										"nodeType": "StructuredDocumentation",
										"src": "32609:1140:0",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 775,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33768:2:0"
									},
									"returnParameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "33831:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 760,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "33831:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "33865:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 762,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "33865:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "observationIndex",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "33889:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 764,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "33889:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "33926:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 766,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "33926:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "33969:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 768,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "33969:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 771,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "34016:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 770,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "34016:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "unlocked",
												"nodeType": "VariableDeclaration",
												"scope": 775,
												"src": "34047:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 772,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34047:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33817:253:0"
									},
									"scope": 862,
									"src": "33754:317:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 776,
										"nodeType": "StructuredDocumentation",
										"src": "34077:168:0",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34279:2:0"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "34305:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34305:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34304:9:0"
									},
									"scope": 862,
									"src": "34250:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "34320:168:0",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 787,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 783,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34522:2:0"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 787,
												"src": "34548:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 784,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34548:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34547:9:0"
									},
									"scope": 862,
									"src": "34493:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 788,
										"nodeType": "StructuredDocumentation",
										"src": "34563:147:0",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 795,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34736:2:0"
									},
									"returnParameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "34762:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 790,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "34762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 795,
												"src": "34778:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 792,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "34778:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34761:32:0"
									},
									"scope": 862,
									"src": "34715:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 796,
										"nodeType": "StructuredDocumentation",
										"src": "34800:150:0",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 801,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34973:2:0"
									},
									"returnParameters": {
										"id": 800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 799,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 801,
												"src": "34999:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 798,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "34999:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34998:9:0"
									},
									"scope": 862,
									"src": "34955:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "35014:1244:0",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 823,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "36278:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 803,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "36278:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36277:12:0"
									},
									"returnParameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "36350:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 806,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "36350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "36386:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 808,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "36386:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "36419:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 810,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36419:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "36462:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "36505:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 814,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "36505:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "36546:38:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 816,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "36546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "36598:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 818,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "36598:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 823,
												"src": "36633:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 820,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36633:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36336:323:0"
									},
									"scope": 862,
									"src": "36263:397:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "36666:99:0",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 831,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "wordPosition",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "36790:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 825,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "36790:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36789:20:0"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 831,
												"src": "36833:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36832:9:0"
									},
									"scope": 862,
									"src": "36770:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "36848:700:0",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 847,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "37572:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 833,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "37572:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37571:13:0"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "_liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "37645:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 836,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "37645:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 839,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "37677:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "37723:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "37769:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 842,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "37769:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"scope": 847,
												"src": "37802:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 844,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "37802:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37631:200:0"
									},
									"scope": 862,
									"src": "37553:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 848,
										"nodeType": "StructuredDocumentation",
										"src": "37838:749:0",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 861,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "38614:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38614:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38613:15:0"
									},
									"returnParameters": {
										"id": 860,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "38689:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 852,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "38689:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "38724:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 854,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "38724:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "38758:41:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 856,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "38758:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 859,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "38813:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 858,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "38813:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38675:164:0"
									},
									"scope": 862,
									"src": "38592:248:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3137,
							"src": "32573:6269:0"
						},
						{
							"id": 863,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38927:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 864,
								"nodeType": "StructuredDocumentation",
								"src": "38953:153:0",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 901,
							"linearizedBaseContracts": [
								901
							],
							"name": "IUniswapV3PoolImmutables",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "39147:138:0",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 870,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 866,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39306:2:0"
									},
									"returnParameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "39332:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39331:9:0"
									},
									"scope": 901,
									"src": "39290:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "39347:113:0",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 876,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39480:2:0"
									},
									"returnParameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "39506:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39505:9:0"
									},
									"scope": 901,
									"src": "39465:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "39521:114:0",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 882,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39655:2:0"
									},
									"returnParameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "39681:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39681:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39680:9:0"
									},
									"scope": 901,
									"src": "39640:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "39696:84:0",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 888,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39797:2:0"
									},
									"returnParameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 888,
												"src": "39823:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 885,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39823:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39822:8:0"
									},
									"scope": 901,
									"src": "39785:46:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "39837:358:0",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 894,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40220:2:0"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "40246:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 891,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "40246:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40245:7:0"
									},
									"scope": 901,
									"src": "40200:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "40259:363:0",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 900,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40655:2:0"
									},
									"returnParameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "40681:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 897,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "40681:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40680:9:0"
									},
									"scope": 901,
									"src": "40627:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 3137,
							"src": "39106:1586:0"
						},
						{
							"id": 902,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40762:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 904,
										"name": "IUniswapV3PoolImmutables",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 901,
										"src": "41091:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolImmutables_$901",
											"typeString": "contract IUniswapV3PoolImmutables"
										}
									},
									"id": 905,
									"nodeType": "InheritanceSpecifier",
									"src": "41091:24:0"
								},
								{
									"baseName": {
										"id": 906,
										"name": "IUniswapV3PoolState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 862,
										"src": "41121:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolState_$862",
											"typeString": "contract IUniswapV3PoolState"
										}
									},
									"id": 907,
									"nodeType": "InheritanceSpecifier",
									"src": "41121:19:0"
								},
								{
									"baseName": {
										"id": 908,
										"name": "IUniswapV3PoolDerivedState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 755,
										"src": "41146:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolDerivedState_$755",
											"typeString": "contract IUniswapV3PoolDerivedState"
										}
									},
									"id": 909,
									"nodeType": "InheritanceSpecifier",
									"src": "41146:26:0"
								},
								{
									"baseName": {
										"id": 910,
										"name": "IUniswapV3PoolActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 725,
										"src": "41178:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolActions_$725",
											"typeString": "contract IUniswapV3PoolActions"
										}
									},
									"id": 911,
									"nodeType": "InheritanceSpecifier",
									"src": "41178:21:0"
								},
								{
									"baseName": {
										"id": 912,
										"name": "IUniswapV3PoolOwnerActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 630,
										"src": "41205:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolOwnerActions_$630",
											"typeString": "contract IUniswapV3PoolOwnerActions"
										}
									},
									"id": 913,
									"nodeType": "InheritanceSpecifier",
									"src": "41205:26:0"
								},
								{
									"baseName": {
										"id": 914,
										"name": "IUniswapV3PoolEvents",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 605,
										"src": "41237:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolEvents_$605",
											"typeString": "contract IUniswapV3PoolEvents"
										}
									},
									"id": 915,
									"nodeType": "InheritanceSpecifier",
									"src": "41237:20:0"
								}
							],
							"contractDependencies": [
								605,
								630,
								725,
								755,
								862,
								901
							],
							"contractKind": "interface",
							"documentation": {
								"id": 903,
								"nodeType": "StructuredDocumentation",
								"src": "40794:265:0",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 916,
							"linearizedBaseContracts": [
								916,
								605,
								630,
								725,
								755,
								862,
								901
							],
							"name": "IUniswapV3Pool",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3137,
							"src": "41059:203:0"
						},
						{
							"id": 917,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41316:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 1222,
							"linearizedBaseContracts": [
								1222
							],
							"name": "PoolTicksCounter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1191,
										"nodeType": "Block",
										"src": "42020:3126:0",
										"statements": [
											{
												"assignments": [
													930
												],
												"declarations": [
													{
														"constant": false,
														"id": 930,
														"mutability": "mutable",
														"name": "wordPosLower",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "42030:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														},
														"typeName": {
															"id": 929,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "42030:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 931,
												"nodeType": "VariableDeclarationStatement",
												"src": "42030:18:0"
											},
											{
												"assignments": [
													933
												],
												"declarations": [
													{
														"constant": false,
														"id": 933,
														"mutability": "mutable",
														"name": "wordPosHigher",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "42058:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														},
														"typeName": {
															"id": 932,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "42058:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 934,
												"nodeType": "VariableDeclarationStatement",
												"src": "42058:19:0"
											},
											{
												"assignments": [
													936
												],
												"declarations": [
													{
														"constant": false,
														"id": 936,
														"mutability": "mutable",
														"name": "bitPosLower",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "42087:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 935,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "42087:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 937,
												"nodeType": "VariableDeclarationStatement",
												"src": "42087:17:0"
											},
											{
												"assignments": [
													939
												],
												"declarations": [
													{
														"constant": false,
														"id": 939,
														"mutability": "mutable",
														"name": "bitPosHigher",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "42114:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 938,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "42114:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 940,
												"nodeType": "VariableDeclarationStatement",
												"src": "42114:18:0"
											},
											{
												"assignments": [
													942
												],
												"declarations": [
													{
														"constant": false,
														"id": 942,
														"mutability": "mutable",
														"name": "tickBeforeInitialized",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "42142:26:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 941,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "42142:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 943,
												"nodeType": "VariableDeclarationStatement",
												"src": "42142:26:0"
											},
											{
												"assignments": [
													945
												],
												"declarations": [
													{
														"constant": false,
														"id": 945,
														"mutability": "mutable",
														"name": "tickAfterInitialized",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "42178:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 944,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "42178:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 946,
												"nodeType": "VariableDeclarationStatement",
												"src": "42178:25:0"
											},
											{
												"id": 1112,
												"nodeType": "Block",
												"src": "42214:1887:0",
												"statements": [
													{
														"assignments": [
															948
														],
														"declarations": [
															{
																"constant": false,
																"id": 948,
																"mutability": "mutable",
																"name": "wordPos",
																"nodeType": "VariableDeclaration",
																"scope": 1112,
																"src": "42331:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int16",
																	"typeString": "int16"
																},
																"typeName": {
																	"id": 947,
																	"name": "int16",
																	"nodeType": "ElementaryTypeName",
																	"src": "42331:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 960,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"id": 958,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				"id": 955,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 951,
																					"name": "tickBefore",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 922,
																					"src": "42354:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 952,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 920,
																							"src": "42367:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																								"typeString": "contract IUniswapV3Pool"
																							}
																						},
																						"id": 953,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tickSpacing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 894,
																						"src": "42367:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
																							"typeString": "function () view external returns (int24)"
																						}
																					},
																					"id": 954,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "42367:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"src": "42354:31:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"id": 956,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "42353:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42390:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "42353:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																],
																"id": 950,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42347:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int16_$",
																	"typeString": "type(int16)"
																},
																"typeName": {
																	"id": 949,
																	"name": "int16",
																	"nodeType": "ElementaryTypeName",
																	"src": "42347:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42347:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "42331:61:0"
													},
													{
														"assignments": [
															962
														],
														"declarations": [
															{
																"constant": false,
																"id": 962,
																"mutability": "mutable",
																"name": "bitPos",
																"nodeType": "VariableDeclaration",
																"scope": 1112,
																"src": "42406:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 961,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "42406:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 974,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"id": 972,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				"id": 969,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 965,
																					"name": "tickBefore",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 922,
																					"src": "42428:10:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 966,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 920,
																							"src": "42441:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																								"typeString": "contract IUniswapV3Pool"
																							}
																						},
																						"id": 967,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tickSpacing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 894,
																						"src": "42441:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
																							"typeString": "function () view external returns (int24)"
																						}
																					},
																					"id": 968,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "42441:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"src": "42428:31:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"id": 970,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "42427:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "323536",
																		"id": 971,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42463:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"value": "256"
																	},
																	"src": "42427:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																],
																"id": 964,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42421:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 963,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "42421:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 973,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42421:46:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "42406:61:0"
													},
													{
														"assignments": [
															976
														],
														"declarations": [
															{
																"constant": false,
																"id": 976,
																"mutability": "mutable",
																"name": "wordPosAfter",
																"nodeType": "VariableDeclaration",
																"scope": 1112,
																"src": "42482:18:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_int16",
																	"typeString": "int16"
																},
																"typeName": {
																	"id": 975,
																	"name": "int16",
																	"nodeType": "ElementaryTypeName",
																	"src": "42482:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 988,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"id": 986,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				"id": 983,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 979,
																					"name": "tickAfter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 924,
																					"src": "42510:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 980,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 920,
																							"src": "42522:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																								"typeString": "contract IUniswapV3Pool"
																							}
																						},
																						"id": 981,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tickSpacing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 894,
																						"src": "42522:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
																							"typeString": "function () view external returns (int24)"
																						}
																					},
																					"id": 982,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "42522:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"src": "42510:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"id": 984,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "42509:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">>",
																	"rightExpression": {
																		"hexValue": "38",
																		"id": 985,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42545:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	"src": "42509:37:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																],
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42503:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_int16_$",
																	"typeString": "type(int16)"
																},
																"typeName": {
																	"id": 977,
																	"name": "int16",
																	"nodeType": "ElementaryTypeName",
																	"src": "42503:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 987,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42503:44:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "42482:65:0"
													},
													{
														"assignments": [
															990
														],
														"declarations": [
															{
																"constant": false,
																"id": 990,
																"mutability": "mutable",
																"name": "bitPosAfter",
																"nodeType": "VariableDeclaration",
																"scope": 1112,
																"src": "42561:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																},
																"typeName": {
																	"id": 989,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "42561:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1002,
														"initialValue": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	},
																	"id": 1000,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				"id": 997,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 993,
																					"name": "tickAfter",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 924,
																					"src": "42588:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"arguments": [],
																					"expression": {
																						"argumentTypes": [],
																						"expression": {
																							"id": 994,
																							"name": "self",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 920,
																							"src": "42600:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																								"typeString": "contract IUniswapV3Pool"
																							}
																						},
																						"id": 995,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberName": "tickSpacing",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 894,
																						"src": "42600:16:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
																							"typeString": "function () view external returns (int24)"
																						}
																					},
																					"id": 996,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "42600:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"src": "42588:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			}
																		],
																		"id": 998,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "42587:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"hexValue": "323536",
																		"id": 999,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "42622:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_256_by_1",
																			"typeString": "int_const 256"
																		},
																		"value": "256"
																	},
																	"src": "42587:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																],
																"id": 992,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "42581:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 991,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "42581:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "42581:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "42561:65:0"
													},
													{
														"expression": {
															"id": 1032,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1003,
																"name": "tickAfterInitialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "43006:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1031,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1026,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1015,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1012,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"arguments": [
																									{
																										"id": 1006,
																										"name": "wordPosAfter",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 976,
																										"src": "43063:12:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_int16",
																											"typeString": "int16"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_int16",
																											"typeString": "int16"
																										}
																									],
																									"expression": {
																										"id": 1004,
																										"name": "self",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 920,
																										"src": "43047:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																											"typeString": "contract IUniswapV3Pool"
																										}
																									},
																									"id": 1005,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "tickBitmap",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 831,
																									"src": "43047:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_view$_t_int16_$returns$_t_uint256_$",
																										"typeString": "function (int16) view external returns (uint256)"
																									}
																								},
																								"id": 1007,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "43047:29:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "&",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1010,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"hexValue": "31",
																											"id": 1008,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "43080:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "<<",
																										"rightExpression": {
																											"id": 1009,
																											"name": "bitPosAfter",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 990,
																											"src": "43085:11:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"src": "43080:16:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1011,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "43079:18:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "43047:50:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1013,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "43046:52:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1014,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "43101:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "43046:56:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1016,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "43045:58:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				"id": 1024,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							},
																							"id": 1021,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1017,
																								"name": "tickAfter",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 924,
																								"src": "43125:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int24",
																									"typeString": "int24"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "%",
																							"rightExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"expression": {
																										"id": 1018,
																										"name": "self",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 920,
																										"src": "43137:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																											"typeString": "contract IUniswapV3Pool"
																										}
																									},
																									"id": 1019,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "tickSpacing",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 894,
																									"src": "43137:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
																										"typeString": "function () view external returns (int24)"
																									}
																								},
																								"id": 1020,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "43137:18:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_int24",
																									"typeString": "int24"
																								}
																							},
																							"src": "43125:30:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						}
																					],
																					"id": 1022,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "43124:32:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1023,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "43160:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "43124:37:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1025,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "43123:39:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "43045:117:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			"id": 1029,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1027,
																				"name": "tickBefore",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 922,
																				"src": "43183:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"id": 1028,
																				"name": "tickAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 924,
																				"src": "43196:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"src": "43183:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1030,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "43182:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "43045:161:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "43006:200:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1033,
														"nodeType": "ExpressionStatement",
														"src": "43006:200:0"
													},
													{
														"expression": {
															"id": 1063,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1034,
																"name": "tickBeforeInitialized",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "43430:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1062,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1057,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1046,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1043,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"arguments": [
																									{
																										"id": 1037,
																										"name": "wordPos",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 948,
																										"src": "43488:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_int16",
																											"typeString": "int16"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_int16",
																											"typeString": "int16"
																										}
																									],
																									"expression": {
																										"id": 1035,
																										"name": "self",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 920,
																										"src": "43472:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																											"typeString": "contract IUniswapV3Pool"
																										}
																									},
																									"id": 1036,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "tickBitmap",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 831,
																									"src": "43472:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_view$_t_int16_$returns$_t_uint256_$",
																										"typeString": "function (int16) view external returns (uint256)"
																									}
																								},
																								"id": 1038,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "43472:24:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "&",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										},
																										"id": 1041,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"hexValue": "31",
																											"id": 1039,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "43500:1:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_1_by_1",
																												"typeString": "int_const 1"
																											},
																											"value": "1"
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "<<",
																										"rightExpression": {
																											"id": 1040,
																											"name": "bitPos",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 962,
																											"src": "43505:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"src": "43500:11:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									}
																								],
																								"id": 1042,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "43499:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "43472:40:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1044,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "43471:42:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": ">",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1045,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "43516:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "43471:46:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1047,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "43470:48:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&&",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				},
																				"id": 1055,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							},
																							"id": 1052,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 1048,
																								"name": "tickBefore",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 922,
																								"src": "43540:10:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_int24",
																									"typeString": "int24"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "%",
																							"rightExpression": {
																								"arguments": [],
																								"expression": {
																									"argumentTypes": [],
																									"expression": {
																										"id": 1049,
																										"name": "self",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 920,
																										"src": "43553:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																											"typeString": "contract IUniswapV3Pool"
																										}
																									},
																									"id": 1050,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "tickSpacing",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": 894,
																									"src": "43553:16:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_external_view$__$returns$_t_int24_$",
																										"typeString": "function () view external returns (int24)"
																									}
																								},
																								"id": 1051,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "43553:18:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_int24",
																									"typeString": "int24"
																								}
																							},
																							"src": "43540:31:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						}
																					],
																					"id": 1053,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "43539:33:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1054,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "43576:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "43539:38:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			}
																		],
																		"id": 1056,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "43538:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "43470:108:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			},
																			"id": 1060,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1058,
																				"name": "tickBefore",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 922,
																				"src": "43599:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 1059,
																				"name": "tickAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 924,
																				"src": "43612:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int24",
																					"typeString": "int24"
																				}
																			},
																			"src": "43599:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"id": 1061,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "43598:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "43470:152:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "43430:192:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1064,
														"nodeType": "ExpressionStatement",
														"src": "43430:192:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int16",
																	"typeString": "int16"
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1065,
																	"name": "wordPos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 948,
																	"src": "43641:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1066,
																	"name": "wordPosAfter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 976,
																	"src": "43651:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"src": "43641:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 1074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			},
																			"id": 1070,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1068,
																				"name": "wordPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 948,
																				"src": "43668:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int16",
																					"typeString": "int16"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1069,
																				"name": "wordPosAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "43679:12:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int16",
																					"typeString": "int16"
																				}
																			},
																			"src": "43668:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			},
																			"id": 1073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1071,
																				"name": "bitPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 962,
																				"src": "43695:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<=",
																			"rightExpression": {
																				"id": 1072,
																				"name": "bitPosAfter",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 990,
																				"src": "43705:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "43695:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "43668:48:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1075,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43667:50:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "43641:76:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseBody": {
															"id": 1110,
															"nodeType": "Block",
															"src": "43908:183:0",
															"statements": [
																{
																	"expression": {
																		"id": 1096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1094,
																			"name": "wordPosLower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "43926:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1095,
																			"name": "wordPosAfter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "43941:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"src": "43926:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"id": 1097,
																	"nodeType": "ExpressionStatement",
																	"src": "43926:27:0"
																},
																{
																	"expression": {
																		"id": 1100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1098,
																			"name": "bitPosLower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "43971:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1099,
																			"name": "bitPosAfter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 990,
																			"src": "43985:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "43971:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 1101,
																	"nodeType": "ExpressionStatement",
																	"src": "43971:25:0"
																},
																{
																	"expression": {
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1102,
																			"name": "wordPosHigher",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "44014:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1103,
																			"name": "wordPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "44030:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"src": "44014:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"id": 1105,
																	"nodeType": "ExpressionStatement",
																	"src": "44014:23:0"
																},
																{
																	"expression": {
																		"id": 1108,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1106,
																			"name": "bitPosHigher",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 939,
																			"src": "44055:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1107,
																			"name": "bitPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 962,
																			"src": "44070:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "44055:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 1109,
																	"nodeType": "ExpressionStatement",
																	"src": "44055:21:0"
																}
															]
														},
														"id": 1111,
														"nodeType": "IfStatement",
														"src": "43637:454:0",
														"trueBody": {
															"id": 1093,
															"nodeType": "Block",
															"src": "43719:183:0",
															"statements": [
																{
																	"expression": {
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1077,
																			"name": "wordPosLower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "43737:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1078,
																			"name": "wordPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 948,
																			"src": "43752:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"src": "43737:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"id": 1080,
																	"nodeType": "ExpressionStatement",
																	"src": "43737:22:0"
																},
																{
																	"expression": {
																		"id": 1083,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1081,
																			"name": "bitPosLower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 936,
																			"src": "43777:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1082,
																			"name": "bitPos",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 962,
																			"src": "43791:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "43777:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 1084,
																	"nodeType": "ExpressionStatement",
																	"src": "43777:20:0"
																},
																{
																	"expression": {
																		"id": 1087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1085,
																			"name": "wordPosHigher",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 933,
																			"src": "43815:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1086,
																			"name": "wordPosAfter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 976,
																			"src": "43831:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		},
																		"src": "43815:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"id": 1088,
																	"nodeType": "ExpressionStatement",
																	"src": "43815:28:0"
																},
																{
																	"expression": {
																		"id": 1091,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1089,
																			"name": "bitPosHigher",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 939,
																			"src": "43861:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 1090,
																			"name": "bitPosAfter",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 990,
																			"src": "43876:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "43861:26:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 1092,
																	"nodeType": "ExpressionStatement",
																	"src": "43861:26:0"
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													1114
												],
												"declarations": [
													{
														"constant": false,
														"id": 1114,
														"mutability": "mutable",
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"scope": 1191,
														"src": "44290:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "44290:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1122,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1117,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "44310:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1116,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "44310:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 1115,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "44305:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "44305:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "44305:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1120,
														"name": "bitPosLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 936,
														"src": "44326:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "44305:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44290:47:0"
											},
											{
												"body": {
													"id": 1173,
													"nodeType": "Block",
													"src": "44385:535:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_int16",
																	"typeString": "int16"
																},
																"id": 1128,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1126,
																	"name": "wordPosLower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "44517:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 1127,
																	"name": "wordPosHigher",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 933,
																	"src": "44533:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"src": "44517:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1146,
															"nodeType": "IfStatement",
															"src": "44513:125:0",
															"trueBody": {
																"id": 1145,
																"nodeType": "Block",
																"src": "44548:90:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1143,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1129,
																				"name": "mask",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1114,
																				"src": "44566:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1142,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1130,
																					"name": "mask",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1114,
																					"src": "44573:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "&",
																				"rightExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 1140,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"expression": {
																									"arguments": [
																										{
																											"id": 1133,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"lValueRequested": false,
																											"nodeType": "ElementaryTypeNameExpression",
																											"src": "44586:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_uint256_$",
																												"typeString": "type(uint256)"
																											},
																											"typeName": {
																												"id": 1132,
																												"name": "uint256",
																												"nodeType": "ElementaryTypeName",
																												"src": "44586:7:0",
																												"typeDescriptions": {}
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_type$_t_uint256_$",
																												"typeString": "type(uint256)"
																											}
																										],
																										"id": 1131,
																										"name": "type",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967269,
																										"src": "44581:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																											"typeString": "function () pure"
																										}
																									},
																									"id": 1134,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "44581:13:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_meta_type_t_uint256",
																										"typeString": "type(uint256)"
																									}
																								},
																								"id": 1135,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberName": "max",
																								"nodeType": "MemberAccess",
																								"src": "44581:17:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": ">>",
																							"rightExpression": {
																								"components": [
																									{
																										"commonType": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										},
																										"id": 1138,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"leftExpression": {
																											"hexValue": "323535",
																											"id": 1136,
																											"isConstant": false,
																											"isLValue": false,
																											"isPure": true,
																											"kind": "number",
																											"lValueRequested": false,
																											"nodeType": "Literal",
																											"src": "44603:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_rational_255_by_1",
																												"typeString": "int_const 255"
																											},
																											"value": "255"
																										},
																										"nodeType": "BinaryOperation",
																										"operator": "-",
																										"rightExpression": {
																											"id": 1137,
																											"name": "bitPosHigher",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 939,
																											"src": "44609:12:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint8",
																												"typeString": "uint8"
																											}
																										},
																										"src": "44603:18:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint8",
																											"typeString": "uint8"
																										}
																									}
																								],
																								"id": 1139,
																								"isConstant": false,
																								"isInlineArray": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "TupleExpression",
																								"src": "44602:20:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							},
																							"src": "44581:41:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 1141,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "44580:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "44573:50:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "44566:57:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1144,
																		"nodeType": "ExpressionStatement",
																		"src": "44566:57:0"
																	}
																]
															}
														},
														{
															"assignments": [
																1148
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1148,
																	"mutability": "mutable",
																	"name": "masked",
																	"nodeType": "VariableDeclaration",
																	"scope": 1173,
																	"src": "44652:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1147,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "44652:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1155,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1151,
																			"name": "wordPosLower",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 930,
																			"src": "44685:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int16",
																				"typeString": "int16"
																			}
																		],
																		"expression": {
																			"id": 1149,
																			"name": "self",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 920,
																			"src": "44669:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																				"typeString": "contract IUniswapV3Pool"
																			}
																		},
																		"id": 1150,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tickBitmap",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 831,
																		"src": "44669:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_view$_t_int16_$returns$_t_uint256_$",
																			"typeString": "function (int16) view external returns (uint256)"
																		}
																	},
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "44669:29:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1153,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "44701:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44669:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "44652:53:0"
														},
														{
															"expression": {
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1156,
																	"name": "initializedTicksCrossed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "44719:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1158,
																			"name": "masked",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1148,
																			"src": "44759:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1157,
																		"name": "countOneBits",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1221,
																		"src": "44746:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint16_$",
																			"typeString": "function (uint256) pure returns (uint16)"
																		}
																	},
																	"id": 1159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "44746:20:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"src": "44719:47:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1161,
															"nodeType": "ExpressionStatement",
															"src": "44719:47:0"
														},
														{
															"expression": {
																"id": 1163,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "44780:14:0",
																"subExpression": {
																	"id": 1162,
																	"name": "wordPosLower",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "44780:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int16",
																	"typeString": "int16"
																}
															},
															"id": 1164,
															"nodeType": "ExpressionStatement",
															"src": "44780:14:0"
														},
														{
															"expression": {
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1165,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1114,
																	"src": "44885:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1168,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "44897:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 1167,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "44897:7:0",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				}
																			],
																			"id": 1166,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "44892:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1169,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "44892:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint256",
																			"typeString": "type(uint256)"
																		}
																	},
																	"id": 1170,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "44892:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44885:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1172,
															"nodeType": "ExpressionStatement",
															"src": "44885:24:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													},
													"id": 1125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1123,
														"name": "wordPosLower",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 930,
														"src": "44354:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 1124,
														"name": "wordPosHigher",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 933,
														"src": "44370:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "44354:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1174,
												"nodeType": "WhileStatement",
												"src": "44347:573:0"
											},
											{
												"condition": {
													"id": 1175,
													"name": "tickAfterInitialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 945,
													"src": "44934:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1181,
												"nodeType": "IfStatement",
												"src": "44930:79:0",
												"trueBody": {
													"id": 1180,
													"nodeType": "Block",
													"src": "44956:53:0",
													"statements": [
														{
															"expression": {
																"id": 1178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1176,
																	"name": "initializedTicksCrossed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "44970:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "44997:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "44970:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1179,
															"nodeType": "ExpressionStatement",
															"src": "44970:28:0"
														}
													]
												}
											},
											{
												"condition": {
													"id": 1182,
													"name": "tickBeforeInitialized",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 942,
													"src": "45023:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1188,
												"nodeType": "IfStatement",
												"src": "45019:80:0",
												"trueBody": {
													"id": 1187,
													"nodeType": "Block",
													"src": "45046:53:0",
													"statements": [
														{
															"expression": {
																"id": 1185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1183,
																	"name": "initializedTicksCrossed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 927,
																	"src": "45060:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "45087:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "45060:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 1186,
															"nodeType": "ExpressionStatement",
															"src": "45060:28:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1189,
													"name": "initializedTicksCrossed",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 927,
													"src": "45116:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 928,
												"id": 1190,
												"nodeType": "Return",
												"src": "45109:30:0"
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "41374:462:0",
										"text": "@dev This function counts the number of initialized ticks that would incur a gas cost between tickBefore and tickAfter.\n When tickBefore and/or tickAfter themselves are initialized, the logic over whether we should count them depends on the\n direction of the swap. If we are swapping upwards (tickAfter > tickBefore) we don't want to count tickBefore but we do\n want to count tickAfter. The opposite is true if we are swapping downwards."
									},
									"id": 1192,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "countInitializedTicksCrossed",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 925,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "41888:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 919,
													"name": "IUniswapV3Pool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 916,
													"src": "41888:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "tickBefore",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "41917:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 921,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "41917:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "tickAfter",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "41943:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 923,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "41943:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41878:86:0"
									},
									"returnParameters": {
										"id": 928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 927,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nodeType": "VariableDeclaration",
												"scope": 1192,
												"src": "41988:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 926,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "41988:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41987:32:0"
									},
									"scope": 1222,
									"src": "41841:3305:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1220,
										"nodeType": "Block",
										"src": "45215:134:0",
										"statements": [
											{
												"assignments": [
													1200
												],
												"declarations": [
													{
														"constant": false,
														"id": 1200,
														"mutability": "mutable",
														"name": "bits",
														"nodeType": "VariableDeclaration",
														"scope": 1220,
														"src": "45225:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"typeName": {
															"id": 1199,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "45225:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1202,
												"initialValue": {
													"hexValue": "30",
													"id": 1201,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "45239:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45225:15:0"
											},
											{
												"body": {
													"id": 1216,
													"nodeType": "Block",
													"src": "45265:57:0",
													"statements": [
														{
															"expression": {
																"id": 1207,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "45279:6:0",
																"subExpression": {
																	"id": 1206,
																	"name": "bits",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "45279:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint16",
																	"typeString": "uint16"
																}
															},
															"id": 1208,
															"nodeType": "ExpressionStatement",
															"src": "45279:6:0"
														},
														{
															"expression": {
																"id": 1214,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1209,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1194,
																	"src": "45299:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "&=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1212,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1210,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1194,
																				"src": "45305:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1211,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "45309:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "45305:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1213,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "45304:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "45299:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1215,
															"nodeType": "ExpressionStatement",
															"src": "45299:12:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1203,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1194,
														"src": "45257:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45262:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "45257:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1217,
												"nodeType": "WhileStatement",
												"src": "45250:72:0"
											},
											{
												"expression": {
													"id": 1218,
													"name": "bits",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1200,
													"src": "45338:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 1198,
												"id": 1219,
												"nodeType": "Return",
												"src": "45331:11:0"
											}
										]
									},
									"id": 1221,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "countOneBits",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "45174:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45174:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45173:11:0"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1221,
												"src": "45207:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 1196,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "45207:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45206:8:0"
									},
									"scope": 1222,
									"src": "45152:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 3137,
							"src": "41343:4008:0"
						},
						{
							"id": 1223,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "45407:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1224,
								"nodeType": "StructuredDocumentation",
								"src": "45434:68:0",
								"text": "@notice Provides validation for callbacks from Uniswap V3 Pools"
							},
							"fullyImplemented": true,
							"id": 1281,
							"linearizedBaseContracts": [
								1281
							],
							"name": "CallbackValidation",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1248,
										"nodeType": "Block",
										"src": "46118:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1239,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1227,
															"src": "46150:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1242,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1229,
																	"src": "46182:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1243,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1231,
																	"src": "46190:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1244,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1233,
																	"src": "46198:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																],
																"expression": {
																	"id": 1240,
																	"name": "PoolAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "46159:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_PoolAddress_$91_$",
																		"typeString": "type(library PoolAddress)"
																	}
																},
																"id": 1241,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getPoolKey",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 43,
																"src": "46159:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint24_$returns$_t_struct$_PoolKey_$12_memory_ptr_$",
																	"typeString": "function (address,address,uint24) pure returns (struct PoolAddress.PoolKey memory)"
																}
															},
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46159:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														],
														"id": 1238,
														"name": "verifyCallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1249,
															1280
														],
														"referencedDeclaration": 1280,
														"src": "46135:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_PoolKey_$12_memory_ptr_$returns$_t_contract$_IUniswapV3Pool_$916_$",
															"typeString": "function (address,struct PoolAddress.PoolKey memory) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 1246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46135:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"functionReturnParameters": 1237,
												"id": 1247,
												"nodeType": "Return",
												"src": "46128:75:0"
											}
										]
									},
									"documentation": {
										"id": 1225,
										"nodeType": "StructuredDocumentation",
										"src": "45535:411:0",
										"text": "@notice Returns the address of a valid Uniswap V3 Pool\n @param factory The contract address of the Uniswap V3 factory\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The V3 pool contract address"
									},
									"id": 1249,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "45984:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45984:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "46009:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46009:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1231,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "46033:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "46057:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1232,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "46057:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45974:99:0"
									},
									"returnParameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1249,
												"src": "46097:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 1235,
													"name": "IUniswapV3Pool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 916,
													"src": "46097:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46096:21:0"
									},
									"scope": 1281,
									"src": "45951:259:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "46606:130:0",
										"statements": [
											{
												"expression": {
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1259,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1257,
														"src": "46616:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1263,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1252,
																		"src": "46665:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1264,
																		"name": "poolKey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "46674:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	],
																	"expression": {
																		"id": 1261,
																		"name": "PoolAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "46638:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_PoolAddress_$91_$",
																			"typeString": "type(library PoolAddress)"
																		}
																	},
																	"id": 1262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "computeAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 90,
																	"src": "46638:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$12_memory_ptr_$returns$_t_address_$",
																		"typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
																	}
																},
																"id": 1265,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46638:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1260,
															"name": "IUniswapV3Pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 916,
															"src": "46623:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$916_$",
																"typeString": "type(contract IUniswapV3Pool)"
															}
														},
														"id": 1266,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "46623:60:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"src": "46616:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"id": 1268,
												"nodeType": "ExpressionStatement",
												"src": "46616:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1270,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "46701:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "46701:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1274,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1257,
																		"src": "46723:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	],
																	"id": 1273,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "46715:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1272,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "46715:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1275,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46715:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "46701:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "46693:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1277,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46693:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1278,
												"nodeType": "ExpressionStatement",
												"src": "46693:36:0"
											}
										]
									},
									"documentation": {
										"id": 1250,
										"nodeType": "StructuredDocumentation",
										"src": "46216:236:0",
										"text": "@notice Returns the address of a valid Uniswap V3 Pool\n @param factory The contract address of the Uniswap V3 factory\n @param poolKey The identifying key of the V3 pool\n @return pool The V3 pool contract address"
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1252,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "46481:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "poolKey",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "46498:34:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 1253,
													"name": "PoolAddress.PoolKey",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 12,
													"src": "46498:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$12_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46480:53:0"
									},
									"returnParameters": {
										"id": 1258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "46581:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 1256,
													"name": "IUniswapV3Pool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 916,
													"src": "46581:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46580:21:0"
									},
									"scope": 1281,
									"src": "46457:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3137,
							"src": "45502:1236:0"
						},
						{
							"id": 1282,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "46800:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1283,
								"nodeType": "StructuredDocumentation",
								"src": "46826:116:0",
								"text": "@title BitMath\n @dev This library provides functionality for computing bit properties of an unsigned integer"
							},
							"fullyImplemented": true,
							"id": 1559,
							"linearizedBaseContracts": [
								1559
							],
							"name": "BitMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "47497:660:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1292,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1286,
																"src": "47515:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1293,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "47519:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "47515:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1291,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "47507:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47507:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1296,
												"nodeType": "ExpressionStatement",
												"src": "47507:14:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1297,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "47536:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47541:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"src": "47536:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1309,
												"nodeType": "IfStatement",
												"src": "47532:102:0",
												"trueBody": {
													"id": 1308,
													"nodeType": "Block",
													"src": "47578:56:0",
													"statements": [
														{
															"expression": {
																"id": 1302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1300,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "47592:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 1301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47598:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "47592:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1303,
															"nodeType": "ExpressionStatement",
															"src": "47592:9:0"
														},
														{
															"expression": {
																"id": 1306,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1304,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "47615:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 1305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47620:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "47615:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1307,
															"nodeType": "ExpressionStatement",
															"src": "47615:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1312,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1310,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "47647:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030303030303030303030303030",
														"id": 1311,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47652:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18446744073709551616_by_1",
															"typeString": "int_const 18446744073709551616"
														},
														"value": "0x10000000000000000"
													},
													"src": "47647:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1322,
												"nodeType": "IfStatement",
												"src": "47643:84:0",
												"trueBody": {
													"id": 1321,
													"nodeType": "Block",
													"src": "47673:54:0",
													"statements": [
														{
															"expression": {
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1313,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "47687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 1314,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47693:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "47687:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1316,
															"nodeType": "ExpressionStatement",
															"src": "47687:8:0"
														},
														{
															"expression": {
																"id": 1319,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1317,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "47709:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 1318,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47714:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "47709:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1320,
															"nodeType": "ExpressionStatement",
															"src": "47709:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1323,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "47740:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030303030303030",
														"id": 1324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47745:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4294967296_by_1",
															"typeString": "int_const 4294967296"
														},
														"value": "0x100000000"
													},
													"src": "47740:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1335,
												"nodeType": "IfStatement",
												"src": "47736:76:0",
												"trueBody": {
													"id": 1334,
													"nodeType": "Block",
													"src": "47758:54:0",
													"statements": [
														{
															"expression": {
																"id": 1328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1326,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "47772:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1327,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47778:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "47772:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1329,
															"nodeType": "ExpressionStatement",
															"src": "47772:8:0"
														},
														{
															"expression": {
																"id": 1332,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1330,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "47794:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1331,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47799:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "47794:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1333,
															"nodeType": "ExpressionStatement",
															"src": "47794:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1336,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "47825:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130303030",
														"id": 1337,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47830:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_65536_by_1",
															"typeString": "int_const 65536"
														},
														"value": "0x10000"
													},
													"src": "47825:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1348,
												"nodeType": "IfStatement",
												"src": "47821:72:0",
												"trueBody": {
													"id": 1347,
													"nodeType": "Block",
													"src": "47839:54:0",
													"statements": [
														{
															"expression": {
																"id": 1341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1339,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "47853:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47859:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "47853:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1342,
															"nodeType": "ExpressionStatement",
															"src": "47853:8:0"
														},
														{
															"expression": {
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1343,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "47875:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 1344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47880:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "47875:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1346,
															"nodeType": "ExpressionStatement",
															"src": "47875:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1349,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "47906:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "3078313030",
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47911:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_256_by_1",
															"typeString": "int_const 256"
														},
														"value": "0x100"
													},
													"src": "47906:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1361,
												"nodeType": "IfStatement",
												"src": "47902:68:0",
												"trueBody": {
													"id": 1360,
													"nodeType": "Block",
													"src": "47918:52:0",
													"statements": [
														{
															"expression": {
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1352,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "47932:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47938:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "47932:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1355,
															"nodeType": "ExpressionStatement",
															"src": "47932:7:0"
														},
														{
															"expression": {
																"id": 1358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1356,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "47953:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "47958:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "47953:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1359,
															"nodeType": "ExpressionStatement",
															"src": "47953:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1362,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "47983:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "30783130",
														"id": 1363,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47988:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_16_by_1",
															"typeString": "int_const 16"
														},
														"value": "0x10"
													},
													"src": "47983:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1374,
												"nodeType": "IfStatement",
												"src": "47979:67:0",
												"trueBody": {
													"id": 1373,
													"nodeType": "Block",
													"src": "47994:52:0",
													"statements": [
														{
															"expression": {
																"id": 1367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1365,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "48008:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1366,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48014:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "48008:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1368,
															"nodeType": "ExpressionStatement",
															"src": "48008:7:0"
														},
														{
															"expression": {
																"id": 1371,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1369,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "48029:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48034:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "48029:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1372,
															"nodeType": "ExpressionStatement",
															"src": "48029:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1375,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "48059:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307834",
														"id": 1376,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48064:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_4_by_1",
															"typeString": "int_const 4"
														},
														"value": "0x4"
													},
													"src": "48059:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1387,
												"nodeType": "IfStatement",
												"src": "48055:66:0",
												"trueBody": {
													"id": 1386,
													"nodeType": "Block",
													"src": "48069:52:0",
													"statements": [
														{
															"expression": {
																"id": 1380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1378,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1286,
																	"src": "48083:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 1379,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48089:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "48083:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1381,
															"nodeType": "ExpressionStatement",
															"src": "48083:7:0"
														},
														{
															"expression": {
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1382,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1289,
																	"src": "48104:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48109:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "48104:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1385,
															"nodeType": "ExpressionStatement",
															"src": "48104:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1388,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1286,
														"src": "48134:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "307832",
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48139:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "0x2"
													},
													"src": "48134:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1395,
												"nodeType": "IfStatement",
												"src": "48130:20:0",
												"trueBody": {
													"expression": {
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1391,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1289,
															"src": "48144:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "+=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "48149:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "48144:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1394,
													"nodeType": "ExpressionStatement",
													"src": "48144:6:0"
												}
											}
										]
									},
									"documentation": {
										"id": 1284,
										"nodeType": "StructuredDocumentation",
										"src": "46964:457:0",
										"text": "@notice Returns the index of the most significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     x >= 2**mostSignificantBit(x) and x < 2**(mostSignificantBit(x)+1)\n @param x the value for which to compute the most significant bit, must be greater than 0\n @return r the index of the most significant bit"
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mostSignificantBit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "47454:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "47454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47453:11:0"
									},
									"returnParameters": {
										"id": 1290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1289,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "47488:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1288,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "47488:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47487:9:0"
									},
									"scope": 1559,
									"src": "47426:731:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1557,
										"nodeType": "Block",
										"src": "48720:822:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1406,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1400,
																"src": "48738:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1407,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48742:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "48738:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1405,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "48730:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48730:14:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1410,
												"nodeType": "ExpressionStatement",
												"src": "48730:14:0"
											},
											{
												"expression": {
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1411,
														"name": "r",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "48755:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "323535",
														"id": 1412,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48759:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255_by_1",
															"typeString": "int_const 255"
														},
														"value": "255"
													},
													"src": "48755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "48755:7:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1423,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1415,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "48776:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1418,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "48785:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		},
																		"typeName": {
																			"id": 1417,
																			"name": "uint128",
																			"nodeType": "ElementaryTypeName",
																			"src": "48785:7:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint128_$",
																			"typeString": "type(uint128)"
																		}
																	],
																	"id": 1416,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "48780:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1419,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48780:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint128",
																	"typeString": "type(uint128)"
																}
															},
															"id": 1420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "48780:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"src": "48776:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1422,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48800:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "48776:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1433,
													"nodeType": "Block",
													"src": "48842:34:0",
													"statements": [
														{
															"expression": {
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1429,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "48856:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 1430,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48862:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "48856:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1432,
															"nodeType": "ExpressionStatement",
															"src": "48856:9:0"
														}
													]
												},
												"id": 1434,
												"nodeType": "IfStatement",
												"src": "48772:104:0",
												"trueBody": {
													"id": 1428,
													"nodeType": "Block",
													"src": "48803:33:0",
													"statements": [
														{
															"expression": {
																"id": 1426,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1424,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "48817:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "313238",
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48822:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "48817:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1427,
															"nodeType": "ExpressionStatement",
															"src": "48817:8:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1441,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1435,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "48889:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1438,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "48898:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 1437,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "48898:6:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		}
																	],
																	"id": 1436,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "48893:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48893:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint64",
																	"typeString": "type(uint64)"
																}
															},
															"id": 1440,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "48893:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "48889:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48912:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "48889:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1453,
													"nodeType": "Block",
													"src": "48953:33:0",
													"statements": [
														{
															"expression": {
																"id": 1451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1449,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "48967:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 1450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48973:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "48967:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1452,
															"nodeType": "ExpressionStatement",
															"src": "48967:8:0"
														}
													]
												},
												"id": 1454,
												"nodeType": "IfStatement",
												"src": "48885:101:0",
												"trueBody": {
													"id": 1448,
													"nodeType": "Block",
													"src": "48915:32:0",
													"statements": [
														{
															"expression": {
																"id": 1446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1444,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "48929:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3634",
																	"id": 1445,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "48934:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "48929:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1447,
															"nodeType": "ExpressionStatement",
															"src": "48929:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1461,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1455,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "48999:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1458,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "49008:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		},
																		"typeName": {
																			"id": 1457,
																			"name": "uint32",
																			"nodeType": "ElementaryTypeName",
																			"src": "49008:6:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint32_$",
																			"typeString": "type(uint32)"
																		}
																	],
																	"id": 1456,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "49003:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49003:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint32",
																	"typeString": "type(uint32)"
																}
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "49003:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														"src": "48999:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49022:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "48999:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1473,
													"nodeType": "Block",
													"src": "49063:33:0",
													"statements": [
														{
															"expression": {
																"id": 1471,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1469,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "49077:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1470,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49083:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "49077:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1472,
															"nodeType": "ExpressionStatement",
															"src": "49077:8:0"
														}
													]
												},
												"id": 1474,
												"nodeType": "IfStatement",
												"src": "48995:101:0",
												"trueBody": {
													"id": 1468,
													"nodeType": "Block",
													"src": "49025:32:0",
													"statements": [
														{
															"expression": {
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1464,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "49039:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3332",
																	"id": 1465,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49044:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "49039:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1467,
															"nodeType": "ExpressionStatement",
															"src": "49039:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1475,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "49109:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1478,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "49118:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		},
																		"typeName": {
																			"id": 1477,
																			"name": "uint16",
																			"nodeType": "ElementaryTypeName",
																			"src": "49118:6:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint16_$",
																			"typeString": "type(uint16)"
																		}
																	],
																	"id": 1476,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "49113:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1479,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49113:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint16",
																	"typeString": "type(uint16)"
																}
															},
															"id": 1480,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "49113:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"src": "49109:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1482,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49132:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "49109:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1493,
													"nodeType": "Block",
													"src": "49173:33:0",
													"statements": [
														{
															"expression": {
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1489,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "49187:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 1490,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49193:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "49187:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1492,
															"nodeType": "ExpressionStatement",
															"src": "49187:8:0"
														}
													]
												},
												"id": 1494,
												"nodeType": "IfStatement",
												"src": "49105:101:0",
												"trueBody": {
													"id": 1488,
													"nodeType": "Block",
													"src": "49135:32:0",
													"statements": [
														{
															"expression": {
																"id": 1486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1484,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "49149:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "3136",
																	"id": 1485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49154:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "49149:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1487,
															"nodeType": "ExpressionStatement",
															"src": "49149:7:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1495,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "49219:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1498,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "49228:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		},
																		"typeName": {
																			"id": 1497,
																			"name": "uint8",
																			"nodeType": "ElementaryTypeName",
																			"src": "49228:5:0",
																			"typeDescriptions": {}
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_uint8_$",
																			"typeString": "type(uint8)"
																		}
																	],
																	"id": 1496,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "49223:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49223:11:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_uint8",
																	"typeString": "type(uint8)"
																}
															},
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberName": "max",
															"nodeType": "MemberAccess",
															"src": "49223:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"src": "49219:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49241:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "49219:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1513,
													"nodeType": "Block",
													"src": "49281:32:0",
													"statements": [
														{
															"expression": {
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1509,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "49295:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49301:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "49295:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1512,
															"nodeType": "ExpressionStatement",
															"src": "49295:7:0"
														}
													]
												},
												"id": 1514,
												"nodeType": "IfStatement",
												"src": "49215:98:0",
												"trueBody": {
													"id": 1508,
													"nodeType": "Block",
													"src": "49244:31:0",
													"statements": [
														{
															"expression": {
																"id": 1506,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1504,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "49258:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "38",
																	"id": 1505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49263:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "49258:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1507,
															"nodeType": "ExpressionStatement",
															"src": "49258:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1515,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "49326:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307866",
															"id": 1516,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49330:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_15_by_1",
																"typeString": "int_const 15"
															},
															"value": "0xf"
														},
														"src": "49326:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1518,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49336:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "49326:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1529,
													"nodeType": "Block",
													"src": "49376:32:0",
													"statements": [
														{
															"expression": {
																"id": 1527,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1525,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "49390:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49396:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "49390:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1528,
															"nodeType": "ExpressionStatement",
															"src": "49390:7:0"
														}
													]
												},
												"id": 1530,
												"nodeType": "IfStatement",
												"src": "49322:86:0",
												"trueBody": {
													"id": 1524,
													"nodeType": "Block",
													"src": "49339:31:0",
													"statements": [
														{
															"expression": {
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1520,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "49353:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49358:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "49353:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1523,
															"nodeType": "ExpressionStatement",
															"src": "49353:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1531,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "49421:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307833",
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49425:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_3_by_1",
																"typeString": "int_const 3"
															},
															"value": "0x3"
														},
														"src": "49421:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1534,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49431:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "49421:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1545,
													"nodeType": "Block",
													"src": "49471:32:0",
													"statements": [
														{
															"expression": {
																"id": 1543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1541,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1400,
																	"src": "49485:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 1542,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49491:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "49485:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1544,
															"nodeType": "ExpressionStatement",
															"src": "49485:7:0"
														}
													]
												},
												"id": 1546,
												"nodeType": "IfStatement",
												"src": "49417:86:0",
												"trueBody": {
													"id": 1540,
													"nodeType": "Block",
													"src": "49434:31:0",
													"statements": [
														{
															"expression": {
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1536,
																	"name": "r",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1403,
																	"src": "49448:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"hexValue": "32",
																	"id": 1537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49453:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "49448:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"id": 1539,
															"nodeType": "ExpressionStatement",
															"src": "49448:6:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1547,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "49516:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831",
															"id": 1548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49520:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "0x1"
														},
														"src": "49516:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1550,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "49526:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "49516:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1556,
												"nodeType": "IfStatement",
												"src": "49512:23:0",
												"trueBody": {
													"expression": {
														"id": 1554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1552,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1403,
															"src": "49529:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "Assignment",
														"operator": "-=",
														"rightHandSide": {
															"hexValue": "31",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "49534:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "49529:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"id": 1555,
													"nodeType": "ExpressionStatement",
													"src": "49529:6:0"
												}
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "48163:480:0",
										"text": "@notice Returns the index of the least significant bit of the number,\n     where the least significant bit is at index 0 and the most significant bit is at index 255\n @dev The function satisfies the property:\n     (x & 2**leastSignificantBit(x)) != 0 and (x & (2**(leastSignificantBit(x)) - 1)) == 0)\n @param x the value for which to compute the least significant bit, must be greater than 0\n @return r the index of the least significant bit"
									},
									"id": 1558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "leastSignificantBit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "48677:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "48677:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48676:11:0"
									},
									"returnParameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 1558,
												"src": "48711:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1402,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "48711:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "48710:9:0"
									},
									"scope": 1559,
									"src": "48648:894:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3137,
							"src": "46942:2602:0"
						},
						{
							"id": 1560,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "49609:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1561,
								"nodeType": "StructuredDocumentation",
								"src": "49636:243:0",
								"text": "@title Packed tick initialized state library\n @notice Stores a packed mapping of tick index to its initialized state\n @dev The mapping uses int16 for keys since ticks are represented as int24 and there are 256 (2^8) values per word."
							},
							"fullyImplemented": true,
							"id": 1813,
							"linearizedBaseContracts": [
								1813
							],
							"name": "TickBitmap",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1589,
										"nodeType": "Block",
										"src": "50315:79:0",
										"statements": [
											{
												"expression": {
													"id": 1578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1571,
														"name": "wordPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1567,
														"src": "50325:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1574,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1564,
																	"src": "50341:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1575,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50349:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "50341:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50335:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 1572,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "50335:5:0",
																"typeDescriptions": {}
															}
														},
														"id": 1577,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50335:16:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "50325:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 1579,
												"nodeType": "ExpressionStatement",
												"src": "50325:26:0"
											},
											{
												"expression": {
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1580,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1569,
														"src": "50361:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 1585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1583,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1564,
																	"src": "50376:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"hexValue": "323536",
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50383:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_256_by_1",
																		"typeString": "int_const 256"
																	},
																	"value": "256"
																},
																"src": "50376:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50370:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint8_$",
																"typeString": "type(uint8)"
															},
															"typeName": {
																"id": 1581,
																"name": "uint8",
																"nodeType": "ElementaryTypeName",
																"src": "50370:5:0",
																"typeDescriptions": {}
															}
														},
														"id": 1586,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50370:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "50361:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "50361:26:0"
											}
										]
									},
									"documentation": {
										"id": 1562,
										"nodeType": "StructuredDocumentation",
										"src": "49904:325:0",
										"text": "@notice Computes the position in the mapping where the initialized bit for a tick lives\n @param tick The tick for which to compute the position\n @return wordPos The key in the mapping containing the word in which the bit is stored\n @return bitPos The bit position in the word where the flag is stored"
									},
									"id": 1590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "position",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1564,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "50252:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1563,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "50252:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50251:12:0"
									},
									"returnParameters": {
										"id": 1570,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1567,
												"mutability": "mutable",
												"name": "wordPos",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "50286:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 1566,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "50286:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1569,
												"mutability": "mutable",
												"name": "bitPos",
												"nodeType": "VariableDeclaration",
												"scope": 1590,
												"src": "50301:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1568,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "50301:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50285:29:0"
									},
									"scope": 1813,
									"src": "50234:160:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1632,
										"nodeType": "Block",
										"src": "50778:220:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1607,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1603,
																	"name": "tick",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1597,
																	"src": "50796:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "%",
																"rightExpression": {
																	"id": 1604,
																	"name": "tickSpacing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1599,
																	"src": "50803:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "50796:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1606,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50818:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "50796:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1602,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "50788:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50788:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1609,
												"nodeType": "ExpressionStatement",
												"src": "50788:32:0"
											},
											{
												"assignments": [
													1611,
													1613
												],
												"declarations": [
													{
														"constant": false,
														"id": 1611,
														"mutability": "mutable",
														"name": "wordPos",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "50865:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														},
														"typeName": {
															"id": 1610,
															"name": "int16",
															"nodeType": "ElementaryTypeName",
															"src": "50865:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1613,
														"mutability": "mutable",
														"name": "bitPos",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "50880:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 1612,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "50880:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1619,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1615,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1597,
																"src": "50905:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1616,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1599,
																"src": "50912:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "50905:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														],
														"id": 1614,
														"name": "position",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1590,
														"src": "50896:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
															"typeString": "function (int24) pure returns (int16,uint8)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50896:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
														"typeString": "tuple(int16,uint8)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50864:60:0"
											},
											{
												"assignments": [
													1621
												],
												"declarations": [
													{
														"constant": false,
														"id": 1621,
														"mutability": "mutable",
														"name": "mask",
														"nodeType": "VariableDeclaration",
														"scope": 1632,
														"src": "50934:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1620,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "50934:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1625,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "50949:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1623,
														"name": "bitPos",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1613,
														"src": "50954:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "50949:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50934:26:0"
											},
											{
												"expression": {
													"id": 1630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1626,
															"name": "self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1595,
															"src": "50970:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																"typeString": "mapping(int16 => uint256)"
															}
														},
														"id": 1628,
														"indexExpression": {
															"id": 1627,
															"name": "wordPos",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1611,
															"src": "50975:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int16",
																"typeString": "int16"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "50970:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "^=",
													"rightHandSide": {
														"id": 1629,
														"name": "mask",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1621,
														"src": "50987:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "50970:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1631,
												"nodeType": "ExpressionStatement",
												"src": "50970:21:0"
											}
										]
									},
									"documentation": {
										"id": 1591,
										"nodeType": "StructuredDocumentation",
										"src": "50400:245:0",
										"text": "@notice Flips the initialized state for a given tick from false to true, or vice versa\n @param self The mapping in which to flip the tick\n @param tick The tick to flip\n @param tickSpacing The spacing between usable ticks"
									},
									"id": 1633,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "flipTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "50677:38:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 1594,
													"keyType": {
														"id": 1592,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "50685:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "50677:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueType": {
														"id": 1593,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "50694:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "50725:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1596,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "50725:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1599,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 1633,
												"src": "50745:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1598,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "50745:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50667:101:0"
									},
									"returnParameters": {
										"id": 1601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50778:0:0"
									},
									"scope": 1813,
									"src": "50650:348:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "51950:1707:0",
										"statements": [
											{
												"assignments": [
													1652
												],
												"declarations": [
													{
														"constant": false,
														"id": 1652,
														"mutability": "mutable",
														"name": "compressed",
														"nodeType": "VariableDeclaration",
														"scope": 1811,
														"src": "51960:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 1651,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "51960:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1656,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 1655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1653,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "51979:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1654,
														"name": "tickSpacing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1642,
														"src": "51986:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "51979:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51960:37:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 1659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1657,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1640,
															"src": "52011:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52018:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "52011:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 1664,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1660,
																"name": "tick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1640,
																"src": "52023:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 1661,
																"name": "tickSpacing",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1642,
																"src": "52030:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "52023:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1663,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "52045:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "52023:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "52011:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1669,
												"nodeType": "IfStatement",
												"src": "52007:53:0",
												"trueBody": {
													"expression": {
														"id": 1667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": false,
														"src": "52048:12:0",
														"subExpression": {
															"id": 1666,
															"name": "compressed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1652,
															"src": "52048:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"id": 1668,
													"nodeType": "ExpressionStatement",
													"src": "52048:12:0"
												}
											},
											{
												"condition": {
													"id": 1670,
													"name": "lte",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1644,
													"src": "52110:3:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1809,
													"nodeType": "Block",
													"src": "52837:814:0",
													"statements": [
														{
															"assignments": [
																1737,
																1739
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1737,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 1809,
																	"src": "52949:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 1736,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "52949:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1739,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 1809,
																	"src": "52964:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1738,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "52964:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1745,
															"initialValue": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1743,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1741,
																			"name": "compressed",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1652,
																			"src": "52989:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1742,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "53002:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "52989:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1740,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1590,
																	"src": "52980:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52980:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "52948:56:0"
														},
														{
															"assignments": [
																1747
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1747,
																	"mutability": "mutable",
																	"name": "mask",
																	"nodeType": "VariableDeclaration",
																	"scope": 1809,
																	"src": "53076:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1746,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "53076:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1756,
															"initialValue": {
																"id": 1755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "~",
																"prefix": true,
																"src": "53091:20:0",
																"subExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1753,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1750,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1748,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "53094:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1749,
																							"name": "bitPos",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1739,
																							"src": "53099:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint8",
																								"typeString": "uint8"
																							}
																						},
																						"src": "53094:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1751,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "53093:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1752,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "53109:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "53093:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1754,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "53092:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "53076:35:0"
														},
														{
															"assignments": [
																1758
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1758,
																	"mutability": "mutable",
																	"name": "masked",
																	"nodeType": "VariableDeclaration",
																	"scope": 1809,
																	"src": "53125:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1757,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "53125:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1764,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1763,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1759,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "53142:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 1761,
																	"indexExpression": {
																		"id": 1760,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1737,
																		"src": "53147:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "53142:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1762,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "53158:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "53142:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "53125:37:0"
														},
														{
															"expression": {
																"id": 1769,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1765,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "53287:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1768,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1766,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1758,
																		"src": "53301:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "53311:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "53301:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "53287:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1770,
															"nodeType": "ExpressionStatement",
															"src": "53287:25:0"
														},
														{
															"expression": {
																"id": 1807,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1771,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "53436:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 1772,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "53443:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1805,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 1802,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 1791,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1789,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1652,
																							"src": "53577:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1790,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "53590:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "53577:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1800,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"arguments": [
																											{
																												"id": 1796,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": true,
																												"lValueRequested": false,
																												"nodeType": "ElementaryTypeNameExpression",
																												"src": "53605:5:0",
																												"typeDescriptions": {
																													"typeIdentifier": "t_type$_t_uint8_$",
																													"typeString": "type(uint8)"
																												},
																												"typeName": {
																													"id": 1795,
																													"name": "uint8",
																													"nodeType": "ElementaryTypeName",
																													"src": "53605:5:0",
																													"typeDescriptions": {}
																												}
																											}
																										],
																										"expression": {
																											"argumentTypes": [
																												{
																													"typeIdentifier": "t_type$_t_uint8_$",
																													"typeString": "type(uint8)"
																												}
																											],
																											"id": 1794,
																											"name": "type",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967269,
																											"src": "53600:4:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																												"typeString": "function () pure"
																											}
																										},
																										"id": 1797,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "functionCall",
																										"lValueRequested": false,
																										"names": [],
																										"nodeType": "FunctionCall",
																										"src": "53600:11:0",
																										"tryCall": false,
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_meta_type_t_uint8",
																											"typeString": "type(uint8)"
																										}
																									},
																									"id": 1798,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "max",
																									"nodeType": "MemberAccess",
																									"src": "53600:15:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 1799,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1739,
																									"src": "53618:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "53600:24:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 1793,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "53594:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 1792,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "53594:5:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1801,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "53594:31:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "53577:48:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 1803,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "53576:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1804,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "53629:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "53576:64:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 1806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "53443:197:0",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 1785,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"commonType": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						},
																						"id": 1775,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1773,
																							"name": "compressed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1652,
																							"src": "53474:10:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_int24",
																								"typeString": "int24"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "+",
																						"rightExpression": {
																							"hexValue": "31",
																							"id": 1774,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "53487:1:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"src": "53474:14:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "+",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1783,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"arguments": [
																										{
																											"id": 1780,
																											"name": "masked",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1758,
																											"src": "53525:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 1778,
																											"name": "BitMath",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1559,
																											"src": "53497:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_contract$_BitMath_$1559_$",
																												"typeString": "type(library BitMath)"
																											}
																										},
																										"id": 1779,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "leastSignificantBit",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1558,
																										"src": "53497:27:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																											"typeString": "function (uint256) pure returns (uint8)"
																										}
																									},
																									"id": 1781,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "53497:35:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"id": 1782,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1739,
																									"src": "53535:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "53497:44:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 1777,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "53491:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 1776,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "53491:5:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1784,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "53491:51:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "53474:68:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 1786,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "53473:70:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1787,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "53546:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "53473:84:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "53436:204:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 1808,
															"nodeType": "ExpressionStatement",
															"src": "53436:204:0"
														}
													]
												},
												"id": 1810,
												"nodeType": "IfStatement",
												"src": "52106:1545:0",
												"trueBody": {
													"id": 1735,
													"nodeType": "Block",
													"src": "52115:716:0",
													"statements": [
														{
															"assignments": [
																1672,
																1674
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1672,
																	"mutability": "mutable",
																	"name": "wordPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 1735,
																	"src": "52130:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int16",
																		"typeString": "int16"
																	},
																	"typeName": {
																		"id": 1671,
																		"name": "int16",
																		"nodeType": "ElementaryTypeName",
																		"src": "52130:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1674,
																	"mutability": "mutable",
																	"name": "bitPos",
																	"nodeType": "VariableDeclaration",
																	"scope": 1735,
																	"src": "52145:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 1673,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "52145:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1678,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1676,
																		"name": "compressed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1652,
																		"src": "52170:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1675,
																	"name": "position",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1590,
																	"src": "52161:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_int16_$_t_uint8_$",
																		"typeString": "function (int24) pure returns (int16,uint8)"
																	}
																},
																"id": 1677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52161:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_int16_$_t_uint8_$",
																	"typeString": "tuple(int16,uint8)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "52129:52:0"
														},
														{
															"assignments": [
																1680
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1680,
																	"mutability": "mutable",
																	"name": "mask",
																	"nodeType": "VariableDeclaration",
																	"scope": 1735,
																	"src": "52262:12:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1679,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "52262:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1692,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1683,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"hexValue": "31",
																					"id": 1681,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "52278:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<<",
																				"rightExpression": {
																					"id": 1682,
																					"name": "bitPos",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1674,
																					"src": "52283:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint8",
																						"typeString": "uint8"
																					}
																				},
																				"src": "52278:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 1684,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "52277:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1685,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "52293:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "52277:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1687,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52298:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1688,
																				"name": "bitPos",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1674,
																				"src": "52303:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint8",
																					"typeString": "uint8"
																				}
																			},
																			"src": "52298:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1690,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "52297:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "52277:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "52262:48:0"
														},
														{
															"assignments": [
																1694
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1694,
																	"mutability": "mutable",
																	"name": "masked",
																	"nodeType": "VariableDeclaration",
																	"scope": 1735,
																	"src": "52324:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1693,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "52324:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1700,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1695,
																		"name": "self",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1638,
																		"src": "52341:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
																			"typeString": "mapping(int16 => uint256)"
																		}
																	},
																	"id": 1697,
																	"indexExpression": {
																		"id": 1696,
																		"name": "wordPos",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1672,
																		"src": "52346:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int16",
																			"typeString": "int16"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "52341:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1698,
																	"name": "mask",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "52357:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "52341:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "52324:37:0"
														},
														{
															"expression": {
																"id": 1705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1701,
																	"name": "initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1649,
																	"src": "52494:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1702,
																		"name": "masked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1694,
																		"src": "52508:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "!=",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "52518:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "52508:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "52494:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1706,
															"nodeType": "ExpressionStatement",
															"src": "52494:25:0"
														},
														{
															"expression": {
																"id": 1733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1707,
																	"name": "next",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "52643:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"condition": {
																		"id": 1708,
																		"name": "initialized",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1649,
																		"src": "52650:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 1728,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1723,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1652,
																						"src": "52779:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"id": 1726,
																								"name": "bitPos",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1674,
																								"src": "52798:6:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 1725,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "52792:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 1724,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "52792:5:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1727,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "52792:13:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "52779:26:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 1729,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "52778:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1730,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "52809:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "52778:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"id": 1732,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "52650:170:0",
																	"trueExpression": {
																		"commonType": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		},
																		"id": 1722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					},
																					"id": 1719,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1709,
																						"name": "compressed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1652,
																						"src": "52681:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"arguments": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								},
																								"id": 1717,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1712,
																									"name": "bitPos",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1674,
																									"src": "52700:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"arguments": [
																										{
																											"id": 1715,
																											"name": "masked",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1694,
																											"src": "52736:6:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										}
																									],
																									"expression": {
																										"argumentTypes": [
																											{
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										],
																										"expression": {
																											"id": 1713,
																											"name": "BitMath",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1559,
																											"src": "52709:7:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_type$_t_contract$_BitMath_$1559_$",
																												"typeString": "type(library BitMath)"
																											}
																										},
																										"id": 1714,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "mostSignificantBit",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1397,
																										"src": "52709:26:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint8_$",
																											"typeString": "function (uint256) pure returns (uint8)"
																										}
																									},
																									"id": 1716,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"kind": "functionCall",
																									"lValueRequested": false,
																									"names": [],
																									"nodeType": "FunctionCall",
																									"src": "52709:34:0",
																									"tryCall": false,
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint8",
																										"typeString": "uint8"
																									}
																								},
																								"src": "52700:43:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint8",
																									"typeString": "uint8"
																								}
																							],
																							"id": 1711,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"nodeType": "ElementaryTypeNameExpression",
																							"src": "52694:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_type$_t_int24_$",
																								"typeString": "type(int24)"
																							},
																							"typeName": {
																								"id": 1710,
																								"name": "int24",
																								"nodeType": "ElementaryTypeName",
																								"src": "52694:5:0",
																								"typeDescriptions": {}
																							}
																						},
																						"id": 1718,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "typeConversion",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "52694:50:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_int24",
																							"typeString": "int24"
																						}
																					},
																					"src": "52681:63:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int24",
																						"typeString": "int24"
																					}
																				}
																			],
																			"id": 1720,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "52680:65:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1721,
																			"name": "tickSpacing",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1642,
																			"src": "52748:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		},
																		"src": "52680:79:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int24",
																		"typeString": "int24"
																	}
																},
																"src": "52643:177:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 1734,
															"nodeType": "ExpressionStatement",
															"src": "52643:177:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1634,
										"nodeType": "StructuredDocumentation",
										"src": "51004:727:0",
										"text": "@notice Returns the next initialized tick contained in the same word (or adjacent word) as the tick that is either\n to the left (less than or equal to) or right (greater than) of the given tick\n @param self The mapping in which to compute the next initialized tick\n @param tick The starting tick\n @param tickSpacing The spacing between usable ticks\n @param lte Whether to search for the next initialized tick to the left (less than or equal to the starting tick)\n @return next The next initialized or uninitialized tick up to 256 ticks away from the current tick\n @return initialized Whether the next tick is initialized, as the function only searches within up to 256 ticks"
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "nextInitializedTickWithinOneWord",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1645,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "self",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "51787:38:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
													"typeString": "mapping(int16 => uint256)"
												},
												"typeName": {
													"id": 1637,
													"keyType": {
														"id": 1635,
														"name": "int16",
														"nodeType": "ElementaryTypeName",
														"src": "51795:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Mapping",
													"src": "51787:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_mapping$_t_int16_$_t_uint256_$",
														"typeString": "mapping(int16 => uint256)"
													},
													"valueType": {
														"id": 1636,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "51804:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "51835:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1639,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "51835:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "tickSpacing",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "51855:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1641,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "51855:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "lte",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "51882:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1643,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51882:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51777:119:0"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "next",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "51920:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1646,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "51920:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1649,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "51932:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1648,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "51932:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51919:30:0"
									},
									"scope": 1813,
									"src": "51736:1921:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3137,
							"src": "49879:3780:0"
						},
						{
							"id": 1814,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "53722:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1815,
								"nodeType": "StructuredDocumentation",
								"src": "53748:235:0",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 2347,
							"linearizedBaseContracts": [
								2347
							],
							"name": "TickMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 1816,
										"nodeType": "StructuredDocumentation",
										"src": "54006:108:0",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 1820,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 2347,
									"src": "54119:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1817,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "54119:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 1819,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "54154:7:0",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 1818,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "54155:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "54167:107:0",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 1825,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 2347,
									"src": "54279:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 1822,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "54279:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 1824,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "54314:9:0",
										"subExpression": {
											"id": 1823,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 1820,
											"src": "54315:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1826,
										"nodeType": "StructuredDocumentation",
										"src": "54330:116:0",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 1829,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 2347,
									"src": "54451:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 1827,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "54451:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 1828,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "54494:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1830,
										"nodeType": "StructuredDocumentation",
										"src": "54510:116:0",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 1833,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 2347,
									"src": "54631:92:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 1831,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "54631:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 1832,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "54674:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2206,
										"nodeType": "Block",
										"src": "55117:2495:0",
										"statements": [
											{
												"assignments": [
													1842
												],
												"declarations": [
													{
														"constant": false,
														"id": 1842,
														"mutability": "mutable",
														"name": "absTick",
														"nodeType": "VariableDeclaration",
														"scope": 2206,
														"src": "55127:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1841,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55127:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1862,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 1845,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1843,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1836,
															"src": "55145:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 1844,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55152:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "55145:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1858,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1836,
																		"src": "55196:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "55189:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 1856,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "55189:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1859,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55189:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "55181:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1854,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "55181:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1860,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55181:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "55145:57:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 1852,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "55164:13:0",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1850,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1836,
																			"src": "55172:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 1849,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "55165:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1848,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "55165:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1851,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "55165:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "55156:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1846,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "55156:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1853,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55156:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55127:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1864,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "55220:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1867,
																		"name": "MAX_TICK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1825,
																		"src": "55239:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "55231:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1865,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "55231:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1868,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55231:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "55220:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 1870,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55250:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 1863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "55212:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55212:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1872,
												"nodeType": "ExpressionStatement",
												"src": "55212:42:0"
											},
											{
												"assignments": [
													1874
												],
												"declarations": [
													{
														"constant": false,
														"id": 1874,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 2206,
														"src": "55265:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1873,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "55265:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1883,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1879,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1877,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1875,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1842,
																"src": "55281:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 1876,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55291:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "55281:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1878,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55298:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "55281:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55339:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "55281:93:0",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 1880,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55302:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "55265:109:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1888,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1886,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1884,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "55388:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 1885,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55398:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "55388:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1887,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55405:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55388:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1898,
												"nodeType": "IfStatement",
												"src": "55384:83:0",
												"trueBody": {
													"expression": {
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1889,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "55408:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1895,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1892,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1890,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "55417:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 1891,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55425:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "55417:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1893,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "55416:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1894,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55464:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "55416:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "55408:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1897,
													"nodeType": "ExpressionStatement",
													"src": "55408:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1901,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1899,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "55481:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 1900,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55491:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "55481:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55498:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55481:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1913,
												"nodeType": "IfStatement",
												"src": "55477:83:0",
												"trueBody": {
													"expression": {
														"id": 1911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1904,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "55501:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1907,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1905,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "55510:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 1906,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55518:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "55510:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1908,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "55509:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55557:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "55509:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "55501:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1912,
													"nodeType": "ExpressionStatement",
													"src": "55501:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1914,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "55574:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 1915,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55584:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "55574:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1917,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55591:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55574:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1928,
												"nodeType": "IfStatement",
												"src": "55570:83:0",
												"trueBody": {
													"expression": {
														"id": 1926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1919,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "55594:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1925,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1922,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1920,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "55603:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 1921,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55611:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "55603:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1923,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "55602:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55650:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "55602:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "55594:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1927,
													"nodeType": "ExpressionStatement",
													"src": "55594:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1931,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1929,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "55667:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 1930,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55677:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "55667:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1932,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55685:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55667:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1943,
												"nodeType": "IfStatement",
												"src": "55663:84:0",
												"trueBody": {
													"expression": {
														"id": 1941,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1934,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "55688:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1935,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "55697:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 1936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55705:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "55697:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1938,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "55696:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1939,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55744:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "55696:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "55688:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1942,
													"nodeType": "ExpressionStatement",
													"src": "55688:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1946,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1944,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "55761:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 1945,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55771:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "55761:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1947,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55779:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55761:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1958,
												"nodeType": "IfStatement",
												"src": "55757:84:0",
												"trueBody": {
													"expression": {
														"id": 1956,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1949,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "55782:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1952,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1950,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "55791:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 1951,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55799:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "55791:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1953,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "55790:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1954,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55838:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "55790:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "55782:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1957,
													"nodeType": "ExpressionStatement",
													"src": "55782:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1959,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "55855:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55865:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "55855:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55873:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55855:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1973,
												"nodeType": "IfStatement",
												"src": "55851:84:0",
												"trueBody": {
													"expression": {
														"id": 1971,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1964,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "55876:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1970,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1967,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1965,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "55885:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 1966,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55893:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "55885:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1968,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "55884:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55932:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "55884:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "55876:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1972,
													"nodeType": "ExpressionStatement",
													"src": "55876:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1978,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1976,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1974,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "55949:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55959:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "55949:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55967:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55949:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1988,
												"nodeType": "IfStatement",
												"src": "55945:84:0",
												"trueBody": {
													"expression": {
														"id": 1986,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1979,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "55970:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1982,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1980,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "55979:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 1981,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55987:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "55979:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1983,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "55978:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56026:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "55978:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "55970:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1987,
													"nodeType": "ExpressionStatement",
													"src": "55970:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1993,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1989,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "56043:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 1990,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56053:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "56043:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1992,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56062:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56043:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2003,
												"nodeType": "IfStatement",
												"src": "56039:85:0",
												"trueBody": {
													"expression": {
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1994,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "56065:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2000,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1997,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1995,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "56074:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 1996,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56082:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "56074:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1998,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "56073:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56121:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "56073:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56065:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2002,
													"nodeType": "ExpressionStatement",
													"src": "56065:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2004,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "56138:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 2005,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56148:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "56138:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2007,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56157:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56138:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2018,
												"nodeType": "IfStatement",
												"src": "56134:85:0",
												"trueBody": {
													"expression": {
														"id": 2016,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2009,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "56160:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2012,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2010,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "56169:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 2011,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56177:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "56169:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2013,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "56168:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56216:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "56168:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56160:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2017,
													"nodeType": "ExpressionStatement",
													"src": "56160:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2021,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2019,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "56233:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 2020,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56243:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "56233:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2022,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56252:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56233:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2033,
												"nodeType": "IfStatement",
												"src": "56229:85:0",
												"trueBody": {
													"expression": {
														"id": 2031,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2024,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "56255:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2030,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2025,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "56264:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 2026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56272:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "56264:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2028,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "56263:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56311:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "56263:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56255:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2032,
													"nodeType": "ExpressionStatement",
													"src": "56255:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2038,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2036,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2034,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "56328:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 2035,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56338:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "56328:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2037,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56347:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56328:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2048,
												"nodeType": "IfStatement",
												"src": "56324:85:0",
												"trueBody": {
													"expression": {
														"id": 2046,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2039,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "56350:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2042,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2040,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "56359:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 2041,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56367:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "56359:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2043,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "56358:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2044,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56406:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "56358:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56350:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2047,
													"nodeType": "ExpressionStatement",
													"src": "56350:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2053,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2051,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2049,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "56423:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 2050,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56433:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "56423:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2052,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56443:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56423:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2063,
												"nodeType": "IfStatement",
												"src": "56419:86:0",
												"trueBody": {
													"expression": {
														"id": 2061,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2054,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "56446:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2057,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2055,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "56455:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 2056,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56463:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "56455:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2058,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "56454:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2059,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56502:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "56454:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56446:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2062,
													"nodeType": "ExpressionStatement",
													"src": "56446:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2068,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2066,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2064,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "56519:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 2065,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56529:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "56519:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2067,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56539:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56519:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2078,
												"nodeType": "IfStatement",
												"src": "56515:86:0",
												"trueBody": {
													"expression": {
														"id": 2076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2069,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "56542:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2072,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2070,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "56551:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 2071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56559:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "56551:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2073,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "56550:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2074,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56598:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "56550:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56542:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2077,
													"nodeType": "ExpressionStatement",
													"src": "56542:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2081,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2079,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "56615:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56625:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "56615:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2082,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56635:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56615:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2093,
												"nodeType": "IfStatement",
												"src": "56611:86:0",
												"trueBody": {
													"expression": {
														"id": 2091,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2084,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "56638:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2090,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2085,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "56647:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 2086,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56655:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "56647:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2088,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "56646:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56694:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "56646:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56638:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2092,
													"nodeType": "ExpressionStatement",
													"src": "56638:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2096,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2094,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "56711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 2095,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56721:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "56711:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2097,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56731:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56711:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2108,
												"nodeType": "IfStatement",
												"src": "56707:86:0",
												"trueBody": {
													"expression": {
														"id": 2106,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2099,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "56734:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2105,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2100,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "56743:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 2101,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56751:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "56743:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "56742:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2104,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56790:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "56742:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56734:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2107,
													"nodeType": "ExpressionStatement",
													"src": "56734:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2111,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2109,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "56807:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 2110,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56817:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "56807:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2112,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56828:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56807:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2123,
												"nodeType": "IfStatement",
												"src": "56803:86:0",
												"trueBody": {
													"expression": {
														"id": 2121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2114,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "56831:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2117,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2115,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "56840:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 2116,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56848:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "56840:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2118,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "56839:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2119,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56886:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "56839:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56831:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2122,
													"nodeType": "ExpressionStatement",
													"src": "56831:58:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2126,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2124,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "56903:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 2125,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "56913:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "56903:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2127,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "56924:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56903:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2138,
												"nodeType": "IfStatement",
												"src": "56899:85:0",
												"trueBody": {
													"expression": {
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2129,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "56927:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2135,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2130,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "56936:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 2131,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56944:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "56936:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2133,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "56935:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "56981:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "56935:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "56927:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2137,
													"nodeType": "ExpressionStatement",
													"src": "56927:57:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2139,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "56998:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 2140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57008:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "56998:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2142,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57019:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "56998:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2153,
												"nodeType": "IfStatement",
												"src": "56994:83:0",
												"trueBody": {
													"expression": {
														"id": 2151,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2144,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "57022:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2150,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2145,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "57031:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 2146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "57039:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "57031:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2148,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "57030:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2149,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "57074:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "57030:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "57022:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2152,
													"nodeType": "ExpressionStatement",
													"src": "57022:55:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2156,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2154,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1842,
															"src": "57091:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 2155,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "57101:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "57091:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 2157,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57112:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57091:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2168,
												"nodeType": "IfStatement",
												"src": "57087:78:0",
												"trueBody": {
													"expression": {
														"id": 2166,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2159,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "57115:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2165,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2162,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2160,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1874,
																			"src": "57124:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 2161,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "57132:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "57124:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2163,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "57123:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2164,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "57162:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "57123:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "57115:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2167,
													"nodeType": "ExpressionStatement",
													"src": "57115:50:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 2171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2169,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1836,
														"src": "57180:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2170,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57187:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57180:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2182,
												"nodeType": "IfStatement",
												"src": "57176:47:0",
												"trueBody": {
													"expression": {
														"id": 2180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2172,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1874,
															"src": "57190:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2175,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "57203:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 2174,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "57203:7:0",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 2173,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "57198:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 2176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "57198:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 2177,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "57198:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 2178,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1874,
																"src": "57218:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "57198:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "57190:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2181,
													"nodeType": "ExpressionStatement",
													"src": "57190:33:0"
												}
											},
											{
												"expression": {
													"id": 2204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2183,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1839,
														"src": "57533:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2188,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2186,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1874,
																				"src": "57557:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 2187,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "57566:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "57557:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2189,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "57556:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2197,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2195,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2190,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1874,
																						"src": "57573:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 2193,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 2191,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "57582:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 2192,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "57587:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "57582:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 2194,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "57581:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "57573:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 2196,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "57594:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "57573:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 2199,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "57602:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 2200,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "57573:30:0",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 2198,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "57598:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 2201,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "57572:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "57556:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "57548:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 2184,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "57548:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "57548:57:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "57533:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 2205,
												"nodeType": "ExpressionStatement",
												"src": "57533:72:0"
											}
										]
									},
									"documentation": {
										"id": 1834,
										"nodeType": "StructuredDocumentation",
										"src": "54730:297:0",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 2207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1836,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "55060:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1835,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "55060:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55059:12:0"
									},
									"returnParameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 2207,
												"src": "55095:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1838,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "55095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55094:22:0"
									},
									"scope": 2347,
									"src": "55032:2580:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2345,
										"nodeType": "Block",
										"src": "58116:4196:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2216,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "58233:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 2217,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "58249:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "58233:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2219,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "58267:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2220,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1833,
																	"src": "58282:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "58267:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "58233:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "58298:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 2215,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "58225:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "58225:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2225,
												"nodeType": "ExpressionStatement",
												"src": "58225:77:0"
											},
											{
												"assignments": [
													2227
												],
												"declarations": [
													{
														"constant": false,
														"id": 2227,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "58312:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2226,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58312:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2234,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 2230,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2210,
																"src": "58336:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 2229,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "58328:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 2228,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "58328:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2231,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "58328:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 2232,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "58353:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "58328:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58312:43:0"
											},
											{
												"assignments": [
													2236
												],
												"declarations": [
													{
														"constant": false,
														"id": 2236,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "58366:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2235,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58366:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2238,
												"initialValue": {
													"id": 2237,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2227,
													"src": "58378:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58366:17:0"
											},
											{
												"assignments": [
													2240
												],
												"declarations": [
													{
														"constant": false,
														"id": 2240,
														"mutability": "mutable",
														"name": "msb",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "58393:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2239,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "58393:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2242,
												"initialValue": {
													"hexValue": "30",
													"id": 2241,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "58407:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "58393:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "58428:139:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "58442:58:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "58455:1:0",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "58461:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "58464:34:0",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "58458:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "58458:41:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "58451:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58451:49:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "58446:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "58513:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "58523:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "58528:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "58520:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58520:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "58513:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "58543:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "58552:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "58555:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "58548:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58548:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "58543:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "58513:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "58523:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "58461:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "58543:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "58555:1:0",
														"valueSize": 1
													}
												],
												"id": 2243,
												"nodeType": "InlineAssembly",
												"src": "58419:148:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "58585:123:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "58599:42:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "58612:1:0",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "58618:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "58621:18:0",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "58615:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "58615:25:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "58608:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58608:33:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "58603:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "58654:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "58664:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "58669:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "58661:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58661:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "58654:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "58684:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "58693:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "58696:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "58689:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58689:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "58684:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "58654:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "58664:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "58618:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "58684:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "58696:1:0",
														"valueSize": 1
													}
												],
												"id": 2244,
												"nodeType": "InlineAssembly",
												"src": "58576:132:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "58726:115:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "58740:34:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "58753:1:0",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "58759:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "58762:10:0",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "58756:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "58756:17:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "58749:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58749:25:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "58744:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "58787:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "58797:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "58802:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "58794:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58794:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "58787:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "58817:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "58826:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "58829:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "58822:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58822:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "58817:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "58787:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "58797:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "58759:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "58817:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "58829:1:0",
														"valueSize": 1
													}
												],
												"id": 2245,
												"nodeType": "InlineAssembly",
												"src": "58717:124:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "58859:111:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "58873:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "58886:1:0",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "58892:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "58895:6:0",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "58889:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "58889:13:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "58882:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58882:21:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "58877:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "58916:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "58926:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "58931:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "58923:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58923:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "58916:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "58946:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "58955:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "58958:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "58951:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58951:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "58946:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "58916:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "58926:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "58892:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "58946:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "58958:1:0",
														"valueSize": 1
													}
												],
												"id": 2246,
												"nodeType": "InlineAssembly",
												"src": "58850:120:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "58988:109:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "59002:28:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "59015:1:0",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "59021:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "59024:4:0",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "59018:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "59018:11:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "59011:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59011:19:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "59006:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "59043:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "59053:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "59058:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "59050:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59050:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "59043:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "59073:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "59082:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "59085:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "59078:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59078:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "59073:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "59043:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "59053:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59021:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59073:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59085:1:0",
														"valueSize": 1
													}
												],
												"id": 2247,
												"nodeType": "InlineAssembly",
												"src": "58979:118:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "59115:108:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "59129:27:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "59142:1:0",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "59148:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "59151:3:0",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "59145:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "59145:10:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "59138:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59138:18:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "59133:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "59169:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "59179:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "59184:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "59176:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59176:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "59169:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "59199:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "59208:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "59211:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "59204:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59204:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "59199:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "59169:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "59179:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59148:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59199:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59211:1:0",
														"valueSize": 1
													}
												],
												"id": 2248,
												"nodeType": "InlineAssembly",
												"src": "59106:117:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "59241:108:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "59255:27:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "59268:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "59274:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "59277:3:0",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "59271:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "59271:10:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "59264:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59264:18:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "59259:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "59295:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "59305:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "59310:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "59302:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59302:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "59295:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "59325:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "59334:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "59337:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "59330:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59330:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "59325:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "59295:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "59305:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59274:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59325:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59337:1:0",
														"valueSize": 1
													}
												],
												"id": 2249,
												"nodeType": "InlineAssembly",
												"src": "59232:117:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "59367:73:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "59381:19:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "59393:1:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "59396:3:0",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "59390:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59390:10:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "59385:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "59413:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "59423:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "59428:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "59420:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59420:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "59413:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "59413:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2240,
														"isOffset": false,
														"isSlot": false,
														"src": "59423:3:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59393:1:0",
														"valueSize": 1
													}
												],
												"id": 2250,
												"nodeType": "InlineAssembly",
												"src": "59358:82:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2251,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2240,
														"src": "59454:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 2252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59461:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "59454:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 2270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2263,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "59505:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2269,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2264,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2227,
																"src": "59509:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2267,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 2265,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "59519:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 2266,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "59525:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "59519:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2268,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "59518:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "59509:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "59505:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2271,
													"nodeType": "ExpressionStatement",
													"src": "59505:24:0"
												},
												"id": 2272,
												"nodeType": "IfStatement",
												"src": "59450:79:0",
												"trueBody": {
													"expression": {
														"id": 2261,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2254,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2236,
															"src": "59466:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2255,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2227,
																"src": "59470:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2256,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "59480:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 2257,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "59486:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "59480:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 2259,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "59479:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "59470:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "59466:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2262,
													"nodeType": "ExpressionStatement",
													"src": "59466:24:0"
												}
											},
											{
												"assignments": [
													2274
												],
												"declarations": [
													{
														"constant": false,
														"id": 2274,
														"mutability": "mutable",
														"name": "log_2",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "59540:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2273,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "59540:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2284,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2277,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2240,
																			"src": "59563:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 2276,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "59556:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 2275,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "59556:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "59556:11:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 2279,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "59570:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "59556:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 2281,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "59555:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 2282,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "59578:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "59555:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "59540:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "59600:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59614:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "59623:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "59632:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "59635:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "59628:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "59628:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "59619:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59619:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "59614:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "59651:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "59664:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "59669:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "59660:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59660:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "59655:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "59684:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "59696:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "59707:2:0",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "59711:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "59703:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "59703:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "59693:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59693:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "59684:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "59727:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "59736:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "59739:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "59732:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59732:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "59727:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "59684:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "59696:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59614:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59632:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59635:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59669:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59727:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59739:1:0",
														"valueSize": 1
													}
												],
												"id": 2285,
												"nodeType": "InlineAssembly",
												"src": "59591:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "59769:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59783:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "59792:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "59801:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "59804:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "59797:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "59797:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "59788:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59788:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "59783:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "59820:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "59833:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "59838:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "59829:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59829:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "59824:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "59853:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "59865:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "59876:2:0",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "59880:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "59872:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "59872:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "59862:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59862:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "59853:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "59896:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "59905:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "59908:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "59901:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59901:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "59896:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "59853:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "59865:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59783:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59801:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59804:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59838:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59896:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59908:1:0",
														"valueSize": 1
													}
												],
												"id": 2286,
												"nodeType": "InlineAssembly",
												"src": "59760:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "59938:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "59952:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "59961:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "59970:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "59973:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "59966:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "59966:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "59957:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59957:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "59952:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "59989:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60002:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "60007:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "59998:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "59998:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "59993:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "60022:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "60034:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "60045:2:0",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "60049:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "60041:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "60041:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "60031:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60031:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "60022:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "60065:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "60074:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "60077:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60070:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60070:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "60065:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "60022:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "60034:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59952:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59970:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "59973:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60007:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60065:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60077:1:0",
														"valueSize": 1
													}
												],
												"id": 2287,
												"nodeType": "InlineAssembly",
												"src": "59929:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "60107:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "60121:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60130:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "60139:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "60142:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "60135:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "60135:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60126:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60126:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "60121:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "60158:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60171:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "60176:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60167:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60167:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "60162:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "60191:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "60203:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "60214:2:0",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "60218:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "60210:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "60210:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "60200:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60200:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "60191:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "60234:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "60243:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "60246:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60239:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60239:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "60234:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "60191:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "60203:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60121:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60139:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60142:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60176:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60234:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60246:1:0",
														"valueSize": 1
													}
												],
												"id": 2288,
												"nodeType": "InlineAssembly",
												"src": "60098:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "60276:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "60290:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60299:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "60308:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "60311:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "60304:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "60304:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60295:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60295:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "60290:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "60327:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60340:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "60345:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60336:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60336:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "60331:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "60360:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "60372:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "60383:2:0",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "60387:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "60379:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "60379:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "60369:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60369:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "60360:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "60403:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "60412:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "60415:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60408:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60408:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "60403:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "60360:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "60372:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60290:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60308:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60311:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60345:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60403:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60415:1:0",
														"valueSize": 1
													}
												],
												"id": 2289,
												"nodeType": "InlineAssembly",
												"src": "60267:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "60445:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "60459:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60468:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "60477:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "60480:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "60473:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "60473:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60464:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60464:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "60459:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "60496:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60509:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "60514:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60505:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60505:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "60500:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "60529:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "60541:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "60552:2:0",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "60556:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "60548:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "60548:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "60538:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60538:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "60529:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "60572:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "60581:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "60584:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60577:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60577:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "60572:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "60529:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "60541:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60459:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60477:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60480:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60514:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60572:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60584:1:0",
														"valueSize": 1
													}
												],
												"id": 2290,
												"nodeType": "InlineAssembly",
												"src": "60436:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "60614:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "60628:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60637:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "60646:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "60649:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "60642:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "60642:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60633:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60633:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "60628:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "60665:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60678:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "60683:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60674:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60674:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "60669:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "60698:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "60710:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "60721:2:0",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "60725:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "60717:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "60717:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "60707:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60707:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "60698:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "60741:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "60750:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "60753:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60746:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60746:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "60741:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "60698:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "60710:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60628:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60646:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60649:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60683:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60741:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60753:1:0",
														"valueSize": 1
													}
												],
												"id": 2291,
												"nodeType": "InlineAssembly",
												"src": "60605:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "60783:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "60797:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60806:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "60815:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "60818:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "60811:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "60811:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60802:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60802:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "60797:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "60834:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60847:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "60852:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60843:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60843:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "60838:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "60867:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "60879:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "60890:2:0",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "60894:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "60886:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "60886:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "60876:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60876:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "60867:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "60910:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "60919:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "60922:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60915:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60915:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "60910:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "60867:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "60879:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60797:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60815:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60818:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60852:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60910:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60922:1:0",
														"valueSize": 1
													}
												],
												"id": 2292,
												"nodeType": "InlineAssembly",
												"src": "60774:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "60952:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "60966:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "60975:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "60984:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "60987:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "60980:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "60980:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "60971:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "60971:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "60966:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "61003:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "61016:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "61021:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61012:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61012:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "61007:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "61036:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "61048:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "61059:2:0",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "61063:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "61055:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "61055:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "61045:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61045:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "61036:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "61079:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "61088:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "61091:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61084:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61084:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "61079:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "61036:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "61048:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60966:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60984:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "60987:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61021:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61079:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61091:1:0",
														"valueSize": 1
													}
												],
												"id": 2293,
												"nodeType": "InlineAssembly",
												"src": "60943:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "61121:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61135:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "61144:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "61153:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "61156:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "61149:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "61149:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61140:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61140:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "61135:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "61172:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "61185:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "61190:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61181:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61181:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "61176:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "61205:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "61217:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "61228:2:0",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "61232:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "61224:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "61224:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "61214:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61214:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "61205:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "61248:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "61257:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "61260:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61253:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61253:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "61248:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "61205:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "61217:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61135:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61153:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61156:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61190:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61248:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61260:1:0",
														"valueSize": 1
													}
												],
												"id": 2294,
												"nodeType": "InlineAssembly",
												"src": "61112:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "61290:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61304:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "61313:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "61322:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "61325:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "61318:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "61318:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61309:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61309:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "61304:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "61341:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "61354:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "61359:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61350:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61350:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "61345:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "61374:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "61386:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "61397:2:0",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "61401:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "61393:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "61393:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "61383:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61383:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "61374:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "61417:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "61426:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "61429:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61422:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61422:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "61417:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "61374:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "61386:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61304:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61322:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61325:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61359:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61417:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61429:1:0",
														"valueSize": 1
													}
												],
												"id": 2295,
												"nodeType": "InlineAssembly",
												"src": "61281:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "61459:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61473:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "61482:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "61491:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "61494:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "61487:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "61487:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61478:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61478:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "61473:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "61510:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "61523:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "61528:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61519:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61519:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "61514:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "61543:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "61555:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "61566:2:0",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "61570:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "61562:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "61562:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "61552:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61552:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "61543:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "61586:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "61595:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "61598:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61591:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61591:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "61586:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "61543:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "61555:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61473:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61491:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61494:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61528:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61586:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61598:1:0",
														"valueSize": 1
													}
												],
												"id": 2296,
												"nodeType": "InlineAssembly",
												"src": "61450:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "61628:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61642:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "61651:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "61660:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "61663:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "61656:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "61656:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61647:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61647:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "61642:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "61679:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "61692:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "61697:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61688:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61688:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "61683:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "61712:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "61724:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "61735:2:0",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "61739:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "61731:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "61731:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "61721:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61721:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "61712:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "61755:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "61764:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "61767:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61760:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61760:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "61755:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "61712:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "61724:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61642:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61660:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61663:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61697:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61755:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61767:1:0",
														"valueSize": 1
													}
												],
												"id": 2297,
												"nodeType": "InlineAssembly",
												"src": "61619:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "61797:124:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61811:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "61820:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "61829:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "61832:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "61825:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "61825:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61816:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61816:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "61811:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "61848:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "61861:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "61866:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "61857:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61857:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "61852:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "61881:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "61893:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "61904:2:0",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "61908:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "61900:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "61900:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "61890:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "61890:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "61881:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "61881:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2274,
														"isOffset": false,
														"isSlot": false,
														"src": "61893:5:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61811:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61829:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61832:1:0",
														"valueSize": 1
													},
													{
														"declaration": 2236,
														"isOffset": false,
														"isSlot": false,
														"src": "61866:1:0",
														"valueSize": 1
													}
												],
												"id": 2298,
												"nodeType": "InlineAssembly",
												"src": "61788:133:0"
											},
											{
												"assignments": [
													2300
												],
												"declarations": [
													{
														"constant": false,
														"id": 2300,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "61931:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 2299,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "61931:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2304,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 2303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2301,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2274,
														"src": "61954:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 2302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "61962:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "61954:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "61931:55:0"
											},
											{
												"assignments": [
													2306
												],
												"declarations": [
													{
														"constant": false,
														"id": 2306,
														"mutability": "mutable",
														"name": "tickLow",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "62015:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2305,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "62015:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2316,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2314,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2309,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "62038:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "62054:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "62038:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 2312,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "62037:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "62096:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "62037:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "62031:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 2307,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "62031:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 2315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62031:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "62015:85:0"
											},
											{
												"assignments": [
													2318
												],
												"declarations": [
													{
														"constant": false,
														"id": 2318,
														"mutability": "mutable",
														"name": "tickHi",
														"nodeType": "VariableDeclaration",
														"scope": 2345,
														"src": "62110:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2317,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "62110:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2328,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 2323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 2321,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2300,
																			"src": "62132:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 2322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "62148:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "62132:55:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 2324,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "62131:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 2325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "62192:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "62131:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 2320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "62125:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 2319,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "62125:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 2327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62125:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "62110:86:0"
											},
											{
												"expression": {
													"id": 2343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2329,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2213,
														"src": "62207:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 2332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2330,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2306,
																"src": "62214:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2331,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "62225:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "62214:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2338,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 2335,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2318,
																			"src": "62263:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 2334,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2207,
																		"src": "62244:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 2336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "62244:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 2337,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2210,
																	"src": "62274:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "62244:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 2340,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2306,
																"src": "62298:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 2341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "62244:61:0",
															"trueExpression": {
																"id": 2339,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2318,
																"src": "62289:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 2342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "62214:91:0",
														"trueExpression": {
															"id": 2333,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2306,
															"src": "62234:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "62207:98:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 2344,
												"nodeType": "ExpressionStatement",
												"src": "62207:98:0"
											}
										]
									},
									"documentation": {
										"id": 2208,
										"nodeType": "StructuredDocumentation",
										"src": "57618:408:0",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 2346,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "58059:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2209,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "58059:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58058:22:0"
									},
									"returnParameters": {
										"id": 2214,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2213,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 2346,
												"src": "58104:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2212,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "58104:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58103:12:0"
									},
									"scope": 2347,
									"src": "58031:4281:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3137,
							"src": "53983:8331:0"
						},
						{
							"id": 2348,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "62377:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2349,
								"nodeType": "StructuredDocumentation",
								"src": "62403:94:0",
								"text": "@title Safe casting methods\n @notice Contains methods for safely casting between types"
							},
							"fullyImplemented": true,
							"id": 2416,
							"linearizedBaseContracts": [
								2416
							],
							"name": "SafeCast",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2369,
										"nodeType": "Block",
										"src": "62753:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2366,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2358,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2355,
																			"src": "62772:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 2361,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2352,
																					"src": "62784:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 2360,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "62776:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 2359,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "62776:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "62776:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "62772:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 2364,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "62771:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2365,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2352,
																"src": "62791:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "62771:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "62763:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "62763:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2368,
												"nodeType": "ExpressionStatement",
												"src": "62763:30:0"
											}
										]
									},
									"documentation": {
										"id": 2350,
										"nodeType": "StructuredDocumentation",
										"src": "62520:164:0",
										"text": "@notice Cast a uint256 to a uint160, revert on overflow\n @param y The uint256 to be downcasted\n @return z The downcasted integer, now type uint160"
									},
									"id": 2370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2352,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "62708:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "62708:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62707:11:0"
									},
									"returnParameters": {
										"id": 2356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2355,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2370,
												"src": "62742:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2354,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "62742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62741:11:0"
									},
									"scope": 2416,
									"src": "62689:111:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2390,
										"nodeType": "Block",
										"src": "63045:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 2387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 2384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2379,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2376,
																			"src": "63064:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 2382,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2373,
																					"src": "63075:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 2381,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "63068:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 2380,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "63068:6:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 2383,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "63068:9:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "63064:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	}
																],
																"id": 2385,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "63063:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 2386,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "63082:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "63063:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2378,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "63055:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "63055:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2389,
												"nodeType": "ExpressionStatement",
												"src": "63055:29:0"
											}
										]
									},
									"documentation": {
										"id": 2371,
										"nodeType": "StructuredDocumentation",
										"src": "62806:173:0",
										"text": "@notice Cast a int256 to a int128, revert on overflow or underflow\n @param y The int256 to be downcasted\n @return z The downcasted integer, now type int128"
									},
									"id": 2391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "63002:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2372,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "63002:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63001:10:0"
									},
									"returnParameters": {
										"id": 2377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2391,
												"src": "63035:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 2375,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "63035:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63034:10:0"
									},
									"scope": 2416,
									"src": "62984:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2414,
										"nodeType": "Block",
										"src": "63318:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2400,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "63336:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																},
																"id": 2403,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 2401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "63340:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "323535",
																	"id": 2402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "63343:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "255"
																},
																"src": "63340:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																}
															},
															"src": "63336:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2399,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "63328:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "63328:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2406,
												"nodeType": "ExpressionStatement",
												"src": "63328:19:0"
											},
											{
												"expression": {
													"id": 2412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2407,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2397,
														"src": "63357:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2410,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2394,
																"src": "63368:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2409,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "63361:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 2408,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "63361:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 2411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "63361:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "63357:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 2413,
												"nodeType": "ExpressionStatement",
												"src": "63357:13:0"
											}
										]
									},
									"documentation": {
										"id": 2392,
										"nodeType": "StructuredDocumentation",
										"src": "63097:154:0",
										"text": "@notice Cast a uint256 to a int256, revert on overflow\n @param y The uint256 to be casted\n @return z The casted integer, now type int256"
									},
									"id": 2415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2395,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "63274:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "63274:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63273:11:0"
									},
									"returnParameters": {
										"id": 2398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2397,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 2415,
												"src": "63308:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2396,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "63308:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "63307:10:0"
									},
									"scope": 2416,
									"src": "63256:121:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3137,
							"src": "62497:882:0"
						},
						{
							"id": 2417,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "63420:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2419,
										"name": "IQuoterV2",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 474,
										"src": "63790:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IQuoterV2_$474",
											"typeString": "contract IQuoterV2"
										}
									},
									"id": 2420,
									"nodeType": "InheritanceSpecifier",
									"src": "63790:9:0"
								},
								{
									"baseName": {
										"id": 2421,
										"name": "IUniswapV3SwapCallback",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 487,
										"src": "63801:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3SwapCallback_$487",
											"typeString": "contract IUniswapV3SwapCallback"
										}
									},
									"id": 2422,
									"nodeType": "InheritanceSpecifier",
									"src": "63801:22:0"
								},
								{
									"baseName": {
										"id": 2423,
										"name": "PeripheryImmutableState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 384,
										"src": "63825:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PeripheryImmutableState_$384",
											"typeString": "contract PeripheryImmutableState"
										}
									},
									"id": 2424,
									"nodeType": "InheritanceSpecifier",
									"src": "63825:23:0"
								}
							],
							"contractDependencies": [
								355,
								384,
								474,
								487
							],
							"contractKind": "contract",
							"documentation": {
								"id": 2418,
								"nodeType": "StructuredDocumentation",
								"src": "63456:313:0",
								"text": "@title Provides quotes for swaps\n @notice Allows getting the expected amount out or amount in for a given swap without executing the swap\n @dev These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute\n the swap and check the amounts in the callback."
							},
							"fullyImplemented": true,
							"id": 3136,
							"linearizedBaseContracts": [
								3136,
								384,
								355,
								487,
								474
							],
							"name": "QuoterV2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 2427,
									"libraryName": {
										"id": 2425,
										"name": "Path",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 340,
										"src": "63861:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Path_$340",
											"typeString": "library Path"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "63855:21:0",
									"typeName": {
										"id": 2426,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "63870:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"id": 2430,
									"libraryName": {
										"id": 2428,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 2416,
										"src": "63887:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$2416",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "63881:27:0",
									"typeName": {
										"id": 2429,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "63900:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 2433,
									"libraryName": {
										"id": 2431,
										"name": "PoolTicksCounter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1222,
										"src": "63919:16:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PoolTicksCounter_$1222",
											"typeString": "library PoolTicksCounter"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "63913:42:0",
									"typeName": {
										"id": 2432,
										"name": "IUniswapV3Pool",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 916,
										"src": "63940:14:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
											"typeString": "contract IUniswapV3Pool"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 2434,
										"nodeType": "StructuredDocumentation",
										"src": "63961:91:0",
										"text": "@dev Transient storage variable used to check a safety condition in exact output swaps."
									},
									"id": 2436,
									"mutability": "mutable",
									"name": "amountOutCached",
									"nodeType": "VariableDeclaration",
									"scope": 3136,
									"src": "64057:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2435,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "64057:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2447,
										"nodeType": "Block",
										"src": "64183:2:0",
										"statements": []
									},
									"id": 2448,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2443,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2438,
													"src": "64165:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 2444,
													"name": "_WETH9",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2440,
													"src": "64175:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 2445,
											"modifierName": {
												"id": 2442,
												"name": "PeripheryImmutableState",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 384,
												"src": "64141:23:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_PeripheryImmutableState_$384_$",
													"typeString": "type(contract PeripheryImmutableState)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "64141:41:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "_factory",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "64107:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64107:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2440,
												"mutability": "mutable",
												"name": "_WETH9",
												"nodeType": "VariableDeclaration",
												"scope": 2448,
												"src": "64125:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64125:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64106:34:0"
									},
									"returnParameters": {
										"id": 2446,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "64183:0:0"
									},
									"scope": 3136,
									"src": "64095:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2472,
										"nodeType": "Block",
										"src": "64320:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2462,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "64379:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2465,
																			"name": "tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2450,
																			"src": "64411:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2466,
																			"name": "tokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2452,
																			"src": "64419:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 2467,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2454,
																			"src": "64427:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		],
																		"expression": {
																			"id": 2463,
																			"name": "PoolAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 91,
																			"src": "64388:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_PoolAddress_$91_$",
																				"typeString": "type(library PoolAddress)"
																			}
																		},
																		"id": 2464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getPoolKey",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 43,
																		"src": "64388:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint24_$returns$_t_struct$_PoolKey_$12_memory_ptr_$",
																			"typeString": "function (address,address,uint24) pure returns (struct PoolAddress.PoolKey memory)"
																		}
																	},
																	"id": 2468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "64388:43:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																],
																"expression": {
																	"id": 2460,
																	"name": "PoolAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "64352:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_PoolAddress_$91_$",
																		"typeString": "type(library PoolAddress)"
																	}
																},
																"id": 2461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "computeAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 90,
																"src": "64352:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$12_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
																}
															},
															"id": 2469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "64352:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2459,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "64337:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$916_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64337:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"functionReturnParameters": 2458,
												"id": 2471,
												"nodeType": "Return",
												"src": "64330:103:0"
											}
										]
									},
									"id": 2473,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2450,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "64217:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64217:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2452,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "64241:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "64241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2454,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "64265:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2453,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "64265:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64207:74:0"
									},
									"returnParameters": {
										"id": 2458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2457,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2473,
												"src": "64304:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 2456,
													"name": "IUniswapV3Pool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 916,
													"src": "64304:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64303:16:0"
									},
									"scope": 3136,
									"src": "64191:249:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										486
									],
									"body": {
										"id": 2582,
										"nodeType": "Block",
										"src": "64634:1460:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2491,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2487,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2485,
																	"name": "amount0Delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "64652:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2486,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "64667:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "64652:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 2490,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2488,
																	"name": "amount1Delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2478,
																	"src": "64672:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2489,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "64687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "64672:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "64652:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2484,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "64644:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 2492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64644:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2493,
												"nodeType": "ExpressionStatement",
												"src": "64644:45:0"
											},
											{
												"assignments": [
													2495,
													2497,
													2499
												],
												"declarations": [
													{
														"constant": false,
														"id": 2495,
														"mutability": "mutable",
														"name": "tokenIn",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "64763:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2494,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "64763:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2497,
														"mutability": "mutable",
														"name": "tokenOut",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "64780:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2496,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "64780:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2499,
														"mutability": "mutable",
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "64798:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 2498,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "64798:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2503,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2500,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2480,
															"src": "64812:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2501,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decodeFirstPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 306,
														"src": "64812:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) pure returns (address,address,uint24)"
														}
													},
													"id": 2502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64812:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
														"typeString": "tuple(address,address,uint24)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "64762:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2507,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "64878:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2508,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2495,
															"src": "64887:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2509,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2497,
															"src": "64896:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2510,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "64906:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"expression": {
															"id": 2504,
															"name": "CallbackValidation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1281,
															"src": "64844:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CallbackValidation_$1281_$",
																"typeString": "type(library CallbackValidation)"
															}
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "verifyCallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1249,
														"src": "64844:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$916_$",
															"typeString": "function (address,address,address,uint24) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 2511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "64844:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"id": 2512,
												"nodeType": "ExpressionStatement",
												"src": "64844:66:0"
											},
											{
												"assignments": [
													2514,
													2516,
													2518
												],
												"declarations": [
													{
														"constant": false,
														"id": 2514,
														"mutability": "mutable",
														"name": "isExactInput",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "64922:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2513,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "64922:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2516,
														"mutability": "mutable",
														"name": "amountToPay",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "64941:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2515,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "64941:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2518,
														"mutability": "mutable",
														"name": "amountReceived",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "64962:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2517,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "64962:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2549,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 2521,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2519,
															"name": "amount0Delta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2476,
															"src": "65000:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 2520,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "65015:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "65000:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2535,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2497,
																	"src": "65122:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2536,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2495,
																	"src": "65133:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "65122:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"arguments": [
																	{
																		"id": 2540,
																		"name": "amount1Delta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2478,
																		"src": "65150:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2539,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "65142:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2538,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "65142:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "65142:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 2545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "65173:13:0",
																		"subExpression": {
																			"id": 2544,
																			"name": "amount0Delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2476,
																			"src": "65174:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "65165:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2542,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "65165:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "65165:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2547,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "65121:67:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(bool,uint256,uint256)"
														}
													},
													"id": 2548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "65000:188:0",
													"trueExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2524,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2522,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2495,
																	"src": "65036:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2523,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2497,
																	"src": "65046:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "65036:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"arguments": [
																	{
																		"id": 2527,
																		"name": "amount0Delta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2476,
																		"src": "65064:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "65056:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2525,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "65056:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "65056:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 2532,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "65087:13:0",
																		"subExpression": {
																			"id": 2531,
																			"name": "amount1Delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2478,
																			"src": "65088:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "65079:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2529,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "65079:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 2533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "65079:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2534,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "65035:67:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(bool,uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "64921:267:0"
											},
											{
												"assignments": [
													2551
												],
												"declarations": [
													{
														"constant": false,
														"id": 2551,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "65199:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 2550,
															"name": "IUniswapV3Pool",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 916,
															"src": "65199:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2557,
												"initialValue": {
													"arguments": [
														{
															"id": 2553,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2495,
															"src": "65229:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2554,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2497,
															"src": "65238:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2555,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2499,
															"src": "65248:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 2552,
														"name": "getPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2473,
														"src": "65221:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$916_$",
															"typeString": "function (address,address,uint24) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 2556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "65221:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "65199:53:0"
											},
											{
												"assignments": [
													2559,
													2561,
													null,
													null,
													null,
													null,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2559,
														"mutability": "mutable",
														"name": "sqrtPriceX96After",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "65263:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														},
														"typeName": {
															"id": 2558,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "65263:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2561,
														"mutability": "mutable",
														"name": "tickAfter",
														"nodeType": "VariableDeclaration",
														"scope": 2582,
														"src": "65290:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2560,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "65290:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													},
													null,
													null,
													null,
													null,
													null
												],
												"id": 2565,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 2562,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2551,
															"src": "65319:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 2563,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slot0",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 775,
														"src": "65319:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"id": 2564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "65319:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
														"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "65262:69:0"
											},
											{
												"condition": {
													"id": 2566,
													"name": "isExactInput",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2514,
													"src": "65346:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2580,
													"nodeType": "Block",
													"src": "65637:451:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2569,
																	"name": "amountOutCached",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2436,
																	"src": "65756:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "65775:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "65756:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2578,
															"nodeType": "IfStatement",
															"src": "65752:68:0",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2575,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2573,
																				"name": "amountReceived",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2518,
																				"src": "65786:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 2574,
																				"name": "amountOutCached",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2436,
																				"src": "65804:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "65786:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 2572,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "65778:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																			"typeString": "function (bool) pure"
																		}
																	},
																	"id": 2576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "65778:42:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2577,
																"nodeType": "ExpressionStatement",
																"src": "65778:42:0"
															}
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "65843:235:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "65861:22:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "65878:4:0",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "65872:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "65872:11:0"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "65865:3:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "65907:3:0"
																				},
																				{
																					"name": "amountToPay",
																					"nodeType": "YulIdentifier",
																					"src": "65912:11:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "65900:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "65900:24:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "65900:24:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "65952:3:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "65957:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "65948:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "65948:14:0"
																				},
																				{
																					"name": "sqrtPriceX96After",
																					"nodeType": "YulIdentifier",
																					"src": "65964:17:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "65941:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "65941:41:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "65941:41:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "66010:3:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "66015:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "66006:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "66006:14:0"
																				},
																				{
																					"name": "tickAfter",
																					"nodeType": "YulIdentifier",
																					"src": "66022:9:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "65999:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "65999:33:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "65999:33:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "66056:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "66061:2:0",
																					"type": "",
																					"value": "96"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "66049:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "66049:15:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "66049:15:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 2516,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "65912:11:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2559,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "65964:17:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2561,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "66022:9:0",
																	"valueSize": 1
																}
															],
															"id": 2579,
															"nodeType": "InlineAssembly",
															"src": "65834:244:0"
														}
													]
												},
												"id": 2581,
												"nodeType": "IfStatement",
												"src": "65342:746:0",
												"trueBody": {
													"id": 2568,
													"nodeType": "Block",
													"src": "65360:271:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "65383:238:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "65401:22:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "65418:4:0",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "65412:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "65412:11:0"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "65405:3:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "65447:3:0"
																				},
																				{
																					"name": "amountReceived",
																					"nodeType": "YulIdentifier",
																					"src": "65452:14:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "65440:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "65440:27:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "65440:27:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "65495:3:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "65500:4:0",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "65491:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "65491:14:0"
																				},
																				{
																					"name": "sqrtPriceX96After",
																					"nodeType": "YulIdentifier",
																					"src": "65507:17:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "65484:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "65484:41:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "65484:41:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "ptr",
																							"nodeType": "YulIdentifier",
																							"src": "65553:3:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "65558:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "65549:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "65549:14:0"
																				},
																				{
																					"name": "tickAfter",
																					"nodeType": "YulIdentifier",
																					"src": "65565:9:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "65542:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "65542:33:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "65542:33:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "65599:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "65604:2:0",
																					"type": "",
																					"value": "96"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "65592:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "65592:15:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "65592:15:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 2518,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "65452:14:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2559,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "65507:17:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2561,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "65565:9:0",
																	"valueSize": 1
																}
															],
															"id": 2567,
															"nodeType": "InlineAssembly",
															"src": "65374:247:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2474,
										"nodeType": "StructuredDocumentation",
										"src": "64446:38:0",
										"text": "@inheritdoc IUniswapV3SwapCallback"
									},
									"functionSelector": "fa461e33",
									"id": 2583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2482,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "64625:8:0"
									},
									"parameters": {
										"id": 2481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "64529:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2475,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "64529:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2478,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "64558:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2477,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "64558:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2480,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 2583,
												"src": "64587:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2479,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "64587:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64519:91:0"
									},
									"returnParameters": {
										"id": 2483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "64634:0:0"
									},
									"scope": 3136,
									"src": "64489:1605:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2633,
										"nodeType": "Block",
										"src": "66378:309:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2598,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2595,
															"name": "reason",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "66392:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2596,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "66392:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "3936",
														"id": 2597,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "66409:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_96_by_1",
															"typeString": "int_const 96"
														},
														"value": "96"
													},
													"src": "66392:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2620,
												"nodeType": "IfStatement",
												"src": "66388:231:0",
												"trueBody": {
													"id": 2619,
													"nodeType": "Block",
													"src": "66413:206:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2602,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2599,
																		"name": "reason",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2586,
																		"src": "66431:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2600,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "66431:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "3638",
																	"id": 2601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "66447:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_68_by_1",
																		"typeString": "int_const 68"
																	},
																	"value": "68"
																},
																"src": "66431:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2607,
															"nodeType": "IfStatement",
															"src": "66427:50:0",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "556e6578706563746564206572726f72",
																			"id": 2604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "66458:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff",
																				"typeString": "literal_string \"Unexpected error\""
																			},
																			"value": "Unexpected error"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff",
																				"typeString": "literal_string \"Unexpected error\""
																			}
																		],
																		"id": 2603,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "66451:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 2605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "66451:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 2606,
																"nodeType": "ExpressionStatement",
																"src": "66451:26:0"
															}
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "66500:59:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "66518:27:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "reason",
																					"nodeType": "YulIdentifier",
																					"src": "66532:6:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "66540:4:0",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "66528:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "66528:17:0"
																		},
																		"variableNames": [
																			{
																				"name": "reason",
																				"nodeType": "YulIdentifier",
																				"src": "66518:6:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 2586,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "66518:6:0",
																	"valueSize": 1
																},
																{
																	"declaration": 2586,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "66532:6:0",
																	"valueSize": 1
																}
															],
															"id": 2608,
															"nodeType": "InlineAssembly",
															"src": "66491:68:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2612,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2586,
																				"src": "66590:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 2614,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "66599:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																							"typeString": "type(string storage pointer)"
																						},
																						"typeName": {
																							"id": 2613,
																							"name": "string",
																							"nodeType": "ElementaryTypeName",
																							"src": "66599:6:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 2615,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "66598:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				}
																			],
																			"expression": {
																				"id": 2610,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "66579:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 2611,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "66579:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 2616,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "66579:28:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 2609,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "66572:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 2617,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "66572:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2618,
															"nodeType": "ExpressionStatement",
															"src": "66572:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2623,
															"name": "reason",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "66646:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 2625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "66655:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 2624,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "66655:7:0",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 2627,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "66664:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2626,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "66664:7:0",
																		"typeDescriptions": {}
																	}
																},
																{
																	"id": 2629,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "66673:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int24_$",
																		"typeString": "type(int24)"
																	},
																	"typeName": {
																		"id": 2628,
																		"name": "int24",
																		"nodeType": "ElementaryTypeName",
																		"src": "66673:5:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 2630,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "66654:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint160_$_$_t_type$_t_int24_$_$",
																"typeString": "tuple(type(uint256),type(uint160),type(int24))"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_tuple$_t_type$_t_uint256_$_$_t_type$_t_uint160_$_$_t_type$_t_int24_$_$",
																"typeString": "tuple(type(uint256),type(uint160),type(int24))"
															}
														],
														"expression": {
															"id": 2621,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "66635:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 2622,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "66635:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "66635:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_int24_$",
														"typeString": "tuple(uint256,uint160,int24)"
													}
												},
												"functionReturnParameters": 2594,
												"id": 2632,
												"nodeType": "Return",
												"src": "66628:52:0"
											}
										]
									},
									"documentation": {
										"id": 2584,
										"nodeType": "StructuredDocumentation",
										"src": "66100:69:0",
										"text": "@dev Parses a revert reason that should contain the numeric quote"
									},
									"id": 2634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseRevertReason",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "reason",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "66201:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "66201:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66200:21:0"
									},
									"returnParameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "66281:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66281:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "66309:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2590,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "66309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "tickAfter",
												"nodeType": "VariableDeclaration",
												"scope": 2634,
												"src": "66348:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 2592,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "66348:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66267:106:0"
									},
									"scope": 3136,
									"src": "66174:513:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2687,
										"nodeType": "Block",
										"src": "67000:359:0",
										"statements": [
											{
												"assignments": [
													2652
												],
												"declarations": [
													{
														"constant": false,
														"id": 2652,
														"mutability": "mutable",
														"name": "tickBefore",
														"nodeType": "VariableDeclaration",
														"scope": 2687,
														"src": "67010:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2651,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "67010:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2653,
												"nodeType": "VariableDeclarationStatement",
												"src": "67010:16:0"
											},
											{
												"assignments": [
													2655
												],
												"declarations": [
													{
														"constant": false,
														"id": 2655,
														"mutability": "mutable",
														"name": "tickAfter",
														"nodeType": "VariableDeclaration",
														"scope": 2687,
														"src": "67036:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 2654,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "67036:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2656,
												"nodeType": "VariableDeclarationStatement",
												"src": "67036:15:0"
											},
											{
												"expression": {
													"id": 2662,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															null,
															{
																"id": 2657,
																"name": "tickBefore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2652,
																"src": "67064:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															null,
															null,
															null,
															null,
															null
														],
														"id": 2658,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "67061:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$_t_int24_$__$__$__$__$__$",
															"typeString": "tuple(,int24,,,,,)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 2659,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2638,
																"src": "67088:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																	"typeString": "contract IUniswapV3Pool"
																}
															},
															"id": 2660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "slot0",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 775,
															"src": "67088:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
																"typeString": "function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"
															}
														},
														"id": 2661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "67088:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$",
															"typeString": "tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"
														}
													},
													"src": "67061:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2663,
												"nodeType": "ExpressionStatement",
												"src": "67061:39:0"
											},
											{
												"expression": {
													"id": 2671,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"components": [
															{
																"id": 2664,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2643,
																"src": "67111:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2665,
																"name": "sqrtPriceX96After",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2645,
																"src": "67119:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															{
																"id": 2666,
																"name": "tickAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2655,
																"src": "67138:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"id": 2667,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "TupleExpression",
														"src": "67110:38:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_int24_$",
															"typeString": "tuple(uint256,uint160,int24)"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2669,
																"name": "reason",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2636,
																"src": "67169:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 2668,
															"name": "parseRevertReason",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2634,
															"src": "67151:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$_t_uint160_$_t_int24_$",
																"typeString": "function (bytes memory) pure returns (uint256,uint160,int24)"
															}
														},
														"id": 2670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "67151:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_int24_$",
															"typeString": "tuple(uint256,uint160,int24)"
														}
													},
													"src": "67110:66:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2672,
												"nodeType": "ExpressionStatement",
												"src": "67110:66:0"
											},
											{
												"expression": {
													"id": 2679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2673,
														"name": "initializedTicksCrossed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2647,
														"src": "67187:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2676,
																"name": "tickBefore",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2652,
																"src": "67247:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															{
																"id": 2677,
																"name": "tickAfter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2655,
																"src": "67259:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																},
																{
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															],
															"expression": {
																"id": 2674,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2638,
																"src": "67213:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																	"typeString": "contract IUniswapV3Pool"
																}
															},
															"id": 2675,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "countInitializedTicksCrossed",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1192,
															"src": "67213:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_contract$_IUniswapV3Pool_$916_$_t_int24_$_t_int24_$returns$_t_uint32_$bound_to$_t_contract$_IUniswapV3Pool_$916_$",
																"typeString": "function (contract IUniswapV3Pool,int24,int24) view returns (uint32)"
															}
														},
														"id": 2678,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "67213:56:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "67187:82:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"id": 2680,
												"nodeType": "ExpressionStatement",
												"src": "67187:82:0"
											},
											{
												"expression": {
													"components": [
														{
															"id": 2681,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2643,
															"src": "67288:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2682,
															"name": "sqrtPriceX96After",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2645,
															"src": "67296:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"id": 2683,
															"name": "initializedTicksCrossed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2647,
															"src": "67315:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 2684,
															"name": "gasEstimate",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2640,
															"src": "67340:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 2685,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "67287:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
														"typeString": "tuple(uint256,uint160,uint32,uint256)"
													}
												},
												"functionReturnParameters": 2650,
												"id": 2686,
												"nodeType": "Return",
												"src": "67280:72:0"
											}
										]
									},
									"id": 2688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "handleRevert",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2636,
												"mutability": "mutable",
												"name": "reason",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "66724:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2635,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "66724:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2638,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "66753:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 2637,
													"name": "IUniswapV3Pool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 916,
													"src": "66753:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2640,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "66782:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2639,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66782:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66714:93:0"
									},
									"returnParameters": {
										"id": 2650,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2643,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "66867:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2642,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2645,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "66895:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2644,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "66895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2647,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "66934:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2646,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "66934:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2649,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 2688,
												"src": "66978:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2648,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66853:142:0"
									},
									"scope": 3136,
									"src": "66693:666:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										430
									],
									"body": {
										"id": 2786,
										"nodeType": "Block",
										"src": "67649:820:0",
										"statements": [
											{
												"assignments": [
													2703
												],
												"declarations": [
													{
														"constant": false,
														"id": 2703,
														"mutability": "mutable",
														"name": "zeroForOne",
														"nodeType": "VariableDeclaration",
														"scope": 2786,
														"src": "67659:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2702,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "67659:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2709,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2704,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2690,
															"src": "67677:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
																"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
															}
														},
														"id": 2705,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenIn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 407,
														"src": "67677:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2706,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2690,
															"src": "67694:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
																"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
															}
														},
														"id": 2707,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 409,
														"src": "67694:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "67677:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "67659:50:0"
											},
											{
												"assignments": [
													2711
												],
												"declarations": [
													{
														"constant": false,
														"id": 2711,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 2786,
														"src": "67719:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 2710,
															"name": "IUniswapV3Pool",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 916,
															"src": "67719:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2720,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2713,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2690,
																"src": "67749:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																}
															},
															"id": 2714,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenIn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 407,
															"src": "67749:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2715,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2690,
																"src": "67765:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																}
															},
															"id": 2716,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 409,
															"src": "67765:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2717,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2690,
																"src": "67782:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																}
															},
															"id": 2718,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 413,
															"src": "67782:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 2712,
														"name": "getPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2473,
														"src": "67741:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$916_$",
															"typeString": "function (address,address,uint24) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 2719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67741:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "67719:74:0"
											},
											{
												"assignments": [
													2722
												],
												"declarations": [
													{
														"constant": false,
														"id": 2722,
														"mutability": "mutable",
														"name": "gasBefore",
														"nodeType": "VariableDeclaration",
														"scope": 2786,
														"src": "67804:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2721,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "67804:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2725,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2723,
														"name": "gasleft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967289,
														"src": "67824:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2724,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67824:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "67804:29:0"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 2765,
															"nodeType": "Block",
															"src": "68312:2:0",
															"statements": []
														},
														"errorName": "",
														"id": 2766,
														"nodeType": "TryCatchClause",
														"src": "68312:2:0"
													},
													{
														"block": {
															"id": 2783,
															"nodeType": "Block",
															"src": "68343:120:0",
															"statements": [
																{
																	"expression": {
																		"id": 2775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2770,
																			"name": "gasEstimate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2700,
																			"src": "68357:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2774,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2771,
																				"name": "gasBefore",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2722,
																				"src": "68371:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2772,
																					"name": "gasleft",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967289,
																					"src": "68383:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 2773,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "68383:9:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "68371:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "68357:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2776,
																	"nodeType": "ExpressionStatement",
																	"src": "68357:35:0"
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 2778,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2768,
																				"src": "68426:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"id": 2779,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2711,
																				"src": "68434:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																					"typeString": "contract IUniswapV3Pool"
																				}
																			},
																			{
																				"id": 2780,
																				"name": "gasEstimate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2700,
																				"src": "68440:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																					"typeString": "contract IUniswapV3Pool"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 2777,
																			"name": "handleRevert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2688,
																			"src": "68413:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_contract$_IUniswapV3Pool_$916_$_t_uint256_$returns$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																				"typeString": "function (bytes memory,contract IUniswapV3Pool,uint256) view returns (uint256,uint160,uint32,uint256)"
																			}
																		},
																		"id": 2781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "68413:39:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																			"typeString": "tuple(uint256,uint160,uint32,uint256)"
																		}
																	},
																	"functionReturnParameters": 2701,
																	"id": 2782,
																	"nodeType": "Return",
																	"src": "68406:46:0"
																}
															]
														},
														"errorName": "",
														"id": 2784,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2769,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2768,
																	"mutability": "mutable",
																	"name": "reason",
																	"nodeType": "VariableDeclaration",
																	"scope": 2784,
																	"src": "68322:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2767,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "68322:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "68321:21:0"
														},
														"src": "68315:148:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2730,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "67894:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_QuoterV2_$3136",
																		"typeString": "contract QuoterV2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_QuoterV2_$3136",
																		"typeString": "contract QuoterV2"
																	}
																],
																"id": 2729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "67886:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2728,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "67886:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2731,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "67886:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2732,
															"name": "zeroForOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2703,
															"src": "67967:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"expression": {
																		"id": 2733,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2690,
																		"src": "67995:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	},
																	"id": 2734,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "amountIn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 411,
																	"src": "67995:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2735,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt256",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2415,
																"src": "67995:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (int256)"
																}
															},
															"id": 2736,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "67995:26:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2740,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2737,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2690,
																		"src": "68039:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	},
																	"id": 2738,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sqrtPriceLimitX96",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 415,
																	"src": "68039:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2739,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "68067:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "68039:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"expression": {
																	"id": 2752,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2690,
																	"src": "68186:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
																		"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																	}
																},
																"id": 2753,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sqrtPriceLimitX96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 415,
																"src": "68186:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 2754,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "68039:171:0",
															"trueExpression": {
																"components": [
																	{
																		"condition": {
																			"id": 2741,
																			"name": "zeroForOne",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2703,
																			"src": "68092:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 2749,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2746,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2347,
																					"src": "68135:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$2347_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 2747,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "MAX_SQRT_RATIO",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1833,
																				"src": "68135:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2748,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "68161:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "68135:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 2750,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "68092:70:0",
																		"trueExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 2745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2742,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2347,
																					"src": "68105:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$2347_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 2743,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "MIN_SQRT_RATIO",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1829,
																				"src": "68105:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2744,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "68131:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "68105:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 2751,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "68091:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2757,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2690,
																		"src": "68245:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	},
																	"id": 2758,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenIn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 407,
																	"src": "68245:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2759,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2690,
																		"src": "68261:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	},
																	"id": 2760,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 413,
																	"src": "68261:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"expression": {
																		"id": 2761,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2690,
																		"src": "68273:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	},
																	"id": 2762,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenOut",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 409,
																	"src": "68273:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2755,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "68228:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2756,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "68228:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2763,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "68228:61:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2726,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2711,
															"src": "67859:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 2727,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 706,
														"src": "67859:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
															"typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
														}
													},
													"id": 2764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67859:444:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256)"
													}
												},
												"id": 2785,
												"nodeType": "TryStatement",
												"src": "67843:620:0"
											}
										]
									},
									"functionSelector": "c6a5026a",
									"id": 2787,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInputSingle",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2692,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "67462:8:0"
									},
									"parameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "67396:41:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
													"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
												},
												"typeName": {
													"id": 2689,
													"name": "QuoteExactInputSingleParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 416,
													"src": "67396:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_storage_ptr",
														"typeString": "struct IQuoterV2.QuoteExactInputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67395:43:0"
									},
									"returnParameters": {
										"id": 2701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2694,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "67501:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2693,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "67501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2696,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "67532:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2695,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "67532:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2698,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "67571:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2697,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "67571:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2700,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 2787,
												"src": "67615:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2699,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "67615:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67487:157:0"
									},
									"scope": 3136,
									"src": "67365:1104:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										405
									],
									"body": {
										"id": 2901,
										"nodeType": "Block",
										"src": "68773:1320:0",
										"statements": [
											{
												"expression": {
													"id": 2813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2805,
														"name": "sqrtPriceX96AfterList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2798,
														"src": "68783:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2809,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "68821:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "numPools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 272,
																	"src": "68821:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (uint256)"
																	}
																},
																"id": 2811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "68821:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "68807:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint160_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint160[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2806,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "68811:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"id": 2807,
																"nodeType": "ArrayTypeName",
																"src": "68811:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
																	"typeString": "uint160[]"
																}
															}
														},
														"id": 2812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68807:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[] memory"
														}
													},
													"src": "68783:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
														"typeString": "uint160[] memory"
													}
												},
												"id": 2814,
												"nodeType": "ExpressionStatement",
												"src": "68783:54:0"
											},
											{
												"expression": {
													"id": 2823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2815,
														"name": "initializedTicksCrossedList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2801,
														"src": "68847:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2819,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "68890:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2820,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "numPools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 272,
																	"src": "68890:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (uint256)"
																	}
																},
																"id": 2821,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "68890:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2818,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "68877:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint32[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 2816,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "68881:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"id": 2817,
																"nodeType": "ArrayTypeName",
																"src": "68881:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
																	"typeString": "uint32[]"
																}
															}
														},
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68877:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[] memory"
														}
													},
													"src": "68847:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
														"typeString": "uint32[] memory"
													}
												},
												"id": 2824,
												"nodeType": "ExpressionStatement",
												"src": "68847:59:0"
											},
											{
												"assignments": [
													2826
												],
												"declarations": [
													{
														"constant": false,
														"id": 2826,
														"mutability": "mutable",
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 2901,
														"src": "68917:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2825,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "68917:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2828,
												"initialValue": {
													"hexValue": "30",
													"id": 2827,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "68929:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "68917:13:0"
											},
											{
												"body": {
													"id": 2899,
													"nodeType": "Block",
													"src": "68953:1134:0",
													"statements": [
														{
															"assignments": [
																2831,
																2833,
																2835
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2831,
																	"mutability": "mutable",
																	"name": "tokenIn",
																	"nodeType": "VariableDeclaration",
																	"scope": 2899,
																	"src": "68968:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2830,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "68968:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2833,
																	"mutability": "mutable",
																	"name": "tokenOut",
																	"nodeType": "VariableDeclaration",
																	"scope": 2899,
																	"src": "68985:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2832,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "68985:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2835,
																	"mutability": "mutable",
																	"name": "fee",
																	"nodeType": "VariableDeclaration",
																	"scope": 2899,
																	"src": "69003:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	"typeName": {
																		"id": 2834,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "69003:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2839,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2836,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "69017:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2837,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "decodeFirstPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 306,
																	"src": "69017:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (address,address,uint24)"
																	}
																},
																"id": 2838,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "69017:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
																	"typeString": "tuple(address,address,uint24)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "68967:72:0"
														},
														{
															"assignments": [
																2841,
																2843,
																2845,
																2847
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2841,
																	"mutability": "mutable",
																	"name": "_amountOut",
																	"nodeType": "VariableDeclaration",
																	"scope": 2899,
																	"src": "69134:18:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2840,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "69134:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2843,
																	"mutability": "mutable",
																	"name": "_sqrtPriceX96After",
																	"nodeType": "VariableDeclaration",
																	"scope": 2899,
																	"src": "69154:26:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"typeName": {
																		"id": 2842,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "69154:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2845,
																	"mutability": "mutable",
																	"name": "_initializedTicksCrossed",
																	"nodeType": "VariableDeclaration",
																	"scope": 2899,
																	"src": "69182:31:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 2844,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "69182:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 2847,
																	"mutability": "mutable",
																	"name": "_gasEstimate",
																	"nodeType": "VariableDeclaration",
																	"scope": 2899,
																	"src": "69215:20:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2846,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "69215:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2857,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 2850,
																				"name": "tokenIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2831,
																				"src": "69361:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2851,
																				"name": "tokenOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2833,
																				"src": "69404:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 2852,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2835,
																				"src": "69443:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				}
																			},
																			{
																				"id": 2853,
																				"name": "amountIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2791,
																				"src": "69482:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 2854,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "69535:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2849,
																			"name": "QuoteExactInputSingleParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 416,
																			"src": "69298:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_QuoteExactInputSingleParams_$416_storage_ptr_$",
																				"typeString": "type(struct IQuoterV2.QuoteExactInputSingleParams storage pointer)"
																			}
																		},
																		"id": 2855,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"tokenIn",
																			"tokenOut",
																			"fee",
																			"amountIn",
																			"sqrtPriceLimitX96"
																		],
																		"nodeType": "FunctionCall",
																		"src": "69298:261:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_QuoteExactInputSingleParams_$416_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactInputSingleParams memory"
																		}
																	],
																	"id": 2848,
																	"name": "quoteExactInputSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2787,
																	"src": "69255:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_QuoteExactInputSingleParams_$416_memory_ptr_$returns$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																		"typeString": "function (struct IQuoterV2.QuoteExactInputSingleParams memory) returns (uint256,uint160,uint32,uint256)"
																	}
																},
																"id": 2856,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "69255:322:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint160,uint32,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "69133:444:0"
														},
														{
															"expression": {
																"id": 2862,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2858,
																		"name": "sqrtPriceX96AfterList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2798,
																		"src": "69592:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																			"typeString": "uint160[] memory"
																		}
																	},
																	"id": 2860,
																	"indexExpression": {
																		"id": 2859,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2826,
																		"src": "69614:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "69592:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2861,
																	"name": "_sqrtPriceX96After",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2843,
																	"src": "69619:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "69592:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 2863,
															"nodeType": "ExpressionStatement",
															"src": "69592:45:0"
														},
														{
															"expression": {
																"id": 2868,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 2864,
																		"name": "initializedTicksCrossedList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2801,
																		"src": "69651:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																			"typeString": "uint32[] memory"
																		}
																	},
																	"id": 2866,
																	"indexExpression": {
																		"id": 2865,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2826,
																		"src": "69679:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "69651:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2867,
																	"name": "_initializedTicksCrossed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2845,
																	"src": "69684:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "69651:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 2869,
															"nodeType": "ExpressionStatement",
															"src": "69651:57:0"
														},
														{
															"expression": {
																"id": 2872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2870,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2791,
																	"src": "69722:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2871,
																	"name": "_amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2841,
																	"src": "69733:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "69722:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2873,
															"nodeType": "ExpressionStatement",
															"src": "69722:21:0"
														},
														{
															"expression": {
																"id": 2876,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2874,
																	"name": "gasEstimate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2803,
																	"src": "69757:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2875,
																	"name": "_gasEstimate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2847,
																	"src": "69772:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "69757:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2877,
															"nodeType": "ExpressionStatement",
															"src": "69757:27:0"
														},
														{
															"expression": {
																"id": 2879,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "69798:3:0",
																"subExpression": {
																	"id": 2878,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2826,
																	"src": "69798:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2880,
															"nodeType": "ExpressionStatement",
															"src": "69798:3:0"
														},
														{
															"condition": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 2881,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2789,
																		"src": "69875:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 2882,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "hasMultiplePools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 254,
																	"src": "69875:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (bool)"
																	}
																},
																"id": 2883,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "69875:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2897,
																"nodeType": "Block",
																"src": "69962:115:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 2891,
																					"name": "amountIn",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2791,
																					"src": "69988:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2892,
																					"name": "sqrtPriceX96AfterList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2798,
																					"src": "69998:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																						"typeString": "uint160[] memory"
																					}
																				},
																				{
																					"id": 2893,
																					"name": "initializedTicksCrossedList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2801,
																					"src": "70021:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																						"typeString": "uint32[] memory"
																					}
																				},
																				{
																					"id": 2894,
																					"name": "gasEstimate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2803,
																					"src": "70050:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 2895,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "69987:75:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint160_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint160[] memory,uint32[] memory,uint256)"
																			}
																		},
																		"functionReturnParameters": 2804,
																		"id": 2896,
																		"nodeType": "Return",
																		"src": "69980:82:0"
																	}
																]
															},
															"id": 2898,
															"nodeType": "IfStatement",
															"src": "69871:206:0",
															"trueBody": {
																"id": 2890,
																"nodeType": "Block",
																"src": "69900:56:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2888,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2884,
																				"name": "path",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2789,
																				"src": "69918:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 2885,
																						"name": "path",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2789,
																						"src": "69925:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 2886,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "skipToken",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 339,
																					"src": "69925:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
																						"typeString": "function (bytes memory) pure returns (bytes memory)"
																					}
																				},
																				"id": 2887,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "69925:16:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"src": "69918:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 2889,
																		"nodeType": "ExpressionStatement",
																		"src": "69918:23:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"hexValue": "74727565",
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "68947:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 2900,
												"nodeType": "WhileStatement",
												"src": "68940:1147:0"
											}
										]
									},
									"functionSelector": "cdca1753",
									"id": 2902,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInput",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2793,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "68560:8:0"
									},
									"parameters": {
										"id": 2792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2789,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 2902,
												"src": "68500:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2788,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "68500:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2791,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2902,
												"src": "68519:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2790,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68519:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68499:37:0"
									},
									"returnParameters": {
										"id": 2804,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2795,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 2902,
												"src": "68599:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68599:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2798,
												"mutability": "mutable",
												"name": "sqrtPriceX96AfterList",
												"nodeType": "VariableDeclaration",
												"scope": 2902,
												"src": "68630:38:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 2796,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "68630:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 2797,
													"nodeType": "ArrayTypeName",
													"src": "68630:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2801,
												"mutability": "mutable",
												"name": "initializedTicksCrossedList",
												"nodeType": "VariableDeclaration",
												"scope": 2902,
												"src": "68682:43:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 2799,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "68682:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 2800,
													"nodeType": "ArrayTypeName",
													"src": "68682:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 2902,
												"src": "68739:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2802,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68739:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68585:183:0"
									},
									"scope": 3136,
									"src": "68475:1618:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										473
									],
									"body": {
										"id": 3019,
										"nodeType": "Block",
										"src": "70384:1090:0",
										"statements": [
											{
												"assignments": [
													2917
												],
												"declarations": [
													{
														"constant": false,
														"id": 2917,
														"mutability": "mutable",
														"name": "zeroForOne",
														"nodeType": "VariableDeclaration",
														"scope": 3019,
														"src": "70394:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2916,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "70394:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2923,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2918,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2904,
															"src": "70412:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
															}
														},
														"id": 2919,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenIn",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 450,
														"src": "70412:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2920,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2904,
															"src": "70429:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
															}
														},
														"id": 2921,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "tokenOut",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 452,
														"src": "70429:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "70412:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "70394:50:0"
											},
											{
												"assignments": [
													2925
												],
												"declarations": [
													{
														"constant": false,
														"id": 2925,
														"mutability": "mutable",
														"name": "pool",
														"nodeType": "VariableDeclaration",
														"scope": 3019,
														"src": "70454:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
															"typeString": "contract IUniswapV3Pool"
														},
														"typeName": {
															"id": 2924,
															"name": "IUniswapV3Pool",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 916,
															"src": "70454:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2934,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2927,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "70484:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																}
															},
															"id": 2928,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenIn",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 450,
															"src": "70484:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2929,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "70500:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																}
															},
															"id": 2930,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "tokenOut",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 452,
															"src": "70500:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2931,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "70517:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																}
															},
															"id": 2932,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "fee",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 456,
															"src": "70517:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 2926,
														"name": "getPool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2473,
														"src": "70476:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$916_$",
															"typeString": "function (address,address,uint24) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 2933,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70476:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "70454:74:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 2938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2935,
															"name": "params",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2904,
															"src": "70652:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
															}
														},
														"id": 2936,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sqrtPriceLimitX96",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 458,
														"src": "70652:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2937,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "70680:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "70652:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2944,
												"nodeType": "IfStatement",
												"src": "70648:66:0",
												"trueBody": {
													"expression": {
														"id": 2942,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 2939,
															"name": "amountOutCached",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2436,
															"src": "70683:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"expression": {
																"id": 2940,
																"name": "params",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2904,
																"src": "70701:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																	"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																}
															},
															"id": 2941,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 454,
															"src": "70701:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "70683:31:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2943,
													"nodeType": "ExpressionStatement",
													"src": "70683:31:0"
												}
											},
											{
												"assignments": [
													2946
												],
												"declarations": [
													{
														"constant": false,
														"id": 2946,
														"mutability": "mutable",
														"name": "gasBefore",
														"nodeType": "VariableDeclaration",
														"scope": 3019,
														"src": "70724:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2945,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "70724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2949,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2947,
														"name": "gasleft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967289,
														"src": "70744:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 2948,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70744:9:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "70724:29:0"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 2990,
															"nodeType": "Block",
															"src": "71231:2:0",
															"statements": []
														},
														"errorName": "",
														"id": 2991,
														"nodeType": "TryCatchClause",
														"src": "71231:2:0"
													},
													{
														"block": {
															"id": 3016,
															"nodeType": "Block",
															"src": "71262:206:0",
															"statements": [
																{
																	"expression": {
																		"id": 3000,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2995,
																			"name": "gasEstimate",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2914,
																			"src": "71276:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2999,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2996,
																				"name": "gasBefore",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2946,
																				"src": "71290:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 2997,
																					"name": "gasleft",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967289,
																					"src": "71302:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
																						"typeString": "function () view returns (uint256)"
																					}
																				},
																				"id": 2998,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "71302:9:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "71290:21:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "71276:35:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3001,
																	"nodeType": "ExpressionStatement",
																	"src": "71276:35:0"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		"id": 3005,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 3002,
																				"name": "params",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2904,
																				"src": "71329:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																					"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																				}
																			},
																			"id": 3003,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "sqrtPriceLimitX96",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 458,
																			"src": "71329:24:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 3004,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "71357:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "71329:29:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 3009,
																	"nodeType": "IfStatement",
																	"src": "71325:57:0",
																	"trueBody": {
																		"expression": {
																			"id": 3007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "71360:22:0",
																			"subExpression": {
																				"id": 3006,
																				"name": "amountOutCached",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2436,
																				"src": "71367:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3008,
																		"nodeType": "ExpressionStatement",
																		"src": "71360:22:0"
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 3011,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2993,
																				"src": "71431:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"id": 3012,
																				"name": "pool",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2925,
																				"src": "71439:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																					"typeString": "contract IUniswapV3Pool"
																				}
																			},
																			{
																				"id": 3013,
																				"name": "gasEstimate",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2914,
																				"src": "71445:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																					"typeString": "contract IUniswapV3Pool"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 3010,
																			"name": "handleRevert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2688,
																			"src": "71418:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_bytes_memory_ptr_$_t_contract$_IUniswapV3Pool_$916_$_t_uint256_$returns$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																				"typeString": "function (bytes memory,contract IUniswapV3Pool,uint256) view returns (uint256,uint160,uint32,uint256)"
																			}
																		},
																		"id": 3014,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "71418:39:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																			"typeString": "tuple(uint256,uint160,uint32,uint256)"
																		}
																	},
																	"functionReturnParameters": 2915,
																	"id": 3015,
																	"nodeType": "Return",
																	"src": "71411:46:0"
																}
															]
														},
														"errorName": "",
														"id": 3017,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 2994,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 2993,
																	"mutability": "mutable",
																	"name": "reason",
																	"nodeType": "VariableDeclaration",
																	"scope": 3017,
																	"src": "71241:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 2992,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "71241:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "71240:21:0"
														},
														"src": "71234:234:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2954,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "70814:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_QuoterV2_$3136",
																		"typeString": "contract QuoterV2"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_QuoterV2_$3136",
																		"typeString": "contract QuoterV2"
																	}
																],
																"id": 2953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "70806:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2952,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "70806:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "70806:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2956,
															"name": "zeroForOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2917,
															"src": "70887:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 2961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "-",
															"prefix": true,
															"src": "70915:25:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"expression": {
																			"id": 2957,
																			"name": "params",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2904,
																			"src": "70916:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																				"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																			}
																		},
																		"id": 2958,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 454,
																		"src": "70916:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2959,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toInt256",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2415,
																	"src": "70916:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (int256)"
																	}
																},
																"id": 2960,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "70916:24:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 2965,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2962,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2904,
																		"src": "70958:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																		}
																	},
																	"id": 2963,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sqrtPriceLimitX96",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 458,
																	"src": "70958:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2964,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "70986:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "70958:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"expression": {
																	"id": 2977,
																	"name": "params",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2904,
																	"src": "71105:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																		"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																	}
																},
																"id": 2978,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sqrtPriceLimitX96",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 458,
																"src": "71105:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 2979,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "70958:171:0",
															"trueExpression": {
																"components": [
																	{
																		"condition": {
																			"id": 2966,
																			"name": "zeroForOne",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2917,
																			"src": "71011:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 2974,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2971,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2347,
																					"src": "71054:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$2347_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 2972,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "MAX_SQRT_RATIO",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1833,
																				"src": "71054:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2973,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "71080:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "71054:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 2975,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "71011:70:0",
																		"trueExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 2970,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2967,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2347,
																					"src": "71024:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$2347_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 2968,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "MIN_SQRT_RATIO",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1829,
																				"src": "71024:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 2969,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "71050:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "71024:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 2976,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "71010:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2982,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2904,
																		"src": "71164:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																		}
																	},
																	"id": 2983,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenOut",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 452,
																	"src": "71164:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"expression": {
																		"id": 2984,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2904,
																		"src": "71181:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																		}
																	},
																	"id": 2985,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "fee",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 456,
																	"src": "71181:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"expression": {
																		"id": 2986,
																		"name": "params",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2904,
																		"src": "71193:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																		}
																	},
																	"id": 2987,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "tokenIn",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 450,
																	"src": "71193:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 2980,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "71147:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 2981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "71147:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 2988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "71147:61:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2950,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2925,
															"src": "70779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$916",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 2951,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 706,
														"src": "70779:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
															"typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
														}
													},
													"id": 2989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70779:443:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256)"
													}
												},
												"id": 3018,
												"nodeType": "TryStatement",
												"src": "70763:705:0"
											}
										]
									},
									"functionSelector": "bd21704a",
									"id": 3020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutputSingle",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2906,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "70198:8:0"
									},
									"parameters": {
										"id": 2905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2904,
												"mutability": "mutable",
												"name": "params",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "70131:42:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
													"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams"
												},
												"typeName": {
													"id": 2903,
													"name": "QuoteExactOutputSingleParams",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 459,
													"src": "70131:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_storage_ptr",
														"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70130:44:0"
									},
									"returnParameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "70237:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2907,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70237:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2910,
												"mutability": "mutable",
												"name": "sqrtPriceX96After",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "70267:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2909,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "70267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2912,
												"mutability": "mutable",
												"name": "initializedTicksCrossed",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "70306:30:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2911,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "70306:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2914,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 3020,
												"src": "70350:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70350:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70223:156:0"
									},
									"scope": 3136,
									"src": "70099:1375:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										448
									],
									"body": {
										"id": 3134,
										"nodeType": "Block",
										"src": "71779:1321:0",
										"statements": [
											{
												"expression": {
													"id": 3046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3038,
														"name": "sqrtPriceX96AfterList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3031,
														"src": "71789:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3042,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3022,
																		"src": "71827:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3043,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "numPools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 272,
																	"src": "71827:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (uint256)"
																	}
																},
																"id": 3044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "71827:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3041,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "71813:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint160_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint160[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 3039,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "71817:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"id": 3040,
																"nodeType": "ArrayTypeName",
																"src": "71817:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
																	"typeString": "uint160[]"
																}
															}
														},
														"id": 3045,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "71813:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
															"typeString": "uint160[] memory"
														}
													},
													"src": "71789:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
														"typeString": "uint160[] memory"
													}
												},
												"id": 3047,
												"nodeType": "ExpressionStatement",
												"src": "71789:54:0"
											},
											{
												"expression": {
													"id": 3056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3048,
														"name": "initializedTicksCrossedList",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3034,
														"src": "71853:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[] memory"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3052,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3022,
																		"src": "71896:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "numPools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 272,
																	"src": "71896:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (uint256)"
																	}
																},
																"id": 3054,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "71896:15:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 3051,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "NewExpression",
															"src": "71883:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint32_$dyn_memory_ptr_$",
																"typeString": "function (uint256) pure returns (uint32[] memory)"
															},
															"typeName": {
																"baseType": {
																	"id": 3049,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "71887:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"id": 3050,
																"nodeType": "ArrayTypeName",
																"src": "71887:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
																	"typeString": "uint32[]"
																}
															}
														},
														"id": 3055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "71883:29:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
															"typeString": "uint32[] memory"
														}
													},
													"src": "71853:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
														"typeString": "uint32[] memory"
													}
												},
												"id": 3057,
												"nodeType": "ExpressionStatement",
												"src": "71853:59:0"
											},
											{
												"assignments": [
													3059
												],
												"declarations": [
													{
														"constant": false,
														"id": 3059,
														"mutability": "mutable",
														"name": "i",
														"nodeType": "VariableDeclaration",
														"scope": 3134,
														"src": "71923:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3058,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "71923:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3061,
												"initialValue": {
													"hexValue": "30",
													"id": 3060,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "71935:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "71923:13:0"
											},
											{
												"body": {
													"id": 3132,
													"nodeType": "Block",
													"src": "71959:1135:0",
													"statements": [
														{
															"assignments": [
																3064,
																3066,
																3068
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3064,
																	"mutability": "mutable",
																	"name": "tokenOut",
																	"nodeType": "VariableDeclaration",
																	"scope": 3132,
																	"src": "71974:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 3063,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "71974:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 3066,
																	"mutability": "mutable",
																	"name": "tokenIn",
																	"nodeType": "VariableDeclaration",
																	"scope": 3132,
																	"src": "71992:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 3065,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "71992:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 3068,
																	"mutability": "mutable",
																	"name": "fee",
																	"nodeType": "VariableDeclaration",
																	"scope": 3132,
																	"src": "72009:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	"typeName": {
																		"id": 3067,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "72009:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3072,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3069,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3022,
																		"src": "72023:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3070,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "decodeFirstPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 306,
																	"src": "72023:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (address,address,uint24)"
																	}
																},
																"id": 3071,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72023:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
																	"typeString": "tuple(address,address,uint24)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "71973:72:0"
														},
														{
															"assignments": [
																3074,
																3076,
																3078,
																3080
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3074,
																	"mutability": "mutable",
																	"name": "_amountIn",
																	"nodeType": "VariableDeclaration",
																	"scope": 3132,
																	"src": "72140:17:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3073,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "72140:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 3076,
																	"mutability": "mutable",
																	"name": "_sqrtPriceX96After",
																	"nodeType": "VariableDeclaration",
																	"scope": 3132,
																	"src": "72159:26:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	},
																	"typeName": {
																		"id": 3075,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "72159:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 3078,
																	"mutability": "mutable",
																	"name": "_initializedTicksCrossed",
																	"nodeType": "VariableDeclaration",
																	"scope": 3132,
																	"src": "72187:31:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	},
																	"typeName": {
																		"id": 3077,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "72187:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint32",
																			"typeString": "uint32"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 3080,
																	"mutability": "mutable",
																	"name": "_gasEstimate",
																	"nodeType": "VariableDeclaration",
																	"scope": 3132,
																	"src": "72220:20:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3079,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "72220:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3090,
															"initialValue": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3083,
																				"name": "tokenIn",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3066,
																				"src": "72368:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 3084,
																				"name": "tokenOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3064,
																				"src": "72411:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 3085,
																				"name": "amountOut",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3024,
																				"src": "72453:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 3086,
																				"name": "fee",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3068,
																				"src": "72493:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				}
																			},
																			{
																				"hexValue": "30",
																				"id": 3087,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "72541:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint24",
																					"typeString": "uint24"
																				},
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3082,
																			"name": "QuoteExactOutputSingleParams",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 459,
																			"src": "72304:28:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_struct$_QuoteExactOutputSingleParams_$459_storage_ptr_$",
																				"typeString": "type(struct IQuoterV2.QuoteExactOutputSingleParams storage pointer)"
																			}
																		},
																		"id": 3088,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "structConstructorCall",
																		"lValueRequested": false,
																		"names": [
																			"tokenIn",
																			"tokenOut",
																			"amount",
																			"fee",
																			"sqrtPriceLimitX96"
																		],
																		"nodeType": "FunctionCall",
																		"src": "72304:261:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr",
																			"typeString": "struct IQuoterV2.QuoteExactOutputSingleParams memory"
																		}
																	],
																	"id": 3081,
																	"name": "quoteExactOutputSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3020,
																	"src": "72260:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_QuoteExactOutputSingleParams_$459_memory_ptr_$returns$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																		"typeString": "function (struct IQuoterV2.QuoteExactOutputSingleParams memory) returns (uint256,uint160,uint32,uint256)"
																	}
																},
																"id": 3089,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72260:323:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_uint256_$_t_uint160_$_t_uint32_$_t_uint256_$",
																	"typeString": "tuple(uint256,uint160,uint32,uint256)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "72139:444:0"
														},
														{
															"expression": {
																"id": 3095,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3091,
																		"name": "sqrtPriceX96AfterList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3031,
																		"src": "72598:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																			"typeString": "uint160[] memory"
																		}
																	},
																	"id": 3093,
																	"indexExpression": {
																		"id": 3092,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3059,
																		"src": "72620:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "72598:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3094,
																	"name": "_sqrtPriceX96After",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3076,
																	"src": "72625:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "72598:45:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 3096,
															"nodeType": "ExpressionStatement",
															"src": "72598:45:0"
														},
														{
															"expression": {
																"id": 3101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3097,
																		"name": "initializedTicksCrossedList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3034,
																		"src": "72657:27:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																			"typeString": "uint32[] memory"
																		}
																	},
																	"id": 3099,
																	"indexExpression": {
																		"id": 3098,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3059,
																		"src": "72685:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "72657:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3100,
																	"name": "_initializedTicksCrossed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3078,
																	"src": "72690:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"src": "72657:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"id": 3102,
															"nodeType": "ExpressionStatement",
															"src": "72657:57:0"
														},
														{
															"expression": {
																"id": 3105,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3103,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3024,
																	"src": "72728:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 3104,
																	"name": "_amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3074,
																	"src": "72740:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "72728:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3106,
															"nodeType": "ExpressionStatement",
															"src": "72728:21:0"
														},
														{
															"expression": {
																"id": 3109,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3107,
																	"name": "gasEstimate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3036,
																	"src": "72763:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 3108,
																	"name": "_gasEstimate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3080,
																	"src": "72778:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "72763:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3110,
															"nodeType": "ExpressionStatement",
															"src": "72763:27:0"
														},
														{
															"expression": {
																"id": 3112,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": false,
																"src": "72804:3:0",
																"subExpression": {
																	"id": 3111,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3059,
																	"src": "72804:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3113,
															"nodeType": "ExpressionStatement",
															"src": "72804:3:0"
														},
														{
															"condition": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 3114,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3022,
																		"src": "72881:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 3115,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "hasMultiplePools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 254,
																	"src": "72881:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (bool)"
																	}
																},
																"id": 3116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72881:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 3130,
																"nodeType": "Block",
																"src": "72968:116:0",
																"statements": [
																	{
																		"expression": {
																			"components": [
																				{
																					"id": 3124,
																					"name": "amountOut",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3024,
																					"src": "72994:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3125,
																					"name": "sqrtPriceX96AfterList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3031,
																					"src": "73005:21:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
																						"typeString": "uint160[] memory"
																					}
																				},
																				{
																					"id": 3126,
																					"name": "initializedTicksCrossedList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3034,
																					"src": "73028:27:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
																						"typeString": "uint32[] memory"
																					}
																				},
																				{
																					"id": 3127,
																					"name": "gasEstimate",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3036,
																					"src": "73057:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3128,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "72993:76:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$_t_uint256_$_t_array$_t_uint160_$dyn_memory_ptr_$_t_array$_t_uint32_$dyn_memory_ptr_$_t_uint256_$",
																				"typeString": "tuple(uint256,uint160[] memory,uint32[] memory,uint256)"
																			}
																		},
																		"functionReturnParameters": 3037,
																		"id": 3129,
																		"nodeType": "Return",
																		"src": "72986:83:0"
																	}
																]
															},
															"id": 3131,
															"nodeType": "IfStatement",
															"src": "72877:207:0",
															"trueBody": {
																"id": 3123,
																"nodeType": "Block",
																"src": "72906:56:0",
																"statements": [
																	{
																		"expression": {
																			"id": 3121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3117,
																				"name": "path",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3022,
																				"src": "72924:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 3118,
																						"name": "path",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3022,
																						"src": "72931:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 3119,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "skipToken",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 339,
																					"src": "72931:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
																						"typeString": "function (bytes memory) pure returns (bytes memory)"
																					}
																				},
																				"id": 3120,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "72931:16:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"src": "72924:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 3122,
																		"nodeType": "ExpressionStatement",
																		"src": "72924:23:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"hexValue": "74727565",
													"id": 3062,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "71953:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 3133,
												"nodeType": "WhileStatement",
												"src": "71946:1148:0"
											}
										]
									},
									"functionSelector": "2f80bb1d",
									"id": 3135,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutput",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 3026,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "71567:8:0"
									},
									"parameters": {
										"id": 3025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3022,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 3135,
												"src": "71506:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 3021,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "71506:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3024,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 3135,
												"src": "71525:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71525:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71505:38:0"
									},
									"returnParameters": {
										"id": 3037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3028,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 3135,
												"src": "71606:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3027,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3031,
												"mutability": "mutable",
												"name": "sqrtPriceX96AfterList",
												"nodeType": "VariableDeclaration",
												"scope": 3135,
												"src": "71636:38:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 3029,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "71636:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 3030,
													"nodeType": "ArrayTypeName",
													"src": "71636:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3034,
												"mutability": "mutable",
												"name": "initializedTicksCrossedList",
												"nodeType": "VariableDeclaration",
												"scope": 3135,
												"src": "71688:43:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_memory_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 3032,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "71688:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 3033,
													"nodeType": "ArrayTypeName",
													"src": "71688:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3036,
												"mutability": "mutable",
												"name": "gasEstimate",
												"nodeType": "VariableDeclaration",
												"scope": 3135,
												"src": "71745:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71745:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71592:182:0"
									},
									"scope": 3136,
									"src": "71480:1620:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 3137,
							"src": "63769:9333:0"
						}
					],
					"src": "92:73011:0"
				},
				"id": 0
			}
		}
	}
}