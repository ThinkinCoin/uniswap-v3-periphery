{
	"id": "36db5396b151a2c6b750953c74b4fbb8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/lens/Quoter_flattened.sol": {
				"content": "// SPDX-License-Identifier: GPL-2.0-or-later\n// File: contracts/libraries/PoolAddress.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\nlibrary PoolAddress {\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\n\n    /// @notice The identifying key of the pool\n    struct PoolKey {\n        address token0;\n        address token1;\n        uint24 fee;\n    }\n\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\n    /// @param tokenA The first token of a pool, unsorted\n    /// @param tokenB The second token of a pool, unsorted\n    /// @param fee The fee level of the pool\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\n    function getPoolKey(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal pure returns (PoolKey memory) {\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\n    }\n\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\n    /// @param factory The Uniswap V3 factory contract address\n    /// @param key The PoolKey\n    /// @return pool The contract address of the V3 pool\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\n        require(key.token0 < key.token1);\n        pool = address(\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        hex'ff',\n                        factory,\n                        keccak256(abi.encode(key.token0, key.token1, key.fee)),\n                        POOL_INIT_CODE_HASH\n                    )\n                )\n            )\n        );\n    }\n}\n\n// File: contracts/libraries/BytesLib.sol\n\n\n/*\n * @title Solidity Bytes Arrays Utils\n * @author Gonçalo Sá <goncalo.sa@consensys.net>\n *\n * @dev Bytes tightly packed arrays utility library for ethereum contracts written in Solidity.\n *      The library lets you concatenate, slice and type cast bytes arrays both in memory and storage.\n */\npragma solidity >=0.5.0 <0.8.0;\n\nlibrary BytesLib {\n    function slice(\n        bytes memory _bytes,\n        uint256 _start,\n        uint256 _length\n    ) internal pure returns (bytes memory) {\n        require(_length + 31 >= _length, 'slice_overflow');\n        require(_start + _length >= _start, 'slice_overflow');\n        require(_bytes.length >= _start + _length, 'slice_outOfBounds');\n\n        bytes memory tempBytes;\n\n        assembly {\n            switch iszero(_length)\n                case 0 {\n                    // Get a location of some free memory and store it in tempBytes as\n                    // Solidity does for memory variables.\n                    tempBytes := mload(0x40)\n\n                    // The first word of the slice result is potentially a partial\n                    // word read from the original array. To read it, we calculate\n                    // the length of that partial word and start copying that many\n                    // bytes into the array. The first word we copy will start with\n                    // data we don't care about, but the last `lengthmod` bytes will\n                    // land at the beginning of the contents of the new array. When\n                    // we're done copying, we overwrite the full first word with\n                    // the actual length of the slice.\n                    let lengthmod := and(_length, 31)\n\n                    // The multiplication in the next line is necessary\n                    // because when slicing multiples of 32 bytes (lengthmod == 0)\n                    // the following copy loop was copying the origin's length\n                    // and then ending prematurely not copying everything it should.\n                    let mc := add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod)))\n                    let end := add(mc, _length)\n\n                    for {\n                        // The multiplication in the next line has the same exact purpose\n                        // as the one above.\n                        let cc := add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start)\n                    } lt(mc, end) {\n                        mc := add(mc, 0x20)\n                        cc := add(cc, 0x20)\n                    } {\n                        mstore(mc, mload(cc))\n                    }\n\n                    mstore(tempBytes, _length)\n\n                    //update free-memory pointer\n                    //allocating the array padded to 32 bytes like the compiler does now\n                    mstore(0x40, and(add(mc, 31), not(31)))\n                }\n                //if we want a zero-length slice let's just return a zero-length array\n                default {\n                    tempBytes := mload(0x40)\n                    //zero out the 32 bytes slice we are about to return\n                    //we need to do it because Solidity does not garbage collect\n                    mstore(tempBytes, 0)\n\n                    mstore(0x40, add(tempBytes, 0x20))\n                }\n        }\n\n        return tempBytes;\n    }\n\n    function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {\n        require(_start + 20 >= _start, 'toAddress_overflow');\n        require(_bytes.length >= _start + 20, 'toAddress_outOfBounds');\n        address tempAddress;\n\n        assembly {\n            tempAddress := div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000)\n        }\n\n        return tempAddress;\n    }\n\n    function toUint24(bytes memory _bytes, uint256 _start) internal pure returns (uint24) {\n        require(_start + 3 >= _start, 'toUint24_overflow');\n        require(_bytes.length >= _start + 3, 'toUint24_outOfBounds');\n        uint24 tempUint;\n\n        assembly {\n            tempUint := mload(add(add(_bytes, 0x3), _start))\n        }\n\n        return tempUint;\n    }\n}\n\n// File: contracts/libraries/Path.sol\n\n\npragma solidity >=0.6.0;\n\n\n/// @title Functions for manipulating path data for multihop swaps\nlibrary Path {\n    using BytesLib for bytes;\n\n    /// @dev The length of the bytes encoded address\n    uint256 private constant ADDR_SIZE = 20;\n    /// @dev The length of the bytes encoded fee\n    uint256 private constant FEE_SIZE = 3;\n\n    /// @dev The offset of a single token address and pool fee\n    uint256 private constant NEXT_OFFSET = ADDR_SIZE + FEE_SIZE;\n    /// @dev The offset of an encoded pool key\n    uint256 private constant POP_OFFSET = NEXT_OFFSET + ADDR_SIZE;\n    /// @dev The minimum length of an encoding that contains 2 or more pools\n    uint256 private constant MULTIPLE_POOLS_MIN_LENGTH = POP_OFFSET + NEXT_OFFSET;\n\n    /// @notice Returns true iff the path contains two or more pools\n    /// @param path The encoded swap path\n    /// @return True if path contains two or more pools, otherwise false\n    function hasMultiplePools(bytes memory path) internal pure returns (bool) {\n        return path.length >= MULTIPLE_POOLS_MIN_LENGTH;\n    }\n\n    /// @notice Returns the number of pools in the path\n    /// @param path The encoded swap path\n    /// @return The number of pools in the path\n    function numPools(bytes memory path) internal pure returns (uint256) {\n        // Ignore the first token address. From then on every fee and token offset indicates a pool.\n        return ((path.length - ADDR_SIZE) / NEXT_OFFSET);\n    }\n\n    /// @notice Decodes the first pool in path\n    /// @param path The bytes encoded swap path\n    /// @return tokenA The first token of the given pool\n    /// @return tokenB The second token of the given pool\n    /// @return fee The fee level of the pool\n    function decodeFirstPool(bytes memory path)\n        internal\n        pure\n        returns (\n            address tokenA,\n            address tokenB,\n            uint24 fee\n        )\n    {\n        tokenA = path.toAddress(0);\n        fee = path.toUint24(ADDR_SIZE);\n        tokenB = path.toAddress(NEXT_OFFSET);\n    }\n\n    /// @notice Gets the segment corresponding to the first pool in the path\n    /// @param path The bytes encoded swap path\n    /// @return The segment containing all data necessary to target the first pool in the path\n    function getFirstPool(bytes memory path) internal pure returns (bytes memory) {\n        return path.slice(0, POP_OFFSET);\n    }\n\n    /// @notice Skips a token + fee element from the buffer and returns the remainder\n    /// @param path The swap path\n    /// @return The remaining token + fee elements in the path\n    function skipToken(bytes memory path) internal pure returns (bytes memory) {\n        return path.slice(NEXT_OFFSET, path.length - NEXT_OFFSET);\n    }\n}\n\n// File: contracts/interfaces/IPeripheryImmutableState.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n\n// File: contracts/base/PeripheryImmutableState.sol\n\n\npragma solidity =0.7.6;\n\n\n/// @title Immutable state\n/// @notice Immutable state used by periphery contracts\nabstract contract PeripheryImmutableState is IPeripheryImmutableState {\n    /// @inheritdoc IPeripheryImmutableState\n    address public immutable override factory;\n    /// @inheritdoc IPeripheryImmutableState\n    address public immutable override WETH9;\n\n    constructor(address _factory, address _WETH9) {\n        factory = _factory;\n        WETH9 = _WETH9;\n    }\n}\n\n// File: contracts/interfaces/IQuoter.sol\n\n\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Quoter Interface\n/// @notice Supports quoting the calculated amounts from exact input or exact output swaps\n/// @dev These functions are not marked view because they rely on calling non-view functions and reverting\n/// to compute the result. They are also not gas efficient and should not be called on-chain.\ninterface IQuoter {\n    /// @notice Returns the amount out received for a given exact input swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee\n    /// @param amountIn The amount of the first token to swap\n    /// @return amountOut The amount of the last token that would be received\n    function quoteExactInput(bytes memory path, uint256 amountIn) external returns (uint256 amountOut);\n\n    /// @notice Returns the amount out received for a given exact input but for a swap of a single pool\n    /// @param tokenIn The token being swapped in\n    /// @param tokenOut The token being swapped out\n    /// @param fee The fee of the token pool to consider for the pair\n    /// @param amountIn The desired input amount\n    /// @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountOut The amount of `tokenOut` that would be received\n    function quoteExactInputSingle(\n        address tokenIn,\n        address tokenOut,\n        uint24 fee,\n        uint256 amountIn,\n        uint160 sqrtPriceLimitX96\n    ) external returns (uint256 amountOut);\n\n    /// @notice Returns the amount in required for a given exact output swap without executing the swap\n    /// @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n    /// @param amountOut The amount of the last token to receive\n    /// @return amountIn The amount of first token required to be paid\n    function quoteExactOutput(bytes memory path, uint256 amountOut) external returns (uint256 amountIn);\n\n    /// @notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n    /// @param tokenIn The token being swapped in\n    /// @param tokenOut The token being swapped out\n    /// @param fee The fee of the token pool to consider for the pair\n    /// @param amountOut The desired output amount\n    /// @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n    /// @return amountIn The amount required as the input for the swap in order to receive `amountOut`\n    function quoteExactOutputSingle(\n        address tokenIn,\n        address tokenOut,\n        uint24 fee,\n        uint256 amountOut,\n        uint160 sqrtPriceLimitX96\n    ) external returns (uint256 amountIn);\n}\n\n// File: @thinkincoin-libs/uniswap-v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n\n// File: @thinkincoin-libs/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n\n// File: @thinkincoin-libs/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n\n// File: @thinkincoin-libs/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n\n// File: @thinkincoin-libs/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n\n// File: @thinkincoin-libs/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n\n// File: @thinkincoin-libs/uniswap-v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n\n// File: @thinkincoin-libs/uniswap-v3-core/contracts/interfaces/IUniswapV3Pool.sol\n\n\npragma solidity >=0.5.0;\n\n\n\n\n\n\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n\n// File: contracts/libraries/CallbackValidation.sol\n\n\npragma solidity =0.7.6;\n\n\n\n/// @notice Provides validation for callbacks from Uniswap V3 Pools\nlibrary CallbackValidation {\n    /// @notice Returns the address of a valid Uniswap V3 Pool\n    /// @param factory The contract address of the Uniswap V3 factory\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The V3 pool contract address\n    function verifyCallback(\n        address factory,\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal view returns (IUniswapV3Pool pool) {\n        return verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee));\n    }\n\n    /// @notice Returns the address of a valid Uniswap V3 Pool\n    /// @param factory The contract address of the Uniswap V3 factory\n    /// @param poolKey The identifying key of the V3 pool\n    /// @return pool The V3 pool contract address\n    function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)\n        internal\n        view\n        returns (IUniswapV3Pool pool)\n    {\n        pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey));\n        require(msg.sender == address(pool));\n    }\n}\n\n// File: @thinkincoin-libs/uniswap-v3-core/contracts/libraries/TickMath.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(MAX_TICK), 'T');\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n\n// File: @thinkincoin-libs/uniswap-v3-core/contracts/libraries/SafeCast.sol\n\n\npragma solidity >=0.5.0;\n\n/// @title Safe casting methods\n/// @notice Contains methods for safely casting between types\nlibrary SafeCast {\n    /// @notice Cast a uint256 to a uint160, revert on overflow\n    /// @param y The uint256 to be downcasted\n    /// @return z The downcasted integer, now type uint160\n    function toUint160(uint256 y) internal pure returns (uint160 z) {\n        require((z = uint160(y)) == y);\n    }\n\n    /// @notice Cast a int256 to a int128, revert on overflow or underflow\n    /// @param y The int256 to be downcasted\n    /// @return z The downcasted integer, now type int128\n    function toInt128(int256 y) internal pure returns (int128 z) {\n        require((z = int128(y)) == y);\n    }\n\n    /// @notice Cast a uint256 to a int256, revert on overflow\n    /// @param y The uint256 to be casted\n    /// @return z The casted integer, now type int256\n    function toInt256(uint256 y) internal pure returns (int256 z) {\n        require(y < 2**255);\n        z = int256(y);\n    }\n}\n\n// File: contracts/lens/Quoter.sol\n\n\npragma solidity =0.7.6;\n\n\n\n\n\n\n\n\n\n\n/// @title Provides quotes for swaps\n/// @notice Allows getting the expected amount out or amount in for a given swap without executing the swap\n/// @dev These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute\n/// the swap and check the amounts in the callback.\ncontract Quoter is IQuoter, IUniswapV3SwapCallback, PeripheryImmutableState {\n    using Path for bytes;\n    using SafeCast for uint256;\n\n    /// @dev Transient storage variable used to check a safety condition in exact output swaps.\n    uint256 private amountOutCached;\n\n    constructor(address _factory, address _WETH9) PeripheryImmutableState(_factory, _WETH9) {}\n\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) private view returns (IUniswapV3Pool) {\n        return IUniswapV3Pool(PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)));\n    }\n\n    /// @inheritdoc IUniswapV3SwapCallback\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes memory path\n    ) external view override {\n        require(amount0Delta > 0 || amount1Delta > 0); // swaps entirely within 0-liquidity regions are not supported\n        (address tokenIn, address tokenOut, uint24 fee) = path.decodeFirstPool();\n        CallbackValidation.verifyCallback(factory, tokenIn, tokenOut, fee);\n\n        (bool isExactInput, uint256 amountToPay, uint256 amountReceived) =\n            amount0Delta > 0\n                ? (tokenIn < tokenOut, uint256(amount0Delta), uint256(-amount1Delta))\n                : (tokenOut < tokenIn, uint256(amount1Delta), uint256(-amount0Delta));\n        if (isExactInput) {\n            assembly {\n                let ptr := mload(0x40)\n                mstore(ptr, amountReceived)\n                revert(ptr, 32)\n            }\n        } else {\n            // if the cache has been populated, ensure that the full output amount has been received\n            if (amountOutCached != 0) require(amountReceived == amountOutCached);\n            assembly {\n                let ptr := mload(0x40)\n                mstore(ptr, amountToPay)\n                revert(ptr, 32)\n            }\n        }\n    }\n\n    /// @dev Parses a revert reason that should contain the numeric quote\n    function parseRevertReason(bytes memory reason) private pure returns (uint256) {\n        if (reason.length != 32) {\n            if (reason.length < 68) revert('Unexpected error');\n            assembly {\n                reason := add(reason, 0x04)\n            }\n            revert(abi.decode(reason, (string)));\n        }\n        return abi.decode(reason, (uint256));\n    }\n\n    /// @inheritdoc IQuoter\n    function quoteExactInputSingle(\n        address tokenIn,\n        address tokenOut,\n        uint24 fee,\n        uint256 amountIn,\n        uint160 sqrtPriceLimitX96\n    ) public override returns (uint256 amountOut) {\n        bool zeroForOne = tokenIn < tokenOut;\n\n        try\n            getPool(tokenIn, tokenOut, fee).swap(\n                address(this), // address(0) might cause issues with some tokens\n                zeroForOne,\n                amountIn.toInt256(),\n                sqrtPriceLimitX96 == 0\n                    ? (zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1)\n                    : sqrtPriceLimitX96,\n                abi.encodePacked(tokenIn, fee, tokenOut)\n            )\n        {} catch (bytes memory reason) {\n            return parseRevertReason(reason);\n        }\n    }\n\n    /// @inheritdoc IQuoter\n    function quoteExactInput(bytes memory path, uint256 amountIn) external override returns (uint256 amountOut) {\n        while (true) {\n            bool hasMultiplePools = path.hasMultiplePools();\n\n            (address tokenIn, address tokenOut, uint24 fee) = path.decodeFirstPool();\n\n            // the outputs of prior swaps become the inputs to subsequent ones\n            amountIn = quoteExactInputSingle(tokenIn, tokenOut, fee, amountIn, 0);\n\n            // decide whether to continue or terminate\n            if (hasMultiplePools) {\n                path = path.skipToken();\n            } else {\n                return amountIn;\n            }\n        }\n    }\n\n    /// @inheritdoc IQuoter\n    function quoteExactOutputSingle(\n        address tokenIn,\n        address tokenOut,\n        uint24 fee,\n        uint256 amountOut,\n        uint160 sqrtPriceLimitX96\n    ) public override returns (uint256 amountIn) {\n        bool zeroForOne = tokenIn < tokenOut;\n\n        // if no price limit has been specified, cache the output amount for comparison in the swap callback\n        if (sqrtPriceLimitX96 == 0) amountOutCached = amountOut;\n        try\n            getPool(tokenIn, tokenOut, fee).swap(\n                address(this), // address(0) might cause issues with some tokens\n                zeroForOne,\n                -amountOut.toInt256(),\n                sqrtPriceLimitX96 == 0\n                    ? (zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1)\n                    : sqrtPriceLimitX96,\n                abi.encodePacked(tokenOut, fee, tokenIn)\n            )\n        {} catch (bytes memory reason) {\n            if (sqrtPriceLimitX96 == 0) delete amountOutCached; // clear cache\n            return parseRevertReason(reason);\n        }\n    }\n\n    /// @inheritdoc IQuoter\n    function quoteExactOutput(bytes memory path, uint256 amountOut) external override returns (uint256 amountIn) {\n        while (true) {\n            bool hasMultiplePools = path.hasMultiplePools();\n\n            (address tokenOut, address tokenIn, uint24 fee) = path.decodeFirstPool();\n\n            // the inputs of prior swaps become the outputs of subsequent ones\n            amountOut = quoteExactOutputSingle(tokenIn, tokenOut, fee, amountOut, 0);\n\n            // decide whether to continue or terminate\n            if (hasMultiplePools) {\n                path = path.skipToken();\n            } else {\n                return amountOut;\n            }\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/lens/Quoter_flattened.sol": {
				"BytesLib": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/Quoter_flattened.sol\":2243:6068  library BytesLib {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/Quoter_flattened.sol\":2243:6068  library BytesLib {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212207bd58c0b76cdef57d35a20d57dec2e20bbbc5b986bacdb31894ae1c1d0b84c4064736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bd58c0b76cdef57d35a20d57dec2e20bbbc5b986bacdb31894ae1c1d0b84c4064736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xD58C0B76CDEF57D35A20D57DEC2E20BBBC5B986BACDB31894AE1C1D0 0xB8 0x4C BLOCKHASH PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "2243:3825:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207bd58c0b76cdef57d35a20d57dec2e20bbbc5b986bacdb31894ae1c1d0b84c4064736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH28 0xD58C0B76CDEF57D35A20D57DEC2E20BBBC5B986BACDB31894AE1C1D0 0xB8 0x4C BLOCKHASH PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "2243:3825:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"slice(bytes memory,uint256,uint256)": "infinite",
								"toAddress(bytes memory,uint256)": "infinite",
								"toUint24(bytes memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2243,
									"end": 6068,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212207bd58c0b76cdef57d35a20d57dec2e20bbbc5b986bacdb31894ae1c1d0b84c4064736f6c63430007060033",
									".code": [
										{
											"begin": 2243,
											"end": 6068,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2243,
											"end": 6068,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"BytesLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"CallbackValidation": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/Quoter_flattened.sol\":39244:40480  library CallbackValidation {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/Quoter_flattened.sol\":39244:40480  library CallbackValidation {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c8760a8d718c716e408425181cff781b4ad3e7d5db7885318444f92cb7a6cc8d64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c8760a8d718c716e408425181cff781b4ad3e7d5db7885318444f92cb7a6cc8d64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 PUSH23 0xA8D718C716E408425181CFF781B4AD3E7D5DB78853184 DIFFICULTY 0xF9 0x2C 0xB7 0xA6 0xCC DUP14 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "39244:1236:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c8760a8d718c716e408425181cff781b4ad3e7d5db7885318444f92cb7a6cc8d64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 PUSH23 0xA8D718C716E408425181CFF781B4AD3E7D5DB78853184 DIFFICULTY 0xF9 0x2C 0xB7 0xA6 0xCC DUP14 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "39244:1236:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"verifyCallback(address,address,address,uint24)": "infinite",
								"verifyCallback(address,struct PoolAddress.PoolKey memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 39244,
									"end": 40480,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 39244,
									"end": 40480,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c8760a8d718c716e408425181cff781b4ad3e7d5db7885318444f92cb7a6cc8d64736f6c63430007060033",
									".code": [
										{
											"begin": 39244,
											"end": 40480,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 39244,
											"end": 40480,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 39244,
											"end": 40480,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 39244,
											"end": 40480,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 39244,
											"end": 40480,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39244,
											"end": 40480,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39244,
											"end": 40480,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39244,
											"end": 40480,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39244,
											"end": 40480,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides validation for callbacks from Uniswap V3 Pools\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"CallbackValidation\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Provides validation for callbacks from Uniswap V3 Pools",
						"version": 1
					}
				},
				"IPeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"WETH9()": {
								"returns": {
									"_0": "Returns the address of WETH9"
								}
							},
							"factory()": {
								"returns": {
									"_0": "Returns the address of the Uniswap V3 factory"
								}
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Functions that return immutable state of the router",
						"version": 1
					}
				},
				"IQuoter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "quoteExactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								}
							],
							"name": "quoteExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "quoteExactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								}
							],
							"name": "quoteExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.",
						"kind": "dev",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"params": {
									"amountIn": "The amount of the first token to swap",
									"path": "The path of the swap, i.e. each token pair and the pool fee"
								},
								"returns": {
									"amountOut": "The amount of the last token that would be received"
								}
							},
							"quoteExactInputSingle(address,address,uint24,uint256,uint160)": {
								"params": {
									"amountIn": "The desired input amount",
									"fee": "The fee of the token pool to consider for the pair",
									"sqrtPriceLimitX96": "The price limit of the pool that cannot be exceeded by the swap",
									"tokenIn": "The token being swapped in",
									"tokenOut": "The token being swapped out"
								},
								"returns": {
									"amountOut": "The amount of `tokenOut` that would be received"
								}
							},
							"quoteExactOutput(bytes,uint256)": {
								"params": {
									"amountOut": "The amount of the last token to receive",
									"path": "The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"
								},
								"returns": {
									"amountIn": "The amount of first token required to be paid"
								}
							},
							"quoteExactOutputSingle(address,address,uint24,uint256,uint160)": {
								"params": {
									"amountOut": "The desired output amount",
									"fee": "The fee of the token pool to consider for the pair",
									"sqrtPriceLimitX96": "The price limit of the pool that cannot be exceeded by the swap",
									"tokenIn": "The token being swapped in",
									"tokenOut": "The token being swapped out"
								},
								"returns": {
									"amountIn": "The amount required as the input for the swap in order to receive `amountOut`"
								}
							}
						},
						"title": "Quoter Interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"quoteExactInput(bytes,uint256)": "cdca1753",
							"quoteExactInputSingle(address,address,uint24,uint256,uint160)": "f7729d43",
							"quoteExactOutput(bytes,uint256)": "2f80bb1d",
							"quoteExactOutputSingle(address,address,uint24,uint256,uint160)": "30d07f21"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not marked view because they rely on calling non-view functions and reverting to compute the result. They are also not gas efficient and should not be called on-chain.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\"}},\"quoteExactInputSingle(address,address,uint24,uint256,uint160)\":{\"params\":{\"amountIn\":\"The desired input amount\",\"fee\":\"The fee of the token pool to consider for the pair\",\"sqrtPriceLimitX96\":\"The price limit of the pool that cannot be exceeded by the swap\",\"tokenIn\":\"The token being swapped in\",\"tokenOut\":\"The token being swapped out\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token to receive\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\"},\"returns\":{\"amountIn\":\"The amount of first token required to be paid\"}},\"quoteExactOutputSingle(address,address,uint24,uint256,uint160)\":{\"params\":{\"amountOut\":\"The desired output amount\",\"fee\":\"The fee of the token pool to consider for the pair\",\"sqrtPriceLimitX96\":\"The price limit of the pool that cannot be exceeded by the swap\",\"tokenIn\":\"The token being swapped in\",\"tokenOut\":\"The token being swapped out\"},\"returns\":{\"amountIn\":\"The amount required as the input for the swap in order to receive `amountOut`\"}}},\"title\":\"Quoter Interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle(address,address,uint24,uint256,uint160)\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in required for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle(address,address,uint24,uint256,uint160)\":{\"notice\":\"Returns the amount in required to receive the given exact output amount but for a swap of a single pool\"}},\"notice\":\"Supports quoting the calculated amounts from exact input or exact output swaps\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"IQuoter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"notice": "Returns the amount out received for a given exact input swap without executing the swap"
							},
							"quoteExactInputSingle(address,address,uint24,uint256,uint160)": {
								"notice": "Returns the amount out received for a given exact input but for a swap of a single pool"
							},
							"quoteExactOutput(bytes,uint256)": {
								"notice": "Returns the amount in required for a given exact output swap without executing the swap"
							},
							"quoteExactOutputSingle(address,address,uint24,uint256,uint160)": {
								"notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool"
							}
						},
						"notice": "Supports quoting the calculated amounts from exact input or exact output swaps",
						"version": 1
					}
				},
				"IUniswapV3Pool": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "The pool interface is broken up into many smaller pieces",
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "The interface for a Uniswap V3 Pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"liquidity()": "1a686502",
							"maxLiquidityPerTick()": "70cf754a",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"observations(uint256)": "252c09d7",
							"observe(uint32[])": "883bdbfd",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"setFeeProtocol(uint8,uint8)": "8206a4d1",
							"slot0()": "3850c7bd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2",
							"swap(address,bool,int256,uint160,bytes)": "128acb08",
							"tickBitmap(int16)": "5339c296",
							"tickSpacing()": "d0c93a7c",
							"ticks(int24)": "f30dba93",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification",
						"version": 1
					}
				},
				"IUniswapV3PoolActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collect",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "flash",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								}
							],
							"name": "increaseObservationCardinalityNext",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "zeroForOne",
									"type": "bool"
								},
								{
									"internalType": "int256",
									"name": "amountSpecified",
									"type": "int256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"burn(int24,int24,uint128)": {
								"details": "Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect",
								"params": {
									"amount": "How much liquidity to burn",
									"tickLower": "The lower tick of the position for which to burn liquidity",
									"tickUpper": "The upper tick of the position for which to burn liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 sent to the recipient",
									"amount1": "The amount of token1 sent to the recipient"
								}
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"details": "Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.",
								"params": {
									"amount0Requested": "How much token0 should be withdrawn from the fees owed",
									"amount1Requested": "How much token1 should be withdrawn from the fees owed",
									"recipient": "The address which should receive the fees collected",
									"tickLower": "The lower tick of the position for which to collect fees",
									"tickUpper": "The upper tick of the position for which to collect fees"
								},
								"returns": {
									"amount0": "The amount of fees collected in token0",
									"amount1": "The amount of fees collected in token1"
								}
							},
							"flash(address,uint256,uint256,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback",
								"params": {
									"amount0": "The amount of token0 to send",
									"amount1": "The amount of token1 to send",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address which will receive the token0 and token1 amounts"
								}
							},
							"increaseObservationCardinalityNext(uint16)": {
								"details": "This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.",
								"params": {
									"observationCardinalityNext": "The desired minimum number of observations for the pool to store"
								}
							},
							"initialize(uint160)": {
								"details": "Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value",
								"params": {
									"sqrtPriceX96": "the initial sqrt price of the pool as a Q64.96"
								}
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.",
								"params": {
									"amount": "The amount of liquidity to mint",
									"data": "Any data that should be passed through to the callback",
									"recipient": "The address for which the liquidity will be created",
									"tickLower": "The lower tick of the position in which to add liquidity",
									"tickUpper": "The upper tick of the position in which to add liquidity"
								},
								"returns": {
									"amount0": "The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback",
									"amount1": "The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
								}
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"details": "The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback",
								"params": {
									"amountSpecified": "The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)",
									"data": "Any data to be passed through to the callback",
									"recipient": "The address to receive the output of the swap",
									"sqrtPriceLimitX96": "The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap",
									"zeroForOne": "The direction of the swap, true for token0 to token1, false for token1 to token0"
								},
								"returns": {
									"amount0": "The delta of the balance of token0 of the pool, exact when negative, minimum when positive",
									"amount1": "The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
								}
							}
						},
						"title": "Permissionless pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"burn(int24,int24,uint128)": "a34123a7",
							"collect(address,int24,int24,uint128,uint128)": "4f1eb3d8",
							"flash(address,uint256,uint256,bytes)": "490e6cbc",
							"increaseObservationCardinalityNext(uint16)": "32148f67",
							"initialize(uint160)": "f637731d",
							"mint(address,int24,int24,uint128,bytes)": "3c8a7d8d",
							"swap(address,bool,int256,uint160,bytes)": "128acb08"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"burn(int24,int24,uint128)": {
								"notice": "Burn liquidity from the sender and account tokens owed for the liquidity to the position"
							},
							"collect(address,int24,int24,uint128,uint128)": {
								"notice": "Collects tokens owed to a position"
							},
							"flash(address,uint256,uint256,bytes)": {
								"notice": "Receive token0 and/or token1 and pay it back, plus a fee, in the callback"
							},
							"increaseObservationCardinalityNext(uint16)": {
								"notice": "Increase the maximum number of price and liquidity observations that this pool will store"
							},
							"initialize(uint160)": {
								"notice": "Sets the initial price for the pool"
							},
							"mint(address,int24,int24,uint128,bytes)": {
								"notice": "Adds liquidity for the given recipient/tickLower/tickUpper position"
							},
							"swap(address,bool,int256,uint160,bytes)": {
								"notice": "Swap token0 for token1, or token1 for token0"
							}
						},
						"notice": "Contains pool methods that can be called by anyone",
						"version": 1
					}
				},
				"IUniswapV3PoolDerivedState": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint32[]",
									"name": "secondsAgos",
									"type": "uint32[]"
								}
							],
							"name": "observe",
							"outputs": [
								{
									"internalType": "int56[]",
									"name": "tickCumulatives",
									"type": "int56[]"
								},
								{
									"internalType": "uint160[]",
									"name": "secondsPerLiquidityCumulativeX128s",
									"type": "uint160[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								}
							],
							"name": "snapshotCumulativesInside",
							"outputs": [
								{
									"internalType": "int56",
									"name": "tickCumulativeInside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityInsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsInside",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"observe(uint32[])": {
								"details": "To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.",
								"params": {
									"secondsAgos": "From how long ago each cumulative tick and liquidity value should be returned"
								},
								"returns": {
									"secondsPerLiquidityCumulativeX128s": "Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp",
									"tickCumulatives": "Cumulative tick values as of each `secondsAgos` from the current block timestamp"
								}
							},
							"snapshotCumulativesInside(int24,int24)": {
								"details": "Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.",
								"params": {
									"tickLower": "The lower tick of the range",
									"tickUpper": "The upper tick of the range"
								},
								"returns": {
									"secondsInside": "The snapshot of seconds per liquidity for the range",
									"secondsPerLiquidityInsideX128": "The snapshot of seconds per liquidity for the range",
									"tickCumulativeInside": "The snapshot of the tick accumulator for the range"
								}
							}
						},
						"title": "Pool state that is not stored",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"observe(uint32[])": "883bdbfd",
							"snapshotCumulativesInside(int24,int24)": "a38807f2"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"observe(uint32[])": {
								"notice": "Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"
							},
							"snapshotCumulativesInside(int24,int24)": {
								"notice": "Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"
							}
						},
						"notice": "Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.",
						"version": 1
					}
				},
				"IUniswapV3PoolEvents": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "Collect",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"name": "CollectProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "paid1",
									"type": "uint256"
								}
							],
							"name": "Flash",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextOld",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "observationCardinalityNextNew",
									"type": "uint16"
								}
							],
							"name": "IncreaseObservationCardinalityNext",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Initialize",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickLower",
									"type": "int24"
								},
								{
									"indexed": true,
									"internalType": "int24",
									"name": "tickUpper",
									"type": "int24"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "amount",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1Old",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol0New",
									"type": "uint8"
								},
								{
									"indexed": false,
									"internalType": "uint8",
									"name": "feeProtocol1New",
									"type": "uint8"
								}
							],
							"name": "SetFeeProtocol",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount0",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "int256",
									"name": "amount1",
									"type": "int256"
								},
								{
									"indexed": false,
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"indexed": false,
									"internalType": "uint128",
									"name": "liquidity",
									"type": "uint128"
								},
								{
									"indexed": false,
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "Swap",
							"type": "event"
						}
					],
					"devdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"details": "Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect",
								"params": {
									"amount": "The amount of liquidity to remove",
									"amount0": "The amount of token0 withdrawn",
									"amount1": "The amount of token1 withdrawn",
									"owner": "The owner of the position for which liquidity is removed",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"details": "Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees",
								"params": {
									"amount0": "The amount of token0 fees collected",
									"amount1": "The amount of token1 fees collected",
									"owner": "The owner of the position for which fees are collected",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"params": {
									"amount0": "The amount of token1 protocol fees that is withdrawn",
									"recipient": "The address that receives the collected protocol fees",
									"sender": "The address that collects the protocol fees"
								}
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"params": {
									"amount0": "The amount of token0 that was flashed",
									"amount1": "The amount of token1 that was flashed",
									"paid0": "The amount of token0 paid for the flash, which can exceed the amount0 plus the fee",
									"paid1": "The amount of token1 paid for the flash, which can exceed the amount1 plus the fee",
									"recipient": "The address that received the tokens from flash",
									"sender": "The address that initiated the swap call, and that received the callback"
								}
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"details": "observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.",
								"params": {
									"observationCardinalityNextNew": "The updated value of the next observation cardinality",
									"observationCardinalityNextOld": "The previous value of the next observation cardinality"
								}
							},
							"Initialize(uint160,int24)": {
								"details": "Mint/Burn/Swap cannot be emitted by the pool before Initialize",
								"params": {
									"sqrtPriceX96": "The initial sqrt price of the pool, as a Q64.96",
									"tick": "The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
								}
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"params": {
									"amount": "The amount of liquidity minted to the position range",
									"amount0": "How much token0 was required for the minted liquidity",
									"amount1": "How much token1 was required for the minted liquidity",
									"owner": "The owner of the position and recipient of any minted liquidity",
									"sender": "The address that minted the liquidity",
									"tickLower": "The lower tick of the position",
									"tickUpper": "The upper tick of the position"
								}
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"params": {
									"feeProtocol0New": "The updated value of the token0 protocol fee",
									"feeProtocol0Old": "The previous value of the token0 protocol fee",
									"feeProtocol1New": "The updated value of the token1 protocol fee",
									"feeProtocol1Old": "The previous value of the token1 protocol fee"
								}
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"params": {
									"amount0": "The delta of the token0 balance of the pool",
									"amount1": "The delta of the token1 balance of the pool",
									"liquidity": "The liquidity of the pool after the swap",
									"recipient": "The address that received the output of the swap",
									"sender": "The address that initiated the swap call, and that received the callback",
									"sqrtPriceX96": "The sqrt(price) of the pool after the swap, as a Q64.96",
									"tick": "The log base 1.0001 of price of the pool after the swap"
								}
							}
						},
						"kind": "dev",
						"methods": {},
						"title": "Events emitted by a pool",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"Burn(address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when a position's liquidity is removed"
							},
							"Collect(address,address,int24,int24,uint128,uint128)": {
								"notice": "Emitted when fees are collected by the owner of a position"
							},
							"CollectProtocol(address,address,uint128,uint128)": {
								"notice": "Emitted when the collected protocol fees are withdrawn by the factory owner"
							},
							"Flash(address,address,uint256,uint256,uint256,uint256)": {
								"notice": "Emitted by the pool for any flashes of token0/token1"
							},
							"IncreaseObservationCardinalityNext(uint16,uint16)": {
								"notice": "Emitted by the pool for increases to the number of observations that can be stored"
							},
							"Initialize(uint160,int24)": {
								"notice": "Emitted exactly once by a pool when #initialize is first called on the pool"
							},
							"Mint(address,address,int24,int24,uint128,uint256,uint256)": {
								"notice": "Emitted when liquidity is minted for a given position"
							},
							"SetFeeProtocol(uint8,uint8,uint8,uint8)": {
								"notice": "Emitted when the protocol fee is changed by the pool"
							},
							"Swap(address,address,int256,int256,uint160,uint128,int24)": {
								"notice": "Emitted by the pool for any swaps between token0 and token1"
							}
						},
						"kind": "user",
						"methods": {},
						"notice": "Contains all events emitted by the pool",
						"version": 1
					}
				},
				"IUniswapV3PoolImmutables": {
					"abi": [
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fee",
							"outputs": [
								{
									"internalType": "uint24",
									"name": "",
									"type": "uint24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "maxLiquidityPerTick",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tickSpacing",
							"outputs": [
								{
									"internalType": "int24",
									"name": "",
									"type": "int24"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"factory()": {
								"returns": {
									"_0": "The contract address"
								}
							},
							"fee()": {
								"returns": {
									"_0": "The fee"
								}
							},
							"maxLiquidityPerTick()": {
								"details": "This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool",
								"returns": {
									"_0": "The max amount of liquidity per tick"
								}
							},
							"tickSpacing()": {
								"details": "Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.",
								"returns": {
									"_0": "The tick spacing"
								}
							},
							"token0()": {
								"returns": {
									"_0": "The token contract address"
								}
							},
							"token1()": {
								"returns": {
									"_0": "The token contract address"
								}
							}
						},
						"title": "Pool state that never changes",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"factory()": "c45a0155",
							"fee()": "ddca3f43",
							"maxLiquidityPerTick()": "70cf754a",
							"tickSpacing()": "d0c93a7c",
							"token0()": "0dfe1681",
							"token1()": "d21220a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"factory()": {
								"notice": "The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"
							},
							"fee()": {
								"notice": "The pool's fee in hundredths of a bip, i.e. 1e-6"
							},
							"maxLiquidityPerTick()": {
								"notice": "The maximum amount of position liquidity that can use any tick in the range"
							},
							"tickSpacing()": {
								"notice": "The pool tick spacing"
							},
							"token0()": {
								"notice": "The first of the two tokens of the pool, sorted by address"
							},
							"token1()": {
								"notice": "The second of the two tokens of the pool, sorted by address"
							}
						},
						"notice": "These parameters are fixed for a pool forever, i.e., the methods will always return the same values",
						"version": 1
					}
				},
				"IUniswapV3PoolOwnerActions": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint128",
									"name": "amount0Requested",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1Requested",
									"type": "uint128"
								}
							],
							"name": "collectProtocol",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "amount0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "amount1",
									"type": "uint128"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "feeProtocol0",
									"type": "uint8"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol1",
									"type": "uint8"
								}
							],
							"name": "setFeeProtocol",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"params": {
									"amount0Requested": "The maximum amount of token0 to send, can be 0 to collect fees in only token1",
									"amount1Requested": "The maximum amount of token1 to send, can be 0 to collect fees in only token0",
									"recipient": "The address to which collected protocol fees should be sent"
								},
								"returns": {
									"amount0": "The protocol fee collected in token0",
									"amount1": "The protocol fee collected in token1"
								}
							},
							"setFeeProtocol(uint8,uint8)": {
								"params": {
									"feeProtocol0": "new protocol fee for token0 of the pool",
									"feeProtocol1": "new protocol fee for token1 of the pool"
								}
							}
						},
						"title": "Permissioned pool actions",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"collectProtocol(address,uint128,uint128)": "85b66729",
							"setFeeProtocol(uint8,uint8)": "8206a4d1"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"collectProtocol(address,uint128,uint128)": {
								"notice": "Collect the protocol fee accrued to the pool"
							},
							"setFeeProtocol(uint8,uint8)": {
								"notice": "Set the denominator of the protocol's % share of the fees"
							}
						},
						"notice": "Contains pool methods that may only be called by the factory owner",
						"version": 1
					}
				},
				"IUniswapV3PoolState": {
					"abi": [
						{
							"inputs": [],
							"name": "feeGrowthGlobal0X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeGrowthGlobal1X128",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "liquidity",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "index",
									"type": "uint256"
								}
							],
							"name": "observations",
							"outputs": [
								{
									"internalType": "uint32",
									"name": "blockTimestamp",
									"type": "uint32"
								},
								{
									"internalType": "int56",
									"name": "tickCumulative",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityCumulativeX128",
									"type": "uint160"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "key",
									"type": "bytes32"
								}
							],
							"name": "positions",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "_liquidity",
									"type": "uint128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside0LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthInside1LastX128",
									"type": "uint256"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "tokensOwed1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "protocolFees",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "token0",
									"type": "uint128"
								},
								{
									"internalType": "uint128",
									"name": "token1",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "slot0",
							"outputs": [
								{
									"internalType": "uint160",
									"name": "sqrtPriceX96",
									"type": "uint160"
								},
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								},
								{
									"internalType": "uint16",
									"name": "observationIndex",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinality",
									"type": "uint16"
								},
								{
									"internalType": "uint16",
									"name": "observationCardinalityNext",
									"type": "uint16"
								},
								{
									"internalType": "uint8",
									"name": "feeProtocol",
									"type": "uint8"
								},
								{
									"internalType": "bool",
									"name": "unlocked",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int16",
									"name": "wordPosition",
									"type": "int16"
								}
							],
							"name": "tickBitmap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int24",
									"name": "tick",
									"type": "int24"
								}
							],
							"name": "ticks",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "liquidityGross",
									"type": "uint128"
								},
								{
									"internalType": "int128",
									"name": "liquidityNet",
									"type": "int128"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside0X128",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "feeGrowthOutside1X128",
									"type": "uint256"
								},
								{
									"internalType": "int56",
									"name": "tickCumulativeOutside",
									"type": "int56"
								},
								{
									"internalType": "uint160",
									"name": "secondsPerLiquidityOutsideX128",
									"type": "uint160"
								},
								{
									"internalType": "uint32",
									"name": "secondsOutside",
									"type": "uint32"
								},
								{
									"internalType": "bool",
									"name": "initialized",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"details": "This value can overflow the uint256"
							},
							"feeGrowthGlobal1X128()": {
								"details": "This value can overflow the uint256"
							},
							"liquidity()": {
								"details": "This value has no relationship to the total liquidity across all ticks"
							},
							"observations(uint256)": {
								"details": "You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.",
								"params": {
									"index": "The element of the observations array to fetch"
								},
								"returns": {
									"blockTimestamp": "The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"
								}
							},
							"positions(bytes32)": {
								"params": {
									"key": "The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"
								},
								"returns": {
									"_liquidity": "The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
								}
							},
							"protocolFees()": {
								"details": "Protocol fees will never exceed uint128 max in either token"
							},
							"slot0()": {
								"returns": {
									"sqrtPriceX96": "The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"
								}
							},
							"ticks(int24)": {
								"params": {
									"tick": "The tick to look up"
								},
								"returns": {
									"liquidityGross": "the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."
								}
							}
						},
						"title": "Pool state that can change",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"feeGrowthGlobal0X128()": "f3058399",
							"feeGrowthGlobal1X128()": "46141319",
							"liquidity()": "1a686502",
							"observations(uint256)": "252c09d7",
							"positions(bytes32)": "514ea4bf",
							"protocolFees()": "1ad8b03b",
							"slot0()": "3850c7bd",
							"tickBitmap(int16)": "5339c296",
							"ticks(int24)": "f30dba93"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"feeGrowthGlobal0X128()": {
								"notice": "The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"
							},
							"feeGrowthGlobal1X128()": {
								"notice": "The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"
							},
							"liquidity()": {
								"notice": "The currently in range liquidity available to the pool"
							},
							"observations(uint256)": {
								"notice": "Returns data about a specific observation index"
							},
							"positions(bytes32)": {
								"notice": "Returns the information about a position by the position's key"
							},
							"protocolFees()": {
								"notice": "The amounts of token0 and token1 that are owed to the protocol"
							},
							"slot0()": {
								"notice": "The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."
							},
							"tickBitmap(int16)": {
								"notice": "Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
							},
							"ticks(int24)": {
								"notice": "Look up information about a specific tick in the pool"
							}
						},
						"notice": "These methods compose the pool's state, and can change with any frequency including multiple times per transaction",
						"version": 1
					}
				},
				"IUniswapV3SwapCallback": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"title": "Callback for IUniswapV3PoolActions#swap",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Any contract that calls IUniswapV3PoolActions#swap must implement this interface",
						"version": 1
					}
				},
				"Path": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADDR_SIZE": {
								"details": "The length of the bytes encoded address"
							},
							"FEE_SIZE": {
								"details": "The length of the bytes encoded fee"
							},
							"MULTIPLE_POOLS_MIN_LENGTH": {
								"details": "The minimum length of an encoding that contains 2 or more pools"
							},
							"NEXT_OFFSET": {
								"details": "The offset of a single token address and pool fee"
							},
							"POP_OFFSET": {
								"details": "The offset of an encoded pool key"
							}
						},
						"title": "Functions for manipulating path data for multihop swaps",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/Quoter_flattened.sol\":6204:8826  library Path {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/Quoter_flattened.sol\":6204:8826  library Path {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220497d9e4a109e7492ab70c6f4eb388e4e3b58889de3b9d39b50dc6a564825ffcb64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220497d9e4a109e7492ab70c6f4eb388e4e3b58889de3b9d39b50dc6a564825ffcb64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 PUSH30 0x9E4A109E7492AB70C6F4EB388E4E3B58889DE3B9D39B50DC6A564825FFCB PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "6204:2622:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220497d9e4a109e7492ab70c6f4eb388e4e3b58889de3b9d39b50dc6a564825ffcb64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x49 PUSH30 0x9E4A109E7492AB70C6F4EB388E4E3B58889DE3B9D39B50DC6A564825FFCB PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "6204:2622:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"decodeFirstPool(bytes memory)": "infinite",
								"getFirstPool(bytes memory)": "infinite",
								"hasMultiplePools(bytes memory)": "infinite",
								"numPools(bytes memory)": "infinite",
								"skipToken(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6204,
									"end": 8826,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220497d9e4a109e7492ab70c6f4eb388e4e3b58889de3b9d39b50dc6a564825ffcb64736f6c63430007060033",
									".code": [
										{
											"begin": 6204,
											"end": 8826,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6204,
											"end": 8826,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADDR_SIZE\":{\"details\":\"The length of the bytes encoded address\"},\"FEE_SIZE\":{\"details\":\"The length of the bytes encoded fee\"},\"MULTIPLE_POOLS_MIN_LENGTH\":{\"details\":\"The minimum length of an encoding that contains 2 or more pools\"},\"NEXT_OFFSET\":{\"details\":\"The offset of a single token address and pool fee\"},\"POP_OFFSET\":{\"details\":\"The offset of an encoded pool key\"}},\"title\":\"Functions for manipulating path data for multihop swaps\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"Path\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"PeripheryImmutableState": {
					"abi": [
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"WETH9": {
								"return": "Returns the address of WETH9"
							},
							"factory": {
								"return": "Returns the address of the Uniswap V3 factory"
							}
						},
						"title": "Immutable state",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"WETH9\":{\"return\":\"Returns the address of WETH9\"},\"factory\":{\"return\":\"Returns the address of the Uniswap V3 factory\"}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Immutable state used by periphery contracts\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"PeripheryImmutableState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Immutable state used by periphery contracts",
						"version": 1
					}
				},
				"PoolAddress": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Provides functions for deriving a pool address from the factory, tokens, and the fee",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/Quoter_flattened.sol\":214:1866  library PoolAddress {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/Quoter_flattened.sol\":214:1866  library PoolAddress {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122095da48a7615cb30ce83102b0755fe95ed5b587d7e404f137f4fe835fa697638d64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095da48a7615cb30ce83102b0755fe95ed5b587d7e404f137f4fe835fa697638d64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xDA 0x48 0xA7 PUSH2 0x5CB3 0xC 0xE8 BALANCE MUL 0xB0 PUSH22 0x5FE95ED5B587D7E404F137F4FE835FA697638D64736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "214:1652:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122095da48a7615cb30ce83102b0755fe95ed5b587d7e404f137f4fe835fa697638d64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 0xDA 0x48 0xA7 PUSH2 0x5CB3 0xC 0xE8 BALANCE MUL 0xB0 PUSH22 0x5FE95ED5B587D7E404F137F4FE835FA697638D64736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "214:1652:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"computeAddress(address,struct PoolAddress.PoolKey memory)": "infinite",
								"getPoolKey(address,address,uint24)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 214,
									"end": 1866,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122095da48a7615cb30ce83102b0755fe95ed5b587d7e404f137f4fe835fa697638d64736f6c63430007060033",
									".code": [
										{
											"begin": 214,
											"end": 1866,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 1866,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the factory, tokens, and the fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"PoolAddress\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Quoter": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_factory",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_WETH9",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "WETH9",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"name": "quoteExactInput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								}
							],
							"name": "quoteExactInputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"name": "quoteExactOutput",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								},
								{
									"internalType": "uint24",
									"name": "fee",
									"type": "uint24"
								},
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"internalType": "uint160",
									"name": "sqrtPriceLimitX96",
									"type": "uint160"
								}
							],
							"name": "quoteExactOutputSingle",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "amount0Delta",
									"type": "int256"
								},
								{
									"internalType": "int256",
									"name": "amount1Delta",
									"type": "int256"
								},
								{
									"internalType": "bytes",
									"name": "path",
									"type": "bytes"
								}
							],
							"name": "uniswapV3SwapCallback",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute the swap and check the amounts in the callback.",
						"kind": "dev",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"params": {
									"amountIn": "The amount of the first token to swap",
									"path": "The path of the swap, i.e. each token pair and the pool fee"
								},
								"returns": {
									"amountOut": "The amount of the last token that would be received"
								}
							},
							"quoteExactInputSingle(address,address,uint24,uint256,uint160)": {
								"params": {
									"amountIn": "The desired input amount",
									"fee": "The fee of the token pool to consider for the pair",
									"sqrtPriceLimitX96": "The price limit of the pool that cannot be exceeded by the swap",
									"tokenIn": "The token being swapped in",
									"tokenOut": "The token being swapped out"
								},
								"returns": {
									"amountOut": "The amount of `tokenOut` that would be received"
								}
							},
							"quoteExactOutput(bytes,uint256)": {
								"params": {
									"amountOut": "The amount of the last token to receive",
									"path": "The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order"
								},
								"returns": {
									"amountIn": "The amount of first token required to be paid"
								}
							},
							"quoteExactOutputSingle(address,address,uint24,uint256,uint160)": {
								"params": {
									"amountOut": "The desired output amount",
									"fee": "The fee of the token pool to consider for the pair",
									"sqrtPriceLimitX96": "The price limit of the pool that cannot be exceeded by the swap",
									"tokenIn": "The token being swapped in",
									"tokenOut": "The token being swapped out"
								},
								"returns": {
									"amountIn": "The amount required as the input for the swap in order to receive `amountOut`"
								}
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"details": "In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.",
								"params": {
									"amount0Delta": "The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.",
									"amount1Delta": "The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.",
									"data": "Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
								}
							}
						},
						"stateVariables": {
							"amountOutCached": {
								"details": "Transient storage variable used to check a safety condition in exact output swaps."
							}
						},
						"title": "Provides quotes for swaps",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/Quoter_flattened.sol\":50586:56307  contract Quoter is IQuoter, IUniswapV3SwapCallback, PeripheryImmutableState {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/lens/Quoter_flattened.sol\":50861:50951  constructor(address _factory, address _WETH9) PeripheryImmutableState(_factory, _WETH9) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"contracts/lens/Quoter_flattened.sol\":9742:9760  factory = _factory */\n  0x60\n  swap3\n  dup4\n  shl\n  dup2\n  and\n  0x80\n  mstore\n    /* \"contracts/lens/Quoter_flattened.sol\":9770:9784  WETH9 = _WETH9 */\n  swap2\n  shl\n  and\n  0xa0\n  mstore\n    /* \"contracts/lens/Quoter_flattened.sol\":50586:56307  contract Quoter is IQuoter, IUniswapV3SwapCallback, PeripheryImmutableState {... */\n  jump(tag_9)\n    /* \"#utility.yul\":14:193   */\ntag_10:\n    /* \"#utility.yul\":95:108   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":137:168   */\n  dup2\n  and\n    /* \"#utility.yul\":127:169   */\n  dup2\n  eq\n    /* \"#utility.yul\":117:119   */\n  tag_12\n  jumpi\n    /* \"#utility.yul\":183:184   */\n  0x00\n    /* \"#utility.yul\":180:181   */\n  dup1\n    /* \"#utility.yul\":173:185   */\n  revert\n    /* \"#utility.yul\":117:119   */\ntag_12:\n    /* \"#utility.yul\":76:193   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":198:505   */\ntag_3:\n  0x00\n  dup1\n    /* \"#utility.yul\":338:340   */\n  0x40\n    /* \"#utility.yul\":326:335   */\n  dup4\n    /* \"#utility.yul\":317:324   */\n  dup6\n    /* \"#utility.yul\":313:336   */\n  sub\n    /* \"#utility.yul\":309:341   */\n  slt\n    /* \"#utility.yul\":306:308   */\n  iszero\n  tag_14\n  jumpi\n    /* \"#utility.yul\":359:365   */\n  dup2\n    /* \"#utility.yul\":351:357   */\n  dup3\n    /* \"#utility.yul\":344:366   */\n  revert\n    /* \"#utility.yul\":306:308   */\ntag_14:\n    /* \"#utility.yul\":387:429   */\n  tag_15\n    /* \"#utility.yul\":419:428   */\n  dup4\n    /* \"#utility.yul\":387:429   */\n  tag_10\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":377:429   */\n  swap2\n  pop\n    /* \"#utility.yul\":448:499   */\n  tag_16\n    /* \"#utility.yul\":495:497   */\n  0x20\n    /* \"#utility.yul\":484:493   */\n  dup5\n    /* \"#utility.yul\":480:498   */\n  add\n    /* \"#utility.yul\":448:499   */\n  tag_10\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":438:499   */\n  swap1\n  pop\n    /* \"#utility.yul\":296:505   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\ntag_9:\n    /* \"contracts/lens/Quoter_flattened.sol\":50586:56307  contract Quoter is IQuoter, IUniswapV3SwapCallback, PeripheryImmutableState {... */\n  shr(0x60, mload(0x80))\n  shr(0x60, mload(0xa0))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  assignImmutable(\"0x4a2481aeb31e74f0e353ded3d8816b025fc54779281de96894ad2bca730528bd\")\n  assignImmutable(\"0x6b88fa438cae5c1216aa45b8d58426fb848d0ea4056264a8a6a1dd473ff0fc05\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/Quoter_flattened.sol\":50586:56307  contract Quoter is IQuoter, IUniswapV3SwapCallback, PeripheryImmutableState {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc45a0155\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xc45a0155\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xcdca1753\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xf7729d43\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfa461e33\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x2f80bb1d\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x30d07f21\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x4aa4a4fc\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/lens/Quoter_flattened.sol\":55640:56305  function quoteExactOutput(bytes memory path, uint256 amountOut) external override returns (uint256 amountIn) {... */\n    tag_3:\n      tag_11\n      tag_12\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/lens/Quoter_flattened.sol\":54532:55606  function quoteExactOutputSingle(... */\n    tag_4:\n      tag_11\n      tag_18\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n        /* \"contracts/lens/Quoter_flattened.sol\":9640:9679  address public immutable override WETH9 */\n    tag_5:\n      tag_22\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n        /* \"contracts/lens/Quoter_flattened.sol\":9548:9589  address public immutable override factory */\n    tag_6:\n      tag_22\n      tag_27\n      jump\t// in\n        /* \"contracts/lens/Quoter_flattened.sol\":53838:54498  function quoteExactInput(bytes memory path, uint256 amountIn) external override returns (uint256 amountOut) {... */\n    tag_7:\n      tag_11\n      tag_30\n      calldatasize\n      0x04\n      tag_13\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n        /* \"contracts/lens/Quoter_flattened.sol\":52986:53804  function quoteExactInputSingle(... */\n    tag_8:\n      tag_11\n      tag_34\n      calldatasize\n      0x04\n      tag_19\n      jump\t// in\n    tag_34:\n      tag_35\n      jump\t// in\n        /* \"contracts/lens/Quoter_flattened.sol\":51255:52500  function uniswapV3SwapCallback(... */\n    tag_9:\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      stop\n        /* \"contracts/lens/Quoter_flattened.sol\":55640:56305  function quoteExactOutput(bytes memory path, uint256 amountOut) external override returns (uint256 amountIn) {... */\n    tag_14:\n        /* \"contracts/lens/Quoter_flattened.sol\":55731:55747  uint256 amountIn */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":55759:56299  while (true) {... */\n    tag_42:\n        /* \"contracts/lens/Quoter_flattened.sol\":55786:55807  bool hasMultiplePools */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":55810:55833  path.hasMultiplePools() */\n      tag_44\n        /* \"contracts/lens/Quoter_flattened.sol\":55810:55814  path */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":55810:55831  path.hasMultiplePools */\n      tag_45\n        /* \"contracts/lens/Quoter_flattened.sol\":55810:55833  path.hasMultiplePools() */\n      jump\t// in\n    tag_44:\n        /* \"contracts/lens/Quoter_flattened.sol\":55786:55833  bool hasMultiplePools = path.hasMultiplePools() */\n      swap1\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":55849:55865  address tokenOut */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":55867:55882  address tokenIn */\n      dup1\n        /* \"contracts/lens/Quoter_flattened.sol\":55884:55894  uint24 fee */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":55898:55920  path.decodeFirstPool() */\n      tag_46\n        /* \"contracts/lens/Quoter_flattened.sol\":55898:55902  path */\n      dup8\n        /* \"contracts/lens/Quoter_flattened.sol\":55898:55918  path.decodeFirstPool */\n      tag_47\n        /* \"contracts/lens/Quoter_flattened.sol\":55898:55920  path.decodeFirstPool() */\n      jump\t// in\n    tag_46:\n        /* \"contracts/lens/Quoter_flattened.sol\":55848:55920  (address tokenOut, address tokenIn, uint24 fee) = path.decodeFirstPool() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":56026:56086  quoteExactOutputSingle(tokenIn, tokenOut, fee, amountOut, 0) */\n      tag_48\n        /* \"contracts/lens/Quoter_flattened.sol\":56049:56056  tokenIn */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":56058:56066  tokenOut */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":56068:56071  fee */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":56073:56082  amountOut */\n      dup10\n        /* \"contracts/lens/Quoter_flattened.sol\":56084:56085  0 */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":56026:56048  quoteExactOutputSingle */\n      tag_20\n        /* \"contracts/lens/Quoter_flattened.sol\":56026:56086  quoteExactOutputSingle(tokenIn, tokenOut, fee, amountOut, 0) */\n      jump\t// in\n    tag_48:\n        /* \"contracts/lens/Quoter_flattened.sol\":56014:56086  amountOut = quoteExactOutputSingle(tokenIn, tokenOut, fee, amountOut, 0) */\n      swap6\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":56160:56176  hasMultiplePools */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":56156:56289  if (hasMultiplePools) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":56203:56219  path.skipToken() */\n      tag_50\n        /* \"contracts/lens/Quoter_flattened.sol\":56203:56207  path */\n      dup8\n        /* \"contracts/lens/Quoter_flattened.sol\":56203:56217  path.skipToken */\n      tag_51\n        /* \"contracts/lens/Quoter_flattened.sol\":56203:56219  path.skipToken() */\n      jump\t// in\n    tag_50:\n        /* \"contracts/lens/Quoter_flattened.sol\":56196:56219  path = path.skipToken() */\n      swap7\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":56156:56289  if (hasMultiplePools) {... */\n      jump(tag_52)\n    tag_49:\n        /* \"contracts/lens/Quoter_flattened.sol\":56265:56274  amountOut */\n      dup6\n        /* \"contracts/lens/Quoter_flattened.sol\":56258:56274  return amountOut */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_43)\n        /* \"contracts/lens/Quoter_flattened.sol\":56156:56289  if (hasMultiplePools) {... */\n    tag_52:\n        /* \"contracts/lens/Quoter_flattened.sol\":55759:56299  while (true) {... */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_42)\n    tag_43:\n        /* \"contracts/lens/Quoter_flattened.sol\":55640:56305  function quoteExactOutput(bytes memory path, uint256 amountOut) external override returns (uint256 amountIn) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lens/Quoter_flattened.sol\":54532:55606  function quoteExactOutputSingle(... */\n    tag_20:\n        /* \"contracts/lens/Quoter_flattened.sol\":54728:54744  uint256 amountIn */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":54774:54792  tokenIn < tokenOut */\n      dup1\n      dup7\n      and\n      dup8\n      dup3\n      and\n      lt\n      swap1\n        /* \"contracts/lens/Quoter_flattened.sol\":54916:54938  sqrtPriceLimitX96 == 0 */\n      dup4\n      and\n        /* \"contracts/lens/Quoter_flattened.sol\":54912:54967  if (sqrtPriceLimitX96 == 0) amountOutCached = amountOut */\n      tag_54\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":54940:54955  amountOutCached */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":54940:54967  amountOutCached = amountOut */\n      dup5\n      swap1\n      sstore\n        /* \"contracts/lens/Quoter_flattened.sol\":54912:54967  if (sqrtPriceLimitX96 == 0) amountOutCached = amountOut */\n    tag_54:\n        /* \"contracts/lens/Quoter_flattened.sol\":54993:55024  getPool(tokenIn, tokenOut, fee) */\n      tag_55\n        /* \"contracts/lens/Quoter_flattened.sol\":55001:55008  tokenIn */\n      dup8\n        /* \"contracts/lens/Quoter_flattened.sol\":55010:55018  tokenOut */\n      dup8\n        /* \"contracts/lens/Quoter_flattened.sol\":55020:55023  fee */\n      dup8\n        /* \"contracts/lens/Quoter_flattened.sol\":54993:55000  getPool */\n      tag_56\n        /* \"contracts/lens/Quoter_flattened.sol\":54993:55024  getPool(tokenIn, tokenOut, fee) */\n      jump\t// in\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":54993:55029  getPool(tokenIn, tokenOut, fee).swap */\n      and\n      0x128acb08\n        /* \"contracts/lens/Quoter_flattened.sol\":55055:55059  this */\n      address\n        /* \"contracts/lens/Quoter_flattened.sol\":55128:55138  zeroForOne */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":55157:55177  amountOut.toInt256() */\n      tag_57\n        /* \"contracts/lens/Quoter_flattened.sol\":55157:55166  amountOut */\n      dup9\n        /* \"contracts/lens/Quoter_flattened.sol\":55157:55175  amountOut.toInt256 */\n      tag_58\n        /* \"contracts/lens/Quoter_flattened.sol\":55157:55177  amountOut.toInt256() */\n      jump\t// in\n    tag_57:\n        /* \"contracts/lens/Quoter_flattened.sol\":55156:55177  -amountOut.toInt256() */\n      0x00\n      sub\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":55195:55217  sqrtPriceLimitX96 == 0 */\n      dup9\n      and\n      iszero\n        /* \"contracts/lens/Quoter_flattened.sol\":55195:55352  sqrtPriceLimitX96 == 0... */\n      tag_59\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":55335:55352  sqrtPriceLimitX96 */\n      dup8\n        /* \"contracts/lens/Quoter_flattened.sol\":55195:55352  sqrtPriceLimitX96 == 0... */\n      jump(tag_62)\n    tag_59:\n        /* \"contracts/lens/Quoter_flattened.sol\":55241:55251  zeroForOne */\n      dup6\n        /* \"contracts/lens/Quoter_flattened.sol\":55241:55311  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n      tag_61\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":55284:55311  TickMath.MAX_SQRT_RATIO - 1 */\n      0xfffd8963efd1fc6a506488495d951d5263988d25\n        /* \"contracts/lens/Quoter_flattened.sol\":55241:55311  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n      jump(tag_62)\n    tag_61:\n        /* \"contracts/lens/Quoter_flattened.sol\":55254:55281  TickMath.MIN_SQRT_RATIO + 1 */\n      0x01000276a4\n        /* \"contracts/lens/Quoter_flattened.sol\":55241:55311  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n    tag_62:\n        /* \"contracts/lens/Quoter_flattened.sol\":55387:55395  tokenOut */\n      dup12\n        /* \"contracts/lens/Quoter_flattened.sol\":55397:55400  fee */\n      dup12\n        /* \"contracts/lens/Quoter_flattened.sol\":55402:55409  tokenIn */\n      dup15\n        /* \"contracts/lens/Quoter_flattened.sol\":55370:55410  abi.encodePacked(tokenOut, fee, tokenIn) */\n      add(0x20, mload(0x40))\n      tag_63\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/lens/Quoter_flattened.sol\":54993:55424  getPool(tokenIn, tokenOut, fee).swap(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_67\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_67:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_68\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_69\n      swap2\n      dup2\n      add\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      0x01\n    tag_68:\n        /* \"contracts/lens/Quoter_flattened.sol\":54977:55600  try... */\n      tag_71\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_75\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_74)\n    tag_75:\n      0x60\n      swap2\n      pop\n    tag_74:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":55482:55504  sqrtPriceLimitX96 == 0 */\n      dup5\n      and\n        /* \"contracts/lens/Quoter_flattened.sol\":55478:55528  if (sqrtPriceLimitX96 == 0) delete amountOutCached */\n      tag_76\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":55513:55528  amountOutCached */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":55506:55528  delete amountOutCached */\n      dup1\n      sstore\n        /* \"contracts/lens/Quoter_flattened.sol\":55478:55528  if (sqrtPriceLimitX96 == 0) delete amountOutCached */\n    tag_76:\n        /* \"contracts/lens/Quoter_flattened.sol\":55564:55589  parseRevertReason(reason) */\n      tag_77\n        /* \"contracts/lens/Quoter_flattened.sol\":55582:55588  reason */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":55564:55581  parseRevertReason */\n      tag_78\n        /* \"contracts/lens/Quoter_flattened.sol\":55564:55589  parseRevertReason(reason) */\n      jump\t// in\n    tag_77:\n        /* \"contracts/lens/Quoter_flattened.sol\":55557:55589  return parseRevertReason(reason) */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_53)\n        /* \"contracts/lens/Quoter_flattened.sol\":54977:55600  try... */\n    tag_71:\n      pop\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":54532:55606  function quoteExactOutputSingle(... */\n      pop\n    tag_53:\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lens/Quoter_flattened.sol\":9640:9679  address public immutable override WETH9 */\n    tag_23:\n      immutable(\"0x4a2481aeb31e74f0e353ded3d8816b025fc54779281de96894ad2bca730528bd\")\n      dup2\n      jump\t// out\n        /* \"contracts/lens/Quoter_flattened.sol\":9548:9589  address public immutable override factory */\n    tag_27:\n      immutable(\"0x6b88fa438cae5c1216aa45b8d58426fb848d0ea4056264a8a6a1dd473ff0fc05\")\n      dup2\n      jump\t// out\n        /* \"contracts/lens/Quoter_flattened.sol\":53838:54498  function quoteExactInput(bytes memory path, uint256 amountIn) external override returns (uint256 amountOut) {... */\n    tag_31:\n        /* \"contracts/lens/Quoter_flattened.sol\":53927:53944  uint256 amountOut */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":53956:54492  while (true) {... */\n    tag_81:\n        /* \"contracts/lens/Quoter_flattened.sol\":53983:54004  bool hasMultiplePools */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":54007:54030  path.hasMultiplePools() */\n      tag_83\n        /* \"contracts/lens/Quoter_flattened.sol\":54007:54011  path */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":54007:54028  path.hasMultiplePools */\n      tag_45\n        /* \"contracts/lens/Quoter_flattened.sol\":54007:54030  path.hasMultiplePools() */\n      jump\t// in\n    tag_83:\n        /* \"contracts/lens/Quoter_flattened.sol\":53983:54030  bool hasMultiplePools = path.hasMultiplePools() */\n      swap1\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":54046:54061  address tokenIn */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":54063:54079  address tokenOut */\n      dup1\n        /* \"contracts/lens/Quoter_flattened.sol\":54081:54091  uint24 fee */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":54095:54117  path.decodeFirstPool() */\n      tag_84\n        /* \"contracts/lens/Quoter_flattened.sol\":54095:54099  path */\n      dup8\n        /* \"contracts/lens/Quoter_flattened.sol\":54095:54115  path.decodeFirstPool */\n      tag_47\n        /* \"contracts/lens/Quoter_flattened.sol\":54095:54117  path.decodeFirstPool() */\n      jump\t// in\n    tag_84:\n        /* \"contracts/lens/Quoter_flattened.sol\":54045:54117  (address tokenIn, address tokenOut, uint24 fee) = path.decodeFirstPool() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":54222:54280  quoteExactInputSingle(tokenIn, tokenOut, fee, amountIn, 0) */\n      tag_85\n        /* \"contracts/lens/Quoter_flattened.sol\":54244:54251  tokenIn */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":54253:54261  tokenOut */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":54263:54266  fee */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":54268:54276  amountIn */\n      dup10\n        /* \"contracts/lens/Quoter_flattened.sol\":54278:54279  0 */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":54222:54243  quoteExactInputSingle */\n      tag_35\n        /* \"contracts/lens/Quoter_flattened.sol\":54222:54280  quoteExactInputSingle(tokenIn, tokenOut, fee, amountIn, 0) */\n      jump\t// in\n    tag_85:\n        /* \"contracts/lens/Quoter_flattened.sol\":54211:54280  amountIn = quoteExactInputSingle(tokenIn, tokenOut, fee, amountIn, 0) */\n      swap6\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":54354:54370  hasMultiplePools */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":54350:54482  if (hasMultiplePools) {... */\n      iszero\n      tag_49\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":54397:54413  path.skipToken() */\n      tag_87\n        /* \"contracts/lens/Quoter_flattened.sol\":54397:54401  path */\n      dup8\n        /* \"contracts/lens/Quoter_flattened.sol\":54397:54411  path.skipToken */\n      tag_51\n        /* \"contracts/lens/Quoter_flattened.sol\":54397:54413  path.skipToken() */\n      jump\t// in\n    tag_87:\n        /* \"contracts/lens/Quoter_flattened.sol\":54390:54413  path = path.skipToken() */\n      swap7\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":53956:54492  while (true) {... */\n      pop\n      pop\n      pop\n      pop\n      jump(tag_81)\n        /* \"contracts/lens/Quoter_flattened.sol\":52986:53804  function quoteExactInputSingle(... */\n    tag_35:\n        /* \"contracts/lens/Quoter_flattened.sol\":53180:53197  uint256 amountOut */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":53227:53245  tokenIn < tokenOut */\n      dup1\n      dup7\n      and\n      swap1\n      dup8\n      and\n      lt\n        /* \"contracts/lens/Quoter_flattened.sol\":53272:53303  getPool(tokenIn, tokenOut, fee) */\n      tag_90\n        /* \"contracts/lens/Quoter_flattened.sol\":53227:53234  tokenIn */\n      dup8\n        /* \"contracts/lens/Quoter_flattened.sol\":53237:53245  tokenOut */\n      dup8\n        /* \"contracts/lens/Quoter_flattened.sol\":53299:53302  fee */\n      dup8\n        /* \"contracts/lens/Quoter_flattened.sol\":53272:53279  getPool */\n      tag_56\n        /* \"contracts/lens/Quoter_flattened.sol\":53272:53303  getPool(tokenIn, tokenOut, fee) */\n      jump\t// in\n    tag_90:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":53272:53308  getPool(tokenIn, tokenOut, fee).swap */\n      and\n      0x128acb08\n        /* \"contracts/lens/Quoter_flattened.sol\":53334:53338  this */\n      address\n        /* \"contracts/lens/Quoter_flattened.sol\":53407:53417  zeroForOne */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":53435:53454  amountIn.toInt256() */\n      tag_91\n        /* \"contracts/lens/Quoter_flattened.sol\":53435:53443  amountIn */\n      dup9\n        /* \"contracts/lens/Quoter_flattened.sol\":53435:53452  amountIn.toInt256 */\n      tag_58\n        /* \"contracts/lens/Quoter_flattened.sol\":53435:53454  amountIn.toInt256() */\n      jump\t// in\n    tag_91:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":53472:53494  sqrtPriceLimitX96 == 0 */\n      dup9\n      and\n      iszero\n        /* \"contracts/lens/Quoter_flattened.sol\":53472:53629  sqrtPriceLimitX96 == 0... */\n      tag_92\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":53612:53629  sqrtPriceLimitX96 */\n      dup8\n        /* \"contracts/lens/Quoter_flattened.sol\":53472:53629  sqrtPriceLimitX96 == 0... */\n      jump(tag_95)\n    tag_92:\n        /* \"contracts/lens/Quoter_flattened.sol\":53518:53528  zeroForOne */\n      dup6\n        /* \"contracts/lens/Quoter_flattened.sol\":53518:53588  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n      tag_94\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":53561:53588  TickMath.MAX_SQRT_RATIO - 1 */\n      0xfffd8963efd1fc6a506488495d951d5263988d25\n        /* \"contracts/lens/Quoter_flattened.sol\":53518:53588  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n      jump(tag_95)\n    tag_94:\n        /* \"contracts/lens/Quoter_flattened.sol\":53531:53558  TickMath.MIN_SQRT_RATIO + 1 */\n      0x01000276a4\n        /* \"contracts/lens/Quoter_flattened.sol\":53518:53588  zeroForOne ? TickMath.MIN_SQRT_RATIO + 1 : TickMath.MAX_SQRT_RATIO - 1 */\n    tag_95:\n        /* \"contracts/lens/Quoter_flattened.sol\":53664:53671  tokenIn */\n      dup13\n        /* \"contracts/lens/Quoter_flattened.sol\":53673:53676  fee */\n      dup12\n        /* \"contracts/lens/Quoter_flattened.sol\":53678:53686  tokenOut */\n      dup14\n        /* \"contracts/lens/Quoter_flattened.sol\":53647:53687  abi.encodePacked(tokenIn, fee, tokenOut) */\n      add(0x20, mload(0x40))\n      tag_96\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_96:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/lens/Quoter_flattened.sol\":53272:53701  getPool(tokenIn, tokenOut, fee).swap(... */\n      mload(0x40)\n      dup7\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_97:\n      0x40\n      dup1\n      mload\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_99\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_100\n      swap2\n      dup2\n      add\n      swap1\n      tag_70\n      jump\t// in\n    tag_100:\n      0x01\n    tag_99:\n        /* \"contracts/lens/Quoter_flattened.sol\":53256:53798  try... */\n      tag_71\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_105\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_104)\n    tag_105:\n      0x60\n      swap2\n      pop\n    tag_104:\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":53762:53787  parseRevertReason(reason) */\n      tag_77\n        /* \"contracts/lens/Quoter_flattened.sol\":53780:53786  reason */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":53762:53779  parseRevertReason */\n      tag_78\n        /* \"contracts/lens/Quoter_flattened.sol\":53762:53787  parseRevertReason(reason) */\n      jump\t// in\n        /* \"contracts/lens/Quoter_flattened.sol\":51255:52500  function uniswapV3SwapCallback(... */\n    tag_40:\n        /* \"contracts/lens/Quoter_flattened.sol\":51433:51434  0 */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":51418:51430  amount0Delta */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":51418:51434  amount0Delta > 0 */\n      sgt\n        /* \"contracts/lens/Quoter_flattened.sol\":51418:51454  amount0Delta > 0 || amount1Delta > 0 */\n      dup1\n      tag_109\n      jumpi\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":51453:51454  0 */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":51438:51450  amount1Delta */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":51438:51454  amount1Delta > 0 */\n      sgt\n        /* \"contracts/lens/Quoter_flattened.sol\":51418:51454  amount0Delta > 0 || amount1Delta > 0 */\n    tag_109:\n        /* \"contracts/lens/Quoter_flattened.sol\":51410:51455  require(amount0Delta > 0 || amount1Delta > 0) */\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n        /* \"contracts/lens/Quoter_flattened.sol\":51529:51544  address tokenIn */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":51546:51562  address tokenOut */\n      dup1\n        /* \"contracts/lens/Quoter_flattened.sol\":51564:51574  uint24 fee */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":51578:51600  path.decodeFirstPool() */\n      tag_111\n        /* \"contracts/lens/Quoter_flattened.sol\":51578:51582  path */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":51578:51598  path.decodeFirstPool */\n      tag_47\n        /* \"contracts/lens/Quoter_flattened.sol\":51578:51600  path.decodeFirstPool() */\n      jump\t// in\n    tag_111:\n        /* \"contracts/lens/Quoter_flattened.sol\":51528:51600  (address tokenIn, address tokenOut, uint24 fee) = path.decodeFirstPool() */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":51610:51676  CallbackValidation.verifyCallback(factory, tokenIn, tokenOut, fee) */\n      tag_112\n        /* \"contracts/lens/Quoter_flattened.sol\":51644:51651  factory */\n      immutable(\"0x6b88fa438cae5c1216aa45b8d58426fb848d0ea4056264a8a6a1dd473ff0fc05\")\n        /* \"contracts/lens/Quoter_flattened.sol\":51653:51660  tokenIn */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":51662:51670  tokenOut */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":51672:51675  fee */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":51610:51643  CallbackValidation.verifyCallback */\n      tag_113\n        /* \"contracts/lens/Quoter_flattened.sol\":51610:51676  CallbackValidation.verifyCallback(factory, tokenIn, tokenOut, fee) */\n      jump\t// in\n    tag_112:\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":51688:51705  bool isExactInput */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":51707:51726  uint256 amountToPay */\n      dup1\n        /* \"contracts/lens/Quoter_flattened.sol\":51728:51750  uint256 amountReceived */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":51781:51782  0 */\n      dup1\n        /* \"contracts/lens/Quoter_flattened.sol\":51766:51778  amount0Delta */\n      dup10\n        /* \"contracts/lens/Quoter_flattened.sol\":51766:51782  amount0Delta > 0 */\n      sgt\n        /* \"contracts/lens/Quoter_flattened.sol\":51766:51954  amount0Delta > 0... */\n      tag_114\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":51899:51906  tokenIn */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":51888:51906  tokenOut < tokenIn */\n      and\n        /* \"contracts/lens/Quoter_flattened.sol\":51888:51896  tokenOut */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":51888:51906  tokenOut < tokenIn */\n      and\n      lt\n        /* \"contracts/lens/Quoter_flattened.sol\":51916:51928  amount1Delta */\n      dup9\n        /* \"contracts/lens/Quoter_flattened.sol\":51940:51952  amount0Delta */\n      dup11\n        /* \"contracts/lens/Quoter_flattened.sol\":51939:51952  -amount0Delta */\n      0x00\n      sub\n        /* \"contracts/lens/Quoter_flattened.sol\":51766:51954  amount0Delta > 0... */\n      jump(tag_115)\n    tag_114:\n        /* \"contracts/lens/Quoter_flattened.sol\":51812:51820  tokenOut */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":51802:51820  tokenIn < tokenOut */\n      and\n        /* \"contracts/lens/Quoter_flattened.sol\":51802:51809  tokenIn */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":51802:51820  tokenIn < tokenOut */\n      and\n      lt\n        /* \"contracts/lens/Quoter_flattened.sol\":51830:51842  amount0Delta */\n      dup10\n        /* \"contracts/lens/Quoter_flattened.sol\":51854:51866  amount1Delta */\n      dup10\n        /* \"contracts/lens/Quoter_flattened.sol\":51853:51866  -amount1Delta */\n      0x00\n      sub\n        /* \"contracts/lens/Quoter_flattened.sol\":51766:51954  amount0Delta > 0... */\n    tag_115:\n        /* \"contracts/lens/Quoter_flattened.sol\":51687:51954  (bool isExactInput, uint256 amountToPay, uint256 amountReceived) =... */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":51968:51980  isExactInput */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":51964:52494  if (isExactInput) {... */\n      iszero\n      tag_116\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":52040:52044  0x40 */\n      0x40\n        /* \"contracts/lens/Quoter_flattened.sol\":52034:52045  mload(0x40) */\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":52074:52088  amountReceived */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":52069:52072  ptr */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":52062:52089  mstore(ptr, amountReceived) */\n      mstore\n        /* \"contracts/lens/Quoter_flattened.sol\":52118:52120  32 */\n      0x20\n        /* \"contracts/lens/Quoter_flattened.sol\":52113:52116  ptr */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":52106:52121  revert(ptr, 32) */\n      revert\n        /* \"contracts/lens/Quoter_flattened.sol\":52005:52135  {... */\n    tag_116:\n        /* \"contracts/lens/Quoter_flattened.sol\":52270:52285  amountOutCached */\n      sload(0x00)\n        /* \"contracts/lens/Quoter_flattened.sol\":52270:52290  amountOutCached != 0 */\n      iszero\n        /* \"contracts/lens/Quoter_flattened.sol\":52266:52334  if (amountOutCached != 0) require(amountReceived == amountOutCached) */\n      tag_119\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":52318:52333  amountOutCached */\n      sload(0x00)\n        /* \"contracts/lens/Quoter_flattened.sol\":52300:52314  amountReceived */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":52300:52333  amountReceived == amountOutCached */\n      eq\n        /* \"contracts/lens/Quoter_flattened.sol\":52292:52334  require(amountReceived == amountOutCached) */\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n        /* \"contracts/lens/Quoter_flattened.sol\":52392:52396  0x40 */\n      0x40\n        /* \"contracts/lens/Quoter_flattened.sol\":52386:52397  mload(0x40) */\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":52426:52437  amountToPay */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":52421:52424  ptr */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":52414:52438  mstore(ptr, amountToPay) */\n      mstore\n        /* \"contracts/lens/Quoter_flattened.sol\":52467:52469  32 */\n      0x20\n        /* \"contracts/lens/Quoter_flattened.sol\":52462:52465  ptr */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":52455:52470  revert(ptr, 32) */\n      revert\n        /* \"contracts/lens/Quoter_flattened.sol\":7032:7170  function hasMultiplePools(bytes memory path) internal pure returns (bool) {... */\n    tag_45:\n        /* \"contracts/lens/Quoter_flattened.sol\":7123:7134  path.length */\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":6817:6841  POP_OFFSET + NEXT_OFFSET */\n      0x42\n      gt\n        /* \"contracts/lens/Quoter_flattened.sol\":7123:7163  path.length >= MULTIPLE_POOLS_MIN_LENGTH */\n      iszero\n      swap1\n        /* \"contracts/lens/Quoter_flattened.sol\":7032:7170  function hasMultiplePools(bytes memory path) internal pure returns (bool) {... */\n      jump\t// out\n        /* \"contracts/lens/Quoter_flattened.sol\":7819:8133  function decodeFirstPool(bytes memory path)... */\n    tag_47:\n        /* \"contracts/lens/Quoter_flattened.sol\":7923:7937  address tokenA */\n      0x00\n      dup1\n      dup1\n        /* \"contracts/lens/Quoter_flattened.sol\":8023:8040  path.toAddress(0) */\n      tag_122\n        /* \"contracts/lens/Quoter_flattened.sol\":8023:8027  path */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":7923:7937  address tokenA */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":8023:8037  path.toAddress */\n      tag_123\n        /* \"contracts/lens/Quoter_flattened.sol\":8023:8040  path.toAddress(0) */\n      jump\t// in\n    tag_122:\n        /* \"contracts/lens/Quoter_flattened.sol\":8014:8040  tokenA = path.toAddress(0) */\n      swap3\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":8056:8080  path.toUint24(ADDR_SIZE) */\n      tag_124\n        /* \"contracts/lens/Quoter_flattened.sol\":8056:8060  path */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":6344:6346  20 */\n      0x14\n        /* \"contracts/lens/Quoter_flattened.sol\":8056:8069  path.toUint24 */\n      tag_125\n        /* \"contracts/lens/Quoter_flattened.sol\":8056:8080  path.toUint24(ADDR_SIZE) */\n      jump\t// in\n    tag_124:\n        /* \"contracts/lens/Quoter_flattened.sol\":8050:8080  fee = path.toUint24(ADDR_SIZE) */\n      swap1\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":8099:8126  path.toAddress(NEXT_OFFSET) */\n      tag_126\n        /* \"contracts/lens/Quoter_flattened.sol\":8099:8103  path */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":6547:6567  ADDR_SIZE + FEE_SIZE */\n      0x17\n        /* \"contracts/lens/Quoter_flattened.sol\":8099:8113  path.toAddress */\n      tag_123\n        /* \"contracts/lens/Quoter_flattened.sol\":8099:8126  path.toAddress(NEXT_OFFSET) */\n      jump\t// in\n    tag_126:\n        /* \"contracts/lens/Quoter_flattened.sol\":8090:8126  tokenB = path.toAddress(NEXT_OFFSET) */\n      swap2\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":7819:8133  function decodeFirstPool(bytes memory path)... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/lens/Quoter_flattened.sol\":8675:8824  function skipToken(bytes memory path) internal pure returns (bytes memory) {... */\n    tag_51:\n        /* \"contracts/lens/Quoter_flattened.sol\":8791:8802  path.length */\n      dup1\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":8736:8748  bytes memory */\n      0x60\n      swap1\n        /* \"contracts/lens/Quoter_flattened.sol\":8767:8817  path.slice(NEXT_OFFSET, path.length - NEXT_OFFSET) */\n      tag_43\n      swap1\n        /* \"contracts/lens/Quoter_flattened.sol\":8791:8795  path */\n      dup4\n      swap1\n        /* \"contracts/lens/Quoter_flattened.sol\":6547:6567  ADDR_SIZE + FEE_SIZE */\n      0x17\n      swap1\n      not(0x16)\n        /* \"contracts/lens/Quoter_flattened.sol\":8791:8816  path.length - NEXT_OFFSET */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":8767:8777  path.slice */\n      tag_129\n        /* \"contracts/lens/Quoter_flattened.sol\":8767:8817  path.slice(NEXT_OFFSET, path.length - NEXT_OFFSET) */\n      jump\t// in\n        /* \"contracts/lens/Quoter_flattened.sol\":50957:51206  function getPool(... */\n    tag_56:\n        /* \"contracts/lens/Quoter_flattened.sol\":51070:51084  IUniswapV3Pool */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":51118:51198  PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      tag_131\n        /* \"contracts/lens/Quoter_flattened.sol\":51145:51152  factory */\n      immutable(\"0x6b88fa438cae5c1216aa45b8d58426fb848d0ea4056264a8a6a1dd473ff0fc05\")\n        /* \"contracts/lens/Quoter_flattened.sol\":51154:51197  PoolAddress.getPoolKey(tokenA, tokenB, fee) */\n      tag_132\n        /* \"contracts/lens/Quoter_flattened.sol\":51177:51183  tokenA */\n      dup7\n        /* \"contracts/lens/Quoter_flattened.sol\":51185:51191  tokenB */\n      dup7\n        /* \"contracts/lens/Quoter_flattened.sol\":51193:51196  fee */\n      dup7\n        /* \"contracts/lens/Quoter_flattened.sol\":51154:51176  PoolAddress.getPoolKey */\n      tag_133\n        /* \"contracts/lens/Quoter_flattened.sol\":51154:51197  PoolAddress.getPoolKey(tokenA, tokenB, fee) */\n      jump\t// in\n    tag_132:\n        /* \"contracts/lens/Quoter_flattened.sol\":51118:51144  PoolAddress.computeAddress */\n      tag_134\n        /* \"contracts/lens/Quoter_flattened.sol\":51118:51198  PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      jump\t// in\n    tag_131:\n        /* \"contracts/lens/Quoter_flattened.sol\":51096:51199  return IUniswapV3Pool(PoolAddress.computeAddress(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee))) */\n      swap5\n        /* \"contracts/lens/Quoter_flattened.sol\":50957:51206  function getPool(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lens/Quoter_flattened.sol\":50077:50198  function toInt256(uint256 y) internal pure returns (int256 z) {... */\n    tag_58:\n        /* \"contracts/lens/Quoter_flattened.sol\":50129:50137  int256 z */\n      0x00\n      shl(0xff, 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":50157:50158  y */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":50157:50167  y < 2**255 */\n      lt\n        /* \"contracts/lens/Quoter_flattened.sol\":50149:50168  require(y < 2**255) */\n      tag_136\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_136:\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":50189:50190  y */\n      swap1\n        /* \"contracts/lens/Quoter_flattened.sol\":50077:50198  function toInt256(uint256 y) internal pure returns (int256 z) {... */\n      jump\t// out\n        /* \"contracts/lens/Quoter_flattened.sol\":52580:52952  function parseRevertReason(bytes memory reason) private pure returns (uint256) {... */\n    tag_78:\n        /* \"contracts/lens/Quoter_flattened.sol\":52650:52657  uint256 */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":52673:52679  reason */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":52673:52686  reason.length */\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":52690:52692  32 */\n      0x20\n        /* \"contracts/lens/Quoter_flattened.sol\":52673:52692  reason.length != 32 */\n      eq\n        /* \"contracts/lens/Quoter_flattened.sol\":52669:52900  if (reason.length != 32) {... */\n      tag_138\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":52728:52730  68 */\n      0x44\n        /* \"contracts/lens/Quoter_flattened.sol\":52712:52718  reason */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":52712:52725  reason.length */\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":52712:52730  reason.length < 68 */\n      lt\n        /* \"contracts/lens/Quoter_flattened.sol\":52708:52758  if (reason.length < 68) revert('Unexpected error') */\n      iszero\n      tag_139\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":52732:52758  revert('Unexpected error') */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/lens/Quoter_flattened.sol\":52708:52758  if (reason.length < 68) revert('Unexpected error') */\n    tag_139:\n        /* \"contracts/lens/Quoter_flattened.sol\":52821:52825  0x04 */\n      0x04\n        /* \"contracts/lens/Quoter_flattened.sol\":52813:52819  reason */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":52809:52826  add(reason, 0x04) */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":52799:52826  reason := add(reason, 0x04) */\n      swap2\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":52871:52877  reason */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":52860:52888  abi.decode(reason, (string)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"contracts/lens/Quoter_flattened.sol\":52853:52889  revert(abi.decode(reason, (string))) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap2\n      swap1\n      tag_145\n      jump\t// in\n        /* \"contracts/lens/Quoter_flattened.sol\":52669:52900  if (reason.length != 32) {... */\n    tag_138:\n        /* \"contracts/lens/Quoter_flattened.sol\":52927:52933  reason */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":52916:52945  abi.decode(reason, (uint256)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_43\n      swap2\n      swap1\n      tag_147\n      jump\t// in\n        /* \"contracts/lens/Quoter_flattened.sol\":39693:39952  function verifyCallback(... */\n    tag_113:\n        /* \"contracts/lens/Quoter_flattened.sol\":39839:39858  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":39877:39945  verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      tag_53\n        /* \"contracts/lens/Quoter_flattened.sol\":39892:39899  factory */\n      dup6\n        /* \"contracts/lens/Quoter_flattened.sol\":39901:39944  PoolAddress.getPoolKey(tokenA, tokenB, fee) */\n      tag_150\n        /* \"contracts/lens/Quoter_flattened.sol\":39924:39930  tokenA */\n      dup7\n        /* \"contracts/lens/Quoter_flattened.sol\":39932:39938  tokenB */\n      dup7\n        /* \"contracts/lens/Quoter_flattened.sol\":39940:39943  fee */\n      dup7\n        /* \"contracts/lens/Quoter_flattened.sol\":39901:39923  PoolAddress.getPoolKey */\n      tag_133\n        /* \"contracts/lens/Quoter_flattened.sol\":39901:39944  PoolAddress.getPoolKey(tokenA, tokenB, fee) */\n      jump\t// in\n    tag_150:\n        /* \"contracts/lens/Quoter_flattened.sol\":39877:39891  verifyCallback */\n      tag_151\n        /* \"contracts/lens/Quoter_flattened.sol\":39877:39945  verifyCallback(factory, PoolAddress.getPoolKey(tokenA, tokenB, fee)) */\n      jump\t// in\n        /* \"contracts/lens/Quoter_flattened.sol\":5279:5695  function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {... */\n    tag_123:\n        /* \"contracts/lens/Quoter_flattened.sol\":5358:5365  address */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":5400:5406  _start */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":5385:5391  _start */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":5394:5396  20 */\n      0x14\n        /* \"contracts/lens/Quoter_flattened.sol\":5385:5396  _start + 20 */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":5385:5406  _start + 20 >= _start */\n      lt\n      iszero\n        /* \"contracts/lens/Quoter_flattened.sol\":5377:5429  require(_start + 20 >= _start, 'toAddress_overflow') */\n      tag_153\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_155\n      jump\t// in\n    tag_153:\n        /* \"contracts/lens/Quoter_flattened.sol\":5464:5470  _start */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":5473:5475  20 */\n      0x14\n        /* \"contracts/lens/Quoter_flattened.sol\":5464:5475  _start + 20 */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":5447:5453  _bytes */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":5447:5460  _bytes.length */\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":5447:5475  _bytes.length >= _start + 20 */\n      lt\n      iszero\n        /* \"contracts/lens/Quoter_flattened.sol\":5439:5501  require(_bytes.length >= _start + 20, 'toAddress_outOfBounds') */\n      tag_156\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_158\n      jump\t// in\n    tag_156:\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":5589:5619  add(add(_bytes, 0x20), _start) */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":5605:5609  0x20 */\n      0x20\n        /* \"contracts/lens/Quoter_flattened.sol\":5589:5619  add(add(_bytes, 0x20), _start) */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":5583:5620  mload(add(add(_bytes, 0x20), _start)) */\n      mload\n      shl(0x60, 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":5579:5650  div(mload(add(add(_bytes, 0x20), _start)), 0x1000000000000000000000000) */\n      swap1\n      div\n      swap1\n        /* \"contracts/lens/Quoter_flattened.sol\":5279:5695  function toAddress(bytes memory _bytes, uint256 _start) internal pure returns (address) {... */\n      jump\t// out\n        /* \"contracts/lens/Quoter_flattened.sol\":5701:6066  function toUint24(bytes memory _bytes, uint256 _start) internal pure returns (uint24) {... */\n    tag_125:\n        /* \"contracts/lens/Quoter_flattened.sol\":5779:5785  uint24 */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":5819:5825  _start */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":5805:5811  _start */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":5814:5815  3 */\n      0x03\n        /* \"contracts/lens/Quoter_flattened.sol\":5805:5815  _start + 3 */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":5805:5825  _start + 3 >= _start */\n      lt\n      iszero\n        /* \"contracts/lens/Quoter_flattened.sol\":5797:5847  require(_start + 3 >= _start, 'toUint24_overflow') */\n      tag_160\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_162\n      jump\t// in\n    tag_160:\n        /* \"contracts/lens/Quoter_flattened.sol\":5882:5888  _start */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":5891:5892  3 */\n      0x03\n        /* \"contracts/lens/Quoter_flattened.sol\":5882:5892  _start + 3 */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":5865:5871  _bytes */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":5865:5878  _bytes.length */\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":5865:5892  _bytes.length >= _start + 3 */\n      lt\n      iszero\n        /* \"contracts/lens/Quoter_flattened.sol\":5857:5917  require(_bytes.length >= _start + 3, 'toUint24_outOfBounds') */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_165\n      jump\t// in\n    tag_163:\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":5994:6023  add(add(_bytes, 0x3), _start) */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":6010:6013  0x3 */\n      0x03\n        /* \"contracts/lens/Quoter_flattened.sol\":5994:6023  add(add(_bytes, 0x3), _start) */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":5988:6024  mload(add(add(_bytes, 0x3), _start)) */\n      mload\n      swap1\n        /* \"contracts/lens/Quoter_flattened.sol\":5701:6066  function toUint24(bytes memory _bytes, uint256 _start) internal pure returns (uint24) {... */\n      jump\t// out\n        /* \"contracts/lens/Quoter_flattened.sol\":2266:5273  function slice(... */\n    tag_129:\n        /* \"contracts/lens/Quoter_flattened.sol\":2388:2400  bytes memory */\n      0x60\n        /* \"contracts/lens/Quoter_flattened.sol\":2436:2443  _length */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":2420:2427  _length */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":2430:2432  31 */\n      0x1f\n        /* \"contracts/lens/Quoter_flattened.sol\":2420:2432  _length + 31 */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":2420:2443  _length + 31 >= _length */\n      lt\n      iszero\n        /* \"contracts/lens/Quoter_flattened.sol\":2412:2462  require(_length + 31 >= _length, 'slice_overflow') */\n      tag_167\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_169\n      jump\t// in\n    tag_167:\n        /* \"contracts/lens/Quoter_flattened.sol\":2500:2506  _start */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":2489:2496  _length */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":2480:2486  _start */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":2480:2496  _start + _length */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":2480:2506  _start + _length >= _start */\n      lt\n      iszero\n        /* \"contracts/lens/Quoter_flattened.sol\":2472:2525  require(_start + _length >= _start, 'slice_overflow') */\n      tag_170\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_169\n      jump\t// in\n    tag_170:\n        /* \"contracts/lens/Quoter_flattened.sol\":2569:2576  _length */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":2560:2566  _start */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":2560:2576  _start + _length */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":2543:2549  _bytes */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":2543:2556  _bytes.length */\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":2543:2576  _bytes.length >= _start + _length */\n      lt\n      iszero\n        /* \"contracts/lens/Quoter_flattened.sol\":2535:2598  require(_bytes.length >= _start + _length, 'slice_outOfBounds') */\n      tag_172\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_174\n      jump\t// in\n    tag_172:\n        /* \"contracts/lens/Quoter_flattened.sol\":2609:2631  bytes memory tempBytes */\n      0x60\n        /* \"contracts/lens/Quoter_flattened.sol\":2672:2687  iszero(_length) */\n      dup3\n      iszero\n        /* \"contracts/lens/Quoter_flattened.sol\":2704:4803  case 0 {... */\n      dup1\n      iszero\n      tag_176\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":4956:4960  0x40 */\n      0x40\n        /* \"contracts/lens/Quoter_flattened.sol\":4950:4961  mload(0x40) */\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":4937:4961  tempBytes := mload(0x40) */\n      swap2\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":5154:5155  0 */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":5143:5152  tempBytes */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":5136:5156  mstore(tempBytes, 0) */\n      mstore\n        /* \"contracts/lens/Quoter_flattened.sol\":5206:5210  0x20 */\n      0x20\n        /* \"contracts/lens/Quoter_flattened.sol\":5195:5204  tempBytes */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":5191:5211  add(tempBytes, 0x20) */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":5185:5189  0x40 */\n      0x40\n        /* \"contracts/lens/Quoter_flattened.sol\":5178:5212  mstore(0x40, add(tempBytes, 0x20)) */\n      mstore\n        /* \"contracts/lens/Quoter_flattened.sol\":2665:5230  switch iszero(_length)... */\n      jump(tag_175)\n        /* \"contracts/lens/Quoter_flattened.sol\":2704:4803  case 0 {... */\n    tag_176:\n        /* \"contracts/lens/Quoter_flattened.sol\":2898:2902  0x40 */\n      0x40\n        /* \"contracts/lens/Quoter_flattened.sol\":2892:2903  mload(0x40) */\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":2879:2903  tempBytes := mload(0x40) */\n      swap2\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":3593:3595  31 */\n      0x1f\n        /* \"contracts/lens/Quoter_flattened.sol\":3584:3591  _length */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":3580:3596  and(_length, 31) */\n      and\n        /* \"contracts/lens/Quoter_flattened.sol\":3995:4004  lengthmod */\n      dup1\n        /* \"contracts/lens/Quoter_flattened.sol\":3988:4005  iszero(lengthmod) */\n      iszero\n        /* \"contracts/lens/Quoter_flattened.sol\":3982:3986  0x20 */\n      0x20\n        /* \"contracts/lens/Quoter_flattened.sol\":3978:4006  mul(0x20, iszero(lengthmod)) */\n      mul\n        /* \"contracts/lens/Quoter_flattened.sol\":3966:3975  lengthmod */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":3955:3964  tempBytes */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":3951:3976  add(tempBytes, lengthmod) */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":3947:4007  add(add(tempBytes, lengthmod), mul(0x20, iszero(lengthmod))) */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":4047:4054  _length */\n      dup6\n        /* \"contracts/lens/Quoter_flattened.sol\":4043:4045  mc */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":4039:4055  add(mc, _length) */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":4315:4321  _start */\n      dup8\n        /* \"contracts/lens/Quoter_flattened.sol\":4301:4310  lengthmod */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":4294:4311  iszero(lengthmod) */\n      iszero\n        /* \"contracts/lens/Quoter_flattened.sol\":4288:4292  0x20 */\n      0x20\n        /* \"contracts/lens/Quoter_flattened.sol\":4284:4312  mul(0x20, iszero(lengthmod)) */\n      mul\n        /* \"contracts/lens/Quoter_flattened.sol\":4272:4281  lengthmod */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":4264:4270  _bytes */\n      dup12\n        /* \"contracts/lens/Quoter_flattened.sol\":4260:4282  add(_bytes, lengthmod) */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":4256:4313  add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))) */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":4252:4322  add(add(add(_bytes, lengthmod), mul(0x20, iszero(lengthmod))), _start) */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":4077:4538  for {... */\n    tag_177:\n        /* \"contracts/lens/Quoter_flattened.sol\":4352:4355  end */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":4348:4350  mc */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":4345:4356  lt(mc, end) */\n      lt\n        /* \"contracts/lens/Quoter_flattened.sol\":4077:4538  for {... */\n      iszero\n      tag_179\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":4506:4515  mload(cc) */\n      dup1\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":4495:4516  mstore(mc, mload(cc)) */\n      dup4\n      mstore\n        /* \"contracts/lens/Quoter_flattened.sol\":4397:4401  0x20 */\n      0x20\n        /* \"contracts/lens/Quoter_flattened.sol\":4389:4402  add(mc, 0x20) */\n      swap3\n      dup4\n      add\n      swap3\n        /* \"contracts/lens/Quoter_flattened.sol\":4433:4446  add(cc, 0x20) */\n      add\n        /* \"contracts/lens/Quoter_flattened.sol\":4077:4538  for {... */\n      jump(tag_177)\n    tag_179:\n      pop\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":4560:4586  mstore(tempBytes, _length) */\n      dup6\n      dup5\n      mstore\n        /* \"contracts/lens/Quoter_flattened.sol\":4780:4782  31 */\n      0x1f\n        /* \"contracts/lens/Quoter_flattened.sol\":4763:4774  add(mc, 31) */\n      add\n      not(0x1f)\n        /* \"contracts/lens/Quoter_flattened.sol\":4759:4784  and(add(mc, 31), not(31)) */\n      and\n        /* \"contracts/lens/Quoter_flattened.sol\":4753:4757  0x40 */\n      0x40\n        /* \"contracts/lens/Quoter_flattened.sol\":4746:4785  mstore(0x40, and(add(mc, 31), not(31))) */\n      mstore\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":2665:5230  switch iszero(_length)... */\n    tag_175:\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":5257:5266  tempBytes */\n      swap5\n        /* \"contracts/lens/Quoter_flattened.sol\":2266:5273  function slice(... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lens/Quoter_flattened.sol\":831:1105  function getPoolKey(... */\n    tag_133:\n        /* \"contracts/lens/Quoter_flattened.sol\":948:962  PoolKey memory */\n      tag_180\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"contracts/lens/Quoter_flattened.sol\":987:993  tokenB */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":978:993  tokenA > tokenB */\n      and\n        /* \"contracts/lens/Quoter_flattened.sol\":978:984  tokenA */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":978:993  tokenA > tokenB */\n      and\n      gt\n        /* \"contracts/lens/Quoter_flattened.sol\":974:1030  if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA) */\n      iszero\n      tag_183\n      jumpi\n        /* \"contracts/lens/Quoter_flattened.sol\":1015:1021  tokenB */\n      swap2\n      swap3\n        /* \"contracts/lens/Quoter_flattened.sol\":1023:1029  tokenA */\n      swap2\n        /* \"contracts/lens/Quoter_flattened.sol\":974:1030  if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA) */\n    tag_183:\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":1047:1098  PoolKey({token0: tokenA, token1: tokenB, fee: fee}) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap5\n      dup6\n      and\n      dup2\n      mstore\n      swap3\n      swap1\n      swap4\n      and\n      0x20\n      dup4\n      add\n      mstore\n      0xffffff\n      and\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n        /* \"contracts/lens/Quoter_flattened.sol\":831:1105  function getPoolKey(... */\n      jump\t// out\n        /* \"contracts/lens/Quoter_flattened.sol\":1352:1864  function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {... */\n    tag_134:\n        /* \"contracts/lens/Quoter_flattened.sol\":1436:1448  address pool */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":1481:1484  key */\n      dup2\n        /* \"contracts/lens/Quoter_flattened.sol\":1481:1491  key.token1 */\n      0x20\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":1468:1491  key.token0 < key.token1 */\n      and\n        /* \"contracts/lens/Quoter_flattened.sol\":1468:1471  key */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":1468:1478  key.token0 */\n      0x00\n      add\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":1468:1491  key.token0 < key.token1 */\n      and\n      lt\n        /* \"contracts/lens/Quoter_flattened.sol\":1460:1492  require(key.token0 < key.token1) */\n      tag_185\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_185:\n        /* \"contracts/lens/Quoter_flattened.sol\":1661:1668  factory */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":1715:1718  key */\n      dup3\n        /* \"contracts/lens/Quoter_flattened.sol\":1715:1725  key.token0 */\n      0x00\n      add\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":1727:1730  key */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":1727:1737  key.token1 */\n      0x20\n      add\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":1739:1742  key */\n      dup5\n        /* \"contracts/lens/Quoter_flattened.sol\":1739:1746  key.fee */\n      0x40\n      add\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":1704:1747  abi.encode(key.token0, key.token1, key.fee) */\n      add(0x20, mload(0x40))\n      tag_186\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"contracts/lens/Quoter_flattened.sol\":1694:1748  keccak256(abi.encode(key.token0, key.token1, key.fee)) */\n      dup1\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":1704:1747  abi.encode(key.token0, key.token1, key.fee) */\n      0x20\n        /* \"contracts/lens/Quoter_flattened.sol\":1694:1748  keccak256(abi.encode(key.token0, key.token1, key.fee)) */\n      swap2\n      dup3\n      add\n      keccak256\n        /* \"contracts/lens/Quoter_flattened.sol\":1586:1815  abi.encodePacked(... */\n      tag_188\n      swap4\n      swap3\n        /* \"contracts/lens/Quoter_flattened.sol\":1694:1748  keccak256(abi.encode(key.token0, key.token1, key.fee)) */\n      swap1\n      swap2\n        /* \"contracts/lens/Quoter_flattened.sol\":288:354  0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54 */\n      0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54\n      swap2\n        /* \"contracts/lens/Quoter_flattened.sol\":1586:1815  abi.encodePacked(... */\n      add\n      tag_189\n      jump\t// in\n    tag_188:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap2\n      swap1\n      mstore\n        /* \"contracts/lens/Quoter_flattened.sol\":1555:1833  keccak256(... */\n      dup1\n      mload\n        /* \"contracts/lens/Quoter_flattened.sol\":1586:1815  abi.encodePacked(... */\n      0x20\n        /* \"contracts/lens/Quoter_flattened.sol\":1555:1833  keccak256(... */\n      swap1\n      swap2\n      add\n      keccak256\n      swap4\n        /* \"contracts/lens/Quoter_flattened.sol\":1352:1864  function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/lens/Quoter_flattened.sol\":40199:40478  function verifyCallback(address factory, PoolAddress.PoolKey memory poolKey)... */\n    tag_151:\n        /* \"contracts/lens/Quoter_flattened.sol\":40323:40342  IUniswapV3Pool pool */\n      0x00\n        /* \"contracts/lens/Quoter_flattened.sol\":40380:40424  PoolAddress.computeAddress(factory, poolKey) */\n      tag_191\n        /* \"contracts/lens/Quoter_flattened.sol\":40407:40414  factory */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":40416:40423  poolKey */\n      dup4\n        /* \"contracts/lens/Quoter_flattened.sol\":40380:40406  PoolAddress.computeAddress */\n      tag_134\n        /* \"contracts/lens/Quoter_flattened.sol\":40380:40424  PoolAddress.computeAddress(factory, poolKey) */\n      jump\t// in\n    tag_191:\n        /* \"contracts/lens/Quoter_flattened.sol\":40358:40425  pool = IUniswapV3Pool(PoolAddress.computeAddress(factory, poolKey)) */\n      swap1\n      pop\n        /* \"contracts/lens/Quoter_flattened.sol\":40443:40453  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/lens/Quoter_flattened.sol\":40443:40470  msg.sender == address(pool) */\n      dup3\n      and\n      eq\n        /* \"contracts/lens/Quoter_flattened.sol\":40435:40471  require(msg.sender == address(pool)) */\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_181:\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      swap2\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14:499   */\n    tag_194:\n      0x00\n        /* \"#utility.yul\":111:114   */\n      dup3\n        /* \"#utility.yul\":104:108   */\n      0x1f\n        /* \"#utility.yul\":96:102   */\n      dup4\n        /* \"#utility.yul\":92:109   */\n      add\n        /* \"#utility.yul\":88:115   */\n      slt\n        /* \"#utility.yul\":78:80   */\n      tag_196\n      jumpi\n        /* \"#utility.yul\":133:138   */\n      dup1\n        /* \"#utility.yul\":126:131   */\n      dup2\n        /* \"#utility.yul\":119:139   */\n      revert\n        /* \"#utility.yul\":78:80   */\n    tag_196:\n        /* \"#utility.yul\":173:179   */\n      dup2\n        /* \"#utility.yul\":160:180   */\n      calldataload\n        /* \"#utility.yul\":204:253   */\n      tag_197\n        /* \"#utility.yul\":219:252   */\n      tag_198\n        /* \"#utility.yul\":249:251   */\n      dup3\n        /* \"#utility.yul\":219:252   */\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":204:253   */\n      tag_200\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":278:280   */\n      dup2\n        /* \"#utility.yul\":269:276   */\n      dup2\n        /* \"#utility.yul\":262:281   */\n      mstore\n        /* \"#utility.yul\":324:327   */\n      dup5\n        /* \"#utility.yul\":317:321   */\n      0x20\n        /* \"#utility.yul\":312:314   */\n      dup4\n        /* \"#utility.yul\":304:310   */\n      dup7\n        /* \"#utility.yul\":300:315   */\n      add\n        /* \"#utility.yul\":296:322   */\n      add\n        /* \"#utility.yul\":293:328   */\n      gt\n        /* \"#utility.yul\":290:292   */\n      iszero\n      tag_201\n      jumpi\n        /* \"#utility.yul\":345:350   */\n      dup3\n        /* \"#utility.yul\":338:343   */\n      dup4\n        /* \"#utility.yul\":331:351   */\n      revert\n        /* \"#utility.yul\":290:292   */\n    tag_201:\n        /* \"#utility.yul\":414:416   */\n      dup2\n        /* \"#utility.yul\":407:411   */\n      0x20\n        /* \"#utility.yul\":399:405   */\n      dup6\n        /* \"#utility.yul\":395:412   */\n      add\n        /* \"#utility.yul\":388:392   */\n      0x20\n        /* \"#utility.yul\":379:386   */\n      dup4\n        /* \"#utility.yul\":375:393   */\n      add\n        /* \"#utility.yul\":362:417   */\n      calldatacopy\n        /* \"#utility.yul\":437:453   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":455:459   */\n      0x20\n        /* \"#utility.yul\":433:460   */\n      add\n        /* \"#utility.yul\":426:468   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":441:448   */\n      swap3\n        /* \"#utility.yul\":68:499   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":504:1299   */\n    tag_19:\n      0x00\n      dup1\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":683:686   */\n      0xa0\n        /* \"#utility.yul\":671:680   */\n      dup7\n        /* \"#utility.yul\":662:669   */\n      dup9\n        /* \"#utility.yul\":658:681   */\n      sub\n        /* \"#utility.yul\":654:687   */\n      slt\n        /* \"#utility.yul\":651:653   */\n      iszero\n      tag_203\n      jumpi\n        /* \"#utility.yul\":705:711   */\n      dup1\n        /* \"#utility.yul\":697:703   */\n      dup2\n        /* \"#utility.yul\":690:712   */\n      revert\n        /* \"#utility.yul\":651:653   */\n    tag_203:\n        /* \"#utility.yul\":749:758   */\n      dup6\n        /* \"#utility.yul\":736:759   */\n      calldataload\n        /* \"#utility.yul\":768:801   */\n      tag_204\n        /* \"#utility.yul\":795:800   */\n      dup2\n        /* \"#utility.yul\":768:801   */\n      tag_205\n      jump\t// in\n    tag_204:\n        /* \"#utility.yul\":820:825   */\n      swap5\n      pop\n        /* \"#utility.yul\":877:879   */\n      0x20\n        /* \"#utility.yul\":862:880   */\n      dup7\n      add\n        /* \"#utility.yul\":849:881   */\n      calldataload\n        /* \"#utility.yul\":890:925   */\n      tag_206\n        /* \"#utility.yul\":849:881   */\n      dup2\n        /* \"#utility.yul\":890:925   */\n      tag_205\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":944:951   */\n      swap4\n      pop\n        /* \"#utility.yul\":1003:1005   */\n      0x40\n        /* \"#utility.yul\":988:1006   */\n      dup7\n      add\n        /* \"#utility.yul\":975:1007   */\n      calldataload\n        /* \"#utility.yul\":1051:1059   */\n      0xffffff\n        /* \"#utility.yul\":1038:1060   */\n      dup2\n      and\n        /* \"#utility.yul\":1026:1061   */\n      dup2\n      eq\n        /* \"#utility.yul\":1016:1018   */\n      tag_207\n      jumpi\n        /* \"#utility.yul\":1080:1086   */\n      dup2\n        /* \"#utility.yul\":1072:1078   */\n      dup3\n        /* \"#utility.yul\":1065:1087   */\n      revert\n        /* \"#utility.yul\":1016:1018   */\n    tag_207:\n        /* \"#utility.yul\":1108:1115   */\n      swap3\n      pop\n        /* \"#utility.yul\":1162:1164   */\n      0x60\n        /* \"#utility.yul\":1147:1165   */\n      dup7\n      add\n        /* \"#utility.yul\":1134:1166   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":1218:1221   */\n      0x80\n        /* \"#utility.yul\":1203:1222   */\n      dup7\n      add\n        /* \"#utility.yul\":1190:1223   */\n      calldataload\n        /* \"#utility.yul\":1232:1267   */\n      tag_208\n        /* \"#utility.yul\":1190:1223   */\n      dup2\n        /* \"#utility.yul\":1232:1267   */\n      tag_205\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":1286:1293   */\n      dup1\n        /* \"#utility.yul\":1276:1293   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":641:1299   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1304:1714   */\n    tag_13:\n      0x00\n      dup1\n        /* \"#utility.yul\":1442:1444   */\n      0x40\n        /* \"#utility.yul\":1430:1439   */\n      dup4\n        /* \"#utility.yul\":1421:1428   */\n      dup6\n        /* \"#utility.yul\":1417:1440   */\n      sub\n        /* \"#utility.yul\":1413:1445   */\n      slt\n        /* \"#utility.yul\":1410:1412   */\n      iszero\n      tag_210\n      jumpi\n        /* \"#utility.yul\":1463:1469   */\n      dup2\n        /* \"#utility.yul\":1455:1461   */\n      dup3\n        /* \"#utility.yul\":1448:1470   */\n      revert\n        /* \"#utility.yul\":1410:1412   */\n    tag_210:\n        /* \"#utility.yul\":1508:1517   */\n      dup3\n        /* \"#utility.yul\":1495:1518   */\n      calldataload\n        /* \"#utility.yul\":1541:1559   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1533:1539   */\n      dup2\n        /* \"#utility.yul\":1530:1560   */\n      gt\n        /* \"#utility.yul\":1527:1529   */\n      iszero\n      tag_211\n      jumpi\n        /* \"#utility.yul\":1578:1584   */\n      dup3\n        /* \"#utility.yul\":1570:1576   */\n      dup4\n        /* \"#utility.yul\":1563:1585   */\n      revert\n        /* \"#utility.yul\":1527:1529   */\n    tag_211:\n        /* \"#utility.yul\":1606:1657   */\n      tag_212\n        /* \"#utility.yul\":1649:1656   */\n      dup6\n        /* \"#utility.yul\":1640:1646   */\n      dup3\n        /* \"#utility.yul\":1629:1638   */\n      dup7\n        /* \"#utility.yul\":1625:1647   */\n      add\n        /* \"#utility.yul\":1606:1657   */\n      tag_194\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":1596:1657   */\n      swap6\n        /* \"#utility.yul\":1704:1706   */\n      0x20\n        /* \"#utility.yul\":1689:1707   */\n      swap5\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":1676:1708   */\n      calldataload\n      swap5\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1400:1714   */\n      jump\t// out\n        /* \"#utility.yul\":1719:1972   */\n    tag_70:\n      0x00\n      dup1\n        /* \"#utility.yul\":1857:1859   */\n      0x40\n        /* \"#utility.yul\":1845:1854   */\n      dup4\n        /* \"#utility.yul\":1836:1843   */\n      dup6\n        /* \"#utility.yul\":1832:1855   */\n      sub\n        /* \"#utility.yul\":1828:1860   */\n      slt\n        /* \"#utility.yul\":1825:1827   */\n      iszero\n      tag_214\n      jumpi\n        /* \"#utility.yul\":1878:1884   */\n      dup2\n        /* \"#utility.yul\":1870:1876   */\n      dup3\n        /* \"#utility.yul\":1863:1885   */\n      revert\n        /* \"#utility.yul\":1825:1827   */\n    tag_214:\n      pop\n      pop\n        /* \"#utility.yul\":1906:1922   */\n      dup1\n      mload\n        /* \"#utility.yul\":1962:1964   */\n      0x20\n        /* \"#utility.yul\":1947:1965   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":1941:1966   */\n      mload\n        /* \"#utility.yul\":1906:1922   */\n      swap1\n      swap3\n        /* \"#utility.yul\":1941:1966   */\n      swap1\n      swap2\n      pop\n        /* \"#utility.yul\":1815:1972   */\n      jump\t// out\n        /* \"#utility.yul\":1977:2453   */\n    tag_39:\n      0x00\n      dup1\n      0x00\n        /* \"#utility.yul\":2130:2132   */\n      0x60\n        /* \"#utility.yul\":2118:2127   */\n      dup5\n        /* \"#utility.yul\":2109:2116   */\n      dup7\n        /* \"#utility.yul\":2105:2128   */\n      sub\n        /* \"#utility.yul\":2101:2133   */\n      slt\n        /* \"#utility.yul\":2098:2100   */\n      iszero\n      tag_216\n      jumpi\n        /* \"#utility.yul\":2151:2157   */\n      dup3\n        /* \"#utility.yul\":2143:2149   */\n      dup4\n        /* \"#utility.yul\":2136:2158   */\n      revert\n        /* \"#utility.yul\":2098:2100   */\n    tag_216:\n        /* \"#utility.yul\":2192:2201   */\n      dup4\n        /* \"#utility.yul\":2179:2202   */\n      calldataload\n        /* \"#utility.yul\":2169:2202   */\n      swap3\n      pop\n        /* \"#utility.yul\":2249:2251   */\n      0x20\n        /* \"#utility.yul\":2238:2247   */\n      dup5\n        /* \"#utility.yul\":2234:2252   */\n      add\n        /* \"#utility.yul\":2221:2253   */\n      calldataload\n        /* \"#utility.yul\":2211:2253   */\n      swap2\n      pop\n        /* \"#utility.yul\":2304:2306   */\n      0x40\n        /* \"#utility.yul\":2293:2302   */\n      dup5\n        /* \"#utility.yul\":2289:2307   */\n      add\n        /* \"#utility.yul\":2276:2308   */\n      calldataload\n        /* \"#utility.yul\":2331:2349   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2323:2329   */\n      dup2\n        /* \"#utility.yul\":2320:2350   */\n      gt\n        /* \"#utility.yul\":2317:2319   */\n      iszero\n      tag_217\n      jumpi\n        /* \"#utility.yul\":2368:2374   */\n      dup2\n        /* \"#utility.yul\":2360:2366   */\n      dup3\n        /* \"#utility.yul\":2353:2375   */\n      revert\n        /* \"#utility.yul\":2317:2319   */\n    tag_217:\n        /* \"#utility.yul\":2396:2447   */\n      tag_218\n        /* \"#utility.yul\":2439:2446   */\n      dup7\n        /* \"#utility.yul\":2430:2436   */\n      dup3\n        /* \"#utility.yul\":2419:2428   */\n      dup8\n        /* \"#utility.yul\":2415:2437   */\n      add\n        /* \"#utility.yul\":2396:2447   */\n      tag_194\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":2386:2447   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2088:2453   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2458:3134   */\n    tag_143:\n      0x00\n        /* \"#utility.yul\":2591:2593   */\n      0x20\n        /* \"#utility.yul\":2579:2588   */\n      dup3\n        /* \"#utility.yul\":2570:2577   */\n      dup5\n        /* \"#utility.yul\":2566:2589   */\n      sub\n        /* \"#utility.yul\":2562:2594   */\n      slt\n        /* \"#utility.yul\":2559:2561   */\n      iszero\n      tag_220\n      jumpi\n        /* \"#utility.yul\":2612:2618   */\n      dup1\n        /* \"#utility.yul\":2604:2610   */\n      dup2\n        /* \"#utility.yul\":2597:2619   */\n      revert\n        /* \"#utility.yul\":2559:2561   */\n    tag_220:\n        /* \"#utility.yul\":2650:2659   */\n      dup2\n        /* \"#utility.yul\":2644:2660   */\n      mload\n        /* \"#utility.yul\":2683:2701   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2675:2681   */\n      dup2\n        /* \"#utility.yul\":2672:2702   */\n      gt\n        /* \"#utility.yul\":2669:2671   */\n      iszero\n      tag_221\n      jumpi\n        /* \"#utility.yul\":2720:2726   */\n      dup2\n        /* \"#utility.yul\":2712:2718   */\n      dup3\n        /* \"#utility.yul\":2705:2727   */\n      revert\n        /* \"#utility.yul\":2669:2671   */\n    tag_221:\n        /* \"#utility.yul\":2748:2770   */\n      dup3\n      add\n        /* \"#utility.yul\":2801:2805   */\n      0x1f\n        /* \"#utility.yul\":2793:2806   */\n      dup2\n      add\n        /* \"#utility.yul\":2789:2816   */\n      dup5\n      sgt\n        /* \"#utility.yul\":2779:2781   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":2835:2841   */\n      dup2\n        /* \"#utility.yul\":2827:2833   */\n      dup3\n        /* \"#utility.yul\":2820:2842   */\n      revert\n        /* \"#utility.yul\":2779:2781   */\n    tag_222:\n        /* \"#utility.yul\":2869:2871   */\n      dup1\n        /* \"#utility.yul\":2863:2872   */\n      mload\n        /* \"#utility.yul\":2894:2943   */\n      tag_223\n        /* \"#utility.yul\":2909:2942   */\n      tag_198\n        /* \"#utility.yul\":2939:2941   */\n      dup3\n        /* \"#utility.yul\":2909:2942   */\n      tag_199\n      jump\t// in\n        /* \"#utility.yul\":2894:2943   */\n    tag_223:\n        /* \"#utility.yul\":2966:2968   */\n      dup2\n        /* \"#utility.yul\":2959:2964   */\n      dup2\n        /* \"#utility.yul\":2952:2969   */\n      mstore\n        /* \"#utility.yul\":3006:3013   */\n      dup6\n        /* \"#utility.yul\":3001:3003   */\n      0x20\n        /* \"#utility.yul\":2996:2998   */\n      dup4\n        /* \"#utility.yul\":2992:2994   */\n      dup6\n        /* \"#utility.yul\":2988:2999   */\n      add\n        /* \"#utility.yul\":2984:3004   */\n      add\n        /* \"#utility.yul\":2981:3014   */\n      gt\n        /* \"#utility.yul\":2978:2980   */\n      iszero\n      tag_225\n      jumpi\n        /* \"#utility.yul\":3032:3038   */\n      dup4\n        /* \"#utility.yul\":3024:3030   */\n      dup5\n        /* \"#utility.yul\":3017:3039   */\n      revert\n        /* \"#utility.yul\":2978:2980   */\n    tag_225:\n        /* \"#utility.yul\":3050:3104   */\n      tag_53\n        /* \"#utility.yul\":3101:3103   */\n      dup3\n        /* \"#utility.yul\":3096:3098   */\n      0x20\n        /* \"#utility.yul\":3089:3094   */\n      dup4\n        /* \"#utility.yul\":3085:3099   */\n      add\n        /* \"#utility.yul\":3080:3082   */\n      0x20\n        /* \"#utility.yul\":3076:3078   */\n      dup7\n        /* \"#utility.yul\":3072:3083   */\n      add\n        /* \"#utility.yul\":3050:3104   */\n      tag_227\n      jump\t// in\n        /* \"#utility.yul\":3139:3333   */\n    tag_147:\n      0x00\n        /* \"#utility.yul\":3262:3264   */\n      0x20\n        /* \"#utility.yul\":3250:3259   */\n      dup3\n        /* \"#utility.yul\":3241:3248   */\n      dup5\n        /* \"#utility.yul\":3237:3260   */\n      sub\n        /* \"#utility.yul\":3233:3265   */\n      slt\n        /* \"#utility.yul\":3230:3232   */\n      iszero\n      tag_229\n      jumpi\n        /* \"#utility.yul\":3283:3289   */\n      dup1\n        /* \"#utility.yul\":3275:3281   */\n      dup2\n        /* \"#utility.yul\":3268:3290   */\n      revert\n        /* \"#utility.yul\":3230:3232   */\n    tag_229:\n      pop\n        /* \"#utility.yul\":3311:3327   */\n      mload\n      swap2\n        /* \"#utility.yul\":3220:3333   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3338:3597   */\n    tag_230:\n      0x00\n        /* \"#utility.yul\":3419:3424   */\n      dup2\n        /* \"#utility.yul\":3413:3425   */\n      mload\n        /* \"#utility.yul\":3446:3452   */\n      dup1\n        /* \"#utility.yul\":3441:3444   */\n      dup5\n        /* \"#utility.yul\":3434:3453   */\n      mstore\n        /* \"#utility.yul\":3462:3525   */\n      tag_232\n        /* \"#utility.yul\":3518:3524   */\n      dup2\n        /* \"#utility.yul\":3511:3515   */\n      0x20\n        /* \"#utility.yul\":3506:3509   */\n      dup7\n        /* \"#utility.yul\":3502:3516   */\n      add\n        /* \"#utility.yul\":3495:3499   */\n      0x20\n        /* \"#utility.yul\":3488:3493   */\n      dup7\n        /* \"#utility.yul\":3484:3500   */\n      add\n        /* \"#utility.yul\":3462:3525   */\n      tag_227\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":3579:3581   */\n      0x1f\n        /* \"#utility.yul\":3558:3573   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3554:3583   */\n      and\n        /* \"#utility.yul\":3545:3584   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":3586:3590   */\n      0x20\n        /* \"#utility.yul\":3541:3591   */\n      add\n      swap3\n        /* \"#utility.yul\":3389:3597   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3602:4033   */\n    tag_64:\n        /* \"#utility.yul\":3855:3857   */\n      0x60\n        /* \"#utility.yul\":3851:3866   */\n      swap4\n      dup5\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":3847:3871   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":3835:3872   */\n      dup3\n      mstore\n        /* \"#utility.yul\":3928:3931   */\n      0xe8\n        /* \"#utility.yul\":3906:3922   */\n      swap4\n      swap1\n      swap4\n      shl\n      not(sub(shl(0xe8, 0x01), 0x01))\n        /* \"#utility.yul\":3902:3943   */\n      and\n        /* \"#utility.yul\":3897:3899   */\n      0x14\n        /* \"#utility.yul\":3888:3900   */\n      dup3\n      add\n        /* \"#utility.yul\":3881:3944   */\n      mstore\n        /* \"#utility.yul\":3978:3993   */\n      swap3\n      shl\n        /* \"#utility.yul\":3974:3998   */\n      and\n        /* \"#utility.yul\":3969:3971   */\n      0x17\n        /* \"#utility.yul\":3960:3972   */\n      dup3\n      add\n        /* \"#utility.yul\":3953:3999   */\n      mstore\n        /* \"#utility.yul\":4024:4026   */\n      0x2b\n        /* \"#utility.yul\":4015:4027   */\n      add\n      swap1\n        /* \"#utility.yul\":3775:4033   */\n      jump\t// out\n        /* \"#utility.yul\":4038:4541   */\n    tag_189:\n      not(sub(shl(0xf8, 0x01), 0x01))\n        /* \"#utility.yul\":4324:4350   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4387:4389   */\n      0x60\n        /* \"#utility.yul\":4383:4398   */\n      swap4\n      swap1\n      swap4\n      shl\n      not(0xffffffffffffffffffffffff)\n        /* \"#utility.yul\":4379:4432   */\n      and\n        /* \"#utility.yul\":4375:4376   */\n      0x01\n        /* \"#utility.yul\":4366:4377   */\n      dup5\n      add\n        /* \"#utility.yul\":4359:4433   */\n      mstore\n        /* \"#utility.yul\":4458:4460   */\n      0x15\n        /* \"#utility.yul\":4449:4461   */\n      dup4\n      add\n        /* \"#utility.yul\":4442:4470   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4495:4497   */\n      0x35\n        /* \"#utility.yul\":4486:4498   */\n      dup3\n      add\n        /* \"#utility.yul\":4479:4507   */\n      mstore\n        /* \"#utility.yul\":4532:4534   */\n      0x55\n        /* \"#utility.yul\":4523:4535   */\n      add\n      swap1\n        /* \"#utility.yul\":4314:4541   */\n      jump\t// out\n        /* \"#utility.yul\":4546:4749   */\n    tag_25:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4710:4742   */\n      swap2\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4692:4743   */\n      dup2\n      mstore\n        /* \"#utility.yul\":4680:4682   */\n      0x20\n        /* \"#utility.yul\":4665:4683   */\n      add\n      swap1\n        /* \"#utility.yul\":4647:4749   */\n      jump\t// out\n        /* \"#utility.yul\":4754:5142   */\n    tag_187:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5010:5025   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":4992:5026   */\n      dup2\n      mstore\n        /* \"#utility.yul\":5062:5077   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":5057:5059   */\n      0x20\n        /* \"#utility.yul\":5042:5060   */\n      dup3\n      add\n        /* \"#utility.yul\":5035:5078   */\n      mstore\n        /* \"#utility.yul\":5126:5134   */\n      0xffffff\n        /* \"#utility.yul\":5114:5135   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":5109:5111   */\n      0x40\n        /* \"#utility.yul\":5094:5112   */\n      dup3\n      add\n        /* \"#utility.yul\":5087:5136   */\n      mstore\n        /* \"#utility.yul\":4942:4944   */\n      0x60\n        /* \"#utility.yul\":4927:4945   */\n      add\n      swap1\n        /* \"#utility.yul\":4909:5142   */\n      jump\t// out\n        /* \"#utility.yul\":5147:5717   */\n    tag_66:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":5436:5451   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":5418:5452   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5495:5509   */\n      dup6\n      iszero\n        /* \"#utility.yul\":5488:5510   */\n      iszero\n        /* \"#utility.yul\":5483:5485   */\n      0x20\n        /* \"#utility.yul\":5468:5486   */\n      dup4\n      add\n        /* \"#utility.yul\":5461:5511   */\n      mstore\n        /* \"#utility.yul\":5542:5544   */\n      0x40\n        /* \"#utility.yul\":5527:5545   */\n      dup3\n      add\n        /* \"#utility.yul\":5520:5554   */\n      dup6\n      swap1\n      mstore\n        /* \"#utility.yul\":5590:5605   */\n      dup4\n      and\n        /* \"#utility.yul\":5585:5587   */\n      0x60\n        /* \"#utility.yul\":5570:5588   */\n      dup3\n      add\n        /* \"#utility.yul\":5563:5606   */\n      mstore\n        /* \"#utility.yul\":5398:5401   */\n      0xa0\n        /* \"#utility.yul\":5637:5640   */\n      0x80\n        /* \"#utility.yul\":5622:5641   */\n      dup3\n      add\n        /* \"#utility.yul\":5615:5647   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":5147:5717   */\n      0x00\n      swap1\n        /* \"#utility.yul\":5664:5711   */\n      tag_238\n      swap1\n        /* \"#utility.yul\":5691:5710   */\n      dup4\n      add\n        /* \"#utility.yul\":5683:5689   */\n      dup5\n        /* \"#utility.yul\":5664:5711   */\n      tag_230\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":5656:5711   */\n      swap8\n        /* \"#utility.yul\":5370:5717   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5722:5943   */\n    tag_145:\n      0x00\n        /* \"#utility.yul\":5871:5873   */\n      0x20\n        /* \"#utility.yul\":5860:5869   */\n      dup3\n        /* \"#utility.yul\":5853:5874   */\n      mstore\n        /* \"#utility.yul\":5891:5937   */\n      tag_240\n        /* \"#utility.yul\":5933:5935   */\n      0x20\n        /* \"#utility.yul\":5922:5931   */\n      dup4\n        /* \"#utility.yul\":5918:5936   */\n      add\n        /* \"#utility.yul\":5910:5916   */\n      dup5\n        /* \"#utility.yul\":5891:5937   */\n      tag_230\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":5883:5937   */\n      swap4\n        /* \"#utility.yul\":5843:5943   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5948:6289   */\n    tag_162:\n        /* \"#utility.yul\":6150:6152   */\n      0x20\n        /* \"#utility.yul\":6132:6153   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6189:6191   */\n      0x11\n        /* \"#utility.yul\":6169:6187   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6162:6192   */\n      mstore\n      shl(0x78, 0x746f55696e7432345f6f766572666c6f77)\n        /* \"#utility.yul\":6223:6225   */\n      0x40\n        /* \"#utility.yul\":6208:6226   */\n      dup3\n      add\n        /* \"#utility.yul\":6201:6248   */\n      mstore\n        /* \"#utility.yul\":6280:6282   */\n      0x60\n        /* \"#utility.yul\":6265:6283   */\n      add\n      swap1\n        /* \"#utility.yul\":6122:6289   */\n      jump\t// out\n        /* \"#utility.yul\":6294:6632   */\n    tag_169:\n        /* \"#utility.yul\":6496:6498   */\n      0x20\n        /* \"#utility.yul\":6478:6499   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6535:6537   */\n      0x0e\n        /* \"#utility.yul\":6515:6533   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6508:6538   */\n      mstore\n      shl(0x90, 0x736c6963655f6f766572666c6f77)\n        /* \"#utility.yul\":6569:6571   */\n      0x40\n        /* \"#utility.yul\":6554:6572   */\n      dup3\n      add\n        /* \"#utility.yul\":6547:6591   */\n      mstore\n        /* \"#utility.yul\":6623:6625   */\n      0x60\n        /* \"#utility.yul\":6608:6626   */\n      add\n      swap1\n        /* \"#utility.yul\":6468:6632   */\n      jump\t// out\n        /* \"#utility.yul\":6637:6981   */\n    tag_165:\n        /* \"#utility.yul\":6839:6841   */\n      0x20\n        /* \"#utility.yul\":6821:6842   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6878:6880   */\n      0x14\n        /* \"#utility.yul\":6858:6876   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6851:6881   */\n      mstore\n      shl(0x60, 0x746f55696e7432345f6f75744f66426f756e6473)\n        /* \"#utility.yul\":6912:6914   */\n      0x40\n        /* \"#utility.yul\":6897:6915   */\n      dup3\n      add\n        /* \"#utility.yul\":6890:6940   */\n      mstore\n        /* \"#utility.yul\":6972:6974   */\n      0x60\n        /* \"#utility.yul\":6957:6975   */\n      add\n      swap1\n        /* \"#utility.yul\":6811:6981   */\n      jump\t// out\n        /* \"#utility.yul\":6986:7326   */\n    tag_141:\n        /* \"#utility.yul\":7188:7190   */\n      0x20\n        /* \"#utility.yul\":7170:7191   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7227:7229   */\n      0x10\n        /* \"#utility.yul\":7207:7225   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7200:7230   */\n      mstore\n      shl(0x81, 0x2ab732bc3832b1ba32b21032b93937b9)\n        /* \"#utility.yul\":7261:7263   */\n      0x40\n        /* \"#utility.yul\":7246:7264   */\n      dup3\n      add\n        /* \"#utility.yul\":7239:7285   */\n      mstore\n        /* \"#utility.yul\":7317:7319   */\n      0x60\n        /* \"#utility.yul\":7302:7320   */\n      add\n      swap1\n        /* \"#utility.yul\":7160:7326   */\n      jump\t// out\n        /* \"#utility.yul\":7331:7676   */\n    tag_158:\n        /* \"#utility.yul\":7533:7535   */\n      0x20\n        /* \"#utility.yul\":7515:7536   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7572:7574   */\n      0x15\n        /* \"#utility.yul\":7552:7570   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7545:7575   */\n      mstore\n      shl(0x58, 0x746f416464726573735f6f75744f66426f756e6473)\n        /* \"#utility.yul\":7606:7608   */\n      0x40\n        /* \"#utility.yul\":7591:7609   */\n      dup3\n      add\n        /* \"#utility.yul\":7584:7635   */\n      mstore\n        /* \"#utility.yul\":7667:7669   */\n      0x60\n        /* \"#utility.yul\":7652:7670   */\n      add\n      swap1\n        /* \"#utility.yul\":7505:7676   */\n      jump\t// out\n        /* \"#utility.yul\":7681:8022   */\n    tag_174:\n        /* \"#utility.yul\":7883:7885   */\n      0x20\n        /* \"#utility.yul\":7865:7886   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":7922:7924   */\n      0x11\n        /* \"#utility.yul\":7902:7920   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":7895:7925   */\n      mstore\n      shl(0x78, 0x736c6963655f6f75744f66426f756e6473)\n        /* \"#utility.yul\":7956:7958   */\n      0x40\n        /* \"#utility.yul\":7941:7959   */\n      dup3\n      add\n        /* \"#utility.yul\":7934:7981   */\n      mstore\n        /* \"#utility.yul\":8013:8015   */\n      0x60\n        /* \"#utility.yul\":7998:8016   */\n      add\n      swap1\n        /* \"#utility.yul\":7855:8022   */\n      jump\t// out\n        /* \"#utility.yul\":8027:8369   */\n    tag_155:\n        /* \"#utility.yul\":8229:8231   */\n      0x20\n        /* \"#utility.yul\":8211:8232   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8268:8270   */\n      0x12\n        /* \"#utility.yul\":8248:8266   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8241:8271   */\n      mstore\n      shl(0x70, 0x746f416464726573735f6f766572666c6f77)\n        /* \"#utility.yul\":8302:8304   */\n      0x40\n        /* \"#utility.yul\":8287:8305   */\n      dup3\n      add\n        /* \"#utility.yul\":8280:8328   */\n      mstore\n        /* \"#utility.yul\":8360:8362   */\n      0x60\n        /* \"#utility.yul\":8345:8363   */\n      add\n      swap1\n        /* \"#utility.yul\":8201:8369   */\n      jump\t// out\n        /* \"#utility.yul\":8374:8551   */\n    tag_16:\n        /* \"#utility.yul\":8520:8545   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":8508:8510   */\n      0x20\n        /* \"#utility.yul\":8493:8511   */\n      add\n      swap1\n        /* \"#utility.yul\":8475:8551   */\n      jump\t// out\n        /* \"#utility.yul\":8556:8798   */\n    tag_200:\n        /* \"#utility.yul\":8626:8628   */\n      0x40\n        /* \"#utility.yul\":8620:8629   */\n      mload\n        /* \"#utility.yul\":8656:8673   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":8703:8721   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8688:8722   */\n      dup2\n      gt\n        /* \"#utility.yul\":8724:8746   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":8685:8747   */\n      or\n        /* \"#utility.yul\":8682:8684   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":8750:8759   */\n      invalid\n        /* \"#utility.yul\":8682:8684   */\n    tag_250:\n        /* \"#utility.yul\":8777:8779   */\n      0x40\n        /* \"#utility.yul\":8770:8792   */\n      mstore\n        /* \"#utility.yul\":8600:8798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8803:8984   */\n    tag_199:\n      0x00\n        /* \"#utility.yul\":8886:8904   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8878:8884   */\n      dup3\n        /* \"#utility.yul\":8875:8905   */\n      gt\n        /* \"#utility.yul\":8872:8874   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":8908:8917   */\n      invalid\n        /* \"#utility.yul\":8872:8874   */\n    tag_252:\n      pop\n        /* \"#utility.yul\":8967:8969   */\n      0x1f\n        /* \"#utility.yul\":8944:8961   */\n      add\n      not(0x1f)\n        /* \"#utility.yul\":8940:8971   */\n      and\n        /* \"#utility.yul\":8973:8977   */\n      0x20\n        /* \"#utility.yul\":8936:8978   */\n      add\n      swap1\n        /* \"#utility.yul\":8862:8984   */\n      jump\t// out\n        /* \"#utility.yul\":8989:9247   */\n    tag_227:\n        /* \"#utility.yul\":9061:9062   */\n      0x00\n        /* \"#utility.yul\":9071:9184   */\n    tag_254:\n        /* \"#utility.yul\":9085:9091   */\n      dup4\n        /* \"#utility.yul\":9082:9083   */\n      dup2\n        /* \"#utility.yul\":9079:9092   */\n      lt\n        /* \"#utility.yul\":9071:9184   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":9161:9172   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":9155:9173   */\n      mload\n        /* \"#utility.yul\":9142:9153   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":9135:9174   */\n      mstore\n        /* \"#utility.yul\":9107:9109   */\n      0x20\n        /* \"#utility.yul\":9100:9110   */\n      add\n        /* \"#utility.yul\":9071:9184   */\n      jump(tag_254)\n    tag_256:\n        /* \"#utility.yul\":9202:9208   */\n      dup4\n        /* \"#utility.yul\":9199:9200   */\n      dup2\n        /* \"#utility.yul\":9196:9209   */\n      gt\n        /* \"#utility.yul\":9193:9195   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":9237:9238   */\n      0x00\n        /* \"#utility.yul\":9228:9234   */\n      dup5\n        /* \"#utility.yul\":9223:9226   */\n      dup5\n        /* \"#utility.yul\":9219:9235   */\n      add\n        /* \"#utility.yul\":9212:9239   */\n      mstore\n        /* \"#utility.yul\":9193:9195   */\n    tag_257:\n      pop\n        /* \"#utility.yul\":9042:9247   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9252:9385   */\n    tag_205:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9329:9360   */\n      dup2\n      and\n        /* \"#utility.yul\":9319:9361   */\n      dup2\n      eq\n        /* \"#utility.yul\":9309:9311   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":9375:9376   */\n      0x00\n        /* \"#utility.yul\":9372:9373   */\n      dup1\n        /* \"#utility.yul\":9365:9377   */\n      revert\n        /* \"#utility.yul\":9309:9311   */\n    tag_259:\n        /* \"#utility.yul\":9299:9385   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122054fb38d4b7670a7d885b2f7ed12926accde2fcb4ba7d18b98543dd82e630fa2964736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:507:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "76:117:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "86:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "101:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "95:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "95:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "171:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "180:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "183:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "173:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "173:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "173:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "130:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "141:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "156:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "161:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "152:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "152:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "165:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "148:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "148:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "137:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "137:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "127:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "127:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:50:1"
															},
															"nodeType": "YulIf",
															"src": "117:2:1"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "55:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "66:5:1",
														"type": ""
													}
												],
												"src": "14:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "296:209:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "342:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "351:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "359:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "344:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "344:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "344:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "317:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "326:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "313:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "338:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "309:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "309:32:1"
															},
															"nodeType": "YulIf",
															"src": "306:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "377:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "419:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "387:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "387:42:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "377:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "438:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "484:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "495:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "480:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "480:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "448:31:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "448:51:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "438:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "254:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "265:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "277:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "285:6:1",
														"type": ""
													}
												],
												"src": "198:307:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561001057600080fd5b50604051610f99380380610f9983398101604081905261002f91610069565b6001600160601b0319606092831b8116608052911b1660a05261009b565b80516001600160a01b038116811461006457600080fd5b919050565b6000806040838503121561007b578182fd5b6100848361004d565b91506100926020840161004d565b90509250929050565b60805160601c60a05160601c610ecb6100ce600039806102f052508061031452806104ef52806105ec5250610ecb6000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100d3578063cdca1753146100db578063f7729d43146100ee578063fa461e33146101015761007d565b80632f80bb1d1461008257806330d07f21146100ab5780634aa4a4fc146100be575b600080fd5b610095610090366004610a5c565b610116565b6040516100a29190610dfe565b60405180910390f35b6100956100b93660046109ee565b61017b565b6100c66102ee565b6040516100a29190610c31565b6100c6610312565b6100956100e9366004610a5c565b610336565b6100956100fc3660046109ee565b610384565b61011461010f366004610ac2565b6104be565b005b60005b600061012484610595565b905060008060006101348761059d565b92509250925061014882848389600061017b565b9550831561016057610159876105ce565b965061016c565b85945050505050610175565b50505050610119565b92915050565b60006001600160a01b03808616878216109083166101995760008490555b6101a48787876105e5565b6001600160a01b031663128acb0830836101bd88610623565b6000036001600160a01b038816156101d557876101fb565b856101f45773fffd8963efd1fc6a506488495d951d5263988d256101fb565b6401000276a45b8b8b8e60405160200161021093929190610bbe565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161023f959493929190610c6d565b6040805180830381600087803b15801561025857600080fd5b505af1925050508015610288575060408051601f3d908101601f1916820190925261028591810190610a9f565b60015b6102e1573d8080156102b6576040519150601f19603f3d011682016040523d82523d6000602084013e6102bb565b606091505b506001600160a01b0384166102cf57600080555b6102d881610639565b925050506102e5565b5050505b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005b600061034484610595565b905060008060006103548761059d565b925092509250610368838383896000610384565b9550831561016057610379876105ce565b965050505050610339565b60006001600160a01b03808616908716106103a08787876105e5565b6001600160a01b031663128acb0830836103b988610623565b6001600160a01b038816156103ce57876103f4565b856103ed5773fffd8963efd1fc6a506488495d951d5263988d256103f4565b6401000276a45b8c8b8d60405160200161040993929190610bbe565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610438959493929190610c6d565b6040805180830381600087803b15801561045157600080fd5b505af1925050508015610481575060408051601f3d908101601f1916820190925261047e91810190610a9f565b60015b6102e1573d8080156104af576040519150601f19603f3d011682016040523d82523d6000602084013e6104b4565b606091505b506102d881610639565b60008313806104cd5750600082135b6104d657600080fd5b60008060006104e48461059d565b9250925092506105167f00000000000000000000000000000000000000000000000000000000000000008484846106b6565b50600080600080891361054257856001600160a01b0316856001600160a01b031610888a60000361055d565b846001600160a01b0316866001600160a01b03161089896000035b925092509250821561057457604051818152602081fd5b6000541561058a57600054811461058a57600080fd5b604051828152602081fd5b516042111590565b600080806105ab84826106cc565b92506105b8846014610725565b90506105c58460176106cc565b91509193909250565b805160609061017590839060179060161901610777565b600061061b7f0000000000000000000000000000000000000000000000000000000000000000610616868686610853565b6108a9565b949350505050565b6000600160ff1b821061063557600080fd5b5090565b600081516020146106a25760448251101561066f5760405162461bcd60e51b815260040161066690610d4e565b60405180910390fd5b600482019150818060200190518101906106899190610b10565b60405162461bcd60e51b81526004016106669190610cb3565b818060200190518101906101759190610b7a565b60006102e5856106c7868686610853565b61095a565b6000818260140110156106f15760405162461bcd60e51b815260040161066690610dd2565b81601401835110156107155760405162461bcd60e51b815260040161066690610d78565b500160200151600160601b900490565b60008182600301101561074a5760405162461bcd60e51b815260040161066690610ccd565b816003018351101561076e5760405162461bcd60e51b815260040161066690610d20565b50016003015190565b60608182601f01101561079c5760405162461bcd60e51b815260040161066690610cf8565b8282840110156107be5760405162461bcd60e51b815260040161066690610cf8565b818301845110156107e15760405162461bcd60e51b815260040161066690610da7565b606082158015610800576040519150600082526020820160405261084a565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610839578051835260209283019201610821565b5050858452601f01601f1916604052505b50949350505050565b61085b61097d565b826001600160a01b0316846001600160a01b03161115610879579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b600081602001516001600160a01b031682600001516001600160a01b0316106108d157600080fd5b828260000151836020015184604001516040516020016108f393929190610c45565b60408051601f1981840301815290829052805160209182012061093b939290917fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b549101610bf9565b60408051601f1981840301815291905280516020909101209392505050565b600061096683836108a9565b9050336001600160a01b0382161461017557600080fd5b604080516060810182526000808252602082018190529181019190915290565b600082601f8301126109ad578081fd5b81356109c06109bb82610e2b565b610e07565b8181528460208386010111156109d4578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a08688031215610a05578081fd5b8535610a1081610e7d565b94506020860135610a2081610e7d565b9350604086013562ffffff81168114610a37578182fd5b9250606086013591506080860135610a4e81610e7d565b809150509295509295909350565b60008060408385031215610a6e578182fd5b823567ffffffffffffffff811115610a84578283fd5b610a908582860161099d565b95602094909401359450505050565b60008060408385031215610ab1578182fd5b505080516020909101519092909150565b600080600060608486031215610ad6578283fd5b8335925060208401359150604084013567ffffffffffffffff811115610afa578182fd5b610b068682870161099d565b9150509250925092565b600060208284031215610b21578081fd5b815167ffffffffffffffff811115610b37578182fd5b8201601f81018413610b47578182fd5b8051610b556109bb82610e2b565b818152856020838501011115610b69578384fd5b6102e5826020830160208601610e4d565b600060208284031215610b8b578081fd5b5051919050565b60008151808452610baa816020860160208601610e4d565b601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6001600160f81b0319815260609390931b6bffffffffffffffffffffffff191660018401526015830191909152603582015260550190565b6001600160a01b0391909116815260200190565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a060808201819052600090610ca890830184610b92565b979650505050505050565b600060208252610cc66020830184610b92565b9392505050565b602080825260119082015270746f55696e7432345f6f766572666c6f7760781b604082015260600190565b6020808252600e908201526d736c6963655f6f766572666c6f7760901b604082015260600190565b602080825260149082015273746f55696e7432345f6f75744f66426f756e647360601b604082015260600190565b60208082526010908201526f2ab732bc3832b1ba32b21032b93937b960811b604082015260600190565b602080825260159082015274746f416464726573735f6f75744f66426f756e647360581b604082015260600190565b602080825260119082015270736c6963655f6f75744f66426f756e647360781b604082015260600190565b602080825260129082015271746f416464726573735f6f766572666c6f7760701b604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610e2357fe5b604052919050565b600067ffffffffffffffff821115610e3f57fe5b50601f01601f191660200190565b60005b83811015610e68578181015183820152602001610e50565b83811115610e77576000848401525b50505050565b6001600160a01b0381168114610e9257600080fd5b5056fea264697066735822122054fb38d4b7670a7d885b2f7ed12926accde2fcb4ba7d18b98543dd82e630fa2964736f6c63430007060033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xF99 CODESIZE SUB DUP1 PUSH2 0xF99 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 SWAP3 DUP4 SHL DUP2 AND PUSH1 0x80 MSTORE SWAP2 SHL AND PUSH1 0xA0 MSTORE PUSH2 0x9B JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x7B JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x84 DUP4 PUSH2 0x4D JUMP JUMPDEST SWAP2 POP PUSH2 0x92 PUSH1 0x20 DUP5 ADD PUSH2 0x4D JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH2 0xECB PUSH2 0xCE PUSH1 0x0 CODECOPY DUP1 PUSH2 0x2F0 MSTORE POP DUP1 PUSH2 0x314 MSTORE DUP1 PUSH2 0x4EF MSTORE DUP1 PUSH2 0x5EC MSTORE POP PUSH2 0xECB PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC45A0155 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xCDCA1753 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xF7729D43 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x101 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2F80BB1D EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x30D07F21 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5C JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x17B JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x312 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5C JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xFC CALLDATASIZE PUSH1 0x4 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x124 DUP5 PUSH2 0x595 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x134 DUP8 PUSH2 0x59D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x148 DUP3 DUP5 DUP4 DUP10 PUSH1 0x0 PUSH2 0x17B JUMP JUMPDEST SWAP6 POP DUP4 ISZERO PUSH2 0x160 JUMPI PUSH2 0x159 DUP8 PUSH2 0x5CE JUMP JUMPDEST SWAP7 POP PUSH2 0x16C JUMP JUMPDEST DUP6 SWAP5 POP POP POP POP POP PUSH2 0x175 JUMP JUMPDEST POP POP POP POP PUSH2 0x119 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP8 DUP3 AND LT SWAP1 DUP4 AND PUSH2 0x199 JUMPI PUSH1 0x0 DUP5 SWAP1 SSTORE JUMPDEST PUSH2 0x1A4 DUP8 DUP8 DUP8 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x128ACB08 ADDRESS DUP4 PUSH2 0x1BD DUP9 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x0 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x1D5 JUMPI DUP8 PUSH2 0x1FB JUMP JUMPDEST DUP6 PUSH2 0x1F4 JUMPI PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D25 PUSH2 0x1FB JUMP JUMPDEST PUSH5 0x1000276A4 JUMPDEST DUP12 DUP12 DUP15 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x210 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x288 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x285 SWAP2 DUP2 ADD SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2E1 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 SSTORE JUMPDEST PUSH2 0x2D8 DUP2 PUSH2 0x639 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2E5 JUMP JUMPDEST POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x344 DUP5 PUSH2 0x595 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x354 DUP8 PUSH2 0x59D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x368 DUP4 DUP4 DUP4 DUP10 PUSH1 0x0 PUSH2 0x384 JUMP JUMPDEST SWAP6 POP DUP4 ISZERO PUSH2 0x160 JUMPI PUSH2 0x379 DUP8 PUSH2 0x5CE JUMP JUMPDEST SWAP7 POP POP POP POP POP PUSH2 0x339 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP1 DUP8 AND LT PUSH2 0x3A0 DUP8 DUP8 DUP8 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x128ACB08 ADDRESS DUP4 PUSH2 0x3B9 DUP9 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x3CE JUMPI DUP8 PUSH2 0x3F4 JUMP JUMPDEST DUP6 PUSH2 0x3ED JUMPI PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D25 PUSH2 0x3F4 JUMP JUMPDEST PUSH5 0x1000276A4 JUMPDEST DUP13 DUP12 DUP14 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x409 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x481 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x47E SWAP2 DUP2 ADD SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2E1 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH2 0x2D8 DUP2 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 DUP4 SGT DUP1 PUSH2 0x4CD JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4E4 DUP5 PUSH2 0x59D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x516 PUSH32 0x0 DUP5 DUP5 DUP5 PUSH2 0x6B6 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 SGT PUSH2 0x542 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT DUP9 DUP11 PUSH1 0x0 SUB PUSH2 0x55D JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT DUP10 DUP10 PUSH1 0x0 SUB JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 ISZERO PUSH2 0x574 JUMPI PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 REVERT JUMPDEST PUSH1 0x0 SLOAD ISZERO PUSH2 0x58A JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 REVERT JUMPDEST MLOAD PUSH1 0x42 GT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x5AB DUP5 DUP3 PUSH2 0x6CC JUMP JUMPDEST SWAP3 POP PUSH2 0x5B8 DUP5 PUSH1 0x14 PUSH2 0x725 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C5 DUP5 PUSH1 0x17 PUSH2 0x6CC JUMP JUMPDEST SWAP2 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH2 0x175 SWAP1 DUP4 SWAP1 PUSH1 0x17 SWAP1 PUSH1 0x16 NOT ADD PUSH2 0x777 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61B PUSH32 0x0 PUSH2 0x616 DUP7 DUP7 DUP7 PUSH2 0x853 JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 LT PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 EQ PUSH2 0x6A2 JUMPI PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E5 DUP6 PUSH2 0x6C7 DUP7 DUP7 DUP7 PUSH2 0x853 JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP3 PUSH1 0x14 ADD LT ISZERO PUSH2 0x6F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST DUP2 PUSH1 0x14 ADD DUP4 MLOAD LT ISZERO PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xD78 JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP3 PUSH1 0x3 ADD LT ISZERO PUSH2 0x74A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xCCD JUMP JUMPDEST DUP2 PUSH1 0x3 ADD DUP4 MLOAD LT ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xD20 JUMP JUMPDEST POP ADD PUSH1 0x3 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP3 PUSH1 0x1F ADD LT ISZERO PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST DUP3 DUP3 DUP5 ADD LT ISZERO PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST DUP2 DUP4 ADD DUP5 MLOAD LT ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x84A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x839 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x821 JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x85B PUSH2 0x97D JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x879 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8F3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH2 0x93B SWAP4 SWAP3 SWAP1 SWAP2 PUSH32 0xE34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54 SWAP2 ADD PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x966 DUP4 DUP4 PUSH2 0x8A9 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9AD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9C0 PUSH2 0x9BB DUP3 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x9D4 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA05 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xA10 DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xA20 DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA37 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0xA4E DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA6E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA84 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xA90 DUP6 DUP3 DUP7 ADD PUSH2 0x99D JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAB1 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAD6 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAFA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xB06 DUP7 DUP3 DUP8 ADD PUSH2 0x99D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB21 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB37 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0xB47 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 MLOAD PUSH2 0xB55 PUSH2 0x9BB DUP3 PUSH2 0xE2B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0xB69 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2E5 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB8B JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xBAA DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 SWAP4 DUP5 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0xE8 SWAP4 SWAP1 SWAP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT AND PUSH1 0x14 DUP3 ADD MSTORE SWAP3 SHL AND PUSH1 0x17 DUP3 ADD MSTORE PUSH1 0x2B ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xCA8 SWAP1 DUP4 ADD DUP5 PUSH2 0xB92 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xCC6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB92 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x746F55696E7432345F6F766572666C6F77 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x746F55696E7432345F6F75744F66426F756E6473 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x2AB732BC3832B1BA32B21032B93937B9 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x746F416464726573735F6F75744F66426F756E6473 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x746F416464726573735F6F766572666C6F77 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE23 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE3F JUMPI INVALID JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE68 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE50 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE77 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xFB CODESIZE 0xD4 0xB7 PUSH8 0xA7D885B2F7ED129 0x26 0xAC 0xCD 0xE2 0xFC 0xB4 0xBA PUSH30 0x18B98543DD82E630FA2964736F6C63430007060033000000000000000000 ",
							"sourceMap": "50586:5721:0:-:0;;;50861:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;9742:18:0;;;;;;;;9770:14;;;;;50586:5721;;14:179:1;95:13;;-1:-1:-1;;;;;137:31:1;;127:42;;117:2;;183:1;180;173:12;117:2;76:117;;;:::o;198:307::-;;;338:2;326:9;317:7;313:23;309:32;306:2;;;359:6;351;344:22;306:2;387:42;419:9;387:42;:::i;:::-;377:52;;448:51;495:2;484:9;480:18;448:51;:::i;:::-;438:61;;296:209;;;;;:::o;:::-;50586:5721:0;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9387:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "68:431:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "117:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "126:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "133:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "119:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "119:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "119:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "96:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "104:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "92:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "92:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "111:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "88:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "88:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "81:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "81:35:1"
															},
															"nodeType": "YulIf",
															"src": "78:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "150:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "173:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "160:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "160:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "154:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "189:64:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "249:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes",
																			"nodeType": "YulIdentifier",
																			"src": "219:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "219:33:1"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "204:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "204:49:1"
															},
															"variables": [
																{
																	"name": "array_1",
																	"nodeType": "YulTypedName",
																	"src": "193:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array_1",
																		"nodeType": "YulIdentifier",
																		"src": "269:7:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "278:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "262:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "262:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "262:19:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "329:24:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "338:5:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "345:5:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "331:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:20:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "331:20:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "304:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "312:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "300:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "300:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "317:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:26:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "324:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "293:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "293:35:1"
															},
															"nodeType": "YulIf",
															"src": "290:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array_1",
																				"nodeType": "YulIdentifier",
																				"src": "379:7:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "388:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "375:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "399:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "407:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "395:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "395:17:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "414:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "362:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:55:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "362:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array_1",
																						"nodeType": "YulIdentifier",
																						"src": "441:7:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "450:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "437:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "437:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "455:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "433:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "433:27:1"
																	},
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "462:5:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "426:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "426:42:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "426:42:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "477:16:1",
															"value": {
																"name": "array_1",
																"nodeType": "YulIdentifier",
																"src": "486:7:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "477:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "50:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "58:5:1",
														"type": ""
													}
												],
												"src": "14:485:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "641:658:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "688:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "697:6:1"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "705:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "690:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "690:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "690:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "662:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "671:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "683:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "654:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "654:33:1"
															},
															"nodeType": "YulIf",
															"src": "651:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "723:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "749:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "736:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "736:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "727:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "795:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "768:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "768:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "768:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "810:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "820:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "810:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "834:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "866:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "877:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "862:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "862:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "849:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "849:32:1"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "838:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nodeType": "YulIdentifier",
																		"src": "917:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "890:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "890:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "890:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "934:17:1",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "944:7:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "934:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "960:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "992:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1003:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "988:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "988:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "975:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "975:32:1"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nodeType": "YulTypedName",
																	"src": "964:7:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1063:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1072:6:1"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "1080:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1065:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1065:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1065:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_2",
																				"nodeType": "YulIdentifier",
																				"src": "1029:7:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_2",
																						"nodeType": "YulIdentifier",
																						"src": "1042:7:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1051:8:1",
																						"type": "",
																						"value": "0xffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1038:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1038:22:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1026:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1026:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1019:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1019:43:1"
															},
															"nodeType": "YulIf",
															"src": "1016:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1098:17:1",
															"value": {
																"name": "value_2",
																"nodeType": "YulIdentifier",
																"src": "1108:7:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "1098:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1124:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1151:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1162:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1147:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1147:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1134:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1134:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "1124:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1175:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1207:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1218:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1203:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1203:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1190:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1190:33:1"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nodeType": "YulTypedName",
																	"src": "1179:7:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nodeType": "YulIdentifier",
																		"src": "1259:7:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "1232:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1232:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1232:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1276:17:1",
															"value": {
																"name": "value_3",
																"nodeType": "YulIdentifier",
																"src": "1286:7:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "1276:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint24t_uint256t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "575:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "586:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "598:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "606:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "614:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "622:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "630:6:1",
														"type": ""
													}
												],
												"src": "504:795:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1400:314:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1446:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1455:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1463:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1448:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1448:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1448:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1421:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1430:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1417:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1417:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1442:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1413:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1413:32:1"
															},
															"nodeType": "YulIf",
															"src": "1410:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1481:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1508:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1495:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1495:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "1485:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1561:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1570:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1578:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1563:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1563:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1563:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1533:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1541:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1530:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1530:30:1"
															},
															"nodeType": "YulIf",
															"src": "1527:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1596:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1629:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1640:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1625:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1625:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "1649:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "1606:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1606:51:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1596:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1666:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1693:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1704:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1689:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1689:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1676:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1676:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1666:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes_memory_ptrt_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1358:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1369:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1381:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1389:6:1",
														"type": ""
													}
												],
												"src": "1304:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1815:157:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1861:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1870:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1878:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1863:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1863:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1863:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1845:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1832:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1828:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1828:32:1"
															},
															"nodeType": "YulIf",
															"src": "1825:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1896:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1912:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1906:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1906:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1931:35:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1951:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1962:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1947:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1947:18:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1941:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1941:25:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1931:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_int256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1773:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1784:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1796:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1804:6:1",
														"type": ""
													}
												],
												"src": "1719:253:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2088:365:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2134:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2143:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2151:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2136:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2136:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2136:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2109:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2118:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2105:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2105:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2130:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2101:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2101:32:1"
															},
															"nodeType": "YulIf",
															"src": "2098:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2169:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2192:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2179:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2179:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "2169:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2211:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2238:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2249:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2234:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2234:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2221:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2221:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "2211:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2262:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2293:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2304:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2289:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2289:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2276:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2276:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2266:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2351:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "2360:6:1"
																				},
																				{
																					"name": "value2",
																					"nodeType": "YulIdentifier",
																					"src": "2368:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2353:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2353:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2353:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2323:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2331:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2320:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2320:30:1"
															},
															"nodeType": "YulIf",
															"src": "2317:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2386:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2419:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2430:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2415:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2415:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "2439:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "2396:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2396:51:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "2386:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_int256t_int256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2038:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2049:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2061:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2069:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2077:6:1",
														"type": ""
													}
												],
												"src": "1977:476:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2549:585:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2595:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2604:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2612:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2597:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2597:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2597:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2570:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2579:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2566:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2566:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2591:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2562:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2562:32:1"
															},
															"nodeType": "YulIf",
															"src": "2559:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2630:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2650:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2644:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2644:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "2634:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2703:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2712:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2720:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2705:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2705:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2705:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2675:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2683:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2672:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2672:30:1"
															},
															"nodeType": "YulIf",
															"src": "2669:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2738:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2752:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2763:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2748:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2748:22:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2742:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2818:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2827:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "2835:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2820:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2820:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2797:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2801:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2793:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2793:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2808:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2789:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2782:35:1"
															},
															"nodeType": "YulIf",
															"src": "2779:2:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2853:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2869:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2863:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2863:9:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2857:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2881:62:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "2939:2:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes",
																			"nodeType": "YulIdentifier",
																			"src": "2909:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2909:33:1"
																	}
																],
																"functionName": {
																	"name": "allocateMemory",
																	"nodeType": "YulIdentifier",
																	"src": "2894:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2894:49:1"
															},
															"variables": [
																{
																	"name": "array",
																	"nodeType": "YulTypedName",
																	"src": "2885:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "2959:5:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "2966:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2952:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2952:17:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2952:17:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3015:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3024:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3032:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3017:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3017:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3017:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "2992:2:1"
																					},
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "2996:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2988:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2988:11:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3001:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2984:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2984:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3006:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2981:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2981:33:1"
															},
															"nodeType": "YulIf",
															"src": "2978:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3076:2:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3080:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3072:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3072:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nodeType": "YulIdentifier",
																				"src": "3089:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3096:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3085:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3085:14:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3101:2:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3050:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3050:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3050:54:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3113:15:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "3123:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3113:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2515:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2526:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2538:6:1",
														"type": ""
													}
												],
												"src": "2458:676:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3220:113:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3266:26:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3275:6:1"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "3283:6:1"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3268:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3268:22:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3268:22:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3241:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3250:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3237:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3237:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3262:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3233:32:1"
															},
															"nodeType": "YulIf",
															"src": "3230:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3301:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3317:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3311:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3311:16:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3186:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3197:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3209:6:1",
														"type": ""
													}
												],
												"src": "3139:194:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3389:208:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3399:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3419:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3413:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3413:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "3403:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3441:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3446:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3434:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3434:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3434:19:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3488:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3495:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3484:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3484:16:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3506:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3511:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3502:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3502:14:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "3518:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "3462:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3462:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3462:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3534:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "3562:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3570:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3558:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3558:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3579:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3575:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3575:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3554:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3554:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3545:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3545:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3586:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3541:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3541:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3534:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3366:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3373:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3381:3:1",
														"type": ""
													}
												],
												"src": "3338:259:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3775:258:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3785:41:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3799:26:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "3795:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3795:31:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3789:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3842:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3855:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "3859:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3851:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3851:15:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3868:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3847:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3847:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3835:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3835:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3835:37:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3892:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3897:2:1",
																				"type": "",
																				"value": "20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3888:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3888:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3910:3:1",
																						"type": "",
																						"value": "232"
																					},
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "3915:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3906:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3906:16:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3928:3:1",
																						"type": "",
																						"value": "232"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3933:8:1",
																						"type": "",
																						"value": "16777215"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3924:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3924:18:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3902:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3902:41:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3881:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3881:63:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3881:63:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "3964:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3969:2:1",
																				"type": "",
																				"value": "23"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3960:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3960:12:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3982:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value2",
																						"nodeType": "YulIdentifier",
																						"src": "3986:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3978:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3978:15:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "3995:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3974:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3974:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3953:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3953:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3953:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4008:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4019:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4024:2:1",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4015:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4015:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4008:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_uint24_t_address__to_t_address_t_uint24_t_address__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3735:3:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3740:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3748:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3756:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3767:3:1",
														"type": ""
													}
												],
												"src": "3602:431:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4314:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4331:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4340:3:1",
																				"type": "",
																				"value": "248"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4345:3:1",
																				"type": "",
																				"value": "255"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4336:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4336:13:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4324:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:26:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4324:26:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4370:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4375:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4366:11:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4387:2:1",
																						"type": "",
																						"value": "96"
																					},
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "4391:6:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "4383:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4383:15:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4404:26:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4400:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4400:31:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4379:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4379:53:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4359:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4359:74:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4359:74:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4453:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4458:2:1",
																				"type": "",
																				"value": "21"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4449:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4449:12:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4463:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4442:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4442:28:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "4490:3:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4495:2:1",
																				"type": "",
																				"value": "53"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4486:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4486:12:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "4500:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4479:28:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4479:28:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4516:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4527:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4532:2:1",
																		"type": "",
																		"value": "85"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4523:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4523:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4516:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4274:3:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4279:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4287:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4295:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4306:3:1",
														"type": ""
													}
												],
												"src": "4038:503:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4647:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4657:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4669:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4680:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4665:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4665:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4657:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4699:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4714:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4730:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "4735:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "4726:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "4726:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4739:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4722:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4722:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4710:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4710:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4692:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4692:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4692:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4616:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4627:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4638:4:1",
														"type": ""
													}
												],
												"src": "4546:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4909:233:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4919:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4931:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4942:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4927:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4927:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4919:4:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4954:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4972:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4977:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "4968:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4968:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4981:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "4964:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4964:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4958:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4999:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5014:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5022:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5010:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5010:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4992:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4992:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5046:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5057:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5042:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5042:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "5066:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5074:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5062:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5062:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5035:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5035:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5035:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5098:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5109:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5094:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5094:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "5118:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5126:8:1",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5114:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5114:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5087:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5087:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5087:49:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4862:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4873:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4881:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4889:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4900:4:1",
														"type": ""
													}
												],
												"src": "4754:388:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5370:347:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5380:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5398:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5403:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "5394:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5394:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5407:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "5390:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5390:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5384:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5425:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "5440:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5448:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5436:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5436:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5418:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5418:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5418:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5472:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5483:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5468:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5468:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value1",
																						"nodeType": "YulIdentifier",
																						"src": "5502:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "5495:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5495:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "5488:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5488:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5461:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5461:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5461:50:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5531:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5542:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5527:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5527:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5547:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5520:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5520:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5574:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5585:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5570:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5570:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "5594:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "5602:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "5590:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5590:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5563:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5563:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5563:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5626:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5637:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5622:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5622:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5643:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5615:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5615:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5615:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5656:55:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "5683:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5695:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5706:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5691:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5691:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5664:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5664:47:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5656:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__to_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5307:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "5318:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "5326:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5334:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5342:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5350:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5361:4:1",
														"type": ""
													}
												],
												"src": "5147:570:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5843:100:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5860:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5871:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5853:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5853:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5853:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5883:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5910:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5922:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5933:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5918:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5891:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5891:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5883:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5812:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5823:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5834:4:1",
														"type": ""
													}
												],
												"src": "5722:221:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6122:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6139:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6132:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6132:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6132:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6173:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6184:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6169:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6189:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6162:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6162:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6162:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6212:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6223:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6208:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6228:19:1",
																		"type": "",
																		"value": "toUint24_overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6201:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6201:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6201:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6257:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6269:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6280:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6265:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6265:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6257:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_428a8ba368fc474210479d5009a3c2ddaf9d762393b1b3cd3cf1b440d48791c5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6099:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6113:4:1",
														"type": ""
													}
												],
												"src": "5948:341:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6468:164:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6485:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6496:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6478:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6478:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6478:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6519:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6530:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6515:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6535:2:1",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6508:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6508:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6558:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6569:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6554:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6554:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6574:16:1",
																		"type": "",
																		"value": "slice_overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6547:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6547:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6547:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6600:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6612:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6623:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6608:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6608:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6600:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6445:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6459:4:1",
														"type": ""
													}
												],
												"src": "6294:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6811:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6828:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6839:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6821:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6821:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6821:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6862:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6873:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6858:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6858:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6878:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6851:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6851:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6851:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6901:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6912:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6897:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6897:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6917:22:1",
																		"type": "",
																		"value": "toUint24_outOfBounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6890:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6890:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6890:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6949:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6961:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6972:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6957:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6957:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6949:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_92c5fac6e5cb4f75ffccd9c8f373ae2e2c333a8b9c2fdc616c52c36fa31575dc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6788:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6802:4:1",
														"type": ""
													}
												],
												"src": "6637:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7160:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7177:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7188:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7170:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7170:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7170:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7211:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7222:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7207:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7207:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7227:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7200:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7200:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7200:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7250:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7261:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7246:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7246:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7266:18:1",
																		"type": "",
																		"value": "Unexpected error"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7239:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7239:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7294:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7306:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7317:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7302:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7302:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7294:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7137:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7151:4:1",
														"type": ""
													}
												],
												"src": "6986:340:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7505:171:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7522:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7533:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7515:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7515:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7556:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7567:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7552:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7552:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7572:2:1",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7545:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7545:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7545:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7595:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7606:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7591:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7591:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7611:23:1",
																		"type": "",
																		"value": "toAddress_outOfBounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7584:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7584:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7584:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7644:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7656:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7667:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7652:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7652:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7644:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7482:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7496:4:1",
														"type": ""
													}
												],
												"src": "7331:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7855:167:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7872:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7883:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7865:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7865:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7865:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7906:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7917:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7902:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7902:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7922:2:1",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7895:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7895:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7895:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7945:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7956:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7941:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7941:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7961:19:1",
																		"type": "",
																		"value": "slice_outOfBounds"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7934:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7934:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7934:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7990:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8002:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8013:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7998:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7998:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7990:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7832:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7846:4:1",
														"type": ""
													}
												],
												"src": "7681:341:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8201:168:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8218:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8229:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8211:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8211:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8211:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8252:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8263:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8248:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8268:2:1",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8241:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8241:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8291:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8302:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8287:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8287:18:1"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8307:20:1",
																		"type": "",
																		"value": "toAddress_overflow"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8280:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8280:48:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8280:48:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8337:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8349:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8360:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8345:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8345:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8337:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f71efb0937d5d9d75bbebe9d7207dad811fd47ced903ea9404d5e8d77eb17a95__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8178:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8192:4:1",
														"type": ""
													}
												],
												"src": "8027:342:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8475:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8485:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8497:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8508:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8493:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8485:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8527:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8538:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8520:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8520:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8520:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8444:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8455:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8466:4:1",
														"type": ""
													}
												],
												"src": "8374:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8600:198:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8610:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8626:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8620:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8620:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8610:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8638:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8660:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "8668:4:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8656:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8656:17:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8642:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8748:13:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "8750:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8750:9:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8750:9:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8691:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8703:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8688:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8688:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8727:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8739:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8724:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8724:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8685:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8685:62:1"
															},
															"nodeType": "YulIf",
															"src": "8682:2:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8777:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8781:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8770:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8770:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8770:22:1"
														}
													]
												},
												"name": "allocateMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8580:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8589:6:1",
														"type": ""
													}
												],
												"src": "8556:242:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8862:122:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8906:13:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "invalid",
																				"nodeType": "YulIdentifier",
																				"src": "8908:7:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8908:9:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8908:9:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8878:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8886:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8875:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8875:30:1"
															},
															"nodeType": "YulIf",
															"src": "8872:2:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8928:50:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "8948:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8956:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8944:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8944:17:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "8967:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "8963:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8963:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "8940:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8940:31:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8973:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8936:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8936:42:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "8928:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8842:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8853:4:1",
														"type": ""
													}
												],
												"src": "8803:181:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9042:205:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9052:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9061:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "9056:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9121:63:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9146:3:1"
																						},
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "9151:1:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9142:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9142:11:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nodeType": "YulIdentifier",
																									"src": "9165:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "9170:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "9161:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "9161:11:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "9155:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9155:18:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9135:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9135:39:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9135:39:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9082:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9085:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9079:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9079:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "9093:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "9095:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "9104:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9107:2:1",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "9100:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9100:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "9095:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "9075:3:1",
																"statements": []
															},
															"src": "9071:113:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9210:31:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nodeType": "YulIdentifier",
																							"src": "9223:3:1"
																						},
																						{
																							"name": "length",
																							"nodeType": "YulIdentifier",
																							"src": "9228:6:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "9219:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "9219:16:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9237:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "9212:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9212:27:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9212:27:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "9199:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9202:6:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9196:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9196:13:1"
															},
															"nodeType": "YulIf",
															"src": "9193:2:1"
														}
													]
												},
												"name": "copy_memory_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9020:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9025:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9030:6:1",
														"type": ""
													}
												],
												"src": "8989:258:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9299:86:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9363:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9372:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9375:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9365:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9365:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9365:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9322:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9333:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9348:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "9353:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "9344:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "9344:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9357:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "9340:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9340:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9329:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9329:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9319:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9319:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9312:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9312:50:1"
															},
															"nodeType": "YulIf",
															"src": "9309:2:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9288:5:1",
														"type": ""
													}
												],
												"src": "9252:133:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_t_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        let array_1 := allocateMemory(array_allocation_size_t_bytes(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), array)\n        array := array_1\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint24t_uint256t_uint160(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_t_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        if iszero(eq(value_2, and(value_2, 0xffffff))) { revert(value4, value4) }\n        value2 := value_2\n        value3 := calldataload(add(headStart, 96))\n        let value_3 := calldataload(add(headStart, 128))\n        validator_revert_t_address(value_3)\n        value4 := value_3\n    }\n    function abi_decode_tuple_t_bytes_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_int256t_int256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_int256t_int256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(value2, value2) }\n        value2 := abi_decode_t_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := mload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _2 := mload(_1)\n        let array := allocateMemory(array_allocation_size_t_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(value0, value0) }\n        copy_memory_to_memory(add(_1, 32), add(array, 32), _2)\n        value0 := array\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_t_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_address_t_uint24_t_address__to_t_address_t_uint24_t_address__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(232, value1), shl(232, 16777215)))\n        mstore(add(pos, 23), and(shl(96, value2), _1))\n        end := add(pos, 43)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9_t_address_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_address_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos, value2, value1, value0) -> end\n    {\n        mstore(pos, shl(248, 255))\n        mstore(add(pos, 1), and(shl(96, value0), not(0xffffffffffffffffffffffff)))\n        mstore(add(pos, 21), value1)\n        mstore(add(pos, 53), value2)\n        end := add(pos, 85)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n    }\n    function abi_encode_tuple_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__to_t_address_t_bool_t_int256_t_uint160_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), iszero(iszero(value1)))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_t_bytes(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_428a8ba368fc474210479d5009a3c2ddaf9d762393b1b3cd3cf1b440d48791c5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"toUint24_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"slice_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_92c5fac6e5cb4f75ffccd9c8f373ae2e2c333a8b9c2fdc616c52c36fa31575dc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"toUint24_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Unexpected error\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"toAddress_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"slice_outOfBounds\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f71efb0937d5d9d75bbebe9d7207dad811fd47ced903ea9404d5e8d77eb17a95__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"toAddress_overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function allocateMemory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, size)\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { invalid() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_t_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { invalid() }\n        size := add(and(add(length, 0x1f), not(31)), 0x20)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"363": [
									{
										"length": 32,
										"start": 788
									},
									{
										"length": 32,
										"start": 1263
									},
									{
										"length": 32,
										"start": 1516
									}
								],
								"367": [
									{
										"length": 32,
										"start": 752
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c45a01551161005b578063c45a0155146100d3578063cdca1753146100db578063f7729d43146100ee578063fa461e33146101015761007d565b80632f80bb1d1461008257806330d07f21146100ab5780634aa4a4fc146100be575b600080fd5b610095610090366004610a5c565b610116565b6040516100a29190610dfe565b60405180910390f35b6100956100b93660046109ee565b61017b565b6100c66102ee565b6040516100a29190610c31565b6100c6610312565b6100956100e9366004610a5c565b610336565b6100956100fc3660046109ee565b610384565b61011461010f366004610ac2565b6104be565b005b60005b600061012484610595565b905060008060006101348761059d565b92509250925061014882848389600061017b565b9550831561016057610159876105ce565b965061016c565b85945050505050610175565b50505050610119565b92915050565b60006001600160a01b03808616878216109083166101995760008490555b6101a48787876105e5565b6001600160a01b031663128acb0830836101bd88610623565b6000036001600160a01b038816156101d557876101fb565b856101f45773fffd8963efd1fc6a506488495d951d5263988d256101fb565b6401000276a45b8b8b8e60405160200161021093929190610bbe565b6040516020818303038152906040526040518663ffffffff1660e01b815260040161023f959493929190610c6d565b6040805180830381600087803b15801561025857600080fd5b505af1925050508015610288575060408051601f3d908101601f1916820190925261028591810190610a9f565b60015b6102e1573d8080156102b6576040519150601f19603f3d011682016040523d82523d6000602084013e6102bb565b606091505b506001600160a01b0384166102cf57600080555b6102d881610639565b925050506102e5565b5050505b95945050505050565b7f000000000000000000000000000000000000000000000000000000000000000081565b7f000000000000000000000000000000000000000000000000000000000000000081565b60005b600061034484610595565b905060008060006103548761059d565b925092509250610368838383896000610384565b9550831561016057610379876105ce565b965050505050610339565b60006001600160a01b03808616908716106103a08787876105e5565b6001600160a01b031663128acb0830836103b988610623565b6001600160a01b038816156103ce57876103f4565b856103ed5773fffd8963efd1fc6a506488495d951d5263988d256103f4565b6401000276a45b8c8b8d60405160200161040993929190610bbe565b6040516020818303038152906040526040518663ffffffff1660e01b8152600401610438959493929190610c6d565b6040805180830381600087803b15801561045157600080fd5b505af1925050508015610481575060408051601f3d908101601f1916820190925261047e91810190610a9f565b60015b6102e1573d8080156104af576040519150601f19603f3d011682016040523d82523d6000602084013e6104b4565b606091505b506102d881610639565b60008313806104cd5750600082135b6104d657600080fd5b60008060006104e48461059d565b9250925092506105167f00000000000000000000000000000000000000000000000000000000000000008484846106b6565b50600080600080891361054257856001600160a01b0316856001600160a01b031610888a60000361055d565b846001600160a01b0316866001600160a01b03161089896000035b925092509250821561057457604051818152602081fd5b6000541561058a57600054811461058a57600080fd5b604051828152602081fd5b516042111590565b600080806105ab84826106cc565b92506105b8846014610725565b90506105c58460176106cc565b91509193909250565b805160609061017590839060179060161901610777565b600061061b7f0000000000000000000000000000000000000000000000000000000000000000610616868686610853565b6108a9565b949350505050565b6000600160ff1b821061063557600080fd5b5090565b600081516020146106a25760448251101561066f5760405162461bcd60e51b815260040161066690610d4e565b60405180910390fd5b600482019150818060200190518101906106899190610b10565b60405162461bcd60e51b81526004016106669190610cb3565b818060200190518101906101759190610b7a565b60006102e5856106c7868686610853565b61095a565b6000818260140110156106f15760405162461bcd60e51b815260040161066690610dd2565b81601401835110156107155760405162461bcd60e51b815260040161066690610d78565b500160200151600160601b900490565b60008182600301101561074a5760405162461bcd60e51b815260040161066690610ccd565b816003018351101561076e5760405162461bcd60e51b815260040161066690610d20565b50016003015190565b60608182601f01101561079c5760405162461bcd60e51b815260040161066690610cf8565b8282840110156107be5760405162461bcd60e51b815260040161066690610cf8565b818301845110156107e15760405162461bcd60e51b815260040161066690610da7565b606082158015610800576040519150600082526020820160405261084a565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015610839578051835260209283019201610821565b5050858452601f01601f1916604052505b50949350505050565b61085b61097d565b826001600160a01b0316846001600160a01b03161115610879579192915b50604080516060810182526001600160a01b03948516815292909316602083015262ffffff169181019190915290565b600081602001516001600160a01b031682600001516001600160a01b0316106108d157600080fd5b828260000151836020015184604001516040516020016108f393929190610c45565b60408051601f1981840301815290829052805160209182012061093b939290917fe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b549101610bf9565b60408051601f1981840301815291905280516020909101209392505050565b600061096683836108a9565b9050336001600160a01b0382161461017557600080fd5b604080516060810182526000808252602082018190529181019190915290565b600082601f8301126109ad578081fd5b81356109c06109bb82610e2b565b610e07565b8181528460208386010111156109d4578283fd5b816020850160208301379081016020019190915292915050565b600080600080600060a08688031215610a05578081fd5b8535610a1081610e7d565b94506020860135610a2081610e7d565b9350604086013562ffffff81168114610a37578182fd5b9250606086013591506080860135610a4e81610e7d565b809150509295509295909350565b60008060408385031215610a6e578182fd5b823567ffffffffffffffff811115610a84578283fd5b610a908582860161099d565b95602094909401359450505050565b60008060408385031215610ab1578182fd5b505080516020909101519092909150565b600080600060608486031215610ad6578283fd5b8335925060208401359150604084013567ffffffffffffffff811115610afa578182fd5b610b068682870161099d565b9150509250925092565b600060208284031215610b21578081fd5b815167ffffffffffffffff811115610b37578182fd5b8201601f81018413610b47578182fd5b8051610b556109bb82610e2b565b818152856020838501011115610b69578384fd5b6102e5826020830160208601610e4d565b600060208284031215610b8b578081fd5b5051919050565b60008151808452610baa816020860160208601610e4d565b601f01601f19169290920160200192915050565b606093841b6bffffffffffffffffffffffff19908116825260e89390931b6001600160e81b0319166014820152921b166017820152602b0190565b6001600160f81b0319815260609390931b6bffffffffffffffffffffffff191660018401526015830191909152603582015260550190565b6001600160a01b0391909116815260200190565b6001600160a01b03938416815291909216602082015262ffffff909116604082015260600190565b6001600160a01b0386811682528515156020830152604082018590528316606082015260a060808201819052600090610ca890830184610b92565b979650505050505050565b600060208252610cc66020830184610b92565b9392505050565b602080825260119082015270746f55696e7432345f6f766572666c6f7760781b604082015260600190565b6020808252600e908201526d736c6963655f6f766572666c6f7760901b604082015260600190565b602080825260149082015273746f55696e7432345f6f75744f66426f756e647360601b604082015260600190565b60208082526010908201526f2ab732bc3832b1ba32b21032b93937b960811b604082015260600190565b602080825260159082015274746f416464726573735f6f75744f66426f756e647360581b604082015260600190565b602080825260119082015270736c6963655f6f75744f66426f756e647360781b604082015260600190565b602080825260129082015271746f416464726573735f6f766572666c6f7760701b604082015260600190565b90815260200190565b60405181810167ffffffffffffffff81118282101715610e2357fe5b604052919050565b600067ffffffffffffffff821115610e3f57fe5b50601f01601f191660200190565b60005b83811015610e68578181015183820152602001610e50565b83811115610e77576000848401525b50505050565b6001600160a01b0381168114610e9257600080fd5b5056fea264697066735822122054fb38d4b7670a7d885b2f7ed12926accde2fcb4ba7d18b98543dd82e630fa2964736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC45A0155 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xCDCA1753 EQ PUSH2 0xDB JUMPI DUP1 PUSH4 0xF7729D43 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0xFA461E33 EQ PUSH2 0x101 JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x2F80BB1D EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x30D07F21 EQ PUSH2 0xAB JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0xBE JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x95 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5C JUMP JUMPDEST PUSH2 0x116 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xDFE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x95 PUSH2 0xB9 CALLDATASIZE PUSH1 0x4 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x17B JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x2EE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0xC31 JUMP JUMPDEST PUSH2 0xC6 PUSH2 0x312 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xE9 CALLDATASIZE PUSH1 0x4 PUSH2 0xA5C JUMP JUMPDEST PUSH2 0x336 JUMP JUMPDEST PUSH2 0x95 PUSH2 0xFC CALLDATASIZE PUSH1 0x4 PUSH2 0x9EE JUMP JUMPDEST PUSH2 0x384 JUMP JUMPDEST PUSH2 0x114 PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0xAC2 JUMP JUMPDEST PUSH2 0x4BE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x124 DUP5 PUSH2 0x595 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x134 DUP8 PUSH2 0x59D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x148 DUP3 DUP5 DUP4 DUP10 PUSH1 0x0 PUSH2 0x17B JUMP JUMPDEST SWAP6 POP DUP4 ISZERO PUSH2 0x160 JUMPI PUSH2 0x159 DUP8 PUSH2 0x5CE JUMP JUMPDEST SWAP7 POP PUSH2 0x16C JUMP JUMPDEST DUP6 SWAP5 POP POP POP POP POP PUSH2 0x175 JUMP JUMPDEST POP POP POP POP PUSH2 0x119 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND DUP8 DUP3 AND LT SWAP1 DUP4 AND PUSH2 0x199 JUMPI PUSH1 0x0 DUP5 SWAP1 SSTORE JUMPDEST PUSH2 0x1A4 DUP8 DUP8 DUP8 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x128ACB08 ADDRESS DUP4 PUSH2 0x1BD DUP9 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x0 SUB PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x1D5 JUMPI DUP8 PUSH2 0x1FB JUMP JUMPDEST DUP6 PUSH2 0x1F4 JUMPI PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D25 PUSH2 0x1FB JUMP JUMPDEST PUSH5 0x1000276A4 JUMPDEST DUP12 DUP12 DUP15 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x210 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23F SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x258 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x288 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x285 SWAP2 DUP2 ADD SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2E1 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x2B6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2BB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x2CF JUMPI PUSH1 0x0 DUP1 SSTORE JUMPDEST PUSH2 0x2D8 DUP2 PUSH2 0x639 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x2E5 JUMP JUMPDEST POP POP POP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x0 PUSH2 0x344 DUP5 PUSH2 0x595 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x354 DUP8 PUSH2 0x59D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x368 DUP4 DUP4 DUP4 DUP10 PUSH1 0x0 PUSH2 0x384 JUMP JUMPDEST SWAP6 POP DUP4 ISZERO PUSH2 0x160 JUMPI PUSH2 0x379 DUP8 PUSH2 0x5CE JUMP JUMPDEST SWAP7 POP POP POP POP POP PUSH2 0x339 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND SWAP1 DUP8 AND LT PUSH2 0x3A0 DUP8 DUP8 DUP8 PUSH2 0x5E5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x128ACB08 ADDRESS DUP4 PUSH2 0x3B9 DUP9 PUSH2 0x623 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND ISZERO PUSH2 0x3CE JUMPI DUP8 PUSH2 0x3F4 JUMP JUMPDEST DUP6 PUSH2 0x3ED JUMPI PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D25 PUSH2 0x3F4 JUMP JUMPDEST PUSH5 0x1000276A4 JUMPDEST DUP13 DUP12 DUP14 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x409 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBBE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD DUP7 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x438 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC6D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x451 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x481 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x47E SWAP2 DUP2 ADD SWAP1 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x2E1 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x4AF JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x4B4 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH2 0x2D8 DUP2 PUSH2 0x639 JUMP JUMPDEST PUSH1 0x0 DUP4 SGT DUP1 PUSH2 0x4CD JUMPI POP PUSH1 0x0 DUP3 SGT JUMPDEST PUSH2 0x4D6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH2 0x4E4 DUP5 PUSH2 0x59D JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x516 PUSH32 0x0 DUP5 DUP5 DUP5 PUSH2 0x6B6 JUMP JUMPDEST POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 DUP10 SGT PUSH2 0x542 JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT DUP9 DUP11 PUSH1 0x0 SUB PUSH2 0x55D JUMP JUMPDEST DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT DUP10 DUP10 PUSH1 0x0 SUB JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP3 ISZERO PUSH2 0x574 JUMPI PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 REVERT JUMPDEST PUSH1 0x0 SLOAD ISZERO PUSH2 0x58A JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x58A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 REVERT JUMPDEST MLOAD PUSH1 0x42 GT ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 PUSH2 0x5AB DUP5 DUP3 PUSH2 0x6CC JUMP JUMPDEST SWAP3 POP PUSH2 0x5B8 DUP5 PUSH1 0x14 PUSH2 0x725 JUMP JUMPDEST SWAP1 POP PUSH2 0x5C5 DUP5 PUSH1 0x17 PUSH2 0x6CC JUMP JUMPDEST SWAP2 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x60 SWAP1 PUSH2 0x175 SWAP1 DUP4 SWAP1 PUSH1 0x17 SWAP1 PUSH1 0x16 NOT ADD PUSH2 0x777 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61B PUSH32 0x0 PUSH2 0x616 DUP7 DUP7 DUP7 PUSH2 0x853 JUMP JUMPDEST PUSH2 0x8A9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0xFF SHL DUP3 LT PUSH2 0x635 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD PUSH1 0x20 EQ PUSH2 0x6A2 JUMPI PUSH1 0x44 DUP3 MLOAD LT ISZERO PUSH2 0x66F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xD4E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP3 ADD SWAP2 POP DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x689 SWAP2 SWAP1 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP2 SWAP1 PUSH2 0xCB3 JUMP JUMPDEST DUP2 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x175 SWAP2 SWAP1 PUSH2 0xB7A JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E5 DUP6 PUSH2 0x6C7 DUP7 DUP7 DUP7 PUSH2 0x853 JUMP JUMPDEST PUSH2 0x95A JUMP JUMPDEST PUSH1 0x0 DUP2 DUP3 PUSH1 0x14 ADD LT ISZERO PUSH2 0x6F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xDD2 JUMP JUMPDEST DUP2 PUSH1 0x14 ADD DUP4 MLOAD LT ISZERO PUSH2 0x715 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xD78 JUMP JUMPDEST POP ADD PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x60 SHL SWAP1 DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP3 PUSH1 0x3 ADD LT ISZERO PUSH2 0x74A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xCCD JUMP JUMPDEST DUP2 PUSH1 0x3 ADD DUP4 MLOAD LT ISZERO PUSH2 0x76E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xD20 JUMP JUMPDEST POP ADD PUSH1 0x3 ADD MLOAD SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 DUP3 PUSH1 0x1F ADD LT ISZERO PUSH2 0x79C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST DUP3 DUP3 DUP5 ADD LT ISZERO PUSH2 0x7BE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xCF8 JUMP JUMPDEST DUP2 DUP4 ADD DUP5 MLOAD LT ISZERO PUSH2 0x7E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x666 SWAP1 PUSH2 0xDA7 JUMP JUMPDEST PUSH1 0x60 DUP3 ISZERO DUP1 ISZERO PUSH2 0x800 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x0 DUP3 MSTORE PUSH1 0x20 DUP3 ADD PUSH1 0x40 MSTORE PUSH2 0x84A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F DUP5 AND DUP1 ISZERO PUSH1 0x20 MUL DUP2 DUP5 ADD ADD DUP6 DUP2 ADD DUP8 DUP4 ISZERO PUSH1 0x20 MUL DUP5 DUP12 ADD ADD ADD JUMPDEST DUP2 DUP4 LT ISZERO PUSH2 0x839 JUMPI DUP1 MLOAD DUP4 MSTORE PUSH1 0x20 SWAP3 DUP4 ADD SWAP3 ADD PUSH2 0x821 JUMP JUMPDEST POP POP DUP6 DUP5 MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x40 MSTORE POP JUMPDEST POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x85B PUSH2 0x97D JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x879 JUMPI SWAP2 SWAP3 SWAP2 JUMPDEST POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND DUP2 MSTORE SWAP3 SWAP1 SWAP4 AND PUSH1 0x20 DUP4 ADD MSTORE PUSH3 0xFFFFFF AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x0 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND LT PUSH2 0x8D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x0 ADD MLOAD DUP4 PUSH1 0x20 ADD MLOAD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x8F3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xC45 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 PUSH2 0x93B SWAP4 SWAP3 SWAP1 SWAP2 PUSH32 0xE34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54 SWAP2 ADD PUSH2 0xBF9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x966 DUP4 DUP4 PUSH2 0x8A9 JUMP JUMPDEST SWAP1 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0x175 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x9AD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x9C0 PUSH2 0x9BB DUP3 PUSH2 0xE2B JUMP JUMPDEST PUSH2 0xE07 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x9D4 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xA05 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0xA10 DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0xA20 DUP2 PUSH2 0xE7D JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0xA37 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0xA4E DUP2 PUSH2 0xE7D JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xA6E JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xA84 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0xA90 DUP6 DUP3 DUP7 ADD PUSH2 0x99D JUMP JUMPDEST SWAP6 PUSH1 0x20 SWAP5 SWAP1 SWAP5 ADD CALLDATALOAD SWAP5 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xAB1 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xAD6 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP4 CALLDATALOAD SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xAFA JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xB06 DUP7 DUP3 DUP8 ADD PUSH2 0x99D JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB21 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xB37 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0xB47 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 MLOAD PUSH2 0xB55 PUSH2 0x9BB DUP3 PUSH2 0xE2B JUMP JUMPDEST DUP2 DUP2 MSTORE DUP6 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0xB69 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2E5 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB8B JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xBAA DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xE4D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 SWAP4 DUP5 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0xE8 SWAP4 SWAP1 SWAP4 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT AND PUSH1 0x14 DUP3 ADD MSTORE SWAP3 SHL AND PUSH1 0x17 DUP3 ADD MSTORE PUSH1 0x2B ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 DUP5 ADD MSTORE PUSH1 0x15 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x35 DUP3 ADD MSTORE PUSH1 0x55 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 ISZERO ISZERO PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD DUP6 SWAP1 MSTORE DUP4 AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0xCA8 SWAP1 DUP4 ADD DUP5 PUSH2 0xB92 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xCC6 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xB92 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x746F55696E7432345F6F766572666C6F77 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xE SWAP1 DUP3 ADD MSTORE PUSH14 0x736C6963655F6F766572666C6F77 PUSH1 0x90 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x746F55696E7432345F6F75744F66426F756E6473 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x2AB732BC3832B1BA32B21032B93937B9 PUSH1 0x81 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x746F416464726573735F6F75744F66426F756E6473 PUSH1 0x58 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x736C6963655F6F75744F66426F756E6473 PUSH1 0x78 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x746F416464726573735F6F766572666C6F77 PUSH1 0x70 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP2 DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xE23 JUMPI INVALID JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xE3F JUMPI INVALID JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE68 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE50 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE77 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xE92 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SLOAD 0xFB CODESIZE 0xD4 0xB7 PUSH8 0xA7D885B2F7ED129 0x26 0xAC 0xCD 0xE2 0xFC 0xB4 0xBA PUSH30 0x18B98543DD82E630FA2964736F6C63430007060033000000000000000000 ",
							"sourceMap": "50586:5721:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;55640:665;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;54532:1074;;;;;;:::i;:::-;;:::i;9640:39::-;;;:::i;:::-;;;;;;;:::i;9548:41::-;;;:::i;53838:660::-;;;;;;:::i;:::-;;:::i;52986:818::-;;;;;;:::i;:::-;;:::i;51255:1245::-;;;;;;:::i;:::-;;:::i;:::-;;55640:665;55731:16;55759:540;55786:21;55810:23;:4;:21;:23::i;:::-;55786:47;;55849:16;55867:15;55884:10;55898:22;:4;:20;:22::i;:::-;55848:72;;;;;;56026:60;56049:7;56058:8;56068:3;56073:9;56084:1;56026:22;:60::i;:::-;56014:72;;56160:16;56156:133;;;56203:16;:4;:14;:16::i;:::-;56196:23;;56156:133;;;56265:9;56258:16;;;;;;;;56156:133;55759:540;;;;;;;55640:665;;;;:::o;54532:1074::-;54728:16;-1:-1:-1;;;;;54774:18:0;;;;;;;;54916:22;;54912:55;;54940:15;:27;;;54912:55;54993:31;55001:7;55010:8;55020:3;54993:7;:31::i;:::-;-1:-1:-1;;;;;54993:36:0;;55055:4;55128:10;55157:20;:9;:18;:20::i;:::-;55156:21;;-1:-1:-1;;;;;55195:22:0;;;:157;;55335:17;55195:157;;;55241:10;:70;;55284:27;55241:70;;;55254:27;55241:70;55387:8;55397:3;55402:7;55370:40;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;54993:431;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;54993:431:0;;;;;;;;-1:-1:-1;;54993:431:0;;;;;;;;;;;;:::i;:::-;;;54977:623;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;55482:22:0;;55478:50;;55513:15;55506:22;;55478:50;55564:25;55582:6;55564:17;:25::i;:::-;55557:32;;;;;;54977:623;;;54532:1074;;;;;;;;;:::o;9640:39::-;;;:::o;9548:41::-;;;:::o;53838:660::-;53927:17;53956:536;53983:21;54007:23;:4;:21;:23::i;:::-;53983:47;;54046:15;54063:16;54081:10;54095:22;:4;:20;:22::i;:::-;54045:72;;;;;;54222:58;54244:7;54253:8;54263:3;54268:8;54278:1;54222:21;:58::i;:::-;54211:69;;54354:16;54350:132;;;54397:16;:4;:14;:16::i;:::-;54390:23;;53956:536;;;;;;52986:818;53180:17;-1:-1:-1;;;;;53227:18:0;;;;;;;53272:31;53227:7;53237:8;53299:3;53272:7;:31::i;:::-;-1:-1:-1;;;;;53272:36:0;;53334:4;53407:10;53435:19;:8;:17;:19::i;:::-;-1:-1:-1;;;;;53472:22:0;;;:157;;53612:17;53472:157;;;53518:10;:70;;53561:27;53518:70;;;53531:27;53518:70;53664:7;53673:3;53678:8;53647:40;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;53272:429;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;53272:429:0;;;;;;;;-1:-1:-1;;53272:429:0;;;;;;;;;;;;:::i;:::-;;;53256:542;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53762:25;53780:6;53762:17;:25::i;51255:1245::-;51433:1;51418:12;:16;:36;;;;51453:1;51438:12;:16;51418:36;51410:45;;;;;;51529:15;51546:16;51564:10;51578:22;:4;:20;:22::i;:::-;51528:72;;;;;;51610:66;51644:7;51653;51662:8;51672:3;51610:33;:66::i;:::-;;51688:17;51707:19;51728:22;51781:1;51766:12;:16;:188;;51899:7;-1:-1:-1;;;;;51888:18:0;:8;-1:-1:-1;;;;;51888:18:0;;51916:12;51940;51939:13;;51766:188;;;51812:8;-1:-1:-1;;;;;51802:18:0;:7;-1:-1:-1;;;;;51802:18:0;;51830:12;51854;51853:13;;51766:188;51687:267;;;;;;51968:12;51964:530;;;52040:4;52034:11;52074:14;52069:3;52062:27;52118:2;52113:3;52106:15;52005:130;52270:15;;:20;52266:68;;52318:15;;52300:14;:33;52292:42;;;;;;52392:4;52386:11;52426;52421:3;52414:24;52467:2;52462:3;52455:15;7032:138;7123:11;6817:24;-1:-1:-1;7123:40:0;;7032:138::o;7819:314::-;7923:14;;;8023:17;:4;7923:14;8023;:17::i;:::-;8014:26;-1:-1:-1;8056:24:0;:4;6344:2;8056:13;:24::i;:::-;8050:30;-1:-1:-1;8099:27:0;:4;6547:20;8099:14;:27::i;:::-;8090:36;;7819:314;;;;;:::o;8675:149::-;8791:11;;8736:12;;8767:50;;8791:4;;6547:20;;-1:-1:-1;;8791:25:0;8767:10;:50::i;50957:249::-;51070:14;51118:80;51145:7;51154:43;51177:6;51185;51193:3;51154:22;:43::i;:::-;51118:26;:80::i;:::-;51096:103;50957:249;-1:-1:-1;;;;50957:249:0:o;50077:121::-;50129:8;-1:-1:-1;;;50157:1:0;:10;50149:19;;;;;;-1:-1:-1;50189:1:0;50077:121::o;52580:372::-;52650:7;52673:6;:13;52690:2;52673:19;52669:231;;52728:2;52712:6;:13;:18;52708:50;;;52732:26;;-1:-1:-1;;;52732:26:0;;;;;;;:::i;:::-;;;;;;;;52708:50;52821:4;52813:6;52809:17;52799:27;;52871:6;52860:28;;;;;;;;;;;;:::i;:::-;52853:36;;-1:-1:-1;;;52853:36:0;;;;;;;;:::i;52669:231::-;52927:6;52916:29;;;;;;;;;;;;:::i;39693:259::-;39839:19;39877:68;39892:7;39901:43;39924:6;39932;39940:3;39901:22;:43::i;:::-;39877:14;:68::i;5279:416::-;5358:7;5400:6;5385;5394:2;5385:11;:21;;5377:52;;;;-1:-1:-1;;;5377:52:0;;;;;;;:::i;:::-;5464:6;5473:2;5464:11;5447:6;:13;:28;;5439:62;;;;-1:-1:-1;;;5439:62:0;;;;;;;:::i;:::-;-1:-1:-1;5589:30:0;5605:4;5589:30;5583:37;-1:-1:-1;;;5579:71:0;;;5279:416::o;5701:365::-;5779:6;5819;5805;5814:1;5805:10;:20;;5797:50;;;;-1:-1:-1;;;5797:50:0;;;;;;;:::i;:::-;5882:6;5891:1;5882:10;5865:6;:13;:27;;5857:60;;;;-1:-1:-1;;;5857:60:0;;;;;;;:::i;:::-;-1:-1:-1;5994:29:0;6010:3;5994:29;5988:36;;5701:365::o;2266:3007::-;2388:12;2436:7;2420;2430:2;2420:12;:23;;2412:50;;;;-1:-1:-1;;;2412:50:0;;;;;;;:::i;:::-;2500:6;2489:7;2480:6;:16;:26;;2472:53;;;;-1:-1:-1;;;2472:53:0;;;;;;;:::i;:::-;2569:7;2560:6;:16;2543:6;:13;:33;;2535:63;;;;-1:-1:-1;;;2535:63:0;;;;;;;:::i;:::-;2609:22;2672:15;;2704:2099;;;;4956:4;4950:11;4937:24;;5154:1;5143:9;5136:20;5206:4;5195:9;5191:20;5185:4;5178:34;2665:2565;;2704:2099;2898:4;2892:11;2879:24;;3593:2;3584:7;3580:16;3995:9;3988:17;3982:4;3978:28;3966:9;3955;3951:25;3947:60;4047:7;4043:2;4039:16;4315:6;4301:9;4294:17;4288:4;4284:28;4272:9;4264:6;4260:22;4256:57;4252:70;4077:461;4352:3;4348:2;4345:11;4077:461;;;4506:9;;4495:21;;4397:4;4389:13;;;;4433;4077:461;;;-1:-1:-1;;4560:26:0;;;4780:2;4763:11;-1:-1:-1;;4759:25:0;4753:4;4746:39;-1:-1:-1;2665:2565:0;-1:-1:-1;5257:9:0;2266:3007;-1:-1:-1;;;;2266:3007:0:o;831:274::-;948:14;;:::i;:::-;987:6;-1:-1:-1;;;;;978:15:0;:6;-1:-1:-1;;;;;978:15:0;;974:56;;;1015:6;;1023;974:56;-1:-1:-1;1047:51:0;;;;;;;;-1:-1:-1;;;;;1047:51:0;;;;;;;;;;;;;;;;;;;;;;;831:274::o;1352:512::-;1436:12;1481:3;:10;;;-1:-1:-1;;;;;1468:23:0;:3;:10;;;-1:-1:-1;;;;;1468:23:0;;1460:32;;;;;;1661:7;1715:3;:10;;;1727:3;:10;;;1739:3;:7;;;1704:43;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1704:43:0;;;;;;;;;;1694:54;;1704:43;1694:54;;;;1586:229;;;1694:54;;288:66;;1586:229;;:::i;:::-;;;;-1:-1:-1;;1586:229:0;;;;;;;;;1555:278;;1586:229;1555:278;;;;;1352:512;-1:-1:-1;;;1352:512:0:o;40199:279::-;40323:19;40380:44;40407:7;40416;40380:26;:44::i;:::-;40358:67;-1:-1:-1;40443:10:0;-1:-1:-1;;;;;40443:27:0;;;40435:36;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:485:1:-;;111:3;104:4;96:6;92:17;88:27;78:2;;133:5;126;119:20;78:2;173:6;160:20;204:49;219:33;249:2;219:33;:::i;:::-;204:49;:::i;:::-;278:2;269:7;262:19;324:3;317:4;312:2;304:6;300:15;296:26;293:35;290:2;;;345:5;338;331:20;290:2;414;407:4;399:6;395:17;388:4;379:7;375:18;362:55;437:16;;;455:4;433:27;426:42;;;;441:7;68:431;-1:-1:-1;;68:431:1:o;504:795::-;;;;;;683:3;671:9;662:7;658:23;654:33;651:2;;;705:6;697;690:22;651:2;749:9;736:23;768:33;795:5;768:33;:::i;:::-;820:5;-1:-1:-1;877:2:1;862:18;;849:32;890:35;849:32;890:35;:::i;:::-;944:7;-1:-1:-1;1003:2:1;988:18;;975:32;1051:8;1038:22;;1026:35;;1016:2;;1080:6;1072;1065:22;1016:2;1108:7;-1:-1:-1;1162:2:1;1147:18;;1134:32;;-1:-1:-1;1218:3:1;1203:19;;1190:33;1232:35;1190:33;1232:35;:::i;:::-;1286:7;1276:17;;;641:658;;;;;;;;:::o;1304:410::-;;;1442:2;1430:9;1421:7;1417:23;1413:32;1410:2;;;1463:6;1455;1448:22;1410:2;1508:9;1495:23;1541:18;1533:6;1530:30;1527:2;;;1578:6;1570;1563:22;1527:2;1606:51;1649:7;1640:6;1629:9;1625:22;1606:51;:::i;:::-;1596:61;1704:2;1689:18;;;;1676:32;;-1:-1:-1;;;;1400:314:1:o;1719:253::-;;;1857:2;1845:9;1836:7;1832:23;1828:32;1825:2;;;1878:6;1870;1863:22;1825:2;-1:-1:-1;;1906:16:1;;1962:2;1947:18;;;1941:25;1906:16;;1941:25;;-1:-1:-1;1815:157:1:o;1977:476::-;;;;2130:2;2118:9;2109:7;2105:23;2101:32;2098:2;;;2151:6;2143;2136:22;2098:2;2192:9;2179:23;2169:33;;2249:2;2238:9;2234:18;2221:32;2211:42;;2304:2;2293:9;2289:18;2276:32;2331:18;2323:6;2320:30;2317:2;;;2368:6;2360;2353:22;2317:2;2396:51;2439:7;2430:6;2419:9;2415:22;2396:51;:::i;:::-;2386:61;;;2088:365;;;;;:::o;2458:676::-;;2591:2;2579:9;2570:7;2566:23;2562:32;2559:2;;;2612:6;2604;2597:22;2559:2;2650:9;2644:16;2683:18;2675:6;2672:30;2669:2;;;2720:6;2712;2705:22;2669:2;2748:22;;2801:4;2793:13;;2789:27;-1:-1:-1;2779:2:1;;2835:6;2827;2820:22;2779:2;2869;2863:9;2894:49;2909:33;2939:2;2909:33;:::i;2894:49::-;2966:2;2959:5;2952:17;3006:7;3001:2;2996;2992;2988:11;2984:20;2981:33;2978:2;;;3032:6;3024;3017:22;2978:2;3050:54;3101:2;3096;3089:5;3085:14;3080:2;3076;3072:11;3050:54;:::i;3139:194::-;;3262:2;3250:9;3241:7;3237:23;3233:32;3230:2;;;3283:6;3275;3268:22;3230:2;-1:-1:-1;3311:16:1;;3220:113;-1:-1:-1;3220:113:1:o;3338:259::-;;3419:5;3413:12;3446:6;3441:3;3434:19;3462:63;3518:6;3511:4;3506:3;3502:14;3495:4;3488:5;3484:16;3462:63;:::i;:::-;3579:2;3558:15;-1:-1:-1;;3554:29:1;3545:39;;;;3586:4;3541:50;;3389:208;-1:-1:-1;;3389:208:1:o;3602:431::-;3855:2;3851:15;;;-1:-1:-1;;3847:24:1;;;3835:37;;3928:3;3906:16;;;;-1:-1:-1;;;;;;3902:41:1;3897:2;3888:12;;3881:63;3978:15;;3974:24;3969:2;3960:12;;3953:46;4024:2;4015:12;;3775:258::o;4038:503::-;-1:-1:-1;;;;;;4324:26:1;;4387:2;4383:15;;;;-1:-1:-1;;4379:53:1;4375:1;4366:11;;4359:74;4458:2;4449:12;;4442:28;;;;4495:2;4486:12;;4479:28;4532:2;4523:12;;4314:227::o;4546:203::-;-1:-1:-1;;;;;4710:32:1;;;;4692:51;;4680:2;4665:18;;4647:102::o;4754:388::-;-1:-1:-1;;;;;5010:15:1;;;4992:34;;5062:15;;;;5057:2;5042:18;;5035:43;5126:8;5114:21;;;5109:2;5094:18;;5087:49;4942:2;4927:18;;4909:233::o;5147:570::-;-1:-1:-1;;;;;5436:15:1;;;5418:34;;5495:14;;5488:22;5483:2;5468:18;;5461:50;5542:2;5527:18;;5520:34;;;5590:15;;5585:2;5570:18;;5563:43;5398:3;5637;5622:19;;5615:32;;;5147:570;;5664:47;;5691:19;;5683:6;5664:47;:::i;:::-;5656:55;5370:347;-1:-1:-1;;;;;;;5370:347:1:o;5722:221::-;;5871:2;5860:9;5853:21;5891:46;5933:2;5922:9;5918:18;5910:6;5891:46;:::i;:::-;5883:54;5843:100;-1:-1:-1;;;5843:100:1:o;5948:341::-;6150:2;6132:21;;;6189:2;6169:18;;;6162:30;-1:-1:-1;;;6223:2:1;6208:18;;6201:47;6280:2;6265:18;;6122:167::o;6294:338::-;6496:2;6478:21;;;6535:2;6515:18;;;6508:30;-1:-1:-1;;;6569:2:1;6554:18;;6547:44;6623:2;6608:18;;6468:164::o;6637:344::-;6839:2;6821:21;;;6878:2;6858:18;;;6851:30;-1:-1:-1;;;6912:2:1;6897:18;;6890:50;6972:2;6957:18;;6811:170::o;6986:340::-;7188:2;7170:21;;;7227:2;7207:18;;;7200:30;-1:-1:-1;;;7261:2:1;7246:18;;7239:46;7317:2;7302:18;;7160:166::o;7331:345::-;7533:2;7515:21;;;7572:2;7552:18;;;7545:30;-1:-1:-1;;;7606:2:1;7591:18;;7584:51;7667:2;7652:18;;7505:171::o;7681:341::-;7883:2;7865:21;;;7922:2;7902:18;;;7895:30;-1:-1:-1;;;7956:2:1;7941:18;;7934:47;8013:2;7998:18;;7855:167::o;8027:342::-;8229:2;8211:21;;;8268:2;8248:18;;;8241:30;-1:-1:-1;;;8302:2:1;8287:18;;8280:48;8360:2;8345:18;;8201:168::o;8374:177::-;8520:25;;;8508:2;8493:18;;8475:76::o;8556:242::-;8626:2;8620:9;8656:17;;;8703:18;8688:34;;8724:22;;;8685:62;8682:2;;;8750:9;8682:2;8777;8770:22;8600:198;;-1:-1:-1;8600:198:1:o;8803:181::-;;8886:18;8878:6;8875:30;8872:2;;;8908:9;8872:2;-1:-1:-1;8967:2:1;8944:17;-1:-1:-1;;8940:31:1;8973:4;8936:42;;8862:122::o;8989:258::-;9061:1;9071:113;9085:6;9082:1;9079:13;9071:113;;;9161:11;;;9155:18;9142:11;;;9135:39;9107:2;9100:10;9071:113;;;9202:6;9199:1;9196:13;9193:2;;;9237:1;9228:6;9223:3;9219:16;9212:27;9193:2;;9042:205;;;:::o;9252:133::-;-1:-1:-1;;;;;9329:31:1;;9319:42;;9309:2;;9375:1;9372;9365:12;9309:2;9299:86;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "757400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"WETH9()": "infinite",
								"factory()": "infinite",
								"quoteExactInput(bytes,uint256)": "infinite",
								"quoteExactInputSingle(address,address,uint24,uint256,uint160)": "infinite",
								"quoteExactOutput(bytes,uint256)": "infinite",
								"quoteExactOutputSingle(address,address,uint24,uint256,uint160)": "infinite",
								"uniswapV3SwapCallback(int256,int256,bytes)": "infinite"
							},
							"internal": {
								"getPool(address,address,uint24)": "infinite",
								"parseRevertReason(bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 50586,
									"end": 56307,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 50861,
									"end": 50951,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 9742,
									"end": 9760,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 9770,
									"end": 9784,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 9770,
									"end": 9784,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 9770,
									"end": 9784,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 9770,
									"end": 9784,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 9770,
									"end": 9784,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 193,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 14,
									"end": 193,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 95,
									"end": 108,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 95,
									"end": 108,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 137,
									"end": 168,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 137,
									"end": 168,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 127,
									"end": 169,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 127,
									"end": 169,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 117,
									"end": 119,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 183,
									"end": 184,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 180,
									"end": 181,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 173,
									"end": 185,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 117,
									"end": 119,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 117,
									"end": 119,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 76,
									"end": 193,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 198,
									"end": 505,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 198,
									"end": 505,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 338,
									"end": 340,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 326,
									"end": 335,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 317,
									"end": 324,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 313,
									"end": 336,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 309,
									"end": 341,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 306,
									"end": 308,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 306,
									"end": 308,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 306,
									"end": 308,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 359,
									"end": 365,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 351,
									"end": 357,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 344,
									"end": 366,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 306,
									"end": 308,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 306,
									"end": 308,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 387,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 419,
									"end": 428,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 387,
									"end": 429,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 387,
									"end": 429,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 377,
									"end": 429,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 377,
									"end": 429,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 448,
									"end": 499,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 495,
									"end": 497,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 484,
									"end": 493,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 480,
									"end": 498,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 448,
									"end": 499,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 448,
									"end": 499,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 438,
									"end": 499,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 438,
									"end": 499,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 296,
									"end": 505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 296,
									"end": 505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 296,
									"end": 505,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 296,
									"end": 505,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 296,
									"end": 505,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 296,
									"end": 505,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "367"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "363"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 50586,
									"end": 56307,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122054fb38d4b7670a7d885b2f7ed12926accde2fcb4ba7d18b98543dd82e630fa2964736f6c63430007060033",
									".code": [
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "C45A0155"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "C45A0155"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "CDCA1753"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "F7729D43"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "FA461E33"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "2F80BB1D"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "30D07F21"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "4AA4A4FC"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50586,
											"end": 56307,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55731,
											"end": 55747,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55759,
											"end": 56299,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 55759,
											"end": 56299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55786,
											"end": 55807,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55810,
											"end": 55833,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 55810,
											"end": 55814,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55810,
											"end": 55831,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 55810,
											"end": 55833,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55810,
											"end": 55833,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 55810,
											"end": 55833,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55786,
											"end": 55833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55786,
											"end": 55833,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55849,
											"end": 55865,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55867,
											"end": 55882,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55884,
											"end": 55894,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55898,
											"end": 55920,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 55898,
											"end": 55902,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 55898,
											"end": 55918,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 55898,
											"end": 55920,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55898,
											"end": 55920,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 55898,
											"end": 55920,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55848,
											"end": 55920,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55848,
											"end": 55920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55848,
											"end": 55920,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55848,
											"end": 55920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55848,
											"end": 55920,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55848,
											"end": 55920,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56026,
											"end": 56086,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 56049,
											"end": 56056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 56058,
											"end": 56066,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 56068,
											"end": 56071,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56073,
											"end": 56082,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 56084,
											"end": 56085,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 56026,
											"end": 56048,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 56026,
											"end": 56086,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56026,
											"end": 56086,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 56026,
											"end": 56086,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56014,
											"end": 56086,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 56014,
											"end": 56086,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56160,
											"end": 56176,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 56156,
											"end": 56289,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 56156,
											"end": 56289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 56156,
											"end": 56289,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 56203,
											"end": 56219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 56203,
											"end": 56207,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 56203,
											"end": 56217,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 56203,
											"end": 56219,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 56203,
											"end": 56219,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 56203,
											"end": 56219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56196,
											"end": 56219,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 56196,
											"end": 56219,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56156,
											"end": 56289,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 56156,
											"end": 56289,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56156,
											"end": 56289,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 56156,
											"end": 56289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 56265,
											"end": 56274,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 56258,
											"end": 56274,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 56258,
											"end": 56274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56258,
											"end": 56274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56258,
											"end": 56274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56258,
											"end": 56274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56258,
											"end": 56274,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 56258,
											"end": 56274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 56258,
											"end": 56274,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 56156,
											"end": 56289,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 56156,
											"end": 56289,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55759,
											"end": 56299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55759,
											"end": 56299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55759,
											"end": 56299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55759,
											"end": 56299,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55759,
											"end": 56299,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 55759,
											"end": 56299,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55759,
											"end": 56299,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 55759,
											"end": 56299,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55640,
											"end": 56305,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54728,
											"end": 54744,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54774,
											"end": 54792,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54792,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54792,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54792,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54792,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54792,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 54774,
											"end": 54792,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54916,
											"end": 54938,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54916,
											"end": 54938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54912,
											"end": 54967,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 54912,
											"end": 54967,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54940,
											"end": 54955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54940,
											"end": 54967,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54940,
											"end": 54967,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54940,
											"end": 54967,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 54912,
											"end": 54967,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 54912,
											"end": 54967,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 55001,
											"end": 55008,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 55010,
											"end": 55018,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 55020,
											"end": 55023,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55000,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 54993,
											"end": 55024,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54993,
											"end": 55024,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 54993,
											"end": 55024,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 54993,
											"end": 55029,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55029,
											"name": "PUSH",
											"source": 0,
											"value": "128ACB08"
										},
										{
											"begin": 55055,
											"end": 55059,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 55128,
											"end": 55138,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55157,
											"end": 55177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 55157,
											"end": 55166,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 55157,
											"end": 55175,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 55157,
											"end": 55177,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55157,
											"end": 55177,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 55157,
											"end": 55177,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55156,
											"end": 55177,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55156,
											"end": 55177,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55195,
											"end": 55217,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 55195,
											"end": 55217,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55195,
											"end": 55217,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 55195,
											"end": 55352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 55195,
											"end": 55352,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55335,
											"end": 55352,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 55195,
											"end": 55352,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 55195,
											"end": 55352,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55195,
											"end": 55352,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 55195,
											"end": 55352,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55241,
											"end": 55251,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 55241,
											"end": 55311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 55241,
											"end": 55311,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55284,
											"end": 55311,
											"name": "PUSH",
											"source": 0,
											"value": "FFFD8963EFD1FC6A506488495D951D5263988D25"
										},
										{
											"begin": 55241,
											"end": 55311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 55241,
											"end": 55311,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 55241,
											"end": 55311,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 55241,
											"end": 55311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55254,
											"end": 55281,
											"name": "PUSH",
											"source": 0,
											"value": "1000276A4"
										},
										{
											"begin": 55241,
											"end": 55311,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 55241,
											"end": 55311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55387,
											"end": 55395,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 55397,
											"end": 55400,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 55402,
											"end": 55409,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 55370,
											"end": 55410,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 54993,
											"end": 55424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 55482,
											"end": 55504,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 55482,
											"end": 55504,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 55478,
											"end": 55528,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 55478,
											"end": 55528,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 55513,
											"end": 55528,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 55506,
											"end": 55528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 55506,
											"end": 55528,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 55478,
											"end": 55528,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 55478,
											"end": 55528,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55564,
											"end": 55589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 55582,
											"end": 55588,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 55564,
											"end": 55581,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 55564,
											"end": 55589,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 55564,
											"end": 55589,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 55564,
											"end": 55589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 55557,
											"end": 55589,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 55557,
											"end": 55589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55557,
											"end": 55589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55557,
											"end": 55589,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 55557,
											"end": 55589,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 55557,
											"end": 55589,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54977,
											"end": 55600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54532,
											"end": 55606,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9640,
											"end": 9679,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9548,
											"end": 9589,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 53838,
											"end": 54498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53927,
											"end": 53944,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53956,
											"end": 54492,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 53956,
											"end": 54492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53983,
											"end": 54004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54007,
											"end": 54030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 54007,
											"end": 54011,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 54007,
											"end": 54028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 54007,
											"end": 54030,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54007,
											"end": 54030,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 54007,
											"end": 54030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53983,
											"end": 54030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53983,
											"end": 54030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54046,
											"end": 54061,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54063,
											"end": 54079,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 54081,
											"end": 54091,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54095,
											"end": 54117,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 54095,
											"end": 54099,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54095,
											"end": 54115,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 54095,
											"end": 54117,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54095,
											"end": 54117,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 54095,
											"end": 54117,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54045,
											"end": 54117,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54045,
											"end": 54117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54045,
											"end": 54117,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54045,
											"end": 54117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54045,
											"end": 54117,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 54045,
											"end": 54117,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54222,
											"end": 54280,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 54244,
											"end": 54251,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54253,
											"end": 54261,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54263,
											"end": 54266,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54268,
											"end": 54276,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 54278,
											"end": 54279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 54222,
											"end": 54243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 54222,
											"end": 54280,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54222,
											"end": 54280,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 54222,
											"end": 54280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54211,
											"end": 54280,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 54211,
											"end": 54280,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 54354,
											"end": 54370,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 54350,
											"end": 54482,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 54350,
											"end": 54482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 54350,
											"end": 54482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 54397,
											"end": 54413,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 54397,
											"end": 54401,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 54397,
											"end": 54411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 54397,
											"end": 54413,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 54397,
											"end": 54413,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 54397,
											"end": 54413,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 54390,
											"end": 54413,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 54390,
											"end": 54413,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53956,
											"end": 54492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53956,
											"end": 54492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53956,
											"end": 54492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53956,
											"end": 54492,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53956,
											"end": 54492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 53956,
											"end": 54492,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 52986,
											"end": 53804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53180,
											"end": 53197,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53227,
											"end": 53245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53227,
											"end": 53245,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 53227,
											"end": 53245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53227,
											"end": 53245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53227,
											"end": 53245,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 53227,
											"end": 53245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53227,
											"end": 53245,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53303,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 53227,
											"end": 53234,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 53237,
											"end": 53245,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 53299,
											"end": 53302,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 53272,
											"end": 53303,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53272,
											"end": 53303,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 53272,
											"end": 53303,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53272,
											"end": 53308,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53308,
											"name": "PUSH",
											"source": 0,
											"value": "128ACB08"
										},
										{
											"begin": 53334,
											"end": 53338,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 53407,
											"end": 53417,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53435,
											"end": 53454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 53435,
											"end": 53443,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 53435,
											"end": 53452,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 53435,
											"end": 53454,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53435,
											"end": 53454,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 53435,
											"end": 53454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 53472,
											"end": 53494,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 53472,
											"end": 53494,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53472,
											"end": 53494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53472,
											"end": 53629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 53472,
											"end": 53629,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53612,
											"end": 53629,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 53472,
											"end": 53629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 53472,
											"end": 53629,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53472,
											"end": 53629,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 53472,
											"end": 53629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53528,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 53518,
											"end": 53588,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53561,
											"end": 53588,
											"name": "PUSH",
											"source": 0,
											"value": "FFFD8963EFD1FC6A506488495D951D5263988D25"
										},
										{
											"begin": 53518,
											"end": 53588,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 53518,
											"end": 53588,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53518,
											"end": 53588,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 53518,
											"end": 53588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53531,
											"end": 53558,
											"name": "PUSH",
											"source": 0,
											"value": "1000276A4"
										},
										{
											"begin": 53518,
											"end": 53588,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 53518,
											"end": 53588,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53664,
											"end": 53671,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 53673,
											"end": 53676,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 53678,
											"end": 53686,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53647,
											"end": 53687,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 53272,
											"end": 53701,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 53256,
											"end": 53798,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 53762,
											"end": 53787,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 53780,
											"end": 53786,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 53762,
											"end": 53779,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 53762,
											"end": 53787,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 51255,
											"end": 52500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51433,
											"end": 51434,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51418,
											"end": 51430,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 51418,
											"end": 51434,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 51418,
											"end": 51454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51418,
											"end": 51454,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 51418,
											"end": 51454,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51418,
											"end": 51454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51453,
											"end": 51454,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51438,
											"end": 51450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51438,
											"end": 51454,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 51418,
											"end": 51454,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 51418,
											"end": 51454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51410,
											"end": 51455,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 51410,
											"end": 51455,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51410,
											"end": 51455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51410,
											"end": 51455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51410,
											"end": 51455,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 51410,
											"end": 51455,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 51410,
											"end": 51455,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51529,
											"end": 51544,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51546,
											"end": 51562,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51564,
											"end": 51574,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51578,
											"end": 51600,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 51578,
											"end": 51582,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51578,
											"end": 51598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 51578,
											"end": 51600,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51578,
											"end": 51600,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 51578,
											"end": 51600,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51528,
											"end": 51600,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51528,
											"end": 51600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51528,
											"end": 51600,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51528,
											"end": 51600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51528,
											"end": 51600,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51528,
											"end": 51600,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51610,
											"end": 51676,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 51644,
											"end": 51651,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 51653,
											"end": 51660,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51662,
											"end": 51670,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51672,
											"end": 51675,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 51610,
											"end": 51643,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 51610,
											"end": 51676,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51610,
											"end": 51676,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 51610,
											"end": 51676,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51610,
											"end": 51676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51688,
											"end": 51705,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51707,
											"end": 51726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51728,
											"end": 51750,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51781,
											"end": 51782,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 51766,
											"end": 51778,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 51766,
											"end": 51782,
											"name": "SGT",
											"source": 0
										},
										{
											"begin": 51766,
											"end": 51954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 51766,
											"end": 51954,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 51899,
											"end": 51906,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51888,
											"end": 51906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51888,
											"end": 51896,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51888,
											"end": 51906,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51888,
											"end": 51906,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51916,
											"end": 51928,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 51940,
											"end": 51952,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 51939,
											"end": 51952,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51939,
											"end": 51952,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51766,
											"end": 51954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 51766,
											"end": 51954,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 51766,
											"end": 51954,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 51766,
											"end": 51954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51812,
											"end": 51820,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51802,
											"end": 51820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51802,
											"end": 51809,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 51802,
											"end": 51820,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 51802,
											"end": 51820,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 51830,
											"end": 51842,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 51854,
											"end": 51866,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 51853,
											"end": 51866,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51853,
											"end": 51866,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 51766,
											"end": 51954,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 51766,
											"end": 51954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51687,
											"end": 51954,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51687,
											"end": 51954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51687,
											"end": 51954,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51687,
											"end": 51954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51687,
											"end": 51954,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 51687,
											"end": 51954,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 51968,
											"end": 51980,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 51964,
											"end": 52494,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 51964,
											"end": 52494,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 51964,
											"end": 52494,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52040,
											"end": 52044,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52034,
											"end": 52045,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52074,
											"end": 52088,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52069,
											"end": 52072,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52062,
											"end": 52089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52118,
											"end": 52120,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52113,
											"end": 52116,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52106,
											"end": 52121,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52005,
											"end": 52135,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 52005,
											"end": 52135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52270,
											"end": 52285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52270,
											"end": 52285,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52270,
											"end": 52290,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52266,
											"end": 52334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 52266,
											"end": 52334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52318,
											"end": 52333,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52318,
											"end": 52333,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 52300,
											"end": 52314,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52300,
											"end": 52333,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52334,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 52292,
											"end": 52334,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52334,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52292,
											"end": 52334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52334,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52292,
											"end": 52334,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 52292,
											"end": 52334,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52392,
											"end": 52396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52386,
											"end": 52397,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52426,
											"end": 52437,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52421,
											"end": 52424,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52414,
											"end": 52438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52467,
											"end": 52469,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52462,
											"end": 52465,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52455,
											"end": 52470,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 7032,
											"end": 7170,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 7032,
											"end": 7170,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7123,
											"end": 7134,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6817,
											"end": 6841,
											"name": "PUSH",
											"source": 0,
											"value": "42"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 7123,
											"end": 7163,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7123,
											"end": 7163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7032,
											"end": 7170,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7923,
											"end": 7937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 8023,
											"end": 8027,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7923,
											"end": 7937,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8023,
											"end": 8037,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 8023,
											"end": 8040,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8023,
											"end": 8040,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 8023,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8040,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8056,
											"end": 8080,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8056,
											"end": 8060,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6344,
											"end": 6346,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 8056,
											"end": 8069,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 8056,
											"end": 8080,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8056,
											"end": 8080,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8056,
											"end": 8080,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8050,
											"end": 8080,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8099,
											"end": 8126,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 8099,
											"end": 8103,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6567,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 8099,
											"end": 8113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 8099,
											"end": 8126,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8099,
											"end": 8126,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 8099,
											"end": 8126,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8126,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8090,
											"end": 8126,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7819,
											"end": 8133,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8675,
											"end": 8824,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 8675,
											"end": 8824,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8791,
											"end": 8802,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8791,
											"end": 8802,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 8736,
											"end": 8748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8817,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 8767,
											"end": 8817,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8791,
											"end": 8795,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8791,
											"end": 8795,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6547,
											"end": 6567,
											"name": "PUSH",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 6547,
											"end": 6567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "16"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8791,
											"end": 8816,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8767,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 8767,
											"end": 8817,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 50957,
											"end": 51206,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 50957,
											"end": 51206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51070,
											"end": 51084,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 51118,
											"end": 51198,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 51145,
											"end": 51152,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "363"
										},
										{
											"begin": 51154,
											"end": 51197,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 51177,
											"end": 51183,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51185,
											"end": 51191,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51193,
											"end": 51196,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 51154,
											"end": 51176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 51154,
											"end": 51197,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51154,
											"end": 51197,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 51154,
											"end": 51197,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51118,
											"end": 51144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 51118,
											"end": 51198,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 51118,
											"end": 51198,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 51118,
											"end": 51198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 51096,
											"end": 51199,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 50957,
											"end": 51206,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50957,
											"end": 51206,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 50077,
											"end": 50198,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 50077,
											"end": 50198,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 50129,
											"end": 50137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 50157,
											"end": 50158,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 50157,
											"end": 50167,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 50149,
											"end": 50168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 50149,
											"end": 50168,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 50149,
											"end": 50168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 50149,
											"end": 50168,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 50149,
											"end": 50168,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 50149,
											"end": 50168,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 50149,
											"end": 50168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 50189,
											"end": 50190,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 50077,
											"end": 50198,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 52580,
											"end": 52952,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 52580,
											"end": 52952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52650,
											"end": 52657,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 52673,
											"end": 52679,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52673,
											"end": 52686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52690,
											"end": 52692,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52673,
											"end": 52692,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 52669,
											"end": 52900,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 52669,
											"end": 52900,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52728,
											"end": 52730,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 52712,
											"end": 52718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52712,
											"end": 52725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52712,
											"end": 52730,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 52708,
											"end": 52758,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 52708,
											"end": 52758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 52708,
											"end": 52758,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52732,
											"end": 52758,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 52708,
											"end": 52758,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 52708,
											"end": 52758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52821,
											"end": 52825,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52813,
											"end": 52819,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 52809,
											"end": 52826,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52799,
											"end": 52826,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52799,
											"end": 52826,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 52871,
											"end": 52877,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 52860,
											"end": 52888,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52853,
											"end": 52889,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 52853,
											"end": 52889,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 52853,
											"end": 52889,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52853,
											"end": 52889,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 52853,
											"end": 52889,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 52853,
											"end": 52889,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52853,
											"end": 52889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 52853,
											"end": 52889,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52853,
											"end": 52889,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52853,
											"end": 52889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 52853,
											"end": 52889,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 52669,
											"end": 52900,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 52669,
											"end": 52900,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 52927,
											"end": 52933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52916,
											"end": 52945,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 52916,
											"end": 52945,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 52916,
											"end": 52945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52916,
											"end": 52945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52916,
											"end": 52945,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 52916,
											"end": 52945,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 52916,
											"end": 52945,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 52916,
											"end": 52945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52916,
											"end": 52945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 52916,
											"end": 52945,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 52916,
											"end": 52945,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 52916,
											"end": 52945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 52916,
											"end": 52945,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39693,
											"end": 39952,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 39693,
											"end": 39952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39839,
											"end": 39858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39877,
											"end": 39945,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 39892,
											"end": 39899,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39901,
											"end": 39944,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39924,
											"end": 39930,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39932,
											"end": 39938,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39940,
											"end": 39943,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 39901,
											"end": 39923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 39901,
											"end": 39944,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 39901,
											"end": 39944,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 39901,
											"end": 39944,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39877,
											"end": 39891,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 39877,
											"end": 39945,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5279,
											"end": 5695,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 5279,
											"end": 5695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5358,
											"end": 5365,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5400,
											"end": 5406,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5394,
											"end": 5396,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5385,
											"end": 5396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5406,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5385,
											"end": 5406,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5377,
											"end": 5429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5464,
											"end": 5470,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5473,
											"end": 5475,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5464,
											"end": 5475,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5453,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5460,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5475,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5447,
											"end": 5475,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5439,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5589,
											"end": 5619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5605,
											"end": 5609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5589,
											"end": 5619,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5583,
											"end": 5620,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5279,
											"end": 5695,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 5701,
											"end": 6066,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 5701,
											"end": 6066,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5779,
											"end": 5785,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5819,
											"end": 5825,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5805,
											"end": 5811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5814,
											"end": 5815,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5805,
											"end": 5815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5805,
											"end": 5825,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5805,
											"end": 5825,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 5797,
											"end": 5847,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5882,
											"end": 5888,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5891,
											"end": 5892,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5882,
											"end": 5892,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5865,
											"end": 5871,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5865,
											"end": 5878,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5865,
											"end": 5892,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 5865,
											"end": 5892,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 5857,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5994,
											"end": 6023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6010,
											"end": 6013,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5994,
											"end": 6023,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5988,
											"end": 6024,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5988,
											"end": 6024,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5701,
											"end": 6066,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2266,
											"end": 5273,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 2266,
											"end": 5273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2388,
											"end": 2400,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2436,
											"end": 2443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2427,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2430,
											"end": 2432,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 2420,
											"end": 2432,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2443,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2420,
											"end": 2443,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 2412,
											"end": 2462,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2489,
											"end": 2496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2486,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2506,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2480,
											"end": 2506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 2472,
											"end": 2525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2569,
											"end": 2576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2566,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2560,
											"end": 2576,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2549,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2556,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2576,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2576,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 2535,
											"end": 2598,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2609,
											"end": 2631,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2672,
											"end": 2687,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2687,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 4803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 4803,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 4803,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2704,
											"end": 4803,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4956,
											"end": 4960,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4950,
											"end": 4961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4937,
											"end": 4961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4937,
											"end": 4961,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5155,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5143,
											"end": 5152,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5136,
											"end": 5156,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5206,
											"end": 5210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5195,
											"end": 5204,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5191,
											"end": 5211,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5185,
											"end": 5189,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5178,
											"end": 5212,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2665,
											"end": 5230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2665,
											"end": 5230,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2704,
											"end": 4803,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2704,
											"end": 4803,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2898,
											"end": 2902,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2892,
											"end": 2903,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2903,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2879,
											"end": 2903,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3593,
											"end": 3595,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3584,
											"end": 3591,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3580,
											"end": 3596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3995,
											"end": 4004,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3988,
											"end": 4005,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3982,
											"end": 3986,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3978,
											"end": 4006,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3966,
											"end": 3975,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3955,
											"end": 3964,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3951,
											"end": 3976,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3947,
											"end": 4007,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4047,
											"end": 4054,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4043,
											"end": 4045,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4039,
											"end": 4055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4315,
											"end": 4321,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4301,
											"end": 4310,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4294,
											"end": 4311,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4288,
											"end": 4292,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4284,
											"end": 4312,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 4272,
											"end": 4281,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4264,
											"end": 4270,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 4260,
											"end": 4282,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4256,
											"end": 4313,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4252,
											"end": 4322,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4352,
											"end": 4355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4348,
											"end": 4350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4345,
											"end": 4356,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4515,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4506,
											"end": 4515,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4516,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4495,
											"end": 4516,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4397,
											"end": 4401,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4389,
											"end": 4402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4402,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4389,
											"end": 4402,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4433,
											"end": 4446,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 4077,
											"end": 4538,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4560,
											"end": 4586,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4560,
											"end": 4586,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4560,
											"end": 4586,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4780,
											"end": 4782,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 4763,
											"end": 4774,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4784,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4753,
											"end": 4757,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4746,
											"end": 4785,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2665,
											"end": 5230,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 2665,
											"end": 5230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5257,
											"end": 5266,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 2266,
											"end": 5273,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2266,
											"end": 5273,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 831,
											"end": 1105,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 831,
											"end": 1105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 948,
											"end": 962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 987,
											"end": 993,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 978,
											"end": 993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 978,
											"end": 984,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 978,
											"end": 993,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 978,
											"end": 993,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1021,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1015,
											"end": 1021,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1023,
											"end": 1029,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 974,
											"end": 1030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1047,
											"end": 1098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 831,
											"end": 1105,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1352,
											"end": 1864,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1352,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1436,
											"end": 1448,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1481,
											"end": 1484,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1481,
											"end": 1491,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1481,
											"end": 1491,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1468,
											"end": 1491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1478,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1478,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1478,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1468,
											"end": 1491,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1468,
											"end": 1491,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 1460,
											"end": 1492,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1661,
											"end": 1668,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1725,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1715,
											"end": 1725,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1715,
											"end": 1725,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1730,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1727,
											"end": 1737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1727,
											"end": 1737,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1742,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1739,
											"end": 1746,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1739,
											"end": 1746,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1704,
											"end": 1747,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1694,
											"end": 1748,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 288,
											"end": 354,
											"name": "PUSH",
											"source": 0,
											"value": "E34F199B19B2B4F47F68442619D555527D244F78A3297EA89325F843F87B8B54"
										},
										{
											"begin": 288,
											"end": 354,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1586,
											"end": 1815,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 1555,
											"end": 1833,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 1352,
											"end": 1864,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1352,
											"end": 1864,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 40199,
											"end": 40478,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 40199,
											"end": 40478,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40323,
											"end": 40342,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40380,
											"end": 40424,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 40407,
											"end": 40414,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40416,
											"end": 40423,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40380,
											"end": 40406,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 40380,
											"end": 40424,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 40380,
											"end": 40424,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 40380,
											"end": 40424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40358,
											"end": 40425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40443,
											"end": 40453,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40443,
											"end": 40470,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40443,
											"end": 40470,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40443,
											"end": 40470,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40435,
											"end": 40471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 40435,
											"end": 40471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40435,
											"end": 40471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40435,
											"end": 40471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40435,
											"end": 40471,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "181"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 499,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 14,
											"end": 499,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 111,
											"end": 114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 104,
											"end": 108,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 96,
											"end": 102,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 92,
											"end": 109,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 88,
											"end": 115,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 78,
											"end": 80,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 78,
											"end": 80,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 133,
											"end": 138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 126,
											"end": 131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 119,
											"end": 139,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 78,
											"end": 80,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 78,
											"end": 80,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 173,
											"end": 179,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 160,
											"end": 180,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 219,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 249,
											"end": 251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 219,
											"end": 252,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 219,
											"end": 252,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 219,
											"end": 252,
											"name": "tag",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 219,
											"end": 252,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 204,
											"end": 253,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "tag",
											"source": 1,
											"value": "197"
										},
										{
											"begin": 204,
											"end": 253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 278,
											"end": 280,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 269,
											"end": 276,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 262,
											"end": 281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 324,
											"end": 327,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 317,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 312,
											"end": 314,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 304,
											"end": 310,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 300,
											"end": 315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 296,
											"end": 322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 293,
											"end": 328,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 290,
											"end": 292,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 290,
											"end": 292,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 290,
											"end": 292,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 345,
											"end": 350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 338,
											"end": 343,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 331,
											"end": 351,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 290,
											"end": 292,
											"name": "tag",
											"source": 1,
											"value": "201"
										},
										{
											"begin": 290,
											"end": 292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 414,
											"end": 416,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 407,
											"end": 411,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 399,
											"end": 405,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 395,
											"end": 412,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 388,
											"end": 392,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 379,
											"end": 386,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 375,
											"end": 393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 362,
											"end": 417,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 437,
											"end": 453,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 437,
											"end": 453,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 437,
											"end": 453,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 455,
											"end": 459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 433,
											"end": 460,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 426,
											"end": 468,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 441,
											"end": 448,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 68,
											"end": 499,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 68,
											"end": 499,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 504,
											"end": 1299,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 504,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 504,
											"end": 1299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 1299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 504,
											"end": 1299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 504,
											"end": 1299,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 504,
											"end": 1299,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 683,
											"end": 686,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 671,
											"end": 680,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 662,
											"end": 669,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 658,
											"end": 681,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 654,
											"end": 687,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 651,
											"end": 653,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 651,
											"end": 653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 651,
											"end": 653,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 705,
											"end": 711,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 697,
											"end": 703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 690,
											"end": 712,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 651,
											"end": 653,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 651,
											"end": 653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 749,
											"end": 758,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 736,
											"end": 759,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 768,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 795,
											"end": 800,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 768,
											"end": 801,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 768,
											"end": 801,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 768,
											"end": 801,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 768,
											"end": 801,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 820,
											"end": 825,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 877,
											"end": 879,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 862,
											"end": 880,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 862,
											"end": 880,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 849,
											"end": 881,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 890,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 849,
											"end": 881,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 890,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 890,
											"end": 925,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 890,
											"end": 925,
											"name": "tag",
											"source": 1,
											"value": "206"
										},
										{
											"begin": 890,
											"end": 925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 944,
											"end": 951,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1003,
											"end": 1005,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 988,
											"end": 1006,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 988,
											"end": 1006,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 975,
											"end": 1007,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1059,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 1038,
											"end": 1060,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1038,
											"end": 1060,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1061,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1026,
											"end": 1061,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1072,
											"end": 1078,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1065,
											"end": 1087,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "tag",
											"source": 1,
											"value": "207"
										},
										{
											"begin": 1016,
											"end": 1018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1108,
											"end": 1115,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1162,
											"end": 1164,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 1147,
											"end": 1165,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1165,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1166,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1134,
											"end": 1166,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1218,
											"end": 1221,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1203,
											"end": 1222,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1190,
											"end": 1223,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1190,
											"end": 1223,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1232,
											"end": 1267,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 1232,
											"end": 1267,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1232,
											"end": 1267,
											"name": "tag",
											"source": 1,
											"value": "208"
										},
										{
											"begin": 1232,
											"end": 1267,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1286,
											"end": 1293,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1293,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1293,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 1299,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 641,
											"end": 1299,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 641,
											"end": 1299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 1299,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 641,
											"end": 1299,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 641,
											"end": 1299,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 641,
											"end": 1299,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 641,
											"end": 1299,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 641,
											"end": 1299,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1304,
											"end": 1714,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1304,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1304,
											"end": 1714,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1304,
											"end": 1714,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1442,
											"end": 1444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1430,
											"end": 1439,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1421,
											"end": 1428,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1417,
											"end": 1440,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1413,
											"end": 1445,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1412,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1410,
											"end": 1412,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1463,
											"end": 1469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1455,
											"end": 1461,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1448,
											"end": 1470,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1410,
											"end": 1412,
											"name": "tag",
											"source": 1,
											"value": "210"
										},
										{
											"begin": 1410,
											"end": 1412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1508,
											"end": 1517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1495,
											"end": 1518,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1541,
											"end": 1559,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1533,
											"end": 1539,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1530,
											"end": 1560,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1529,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1527,
											"end": 1529,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1578,
											"end": 1584,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1563,
											"end": 1585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1527,
											"end": 1529,
											"name": "tag",
											"source": 1,
											"value": "211"
										},
										{
											"begin": 1527,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1649,
											"end": 1656,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1640,
											"end": 1646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1629,
											"end": 1638,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1625,
											"end": 1647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1606,
											"end": 1657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 1606,
											"end": 1657,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1606,
											"end": 1657,
											"name": "tag",
											"source": 1,
											"value": "212"
										},
										{
											"begin": 1606,
											"end": 1657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1596,
											"end": 1657,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 1704,
											"end": 1706,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 1689,
											"end": 1707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1676,
											"end": 1708,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1400,
											"end": 1714,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1719,
											"end": 1972,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 1719,
											"end": 1972,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1719,
											"end": 1972,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1719,
											"end": 1972,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1857,
											"end": 1859,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1845,
											"end": 1854,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1832,
											"end": 1855,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1828,
											"end": 1860,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1878,
											"end": 1884,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1870,
											"end": 1876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1863,
											"end": 1885,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "tag",
											"source": 1,
											"value": "214"
										},
										{
											"begin": 1825,
											"end": 1827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1906,
											"end": 1922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1906,
											"end": 1922,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1962,
											"end": 1964,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1947,
											"end": 1965,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1965,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1947,
											"end": 1965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1906,
											"end": 1922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1906,
											"end": 1922,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1941,
											"end": 1966,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1815,
											"end": 1972,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1977,
											"end": 2453,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1977,
											"end": 2453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2453,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1977,
											"end": 2453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2132,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2118,
											"end": 2127,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2109,
											"end": 2116,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2105,
											"end": 2128,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2101,
											"end": 2133,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2100,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2098,
											"end": 2100,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2157,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2143,
											"end": 2149,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2136,
											"end": 2158,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2100,
											"name": "tag",
											"source": 1,
											"value": "216"
										},
										{
											"begin": 2098,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2192,
											"end": 2201,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2179,
											"end": 2202,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2202,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2202,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2251,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2238,
											"end": 2247,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2234,
											"end": 2252,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2221,
											"end": 2253,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2253,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2253,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2304,
											"end": 2306,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2293,
											"end": 2302,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2289,
											"end": 2307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2276,
											"end": 2308,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2331,
											"end": 2349,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2323,
											"end": 2329,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2320,
											"end": 2350,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2368,
											"end": 2374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2353,
											"end": 2375,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "tag",
											"source": 1,
											"value": "217"
										},
										{
											"begin": 2317,
											"end": 2319,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2439,
											"end": 2446,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2430,
											"end": 2436,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2419,
											"end": 2428,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2437,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2396,
											"end": 2447,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 2396,
											"end": 2447,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2396,
											"end": 2447,
											"name": "tag",
											"source": 1,
											"value": "218"
										},
										{
											"begin": 2396,
											"end": 2447,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2447,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2386,
											"end": 2447,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2453,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2453,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2453,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2088,
											"end": 2453,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2458,
											"end": 3134,
											"name": "tag",
											"source": 1,
											"value": "143"
										},
										{
											"begin": 2458,
											"end": 3134,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2458,
											"end": 3134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2591,
											"end": 2593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2579,
											"end": 2588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2570,
											"end": 2577,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2566,
											"end": 2589,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2562,
											"end": 2594,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2559,
											"end": 2561,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2559,
											"end": 2561,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 2559,
											"end": 2561,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2618,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2604,
											"end": 2610,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2597,
											"end": 2619,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2559,
											"end": 2561,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 2559,
											"end": 2561,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2650,
											"end": 2659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2644,
											"end": 2660,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2683,
											"end": 2701,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2675,
											"end": 2681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2672,
											"end": 2702,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2671,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2669,
											"end": 2671,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2720,
											"end": 2726,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2712,
											"end": 2718,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2705,
											"end": 2727,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2669,
											"end": 2671,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 2669,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2770,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2770,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2801,
											"end": 2805,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2793,
											"end": 2806,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2793,
											"end": 2806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2789,
											"end": 2816,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2835,
											"end": 2841,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2827,
											"end": 2833,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2820,
											"end": 2842,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2779,
											"end": 2781,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2869,
											"end": 2871,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2863,
											"end": 2872,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2894,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "198"
										},
										{
											"begin": 2939,
											"end": 2941,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 2909,
											"end": 2942,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2894,
											"end": 2943,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2894,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2966,
											"end": 2968,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2959,
											"end": 2964,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2952,
											"end": 2969,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3006,
											"end": 3013,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3001,
											"end": 3003,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2996,
											"end": 2998,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2992,
											"end": 2994,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2988,
											"end": 2999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2984,
											"end": 3004,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2981,
											"end": 3014,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 2980,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 2980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2978,
											"end": 2980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3032,
											"end": 3038,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3024,
											"end": 3030,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3039,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2978,
											"end": 2980,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2978,
											"end": 2980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3101,
											"end": 3103,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3098,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3089,
											"end": 3094,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3085,
											"end": 3099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3082,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3078,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3072,
											"end": 3083,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3050,
											"end": 3104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3050,
											"end": 3104,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3139,
											"end": 3333,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3139,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3139,
											"end": 3333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3262,
											"end": 3264,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3250,
											"end": 3259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3248,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3237,
											"end": 3260,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3233,
											"end": 3265,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3232,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3230,
											"end": 3232,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3283,
											"end": 3289,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3275,
											"end": 3281,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3268,
											"end": 3290,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3230,
											"end": 3232,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 3230,
											"end": 3232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3311,
											"end": 3327,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3311,
											"end": 3327,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3220,
											"end": 3333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3220,
											"end": 3333,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3338,
											"end": 3597,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 3338,
											"end": 3597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3338,
											"end": 3597,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3424,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3413,
											"end": 3425,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3446,
											"end": 3452,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3441,
											"end": 3444,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3434,
											"end": 3453,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3518,
											"end": 3524,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3511,
											"end": 3515,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3506,
											"end": 3509,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3502,
											"end": 3516,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3495,
											"end": 3499,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3488,
											"end": 3493,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 3462,
											"end": 3525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3579,
											"end": 3581,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3558,
											"end": 3573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3554,
											"end": 3583,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3584,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3584,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3584,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3545,
											"end": 3584,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3586,
											"end": 3590,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3541,
											"end": 3591,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3541,
											"end": 3591,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3597,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3389,
											"end": 3597,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3602,
											"end": 4033,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 3602,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3857,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3847,
											"end": 3871,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3872,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3835,
											"end": 3872,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3928,
											"end": 3931,
											"name": "PUSH",
											"source": 1,
											"value": "E8"
										},
										{
											"begin": 3906,
											"end": 3922,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3922,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3922,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3906,
											"end": 3922,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3902,
											"end": 3943,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3897,
											"end": 3899,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 3888,
											"end": 3900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3888,
											"end": 3900,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3881,
											"end": 3944,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 3993,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3978,
											"end": 3993,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3974,
											"end": 3998,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3969,
											"end": 3971,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3960,
											"end": 3972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3960,
											"end": 3972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3953,
											"end": 3999,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4024,
											"end": 4026,
											"name": "PUSH",
											"source": 1,
											"value": "2B"
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4015,
											"end": 4027,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3775,
											"end": 4033,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4038,
											"end": 4541,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 4038,
											"end": 4541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4324,
											"end": 4350,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4350,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4387,
											"end": 4389,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4383,
											"end": 4398,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4398,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4398,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4383,
											"end": 4398,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4379,
											"end": 4432,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4375,
											"end": 4376,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4366,
											"end": 4377,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4366,
											"end": 4377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4359,
											"end": 4433,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4458,
											"end": 4460,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 4449,
											"end": 4461,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4449,
											"end": 4461,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4470,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4470,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4442,
											"end": 4470,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4495,
											"end": 4497,
											"name": "PUSH",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4486,
											"end": 4498,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4486,
											"end": 4498,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4479,
											"end": 4507,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4532,
											"end": 4534,
											"name": "PUSH",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 4523,
											"end": 4535,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4523,
											"end": 4535,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4314,
											"end": 4541,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4546,
											"end": 4749,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4546,
											"end": 4749,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4710,
											"end": 4742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4710,
											"end": 4742,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4710,
											"end": 4742,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4710,
											"end": 4742,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4692,
											"end": 4743,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4680,
											"end": 4682,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4665,
											"end": 4683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4647,
											"end": 4749,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4754,
											"end": 5142,
											"name": "tag",
											"source": 1,
											"value": "187"
										},
										{
											"begin": 4754,
											"end": 5142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5010,
											"end": 5025,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5025,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5025,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5077,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5077,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5077,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5062,
											"end": 5077,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5057,
											"end": 5059,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5042,
											"end": 5060,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5042,
											"end": 5060,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5035,
											"end": 5078,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5126,
											"end": 5134,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFF"
										},
										{
											"begin": 5114,
											"end": 5135,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5135,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5114,
											"end": 5135,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5109,
											"end": 5111,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5094,
											"end": 5112,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5094,
											"end": 5112,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5087,
											"end": 5136,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4942,
											"end": 4944,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4927,
											"end": 4945,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4927,
											"end": 4945,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4909,
											"end": 5142,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5147,
											"end": 5717,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 5147,
											"end": 5717,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5436,
											"end": 5451,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5451,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5436,
											"end": 5451,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5418,
											"end": 5452,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5509,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5495,
											"end": 5509,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5488,
											"end": 5510,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5483,
											"end": 5485,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5468,
											"end": 5486,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5468,
											"end": 5486,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5461,
											"end": 5511,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5544,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5527,
											"end": 5545,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5554,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5554,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5520,
											"end": 5554,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5590,
											"end": 5605,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5585,
											"end": 5587,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5570,
											"end": 5588,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5570,
											"end": 5588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5563,
											"end": 5606,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5398,
											"end": 5401,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5637,
											"end": 5640,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5622,
											"end": 5641,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5622,
											"end": 5641,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5647,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5647,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5615,
											"end": 5647,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5147,
											"end": 5717,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5147,
											"end": 5717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5664,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5664,
											"end": 5711,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5710,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5691,
											"end": 5710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5683,
											"end": 5689,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5664,
											"end": 5711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 5664,
											"end": 5711,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5664,
											"end": 5711,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 5664,
											"end": 5711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5656,
											"end": 5711,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 5370,
											"end": 5717,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5370,
											"end": 5717,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5722,
											"end": 5943,
											"name": "tag",
											"source": 1,
											"value": "145"
										},
										{
											"begin": 5722,
											"end": 5943,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5722,
											"end": 5943,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5871,
											"end": 5873,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5860,
											"end": 5869,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5853,
											"end": 5874,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5933,
											"end": 5935,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5922,
											"end": 5931,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 5936,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5910,
											"end": 5916,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5937,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 5891,
											"end": 5937,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5891,
											"end": 5937,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 5891,
											"end": 5937,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 5937,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5843,
											"end": 5943,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5843,
											"end": 5943,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5948,
											"end": 6289,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 5948,
											"end": 6289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6150,
											"end": 6152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6132,
											"end": 6153,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6132,
											"end": 6153,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6189,
											"end": 6191,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 6169,
											"end": 6187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6187,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6169,
											"end": 6187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6162,
											"end": 6192,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746F55696E7432345F6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6223,
											"end": 6225,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6208,
											"end": 6226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6201,
											"end": 6248,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6280,
											"end": 6282,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6265,
											"end": 6283,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6265,
											"end": 6283,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6289,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6294,
											"end": 6632,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 6294,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6498,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6478,
											"end": 6499,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6499,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6535,
											"end": 6537,
											"name": "PUSH",
											"source": 1,
											"value": "E"
										},
										{
											"begin": 6515,
											"end": 6533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6515,
											"end": 6533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6508,
											"end": 6538,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "736C6963655F6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6569,
											"end": 6571,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6554,
											"end": 6572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6554,
											"end": 6572,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6547,
											"end": 6591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6623,
											"end": 6625,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6608,
											"end": 6626,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6468,
											"end": 6632,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6637,
											"end": 6981,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 6637,
											"end": 6981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6841,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6821,
											"end": 6842,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6842,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6842,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6878,
											"end": 6880,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6858,
											"end": 6876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6851,
											"end": 6881,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746F55696E7432345F6F75744F66426F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6912,
											"end": 6914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6897,
											"end": 6915,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6897,
											"end": 6915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6890,
											"end": 6940,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6972,
											"end": 6974,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6957,
											"end": 6975,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6957,
											"end": 6975,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6811,
											"end": 6981,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6986,
											"end": 7326,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 6986,
											"end": 7326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7188,
											"end": 7190,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7170,
											"end": 7191,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7170,
											"end": 7191,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7227,
											"end": 7229,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 7207,
											"end": 7225,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7207,
											"end": 7225,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7207,
											"end": 7225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7200,
											"end": 7230,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2AB732BC3832B1BA32B21032B93937B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7261,
											"end": 7263,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7246,
											"end": 7264,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7285,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7317,
											"end": 7319,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7302,
											"end": 7320,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7302,
											"end": 7320,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7160,
											"end": 7326,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7331,
											"end": 7676,
											"name": "tag",
											"source": 1,
											"value": "158"
										},
										{
											"begin": 7331,
											"end": 7676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7533,
											"end": 7535,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7515,
											"end": 7536,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7515,
											"end": 7536,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7515,
											"end": 7536,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7572,
											"end": 7574,
											"name": "PUSH",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7552,
											"end": 7570,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7545,
											"end": 7575,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746F416464726573735F6F75744F66426F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7606,
											"end": 7608,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7591,
											"end": 7609,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7591,
											"end": 7609,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7584,
											"end": 7635,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7667,
											"end": 7669,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7670,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7505,
											"end": 7676,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7681,
											"end": 8022,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7681,
											"end": 8022,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7883,
											"end": 7885,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7865,
											"end": 7886,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 7886,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7865,
											"end": 7886,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7922,
											"end": 7924,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7902,
											"end": 7920,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 7920,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7902,
											"end": 7920,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7895,
											"end": 7925,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "736C6963655F6F75744F66426F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7956,
											"end": 7958,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7941,
											"end": 7959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7934,
											"end": 7981,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8013,
											"end": 8015,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7998,
											"end": 8016,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7855,
											"end": 8022,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8027,
											"end": 8369,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 8027,
											"end": 8369,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8229,
											"end": 8231,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8211,
											"end": 8232,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8232,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8211,
											"end": 8232,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8268,
											"end": 8270,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8266,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8241,
											"end": 8271,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "746F416464726573735F6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8302,
											"end": 8304,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8287,
											"end": 8305,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8280,
											"end": 8328,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8360,
											"end": 8362,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8345,
											"end": 8363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8345,
											"end": 8363,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8201,
											"end": 8369,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8374,
											"end": 8551,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 8374,
											"end": 8551,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 8545,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 8545,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8520,
											"end": 8545,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8508,
											"end": 8510,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8493,
											"end": 8511,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8511,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8475,
											"end": 8551,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8556,
											"end": 8798,
											"name": "tag",
											"source": 1,
											"value": "200"
										},
										{
											"begin": 8556,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8626,
											"end": 8628,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8620,
											"end": 8629,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8656,
											"end": 8673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8656,
											"end": 8673,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8656,
											"end": 8673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8703,
											"end": 8721,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8688,
											"end": 8722,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8688,
											"end": 8722,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8746,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8724,
											"end": 8746,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8685,
											"end": 8747,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 8682,
											"end": 8684,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8682,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 8682,
											"end": 8684,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8750,
											"end": 8759,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 8682,
											"end": 8684,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 8682,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8777,
											"end": 8779,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8770,
											"end": 8792,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8600,
											"end": 8798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8600,
											"end": 8798,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8803,
											"end": 8984,
											"name": "tag",
											"source": 1,
											"value": "199"
										},
										{
											"begin": 8803,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 8984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8886,
											"end": 8904,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8878,
											"end": 8884,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8875,
											"end": 8905,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8872,
											"end": 8874,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8872,
											"end": 8874,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 8872,
											"end": 8874,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8908,
											"end": 8917,
											"name": "INVALID",
											"source": 1
										},
										{
											"begin": 8872,
											"end": 8874,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 8872,
											"end": 8874,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8967,
											"end": 8969,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 8944,
											"end": 8961,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8940,
											"end": 8971,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8973,
											"end": 8977,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8936,
											"end": 8978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8936,
											"end": 8978,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8862,
											"end": 8984,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8989,
											"end": 9247,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 8989,
											"end": 9247,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9061,
											"end": 9062,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9071,
											"end": 9184,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 9071,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9085,
											"end": 9091,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9082,
											"end": 9083,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9079,
											"end": 9092,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9184,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 9071,
											"end": 9184,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9172,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9161,
											"end": 9172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9155,
											"end": 9173,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9153,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9153,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9142,
											"end": 9153,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9174,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9107,
											"end": 9109,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9100,
											"end": 9110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9184,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 9071,
											"end": 9184,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9071,
											"end": 9184,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 9071,
											"end": 9184,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9202,
											"end": 9208,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9199,
											"end": 9200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9196,
											"end": 9209,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 9193,
											"end": 9195,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9193,
											"end": 9195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 9193,
											"end": 9195,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9237,
											"end": 9238,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9228,
											"end": 9234,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9223,
											"end": 9226,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9219,
											"end": 9235,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9212,
											"end": 9239,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9193,
											"end": 9195,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 9193,
											"end": 9195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9193,
											"end": 9195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9247,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9042,
											"end": 9247,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 9252,
											"end": 9385,
											"name": "tag",
											"source": 1,
											"value": "205"
										},
										{
											"begin": 9252,
											"end": 9385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9329,
											"end": 9360,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9360,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9319,
											"end": 9361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9319,
											"end": 9361,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9309,
											"end": 9311,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 9309,
											"end": 9311,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9375,
											"end": 9376,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9372,
											"end": 9373,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9365,
											"end": 9377,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9309,
											"end": 9311,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 9309,
											"end": 9311,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9299,
											"end": 9385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9299,
											"end": 9385,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"WETH9()": "4aa4a4fc",
							"factory()": "c45a0155",
							"quoteExactInput(bytes,uint256)": "cdca1753",
							"quoteExactInputSingle(address,address,uint24,uint256,uint160)": "f7729d43",
							"quoteExactOutput(bytes,uint256)": "2f80bb1d",
							"quoteExactOutputSingle(address,address,uint24,uint256,uint160)": "30d07f21",
							"uniswapV3SwapCallback(int256,int256,bytes)": "fa461e33"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_WETH9\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"name\":\"quoteExactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"quoteExactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"quoteExactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"name\":\"quoteExactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute the swap and check the amounts in the callback.\",\"kind\":\"dev\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"params\":{\"amountIn\":\"The amount of the first token to swap\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee\"},\"returns\":{\"amountOut\":\"The amount of the last token that would be received\"}},\"quoteExactInputSingle(address,address,uint24,uint256,uint160)\":{\"params\":{\"amountIn\":\"The desired input amount\",\"fee\":\"The fee of the token pool to consider for the pair\",\"sqrtPriceLimitX96\":\"The price limit of the pool that cannot be exceeded by the swap\",\"tokenIn\":\"The token being swapped in\",\"tokenOut\":\"The token being swapped out\"},\"returns\":{\"amountOut\":\"The amount of `tokenOut` that would be received\"}},\"quoteExactOutput(bytes,uint256)\":{\"params\":{\"amountOut\":\"The amount of the last token to receive\",\"path\":\"The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\"},\"returns\":{\"amountIn\":\"The amount of first token required to be paid\"}},\"quoteExactOutputSingle(address,address,uint24,uint256,uint160)\":{\"params\":{\"amountOut\":\"The desired output amount\",\"fee\":\"The fee of the token pool to consider for the pair\",\"sqrtPriceLimitX96\":\"The price limit of the pool that cannot be exceeded by the swap\",\"tokenIn\":\"The token being swapped in\",\"tokenOut\":\"The token being swapped out\"},\"returns\":{\"amountIn\":\"The amount required as the input for the swap in order to receive `amountOut`\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"stateVariables\":{\"amountOutCached\":{\"details\":\"Transient storage variable used to check a safety condition in exact output swaps.\"}},\"title\":\"Provides quotes for swaps\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"quoteExactInput(bytes,uint256)\":{\"notice\":\"Returns the amount out received for a given exact input swap without executing the swap\"},\"quoteExactInputSingle(address,address,uint24,uint256,uint160)\":{\"notice\":\"Returns the amount out received for a given exact input but for a swap of a single pool\"},\"quoteExactOutput(bytes,uint256)\":{\"notice\":\"Returns the amount in required for a given exact output swap without executing the swap\"},\"quoteExactOutputSingle(address,address,uint24,uint256,uint160)\":{\"notice\":\"Returns the amount in required to receive the given exact output amount but for a swap of a single pool\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Allows getting the expected amount out or amount in for a given swap without executing the swap\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"Quoter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1561,
								"contract": "contracts/lens/Quoter_flattened.sol:Quoter",
								"label": "amountOutCached",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"quoteExactInput(bytes,uint256)": {
								"notice": "Returns the amount out received for a given exact input swap without executing the swap"
							},
							"quoteExactInputSingle(address,address,uint24,uint256,uint160)": {
								"notice": "Returns the amount out received for a given exact input but for a swap of a single pool"
							},
							"quoteExactOutput(bytes,uint256)": {
								"notice": "Returns the amount in required for a given exact output swap without executing the swap"
							},
							"quoteExactOutputSingle(address,address,uint24,uint256,uint160)": {
								"notice": "Returns the amount in required to receive the given exact output amount but for a swap of a single pool"
							},
							"uniswapV3SwapCallback(int256,int256,bytes)": {
								"notice": "Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."
							}
						},
						"notice": "Allows getting the expected amount out or amount in for a given swap without executing the swap",
						"version": 1
					}
				},
				"SafeCast": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"title": "Safe casting methods",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/Quoter_flattened.sol\":49318:50200  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/Quoter_flattened.sol\":49318:50200  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220f1f6afd4b1a6aad326d4021bb0ec83cad2cfc1a515083ebbc6097e660f24e31a64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f1f6afd4b1a6aad326d4021bb0ec83cad2cfc1a515083ebbc6097e660f24e31a64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xF6 0xAF 0xD4 0xB1 0xA6 0xAA 0xD3 0x26 0xD4 MUL SHL 0xB0 0xEC DUP4 0xCA 0xD2 0xCF 0xC1 0xA5 ISZERO ADDMOD RETURNDATACOPY 0xBB 0xC6 MULMOD PUSH31 0x660F24E31A64736F6C63430007060033000000000000000000000000000000 ",
							"sourceMap": "49318:882:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220f1f6afd4b1a6aad326d4021bb0ec83cad2cfc1a515083ebbc6097e660f24e31a64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL 0xF6 0xAF 0xD4 0xB1 0xA6 0xAA 0xD3 0x26 0xD4 MUL SHL 0xB0 0xEC DUP4 0xCA 0xD2 0xCF 0xC1 0xA5 ISZERO ADDMOD RETURNDATACOPY 0xBB 0xC6 MULMOD PUSH31 0x660F24E31A64736F6C63430007060033000000000000000000000000000000 ",
							"sourceMap": "49318:882:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"toInt128(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toUint160(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 49318,
									"end": 50200,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 49318,
									"end": 50200,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f1f6afd4b1a6aad326d4021bb0ec83cad2cfc1a515083ebbc6097e660f24e31a64736f6c63430007060033",
									".code": [
										{
											"begin": 49318,
											"end": 50200,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 49318,
											"end": 50200,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 49318,
											"end": 50200,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 49318,
											"end": 50200,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 49318,
											"end": 50200,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 49318,
											"end": 50200,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 49318,
											"end": 50200,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 49318,
											"end": 50200,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 49318,
											"end": 50200,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Safe casting methods\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains methods for safely casting between types\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"SafeCast\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Contains methods for safely casting between types",
						"version": 1
					}
				},
				"TickMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"MAX_SQRT_RATIO": {
								"details": "The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
							},
							"MAX_TICK": {
								"details": "The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
							},
							"MIN_SQRT_RATIO": {
								"details": "The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
							},
							"MIN_TICK": {
								"details": "The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
							}
						},
						"title": "Math library for computing sqrt prices from ticks and vice versa",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/lens/Quoter_flattened.sol\":40804:49135  library TickMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/lens/Quoter_flattened.sol\":40804:49135  library TickMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122064eae236d301db23dabbea0ff679e0e9c6e3dfb42cf78bd859b26e9a0e9d258b64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064eae236d301db23dabbea0ff679e0e9c6e3dfb42cf78bd859b26e9a0e9d258b64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xEAE236D301 0xDB 0x23 0xDA 0xBB 0xEA 0xF 0xF6 PUSH26 0xE0E9C6E3DFB42CF78BD859B26E9A0E9D258B64736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "40804:8331:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122064eae236d301db23dabbea0ff679e0e9c6e3dfb42cf78bd859b26e9a0e9d258b64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0xEAE236D301 0xDB 0x23 0xDA 0xBB 0xEA 0xF 0xF6 PUSH26 0xE0E9C6E3DFB42CF78BD859B26E9A0E9D258B64736F6C63430007 MOD STOP CALLER ",
							"sourceMap": "40804:8331:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"getSqrtRatioAtTick(int24)": "infinite",
								"getTickAtSqrtRatio(uint160)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 40804,
									"end": 49135,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 40804,
									"end": 49135,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122064eae236d301db23dabbea0ff679e0e9c6e3dfb42cf78bd859b26e9a0e9d258b64736f6c63430007060033",
									".code": [
										{
											"begin": 40804,
											"end": 49135,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 40804,
											"end": 49135,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 40804,
											"end": 49135,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40804,
											"end": 49135,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 40804,
											"end": 49135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40804,
											"end": 49135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40804,
											"end": 49135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40804,
											"end": 49135,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40804,
											"end": 49135,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/lens/Quoter_flattened.sol\":\"TickMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/lens/Quoter_flattened.sol\":{\"keccak256\":\"0x3f9695c7ec4a3fa11f5a9d0eaf9aada9d61fcb7fedd7d0abc2c8edf9bc75cafc\",\"license\":\"GPL-2.0-or-later\",\"urls\":[\"bzz-raw://094d8b040401547a2eaff56b56f25484927138d22930386c2df674c3ddfb113d\",\"dweb:/ipfs/QmZf3rcJhRpkseKGSSE3DB9SHthNRZfwZnWfDAX8N5SURf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/lens/Quoter_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/lens/Quoter_flattened.sol",
					"exportedSymbols": {
						"BytesLib": [
							209
						],
						"CallbackValidation": [
							941
						],
						"IPeripheryImmutableState": [
							355
						],
						"IQuoter": [
							440
						],
						"IUniswapV3Pool": [
							882
						],
						"IUniswapV3PoolActions": [
							691
						],
						"IUniswapV3PoolDerivedState": [
							721
						],
						"IUniswapV3PoolEvents": [
							571
						],
						"IUniswapV3PoolImmutables": [
							867
						],
						"IUniswapV3PoolOwnerActions": [
							596
						],
						"IUniswapV3PoolState": [
							828
						],
						"IUniswapV3SwapCallback": [
							453
						],
						"Path": [
							340
						],
						"PeripheryImmutableState": [
							384
						],
						"PoolAddress": [
							91
						],
						"Quoter": [
							2004
						],
						"SafeCast": [
							1544
						],
						"TickMath": [
							1475
						]
					},
					"id": 2005,
					"license": "GPL-2.0-or-later",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "92:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "118:96:0",
								"text": "@title Provides functions for deriving a pool address from the factory, tokens, and the fee"
							},
							"fullyImplemented": true,
							"id": 91,
							"linearizedBaseContracts": [
								91
							],
							"name": "PoolAddress",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "POOL_INIT_CODE_HASH",
									"nodeType": "VariableDeclaration",
									"scope": 91,
									"src": "240:114:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 3,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "240:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307865333466313939623139623262346634376636383434323631396435353535323764323434663738613332393765613839333235663834336638376238623534",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "288:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_102814774271675688723325049954498779091328469440286648861889194717372678376276_by_1",
											"typeString": "int_const 1028...(70 digits omitted)...6276"
										},
										"value": "0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54"
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "PoolAddress.PoolKey",
									"id": 12,
									"members": [
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "token0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "434:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 6,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "434:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "token1",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "458:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 8,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "458:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "fee",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "482:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 10,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "482:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PoolKey",
									"nodeType": "StructDefinition",
									"scope": 91,
									"src": "409:90:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "964:141:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 24,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "978:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 25,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 17,
														"src": "987:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "978:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 35,
												"nodeType": "IfStatement",
												"src": "974:56:0",
												"trueBody": {
													"expression": {
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"components": [
																{
																	"id": 27,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "996:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 28,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1004:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 29,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": true,
															"nodeType": "TupleExpression",
															"src": "995:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"components": [
																{
																	"id": 30,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 17,
																	"src": "1015:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 31,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 15,
																	"src": "1023:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"id": 32,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1014:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_address_$",
																"typeString": "tuple(address,address)"
															}
														},
														"src": "995:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 34,
													"nodeType": "ExpressionStatement",
													"src": "995:35:0"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 37,
															"name": "tokenA",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "1064:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 38,
															"name": "tokenB",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 17,
															"src": "1080:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 39,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "1093:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 36,
														"name": "PoolKey",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "1047:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_PoolKey_$12_storage_ptr_$",
															"typeString": "type(struct PoolAddress.PoolKey storage pointer)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [
														"token0",
														"token1",
														"fee"
													],
													"nodeType": "FunctionCall",
													"src": "1047:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
														"typeString": "struct PoolAddress.PoolKey memory"
													}
												},
												"functionReturnParameters": 23,
												"id": 41,
												"nodeType": "Return",
												"src": "1040:58:0"
											}
										]
									},
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "505:321:0",
										"text": "@notice Returns PoolKey: the ordered tokens with the matched fee levels\n @param tokenA The first token of a pool, unsorted\n @param tokenB The second token of a pool, unsorted\n @param fee The fee level of the pool\n @return Poolkey The pool details with ordered token0 and token1 assignments"
									},
									"id": 43,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPoolKey",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 14,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 17,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "884:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 16,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "908:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 18,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "908:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "850:74:0"
									},
									"returnParameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 22,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 43,
												"src": "948:14:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 21,
													"name": "PoolKey",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 12,
													"src": "948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$12_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:16:0"
									},
									"scope": 91,
									"src": "831:274:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 89,
										"nodeType": "Block",
										"src": "1450:414:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 54,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "1468:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token0",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 7,
																"src": "1468:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 56,
																	"name": "key",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "1481:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																},
																"id": 57,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "token1",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 9,
																"src": "1481:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1468:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1460:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1460:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "1460:32:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 61,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 51,
														"src": "1502:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "ff",
																						"id": 69,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "hexString",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1628:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																							"typeString": "literal_string hex\"ff\""
																						}
																					},
																					{
																						"id": 70,
																						"name": "factory",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 46,
																						"src": "1661:7:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"expression": {
																											"id": 74,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 48,
																											"src": "1715:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 75,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token0",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 7,
																										"src": "1715:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"expression": {
																											"id": 76,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 48,
																											"src": "1727:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 77,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "token1",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 9,
																										"src": "1727:10:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									{
																										"expression": {
																											"id": 78,
																											"name": "key",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 48,
																											"src": "1739:3:0",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																												"typeString": "struct PoolAddress.PoolKey memory"
																											}
																										},
																										"id": 79,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberName": "fee",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 11,
																										"src": "1739:7:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint24",
																											"typeString": "uint24"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										},
																										{
																											"typeIdentifier": "t_uint24",
																											"typeString": "uint24"
																										}
																									],
																									"expression": {
																										"id": 72,
																										"name": "abi",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 4294967295,
																										"src": "1704:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_abi",
																											"typeString": "abi"
																										}
																									},
																									"id": 73,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"memberName": "encode",
																									"nodeType": "MemberAccess",
																									"src": "1704:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																										"typeString": "function () pure returns (bytes memory)"
																									}
																								},
																								"id": 80,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "1704:43:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 71,
																							"name": "keccak256",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967288,
																							"src": "1694:9:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																								"typeString": "function (bytes memory) pure returns (bytes32)"
																							}
																						},
																						"id": 81,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "1694:54:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					},
																					{
																						"id": 82,
																						"name": "POOL_INIT_CODE_HASH",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 5,
																						"src": "1774:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9",
																							"typeString": "literal_string hex\"ff\""
																						},
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						},
																						{
																							"typeIdentifier": "t_bytes32",
																							"typeString": "bytes32"
																						}
																					],
																					"expression": {
																						"id": 67,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "1586:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 68,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "1586:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 83,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1586:229:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 66,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "1555:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 84,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1555:278:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 65,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1530:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 64,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "1530:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 85,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1530:317:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 63,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1509:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 62,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1509:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1509:348:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1502:355:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "1502:355:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1111:236:0",
										"text": "@notice Deterministically computes the pool address given the factory and PoolKey\n @param factory The Uniswap V3 factory contract address\n @param key The PoolKey\n @return pool The contract address of the V3 pool"
									},
									"id": 90,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 49,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1376:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 45,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1376:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 48,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1393:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 47,
													"name": "PoolKey",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 12,
													"src": "1393:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$12_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1375:37:0"
									},
									"returnParameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 90,
												"src": "1436:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:14:0"
									},
									"scope": 91,
									"src": "1352:512:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2005,
							"src": "214:1652:0"
						},
						{
							"id": 92,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "2210:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 209,
							"linearizedBaseContracts": [
								209
							],
							"name": "BytesLib",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "2402:2871:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 104,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "2420:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3331",
																	"id": 105,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2430:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31_by_1",
																		"typeString": "int_const 31"
																	},
																	"value": "31"
																},
																"src": "2420:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 107,
																"name": "_length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "2436:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2420:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f766572666c6f77",
															"id": 109,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2445:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															},
															"value": "slice_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															}
														],
														"id": 103,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 110,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2412:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 111,
												"nodeType": "ExpressionStatement",
												"src": "2412:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 117,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 113,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "2480:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 114,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "2489:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2480:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 116,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 96,
																"src": "2500:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2480:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f766572666c6f77",
															"id": 118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2508:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															},
															"value": "slice_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5d3d629f76473d94377d221b1f1c8f2161f7b65cab69e095662ec5d0e026c17e",
																"typeString": "literal_string \"slice_overflow\""
															}
														],
														"id": 112,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2472:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2472:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 120,
												"nodeType": "ExpressionStatement",
												"src": "2472:53:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 122,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "2543:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2543:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 124,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 96,
																	"src": "2560:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 125,
																	"name": "_length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 98,
																	"src": "2569:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2560:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2543:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "736c6963655f6f75744f66426f756e6473",
															"id": 128,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2578:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0",
																"typeString": "literal_string \"slice_outOfBounds\""
															},
															"value": "slice_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cca2258dcc0d08c244435525255fbef9116c9a31b4c29471218f002bbbceb7a0",
																"typeString": "literal_string \"slice_outOfBounds\""
															}
														],
														"id": 121,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2535:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2535:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "2535:63:0"
											},
											{
												"assignments": [
													132
												],
												"declarations": [
													{
														"constant": false,
														"id": 132,
														"mutability": "mutable",
														"name": "tempBytes",
														"nodeType": "VariableDeclaration",
														"scope": 137,
														"src": "2609:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 131,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2609:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 133,
												"nodeType": "VariableDeclarationStatement",
												"src": "2609:22:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "2651:2589:0",
													"statements": [
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2711:2092:0",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "2879:24:0",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2898:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "2892:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2892:11:0"
																				},
																				"variableNames": [
																					{
																						"name": "tempBytes",
																						"nodeType": "YulIdentifier",
																						"src": "2879:9:0"
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3563:33:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "_length",
																							"nodeType": "YulIdentifier",
																							"src": "3584:7:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "3593:2:0",
																							"type": "",
																							"value": "31"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "3580:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3580:16:0"
																				},
																				"variables": [
																					{
																						"name": "lengthmod",
																						"nodeType": "YulTypedName",
																						"src": "3567:9:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3937:70:0",
																				"value": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "tempBytes",
																									"nodeType": "YulIdentifier",
																									"src": "3955:9:0"
																								},
																								{
																									"name": "lengthmod",
																									"nodeType": "YulIdentifier",
																									"src": "3966:9:0"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3951:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3951:25:0"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3982:4:0",
																									"type": "",
																									"value": "0x20"
																								},
																								{
																									"arguments": [
																										{
																											"name": "lengthmod",
																											"nodeType": "YulIdentifier",
																											"src": "3995:9:0"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nodeType": "YulIdentifier",
																										"src": "3988:6:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3988:17:0"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nodeType": "YulIdentifier",
																								"src": "3978:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3978:28:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "3947:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3947:60:0"
																				},
																				"variables": [
																					{
																						"name": "mc",
																						"nodeType": "YulTypedName",
																						"src": "3941:2:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "4028:27:0",
																				"value": {
																					"arguments": [
																						{
																							"name": "mc",
																							"nodeType": "YulIdentifier",
																							"src": "4043:2:0"
																						},
																						{
																							"name": "_length",
																							"nodeType": "YulIdentifier",
																							"src": "4047:7:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "4039:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4039:16:0"
																				},
																				"variables": [
																					{
																						"name": "end",
																						"nodeType": "YulTypedName",
																						"src": "4032:3:0",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "4469:69:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nodeType": "YulIdentifier",
																										"src": "4502:2:0"
																									},
																									{
																										"arguments": [
																											{
																												"name": "cc",
																												"nodeType": "YulIdentifier",
																												"src": "4512:2:0"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "4506:5:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4506:9:0"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nodeType": "YulIdentifier",
																									"src": "4495:6:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4495:21:0"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "4495:21:0"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "mc",
																							"nodeType": "YulIdentifier",
																							"src": "4348:2:0"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "4352:3:0"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "4345:2:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4345:11:0"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "4357:111:0",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "4383:19:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "mc",
																										"nodeType": "YulIdentifier",
																										"src": "4393:2:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4397:4:0",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4389:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4389:13:0"
																							},
																							"variableNames": [
																								{
																									"name": "mc",
																									"nodeType": "YulIdentifier",
																									"src": "4383:2:0"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "4427:19:0",
																							"value": {
																								"arguments": [
																									{
																										"name": "cc",
																										"nodeType": "YulIdentifier",
																										"src": "4437:2:0"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "4441:4:0",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4433:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4433:13:0"
																							},
																							"variableNames": [
																								{
																									"name": "cc",
																									"nodeType": "YulIdentifier",
																									"src": "4427:2:0"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "4081:263:0",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "4242:80:0",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "_bytes",
																														"nodeType": "YulIdentifier",
																														"src": "4264:6:0"
																													},
																													{
																														"name": "lengthmod",
																														"nodeType": "YulIdentifier",
																														"src": "4272:9:0"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "4260:3:0"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4260:22:0"
																											},
																											{
																												"arguments": [
																													{
																														"kind": "number",
																														"nodeType": "YulLiteral",
																														"src": "4288:4:0",
																														"type": "",
																														"value": "0x20"
																													},
																													{
																														"arguments": [
																															{
																																"name": "lengthmod",
																																"nodeType": "YulIdentifier",
																																"src": "4301:9:0"
																															}
																														],
																														"functionName": {
																															"name": "iszero",
																															"nodeType": "YulIdentifier",
																															"src": "4294:6:0"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "4294:17:0"
																													}
																												],
																												"functionName": {
																													"name": "mul",
																													"nodeType": "YulIdentifier",
																													"src": "4284:3:0"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "4284:28:0"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "4256:3:0"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "4256:57:0"
																									},
																									{
																										"name": "_start",
																										"nodeType": "YulIdentifier",
																										"src": "4315:6:0"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "4252:3:0"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "4252:70:0"
																							},
																							"variables": [
																								{
																									"name": "cc",
																									"nodeType": "YulTypedName",
																									"src": "4246:2:0",
																									"type": ""
																								}
																							]
																						}
																					]
																				},
																				"src": "4077:461:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "tempBytes",
																							"nodeType": "YulIdentifier",
																							"src": "4567:9:0"
																						},
																						{
																							"name": "_length",
																							"nodeType": "YulIdentifier",
																							"src": "4578:7:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "4560:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4560:26:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4560:26:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4753:4:0",
																							"type": "",
																							"value": "0x40"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "mc",
																											"nodeType": "YulIdentifier",
																											"src": "4767:2:0"
																										},
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4771:2:0",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "4763:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4763:11:0"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "4780:2:0",
																											"type": "",
																											"value": "31"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nodeType": "YulIdentifier",
																										"src": "4776:3:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "4776:7:0"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nodeType": "YulIdentifier",
																								"src": "4759:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "4759:25:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "4746:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4746:39:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "4746:39:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2704:2099:0",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2709:1:0",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "4915:315:0",
																		"statements": [
																			{
																				"nodeType": "YulAssignment",
																				"src": "4937:24:0",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "4956:4:0",
																							"type": "",
																							"value": "0x40"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "4950:5:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "4950:11:0"
																				},
																				"variableNames": [
																					{
																						"name": "tempBytes",
																						"nodeType": "YulIdentifier",
																						"src": "4937:9:0"
																					}
																				]
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "tempBytes",
																							"nodeType": "YulIdentifier",
																							"src": "5143:9:0"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5154:1:0",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "5136:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5136:20:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5136:20:0"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "5185:4:0",
																							"type": "",
																							"value": "0x40"
																						},
																						{
																							"arguments": [
																								{
																									"name": "tempBytes",
																									"nodeType": "YulIdentifier",
																									"src": "5195:9:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "5206:4:0",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "5191:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "5191:20:0"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nodeType": "YulIdentifier",
																						"src": "5178:6:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5178:34:0"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "5178:34:0"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "4907:323:0",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "_length",
																		"nodeType": "YulIdentifier",
																		"src": "2679:7:0"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2672:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "2672:15:0"
															},
															"nodeType": "YulSwitch",
															"src": "2665:2565:0"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 94,
														"isOffset": false,
														"isSlot": false,
														"src": "4264:6:0",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "2679:7:0",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "3584:7:0",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "4047:7:0",
														"valueSize": 1
													},
													{
														"declaration": 98,
														"isOffset": false,
														"isSlot": false,
														"src": "4578:7:0",
														"valueSize": 1
													},
													{
														"declaration": 96,
														"isOffset": false,
														"isSlot": false,
														"src": "4315:6:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "2879:9:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "3955:9:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "4567:9:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "4937:9:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "5143:9:0",
														"valueSize": 1
													},
													{
														"declaration": 132,
														"isOffset": false,
														"isSlot": false,
														"src": "5195:9:0",
														"valueSize": 1
													}
												],
												"id": 134,
												"nodeType": "InlineAssembly",
												"src": "2642:2598:0"
											},
											{
												"expression": {
													"id": 135,
													"name": "tempBytes",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 132,
													"src": "5257:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 102,
												"id": 136,
												"nodeType": "Return",
												"src": "5250:16:0"
											}
										]
									},
									"id": 138,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "slice",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "_bytes",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2290:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 93,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2290:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "_start",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2319:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "_length",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2343:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 97,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2280:84:0"
									},
									"returnParameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 138,
												"src": "2388:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 100,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2388:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2387:14:0"
									},
									"scope": 209,
									"src": "2266:3007:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "5367:328:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 150,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 148,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "5385:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 149,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5394:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "5385:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 151,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "5400:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5385:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f416464726573735f6f766572666c6f77",
															"id": 153,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5408:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f71efb0937d5d9d75bbebe9d7207dad811fd47ced903ea9404d5e8d77eb17a95",
																"typeString": "literal_string \"toAddress_overflow\""
															},
															"value": "toAddress_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f71efb0937d5d9d75bbebe9d7207dad811fd47ced903ea9404d5e8d77eb17a95",
																"typeString": "literal_string \"toAddress_overflow\""
															}
														],
														"id": 147,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5377:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5377:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "5377:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 162,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 157,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 140,
																	"src": "5447:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 158,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5447:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 159,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "5464:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "3230",
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5473:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_20_by_1",
																		"typeString": "int_const 20"
																	},
																	"value": "20"
																},
																"src": "5464:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5447:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f416464726573735f6f75744f66426f756e6473",
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5477:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d",
																"typeString": "literal_string \"toAddress_outOfBounds\""
															},
															"value": "toAddress_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9f688071e1df0f70b63e3651005878331be1fe9591d6cfb3187cb52a13439e5d",
																"typeString": "literal_string \"toAddress_outOfBounds\""
															}
														],
														"id": 156,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5439:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5439:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 165,
												"nodeType": "ExpressionStatement",
												"src": "5439:62:0"
											},
											{
												"assignments": [
													167
												],
												"declarations": [
													{
														"constant": false,
														"id": 167,
														"mutability": "mutable",
														"name": "tempAddress",
														"nodeType": "VariableDeclaration",
														"scope": 172,
														"src": "5511:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 166,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5511:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 168,
												"nodeType": "VariableDeclarationStatement",
												"src": "5511:19:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5550:110:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5564:86:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_bytes",
																								"nodeType": "YulIdentifier",
																								"src": "5597:6:0"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "5605:4:0",
																								"type": "",
																								"value": "0x20"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "5593:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "5593:17:0"
																					},
																					{
																						"name": "_start",
																						"nodeType": "YulIdentifier",
																						"src": "5612:6:0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5589:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5589:30:0"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5583:5:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:37:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5622:27:0",
																		"type": "",
																		"value": "0x1000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "5579:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5579:71:0"
															},
															"variableNames": [
																{
																	"name": "tempAddress",
																	"nodeType": "YulIdentifier",
																	"src": "5564:11:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 140,
														"isOffset": false,
														"isSlot": false,
														"src": "5597:6:0",
														"valueSize": 1
													},
													{
														"declaration": 142,
														"isOffset": false,
														"isSlot": false,
														"src": "5612:6:0",
														"valueSize": 1
													},
													{
														"declaration": 167,
														"isOffset": false,
														"isSlot": false,
														"src": "5564:11:0",
														"valueSize": 1
													}
												],
												"id": 169,
												"nodeType": "InlineAssembly",
												"src": "5541:119:0"
											},
											{
												"expression": {
													"id": 170,
													"name": "tempAddress",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 167,
													"src": "5677:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 146,
												"id": 171,
												"nodeType": "Return",
												"src": "5670:18:0"
											}
										]
									},
									"id": 173,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toAddress",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "_bytes",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "5298:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 139,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5298:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "_start",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "5319:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5319:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5297:37:0"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "5358:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5357:9:0"
									},
									"scope": 209,
									"src": "5279:416:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 207,
										"nodeType": "Block",
										"src": "5787:279:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 187,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 185,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 183,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "5805:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5814:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "5805:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 186,
																"name": "_start",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 177,
																"src": "5819:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5805:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e7432345f6f766572666c6f77",
															"id": 188,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5827:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_428a8ba368fc474210479d5009a3c2ddaf9d762393b1b3cd3cf1b440d48791c5",
																"typeString": "literal_string \"toUint24_overflow\""
															},
															"value": "toUint24_overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_428a8ba368fc474210479d5009a3c2ddaf9d762393b1b3cd3cf1b440d48791c5",
																"typeString": "literal_string \"toUint24_overflow\""
															}
														],
														"id": 182,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5797:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5797:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "ExpressionStatement",
												"src": "5797:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 197,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 192,
																	"name": "_bytes",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "5865:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5865:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 196,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 194,
																	"name": "_start",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 177,
																	"src": "5882:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "33",
																	"id": 195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5891:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_3_by_1",
																		"typeString": "int_const 3"
																	},
																	"value": "3"
																},
																"src": "5882:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5865:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f55696e7432345f6f75744f66426f756e6473",
															"id": 198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5894:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_92c5fac6e5cb4f75ffccd9c8f373ae2e2c333a8b9c2fdc616c52c36fa31575dc",
																"typeString": "literal_string \"toUint24_outOfBounds\""
															},
															"value": "toUint24_outOfBounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_92c5fac6e5cb4f75ffccd9c8f373ae2e2c333a8b9c2fdc616c52c36fa31575dc",
																"typeString": "literal_string \"toUint24_outOfBounds\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5857:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5857:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 200,
												"nodeType": "ExpressionStatement",
												"src": "5857:60:0"
											},
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "tempUint",
														"nodeType": "VariableDeclaration",
														"scope": 207,
														"src": "5927:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 201,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "5927:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 203,
												"nodeType": "VariableDeclarationStatement",
												"src": "5927:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "5962:72:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5976:48:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_bytes",
																						"nodeType": "YulIdentifier",
																						"src": "6002:6:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6010:3:0",
																						"type": "",
																						"value": "0x3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5998:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5998:16:0"
																			},
																			{
																				"name": "_start",
																				"nodeType": "YulIdentifier",
																				"src": "6016:6:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5994:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5994:29:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5988:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "5988:36:0"
															},
															"variableNames": [
																{
																	"name": "tempUint",
																	"nodeType": "YulIdentifier",
																	"src": "5976:8:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 175,
														"isOffset": false,
														"isSlot": false,
														"src": "6002:6:0",
														"valueSize": 1
													},
													{
														"declaration": 177,
														"isOffset": false,
														"isSlot": false,
														"src": "6016:6:0",
														"valueSize": 1
													},
													{
														"declaration": 202,
														"isOffset": false,
														"isSlot": false,
														"src": "5976:8:0",
														"valueSize": 1
													}
												],
												"id": 204,
												"nodeType": "InlineAssembly",
												"src": "5953:81:0"
											},
											{
												"expression": {
													"id": 205,
													"name": "tempUint",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 202,
													"src": "6051:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 181,
												"id": 206,
												"nodeType": "Return",
												"src": "6044:15:0"
											}
										]
									},
									"id": 208,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "_bytes",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5719:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5719:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "_start",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5740:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5718:37:0"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 208,
												"src": "5779:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 179,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "5779:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5778:8:0"
									},
									"scope": 209,
									"src": "5701:365:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2005,
							"src": "2243:3825:0"
						},
						{
							"id": 210,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "6110:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 211,
								"nodeType": "StructuredDocumentation",
								"src": "6137:67:0",
								"text": "@title Functions for manipulating path data for multihop swaps"
							},
							"fullyImplemented": true,
							"id": 340,
							"linearizedBaseContracts": [
								340
							],
							"name": "Path",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 214,
									"libraryName": {
										"id": 212,
										"name": "BytesLib",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 209,
										"src": "6229:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_BytesLib_$209",
											"typeString": "library BytesLib"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "6223:25:0",
									"typeName": {
										"id": 213,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "6242:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "6254:48:0",
										"text": "@dev The length of the bytes encoded address"
									},
									"id": 218,
									"mutability": "constant",
									"name": "ADDR_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "6307:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 216,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6307:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 217,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6344:2:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 219,
										"nodeType": "StructuredDocumentation",
										"src": "6352:44:0",
										"text": "@dev The length of the bytes encoded fee"
									},
									"id": 222,
									"mutability": "constant",
									"name": "FEE_SIZE",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "6401:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 220,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6401:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 221,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "6437:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "6445:58:0",
										"text": "@dev The offset of a single token address and pool fee"
									},
									"id": 228,
									"mutability": "constant",
									"name": "NEXT_OFFSET",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "6508:59:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 224,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6508:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 227,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 225,
											"name": "ADDR_SIZE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 218,
											"src": "6547:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"id": 226,
											"name": "FEE_SIZE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 222,
											"src": "6559:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "6547:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 229,
										"nodeType": "StructuredDocumentation",
										"src": "6573:42:0",
										"text": "@dev The offset of an encoded pool key"
									},
									"id": 234,
									"mutability": "constant",
									"name": "POP_OFFSET",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "6620:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 230,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6620:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 233,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 231,
											"name": "NEXT_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 228,
											"src": "6658:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"id": 232,
											"name": "ADDR_SIZE",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 218,
											"src": "6672:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "6658:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 235,
										"nodeType": "StructuredDocumentation",
										"src": "6687:72:0",
										"text": "@dev The minimum length of an encoding that contains 2 or more pools"
									},
									"id": 240,
									"mutability": "constant",
									"name": "MULTIPLE_POOLS_MIN_LENGTH",
									"nodeType": "VariableDeclaration",
									"scope": 340,
									"src": "6764:77:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 236,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "6764:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										},
										"id": 239,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"id": 237,
											"name": "POP_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 234,
											"src": "6817:10:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "+",
										"rightExpression": {
											"id": 238,
											"name": "NEXT_OFFSET",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 228,
											"src": "6830:11:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"src": "6817:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "7106:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 248,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 243,
															"src": "7123:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7123:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"id": 250,
														"name": "MULTIPLE_POOLS_MIN_LENGTH",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "7138:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7123:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 247,
												"id": 252,
												"nodeType": "Return",
												"src": "7116:47:0"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "6848:179:0",
										"text": "@notice Returns true iff the path contains two or more pools\n @param path The encoded swap path\n @return True if path contains two or more pools, otherwise false"
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasMultiplePools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "7058:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 242,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7058:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7057:19:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "7100:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7100:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7099:6:0"
									},
									"scope": 340,
									"src": "7032:138:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 271,
										"nodeType": "Block",
										"src": "7391:166:0",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 262,
																				"name": "path",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 257,
																				"src": "7511:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 263,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "7511:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 264,
																			"name": "ADDR_SIZE",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 218,
																			"src": "7525:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7511:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 266,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "7510:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 267,
																"name": "NEXT_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "7538:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7510:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 269,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7509:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 261,
												"id": 270,
												"nodeType": "Return",
												"src": "7502:48:0"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "7176:141:0",
										"text": "@notice Returns the number of pools in the path\n @param path The encoded swap path\n @return The number of pools in the path"
									},
									"id": 272,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "numPools",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "7340:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 256,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7340:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7339:19:0"
									},
									"returnParameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "7382:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7381:9:0"
									},
									"scope": 340,
									"src": "7322:235:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 305,
										"nodeType": "Block",
										"src": "8004:129:0",
										"statements": [
											{
												"expression": {
													"id": 289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "tokenA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 278,
														"src": "8014:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8038:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"expression": {
																"id": 285,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "8023:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 173,
															"src": "8023:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (address)"
															}
														},
														"id": 288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8023:17:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8014:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 290,
												"nodeType": "ExpressionStatement",
												"src": "8014:26:0"
											},
											{
												"expression": {
													"id": 296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 291,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 282,
														"src": "8050:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 294,
																"name": "ADDR_SIZE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "8070:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 292,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "8056:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toUint24",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 208,
															"src": "8056:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (uint24)"
															}
														},
														"id": 295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8056:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "8050:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 297,
												"nodeType": "ExpressionStatement",
												"src": "8050:30:0"
											},
											{
												"expression": {
													"id": 303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 298,
														"name": "tokenB",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 280,
														"src": "8090:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 301,
																"name": "NEXT_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "8114:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 299,
																"name": "path",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "8099:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 300,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "toAddress",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 173,
															"src": "8099:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_address_$bound_to$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory,uint256) pure returns (address)"
															}
														},
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8099:27:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8090:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 304,
												"nodeType": "ExpressionStatement",
												"src": "8090:36:0"
											}
										]
									},
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "7563:251:0",
										"text": "@notice Decodes the first pool in path\n @param path The bytes encoded swap path\n @return tokenA The first token of the given pool\n @return tokenB The second token of the given pool\n @return fee The fee level of the pool"
									},
									"id": 306,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decodeFirstPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "7844:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 274,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "7844:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7843:19:0"
									},
									"returnParameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "7923:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7923:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "7951:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 306,
												"src": "7979:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 281,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "7979:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7909:90:0"
									},
									"scope": 340,
									"src": "7819:314:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 320,
										"nodeType": "Block",
										"src": "8437:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8465:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 317,
															"name": "POP_OFFSET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "8468:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 314,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 309,
															"src": "8454:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "8454:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
														}
													},
													"id": 318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8454:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 313,
												"id": 319,
												"nodeType": "Return",
												"src": "8447:32:0"
											}
										]
									},
									"documentation": {
										"id": 307,
										"nodeType": "StructuredDocumentation",
										"src": "8139:215:0",
										"text": "@notice Gets the segment corresponding to the first pool in the path\n @param path The bytes encoded swap path\n @return The segment containing all data necessary to target the first pool in the path"
									},
									"id": 321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFirstPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 310,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "8381:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 308,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8381:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8380:19:0"
									},
									"returnParameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 321,
												"src": "8423:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8423:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8422:14:0"
									},
									"scope": 340,
									"src": "8359:127:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 338,
										"nodeType": "Block",
										"src": "8750:74:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 331,
															"name": "NEXT_OFFSET",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "8778:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 332,
																	"name": "path",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 324,
																	"src": "8791:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 333,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "8791:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 334,
																"name": "NEXT_OFFSET",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 228,
																"src": "8805:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8791:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 329,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 324,
															"src": "8767:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 330,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "slice",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 138,
														"src": "8767:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory,uint256,uint256) pure returns (bytes memory)"
														}
													},
													"id": 336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8767:50:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 328,
												"id": 337,
												"nodeType": "Return",
												"src": "8760:57:0"
											}
										]
									},
									"documentation": {
										"id": 322,
										"nodeType": "StructuredDocumentation",
										"src": "8492:178:0",
										"text": "@notice Skips a token + fee element from the buffer and returns the remainder\n @param path The swap path\n @return The remaining token + fee elements in the path"
									},
									"id": 339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "skipToken",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 325,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 324,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "8694:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 323,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8694:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8693:19:0"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 339,
												"src": "8736:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 326,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "8736:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8735:14:0"
									},
									"scope": 340,
									"src": "8675:149:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2005,
							"src": "6204:2622:0"
						},
						{
							"id": 341,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "8889:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 342,
								"nodeType": "StructuredDocumentation",
								"src": "8915:91:0",
								"text": "@title Immutable state\n @notice Functions that return immutable state of the router"
							},
							"fullyImplemented": false,
							"id": 355,
							"linearizedBaseContracts": [
								355
							],
							"name": "IPeripheryImmutableState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 343,
										"nodeType": "StructuredDocumentation",
										"src": "9047:57:0",
										"text": "@return Returns the address of the Uniswap V3 factory"
									},
									"functionSelector": "c45a0155",
									"id": 348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9125:2:0"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "9151:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9151:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9150:9:0"
									},
									"scope": 355,
									"src": "9109:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "9166:40:0",
										"text": "@return Returns the address of WETH9"
									},
									"functionSelector": "4aa4a4fc",
									"id": 354,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "WETH9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9225:2:0"
									},
									"returnParameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "9251:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9251:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9250:9:0"
									},
									"scope": 355,
									"src": "9211:49:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2005,
							"src": "9006:256:0"
						},
						{
							"id": 356,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "9318:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 358,
										"name": "IPeripheryImmutableState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 355,
										"src": "9472:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IPeripheryImmutableState_$355",
											"typeString": "contract IPeripheryImmutableState"
										}
									},
									"id": 359,
									"nodeType": "InheritanceSpecifier",
									"src": "9472:24:0"
								}
							],
							"contractDependencies": [
								355
							],
							"contractKind": "contract",
							"documentation": {
								"id": 357,
								"nodeType": "StructuredDocumentation",
								"src": "9344:83:0",
								"text": "@title Immutable state\n @notice Immutable state used by periphery contracts"
							},
							"fullyImplemented": true,
							"id": 384,
							"linearizedBaseContracts": [
								384,
								355
							],
							"name": "PeripheryImmutableState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										348
									],
									"constant": false,
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "9503:40:0",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "c45a0155",
									"id": 363,
									"mutability": "immutable",
									"name": "factory",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 362,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9573:8:0"
									},
									"scope": 384,
									"src": "9548:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 361,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9548:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"baseFunctions": [
										354
									],
									"constant": false,
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "9595:40:0",
										"text": "@inheritdoc IPeripheryImmutableState"
									},
									"functionSelector": "4aa4a4fc",
									"id": 367,
									"mutability": "immutable",
									"name": "WETH9",
									"nodeType": "VariableDeclaration",
									"overrides": {
										"id": 366,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "9665:8:0"
									},
									"scope": 384,
									"src": "9640:39:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 365,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "9640:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 382,
										"nodeType": "Block",
										"src": "9732:59:0",
										"statements": [
											{
												"expression": {
													"id": 376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 374,
														"name": "factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "9742:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 375,
														"name": "_factory",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 369,
														"src": "9752:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9742:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 377,
												"nodeType": "ExpressionStatement",
												"src": "9742:18:0"
											},
											{
												"expression": {
													"id": 380,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 378,
														"name": "WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "9770:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 379,
														"name": "_WETH9",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "9778:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9770:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 381,
												"nodeType": "ExpressionStatement",
												"src": "9770:14:0"
											}
										]
									},
									"id": 383,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 369,
												"mutability": "mutable",
												"name": "_factory",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "9698:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9698:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 371,
												"mutability": "mutable",
												"name": "_WETH9",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "9716:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9697:34:0"
									},
									"returnParameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9732:0:0"
									},
									"scope": 384,
									"src": "9686:105:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2005,
							"src": "9427:366:0"
						},
						{
							"id": 385,
							"literals": [
								"solidity",
								">=",
								"0.7",
								".5"
							],
							"nodeType": "PragmaDirective",
							"src": "9839:24:0"
						},
						{
							"id": 386,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "9864:19:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 387,
								"nodeType": "StructuredDocumentation",
								"src": "9885:320:0",
								"text": "@title Quoter Interface\n @notice Supports quoting the calculated amounts from exact input or exact output swaps\n @dev These functions are not marked view because they rely on calling non-view functions and reverting\n to compute the result. They are also not gas efficient and should not be called on-chain."
							},
							"fullyImplemented": false,
							"id": 440,
							"linearizedBaseContracts": [
								440
							],
							"name": "IQuoter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "10229:319:0",
										"text": "@notice Returns the amount out received for a given exact input swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee\n @param amountIn The amount of the first token to swap\n @return amountOut The amount of the last token that would be received"
									},
									"functionSelector": "cdca1753",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "10578:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 389,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10578:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "10597:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10597:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10577:37:0"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 397,
												"src": "10633:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 394,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10632:19:0"
									},
									"scope": 440,
									"src": "10553:99:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 398,
										"nodeType": "StructuredDocumentation",
										"src": "10658:491:0",
										"text": "@notice Returns the amount out received for a given exact input but for a swap of a single pool\n @param tokenIn The token being swapped in\n @param tokenOut The token being swapped out\n @param fee The fee of the token pool to consider for the pair\n @param amountIn The desired input amount\n @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountOut The amount of `tokenOut` that would be received"
									},
									"functionSelector": "f7729d43",
									"id": 413,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "tokenIn",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11194:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11194:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "tokenOut",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11219:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11245:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 403,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "11245:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11265:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11291:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 407,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "11291:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11184:138:0"
									},
									"returnParameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "11341:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 410,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11340:19:0"
									},
									"scope": 440,
									"src": "11154:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "11366:355:0",
										"text": "@notice Returns the amount in required for a given exact output swap without executing the swap\n @param path The path of the swap, i.e. each token pair and the pool fee. Path must be provided in reverse order\n @param amountOut The amount of the last token to receive\n @return amountIn The amount of first token required to be paid"
									},
									"functionSelector": "2f80bb1d",
									"id": 423,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutput",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "11752:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 415,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11752:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "11771:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 417,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11771:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11751:38:0"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 421,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 423,
												"src": "11808:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11808:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11807:18:0"
									},
									"scope": 440,
									"src": "11726:100:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 424,
										"nodeType": "StructuredDocumentation",
										"src": "11832:538:0",
										"text": "@notice Returns the amount in required to receive the given exact output amount but for a swap of a single pool\n @param tokenIn The token being swapped in\n @param tokenOut The token being swapped out\n @param fee The fee of the token pool to consider for the pair\n @param amountOut The desired output amount\n @param sqrtPriceLimitX96 The price limit of the pool that cannot be exceeded by the swap\n @return amountIn The amount required as the input for the swap in order to receive `amountOut`"
									},
									"functionSelector": "30d07f21",
									"id": 439,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutputSingle",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "tokenIn",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "12416:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 425,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12416:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "tokenOut",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "12441:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 427,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12441:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 430,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "12467:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 429,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "12467:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "12487:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "12514:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 433,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "12514:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12406:139:0"
									},
									"returnParameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 437,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 439,
												"src": "12564:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12564:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12563:18:0"
									},
									"scope": 440,
									"src": "12375:207:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2005,
							"src": "10205:2379:0"
						},
						{
							"id": 441,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "12671:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 442,
								"nodeType": "StructuredDocumentation",
								"src": "12697:144:0",
								"text": "@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"
							},
							"fullyImplemented": false,
							"id": 453,
							"linearizedBaseContracts": [
								453
							],
							"name": "IUniswapV3SwapCallback",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 443,
										"nodeType": "StructuredDocumentation",
										"src": "12880:898:0",
										"text": "@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"
									},
									"functionSelector": "fa461e33",
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "13823:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 444,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "13823:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "13852:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 446,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "13852:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "13881:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 448,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13881:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13813:93:0"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13915:0:0"
									},
									"scope": 453,
									"src": "13783:133:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2005,
							"src": "12841:1077:0"
						},
						{
							"id": 454,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "13999:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 455,
								"nodeType": "StructuredDocumentation",
								"src": "14025:88:0",
								"text": "@title Events emitted by a pool\n @notice Contains all events emitted by the pool"
							},
							"fullyImplemented": true,
							"id": 571,
							"linearizedBaseContracts": [
								571
							],
							"name": "IUniswapV3PoolEvents",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 456,
										"nodeType": "StructuredDocumentation",
										"src": "14150:344:0",
										"text": "@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"
									},
									"id": 462,
									"name": "Initialize",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 458,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "14516:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 457,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "14516:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 460,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 462,
												"src": "14538:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 459,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "14538:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14515:34:0"
									},
									"src": "14499:51:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 463,
										"nodeType": "StructuredDocumentation",
										"src": "14556:551:0",
										"text": "@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"
									},
									"id": 479,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 465,
												"indexed": false,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "15132:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15132:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "15156:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15156:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "15187:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 468,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "15187:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 471,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "15220:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 470,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "15220:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "15253:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 472,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "15253:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "15277:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15277:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 479,
												"src": "15302:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15302:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15122:201:0"
									},
									"src": "15112:212:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 480,
										"nodeType": "StructuredDocumentation",
										"src": "15330:493:0",
										"text": "@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"
									},
									"id": 494,
									"name": "Collect",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 482,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "15851:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 481,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15851:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 484,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "15882:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15882:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "15909:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 485,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "15909:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "15942:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 487,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "15942:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "15975:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 489,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "15975:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 494,
												"src": "16000:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 491,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "16000:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15841:180:0"
									},
									"src": "15828:194:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 495,
										"nodeType": "StructuredDocumentation",
										"src": "16028:523:0",
										"text": "@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"
									},
									"id": 509,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "16576:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16576:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 499,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "16607:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 498,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "16607:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"indexed": true,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "16640:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 500,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "16640:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 503,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "16673:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 502,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "16673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 505,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "16697:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16697:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 507,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "16722:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 506,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16722:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16566:177:0"
									},
									"src": "16556:188:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "16750:600:0",
										"text": "@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"
									},
									"id": 526,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "17375:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 511,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17375:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "17407:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17407:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "17442:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 515,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17442:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "17466:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 517,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17466:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": false,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "17490:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 519,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "17490:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "17520:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 521,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "17520:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"indexed": false,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 526,
												"src": "17547:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 523,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "17547:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17365:198:0"
									},
									"src": "17355:209:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 527,
										"nodeType": "StructuredDocumentation",
										"src": "17570:562:0",
										"text": "@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"
									},
									"id": 541,
									"name": "Flash",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 529,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "18158:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18158:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "18190:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18190:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "18225:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18225:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 535,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "18250:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 534,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 537,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid0",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "18275:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 536,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18275:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 539,
												"indexed": false,
												"mutability": "mutable",
												"name": "paid1",
												"nodeType": "VariableDeclaration",
												"scope": 541,
												"src": "18298:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18148:169:0"
									},
									"src": "18137:181:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 542,
										"nodeType": "StructuredDocumentation",
										"src": "18324:451:0",
										"text": "@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"
									},
									"id": 548,
									"name": "IncreaseObservationCardinalityNext",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextOld",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "18830:36:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 543,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "18830:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 546,
												"indexed": false,
												"mutability": "mutable",
												"name": "observationCardinalityNextNew",
												"nodeType": "VariableDeclaration",
												"scope": 548,
												"src": "18876:36:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 545,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "18876:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18820:98:0"
									},
									"src": "18780:139:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 549,
										"nodeType": "StructuredDocumentation",
										"src": "18925:370:0",
										"text": "@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"
									},
									"id": 559,
									"name": "SetFeeProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0Old",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "19321:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 550,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "19321:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1Old",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "19344:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 552,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "19344:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol0New",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "19367:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 554,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "19367:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeProtocol1New",
												"nodeType": "VariableDeclaration",
												"scope": 559,
												"src": "19390:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 556,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "19390:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19320:92:0"
									},
									"src": "19300:113:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 560,
										"nodeType": "StructuredDocumentation",
										"src": "19419:384:0",
										"text": "@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"
									},
									"id": 570,
									"name": "CollectProtocol",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "19830:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 564,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "19854:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 563,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 566,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "19881:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 565,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "19881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 568,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 570,
												"src": "19898:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 567,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "19898:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19829:85:0"
									},
									"src": "19808:107:0"
								}
							],
							"scope": 2005,
							"src": "14113:5804:0"
						},
						{
							"id": 572,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "20004:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 573,
								"nodeType": "StructuredDocumentation",
								"src": "20030:116:0",
								"text": "@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"
							},
							"fullyImplemented": false,
							"id": 596,
							"linearizedBaseContracts": [
								596
							],
							"name": "IUniswapV3PoolOwnerActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "20189:205:0",
										"text": "@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"
									},
									"functionSelector": "8206a4d1",
									"id": 581,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setFeeProtocol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "feeProtocol0",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "20423:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 575,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "20423:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "feeProtocol1",
												"nodeType": "VariableDeclaration",
												"scope": 581,
												"src": "20443:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 577,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "20443:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20422:40:0"
									},
									"returnParameters": {
										"id": 580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "20471:0:0"
									},
									"scope": 596,
									"src": "20399:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 582,
										"nodeType": "StructuredDocumentation",
										"src": "20478:483:0",
										"text": "@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"
									},
									"functionSelector": "85b66729",
									"id": 595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collectProtocol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 584,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "21000:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 583,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21000:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "21027:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 585,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "21027:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "21061:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 587,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "21061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20990:101:0"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "21110:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 590,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "21110:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "21127:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 592,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "21127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21109:34:0"
									},
									"scope": 596,
									"src": "20966:178:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2005,
							"src": "20146:1000:0"
						},
						{
							"id": 597,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "21228:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 598,
								"nodeType": "StructuredDocumentation",
								"src": "21254:102:0",
								"text": "@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"
							},
							"fullyImplemented": false,
							"id": 691,
							"linearizedBaseContracts": [
								691
							],
							"name": "IUniswapV3PoolActions",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 599,
										"nodeType": "StructuredDocumentation",
										"src": "21394:206:0",
										"text": "@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"
									},
									"functionSelector": "f637731d",
									"id": 604,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 602,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 601,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 604,
												"src": "21625:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 600,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "21625:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21624:22:0"
									},
									"returnParameters": {
										"id": 603,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21655:0:0"
									},
									"scope": 691,
									"src": "21605:51:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "21662:1029:0",
										"text": "@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"
									},
									"functionSelector": "3c8a7d8d",
									"id": 622,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "22719:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22719:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "22746:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 608,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "22746:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "22771:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 610,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "22771:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "22796:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 612,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "22796:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "22820:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "22820:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22709:136:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "22864:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 617,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 622,
												"src": "22881:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22881:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22863:34:0"
									},
									"scope": 691,
									"src": "22696:202:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 623,
										"nodeType": "StructuredDocumentation",
										"src": "22904:1053:0",
										"text": "@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"
									},
									"functionSelector": "4f1eb3d8",
									"id": 640,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "collect",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "23988:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23988:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 627,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "24015:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 626,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "24015:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "24040:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 628,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "24040:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "amount0Requested",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "24065:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 630,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "24065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "amount1Requested",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "24099:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 632,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "24099:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23978:151:0"
									},
									"returnParameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "24148:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 635,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "24148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 640,
												"src": "24165:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 637,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "24165:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24147:34:0"
									},
									"scope": 691,
									"src": "23962:220:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "24188:631:0",
										"text": "@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"
									},
									"functionSelector": "a34123a7",
									"id": 654,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 643,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "24847:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 642,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "24847:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 645,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "24872:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 644,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "24872:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 647,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "24897:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 646,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "24897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24837:80:0"
									},
									"returnParameters": {
										"id": 653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 650,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "24936:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24936:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 654,
												"src": "24953:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24953:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24935:34:0"
									},
									"scope": 691,
									"src": "24824:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 655,
										"nodeType": "StructuredDocumentation",
										"src": "24976:1015:0",
										"text": "@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"
									},
									"functionSelector": "128acb08",
									"id": 672,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "26019:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"mutability": "mutable",
												"name": "zeroForOne",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "26046:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 658,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "26046:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "amountSpecified",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "26071:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 660,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26071:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "26103:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 662,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "26103:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 665,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "26138:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 664,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26138:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26009:154:0"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "26182:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 667,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26182:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 672,
												"src": "26198:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 669,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26198:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26181:32:0"
									},
									"scope": 691,
									"src": "25996:218:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 673,
										"nodeType": "StructuredDocumentation",
										"src": "26220:657:0",
										"text": "@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"
									},
									"functionSelector": "490e6cbc",
									"id": 684,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "flash",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 675,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "26906:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 674,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26906:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 677,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "26933:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 676,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26933:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "26958:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26958:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"scope": 684,
												"src": "26983:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 680,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26983:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26896:112:0"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27017:0:0"
									},
									"scope": 691,
									"src": "26882:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 685,
										"nodeType": "StructuredDocumentation",
										"src": "27024:367:0",
										"text": "@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"
									},
									"functionSelector": "32148f67",
									"id": 690,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "increaseObservationCardinalityNext",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 690,
												"src": "27440:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 686,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "27440:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27439:35:0"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27483:0:0"
									},
									"scope": 691,
									"src": "27396:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2005,
							"src": "21356:6130:0"
						},
						{
							"id": 692,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "27573:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 693,
								"nodeType": "StructuredDocumentation",
								"src": "27599:222:0",
								"text": "@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."
							},
							"fullyImplemented": false,
							"id": 721,
							"linearizedBaseContracts": [
								721
							],
							"name": "IUniswapV3PoolDerivedState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 694,
										"nodeType": "StructuredDocumentation",
										"src": "27864:1045:0",
										"text": "@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"
									},
									"functionSelector": "883bdbfd",
									"id": 706,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observe",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"mutability": "mutable",
												"name": "secondsAgos",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "28931:29:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint32_$dyn_calldata_ptr",
													"typeString": "uint32[]"
												},
												"typeName": {
													"baseType": {
														"id": 695,
														"name": "uint32",
														"nodeType": "ElementaryTypeName",
														"src": "28931:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"id": 696,
													"nodeType": "ArrayTypeName",
													"src": "28931:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint32_$dyn_storage_ptr",
														"typeString": "uint32[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28930:31:0"
									},
									"returnParameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "tickCumulatives",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "29009:30:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_int56_$dyn_memory_ptr",
													"typeString": "int56[]"
												},
												"typeName": {
													"baseType": {
														"id": 699,
														"name": "int56",
														"nodeType": "ElementaryTypeName",
														"src": "29009:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"id": 700,
													"nodeType": "ArrayTypeName",
													"src": "29009:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_int56_$dyn_storage_ptr",
														"typeString": "int56[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128s",
												"nodeType": "VariableDeclaration",
												"scope": 706,
												"src": "29041:51:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint160_$dyn_memory_ptr",
													"typeString": "uint160[]"
												},
												"typeName": {
													"baseType": {
														"id": 702,
														"name": "uint160",
														"nodeType": "ElementaryTypeName",
														"src": "29041:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"id": 703,
													"nodeType": "ArrayTypeName",
													"src": "29041:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint160_$dyn_storage_ptr",
														"typeString": "uint160[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29008:85:0"
									},
									"scope": 721,
									"src": "28914:180:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 707,
										"nodeType": "StructuredDocumentation",
										"src": "29100:771:0",
										"text": "@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"
									},
									"functionSelector": "a38807f2",
									"id": 720,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "snapshotCumulativesInside",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "tickLower",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "29911:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 708,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "29911:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 711,
												"mutability": "mutable",
												"name": "tickUpper",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "29928:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 710,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "29928:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29910:34:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "tickCumulativeInside",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "30005:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 713,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30005:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 716,
												"mutability": "mutable",
												"name": "secondsPerLiquidityInsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "30045:37:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 715,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "30045:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "secondsInside",
												"nodeType": "VariableDeclaration",
												"scope": 720,
												"src": "30096:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 717,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "30096:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29991:135:0"
									},
									"scope": 721,
									"src": "29876:251:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2005,
							"src": "27821:2308:0"
						},
						{
							"id": 722,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "30209:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 723,
								"nodeType": "StructuredDocumentation",
								"src": "30235:169:0",
								"text": "@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"
							},
							"fullyImplemented": false,
							"id": 828,
							"linearizedBaseContracts": [
								828
							],
							"name": "IUniswapV3PoolState",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "30440:1140:0",
										"text": "@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"
									},
									"functionSelector": "3850c7bd",
									"id": 741,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "slot0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "31599:2:0"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 727,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "31662:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 726,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "31662:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "31696:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 728,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "31696:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "observationIndex",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "31720:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 730,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "31720:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "observationCardinality",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "31757:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 732,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "31757:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "observationCardinalityNext",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "31800:33:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 734,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "31800:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "feeProtocol",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "31847:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 736,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "31847:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "unlocked",
												"nodeType": "VariableDeclaration",
												"scope": 741,
												"src": "31878:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 738,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31878:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31648:253:0"
									},
									"scope": 828,
									"src": "31585:317:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 742,
										"nodeType": "StructuredDocumentation",
										"src": "31908:168:0",
										"text": "@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "f3058399",
									"id": 747,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal0X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32110:2:0"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 747,
												"src": "32136:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 744,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32136:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32135:9:0"
									},
									"scope": 828,
									"src": "32081:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 748,
										"nodeType": "StructuredDocumentation",
										"src": "32151:168:0",
										"text": "@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"
									},
									"functionSelector": "46141319",
									"id": 753,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "feeGrowthGlobal1X128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 749,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32353:2:0"
									},
									"returnParameters": {
										"id": 752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 751,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 753,
												"src": "32379:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 750,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32379:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32378:9:0"
									},
									"scope": 828,
									"src": "32324:64:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 754,
										"nodeType": "StructuredDocumentation",
										"src": "32394:147:0",
										"text": "@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"
									},
									"functionSelector": "1ad8b03b",
									"id": 761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "protocolFees",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 755,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32567:2:0"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "token0",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "32593:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 756,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "32593:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "token1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "32609:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 758,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "32609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32592:32:0"
									},
									"scope": 828,
									"src": "32546:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "32631:150:0",
										"text": "@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"
									},
									"functionSelector": "1a686502",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "liquidity",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32804:2:0"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "32830:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 764,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "32830:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32829:9:0"
									},
									"scope": 828,
									"src": "32786:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "32845:1244:0",
										"text": "@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."
									},
									"functionSelector": "f30dba93",
									"id": 789,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ticks",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 771,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "34109:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 769,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "34109:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34108:12:0"
									},
									"returnParameters": {
										"id": 788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "liquidityGross",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "34181:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 772,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "34181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "liquidityNet",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "34217:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 774,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "34217:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "feeGrowthOutside0X128",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "34250:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "feeGrowthOutside1X128",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "34293:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "tickCumulativeOutside",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "34336:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 780,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "34336:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"mutability": "mutable",
												"name": "secondsPerLiquidityOutsideX128",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "34377:38:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 782,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "34377:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 785,
												"mutability": "mutable",
												"name": "secondsOutside",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "34429:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 784,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "34429:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 787,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "34464:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 786,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "34464:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34167:323:0"
									},
									"scope": 828,
									"src": "34094:397:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "34497:99:0",
										"text": "@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"
									},
									"functionSelector": "5339c296",
									"id": 797,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickBitmap",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 793,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "wordPosition",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "34621:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 791,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "34621:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34620:20:0"
									},
									"returnParameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "34664:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34664:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34663:9:0"
									},
									"scope": 828,
									"src": "34601:72:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 798,
										"nodeType": "StructuredDocumentation",
										"src": "34679:700:0",
										"text": "@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"
									},
									"functionSelector": "514ea4bf",
									"id": 813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "positions",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 800,
												"mutability": "mutable",
												"name": "key",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "35403:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 799,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "35403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35402:13:0"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 803,
												"mutability": "mutable",
												"name": "_liquidity",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "35476:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 802,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "35476:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "feeGrowthInside0LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "35508:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 804,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35508:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 807,
												"mutability": "mutable",
												"name": "feeGrowthInside1LastX128",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "35554:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35554:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 809,
												"mutability": "mutable",
												"name": "tokensOwed0",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "35600:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 808,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "35600:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "tokensOwed1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "35633:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 810,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "35633:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35462:200:0"
									},
									"scope": 828,
									"src": "35384:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "35669:749:0",
										"text": "@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"
									},
									"functionSelector": "252c09d7",
									"id": 827,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "observations",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "36445:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36445:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36444:15:0"
									},
									"returnParameters": {
										"id": 826,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "blockTimestamp",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "36520:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 818,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "36520:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 821,
												"mutability": "mutable",
												"name": "tickCumulative",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "36555:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 820,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "36555:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "secondsPerLiquidityCumulativeX128",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "36589:41:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 822,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "36589:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "initialized",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "36644:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 824,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36644:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36506:164:0"
									},
									"scope": 828,
									"src": "36423:248:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2005,
							"src": "30404:6269:0"
						},
						{
							"id": 829,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "36758:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 830,
								"nodeType": "StructuredDocumentation",
								"src": "36784:153:0",
								"text": "@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"
							},
							"fullyImplemented": false,
							"id": 867,
							"linearizedBaseContracts": [
								867
							],
							"name": "IUniswapV3PoolImmutables",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 831,
										"nodeType": "StructuredDocumentation",
										"src": "36978:138:0",
										"text": "@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"
									},
									"functionSelector": "c45a0155",
									"id": 836,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37137:2:0"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 836,
												"src": "37163:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37163:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37162:9:0"
									},
									"scope": 867,
									"src": "37121:51:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 837,
										"nodeType": "StructuredDocumentation",
										"src": "37178:113:0",
										"text": "@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "0dfe1681",
									"id": 842,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37311:2:0"
									},
									"returnParameters": {
										"id": 841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 840,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "37337:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37337:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37336:9:0"
									},
									"scope": 867,
									"src": "37296:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 843,
										"nodeType": "StructuredDocumentation",
										"src": "37352:114:0",
										"text": "@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"
									},
									"functionSelector": "d21220a7",
									"id": 848,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37486:2:0"
									},
									"returnParameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 848,
												"src": "37512:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37512:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37511:9:0"
									},
									"scope": 867,
									"src": "37471:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "37527:84:0",
										"text": "@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"
									},
									"functionSelector": "ddca3f43",
									"id": 854,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "fee",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37628:2:0"
									},
									"returnParameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 854,
												"src": "37654:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 851,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "37654:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37653:8:0"
									},
									"scope": 867,
									"src": "37616:46:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 855,
										"nodeType": "StructuredDocumentation",
										"src": "37668:358:0",
										"text": "@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"
									},
									"functionSelector": "d0c93a7c",
									"id": 860,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tickSpacing",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38051:2:0"
									},
									"returnParameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 860,
												"src": "38077:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 857,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "38077:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38076:7:0"
									},
									"scope": 867,
									"src": "38031:53:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "38090:363:0",
										"text": "@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"
									},
									"functionSelector": "70cf754a",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "maxLiquidityPerTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38486:2:0"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "38512:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 863,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "38512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38511:9:0"
									},
									"scope": 867,
									"src": "38458:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2005,
							"src": "36937:1586:0"
						},
						{
							"id": 868,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "38593:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 870,
										"name": "IUniswapV3PoolImmutables",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 867,
										"src": "38922:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolImmutables_$867",
											"typeString": "contract IUniswapV3PoolImmutables"
										}
									},
									"id": 871,
									"nodeType": "InheritanceSpecifier",
									"src": "38922:24:0"
								},
								{
									"baseName": {
										"id": 872,
										"name": "IUniswapV3PoolState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 828,
										"src": "38952:19:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolState_$828",
											"typeString": "contract IUniswapV3PoolState"
										}
									},
									"id": 873,
									"nodeType": "InheritanceSpecifier",
									"src": "38952:19:0"
								},
								{
									"baseName": {
										"id": 874,
										"name": "IUniswapV3PoolDerivedState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 721,
										"src": "38977:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolDerivedState_$721",
											"typeString": "contract IUniswapV3PoolDerivedState"
										}
									},
									"id": 875,
									"nodeType": "InheritanceSpecifier",
									"src": "38977:26:0"
								},
								{
									"baseName": {
										"id": 876,
										"name": "IUniswapV3PoolActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 691,
										"src": "39009:21:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolActions_$691",
											"typeString": "contract IUniswapV3PoolActions"
										}
									},
									"id": 877,
									"nodeType": "InheritanceSpecifier",
									"src": "39009:21:0"
								},
								{
									"baseName": {
										"id": 878,
										"name": "IUniswapV3PoolOwnerActions",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 596,
										"src": "39036:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolOwnerActions_$596",
											"typeString": "contract IUniswapV3PoolOwnerActions"
										}
									},
									"id": 879,
									"nodeType": "InheritanceSpecifier",
									"src": "39036:26:0"
								},
								{
									"baseName": {
										"id": 880,
										"name": "IUniswapV3PoolEvents",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 571,
										"src": "39068:20:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3PoolEvents_$571",
											"typeString": "contract IUniswapV3PoolEvents"
										}
									},
									"id": 881,
									"nodeType": "InheritanceSpecifier",
									"src": "39068:20:0"
								}
							],
							"contractDependencies": [
								571,
								596,
								691,
								721,
								828,
								867
							],
							"contractKind": "interface",
							"documentation": {
								"id": 869,
								"nodeType": "StructuredDocumentation",
								"src": "38625:265:0",
								"text": "@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"
							},
							"fullyImplemented": false,
							"id": 882,
							"linearizedBaseContracts": [
								882,
								571,
								596,
								691,
								721,
								828,
								867
							],
							"name": "IUniswapV3Pool",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 2005,
							"src": "38890:203:0"
						},
						{
							"id": 883,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "39149:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 884,
								"nodeType": "StructuredDocumentation",
								"src": "39176:68:0",
								"text": "@notice Provides validation for callbacks from Uniswap V3 Pools"
							},
							"fullyImplemented": true,
							"id": 941,
							"linearizedBaseContracts": [
								941
							],
							"name": "CallbackValidation",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 908,
										"nodeType": "Block",
										"src": "39860:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 899,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "39892:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 902,
																	"name": "tokenA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 889,
																	"src": "39924:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 903,
																	"name": "tokenB",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 891,
																	"src": "39932:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 904,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 893,
																	"src": "39940:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																],
																"expression": {
																	"id": 900,
																	"name": "PoolAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "39901:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_PoolAddress_$91_$",
																		"typeString": "type(library PoolAddress)"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "getPoolKey",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 43,
																"src": "39901:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint24_$returns$_t_struct$_PoolKey_$12_memory_ptr_$",
																	"typeString": "function (address,address,uint24) pure returns (struct PoolAddress.PoolKey memory)"
																}
															},
															"id": 905,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "39901:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																"typeString": "struct PoolAddress.PoolKey memory"
															}
														],
														"id": 898,
														"name": "verifyCallback",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															909,
															940
														],
														"referencedDeclaration": 940,
														"src": "39877:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_struct$_PoolKey_$12_memory_ptr_$returns$_t_contract$_IUniswapV3Pool_$882_$",
															"typeString": "function (address,struct PoolAddress.PoolKey memory) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39877:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"functionReturnParameters": 897,
												"id": 907,
												"nodeType": "Return",
												"src": "39870:75:0"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "39277:411:0",
										"text": "@notice Returns the address of a valid Uniswap V3 Pool\n @param factory The contract address of the Uniswap V3 factory\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The V3 pool contract address"
									},
									"id": 909,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "39726:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39726:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "39751:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39751:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "39775:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 890,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "39799:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 892,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "39799:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39716:99:0"
									},
									"returnParameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 896,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "39839:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 895,
													"name": "IUniswapV3Pool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 882,
													"src": "39839:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39838:21:0"
									},
									"scope": 941,
									"src": "39693:259:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "40348:130:0",
										"statements": [
											{
												"expression": {
													"id": 927,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 919,
														"name": "pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "40358:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 923,
																		"name": "factory",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 912,
																		"src": "40407:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 924,
																		"name": "poolKey",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 914,
																		"src": "40416:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																			"typeString": "struct PoolAddress.PoolKey memory"
																		}
																	],
																	"expression": {
																		"id": 921,
																		"name": "PoolAddress",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "40380:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_PoolAddress_$91_$",
																			"typeString": "type(library PoolAddress)"
																		}
																	},
																	"id": 922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "computeAddress",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 90,
																	"src": "40380:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$12_memory_ptr_$returns$_t_address_$",
																		"typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
																	}
																},
																"id": 925,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40380:44:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 920,
															"name": "IUniswapV3Pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 882,
															"src": "40365:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$882_$",
																"typeString": "type(contract IUniswapV3Pool)"
															}
														},
														"id": 926,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40365:60:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
															"typeString": "contract IUniswapV3Pool"
														}
													},
													"src": "40358:67:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"id": 928,
												"nodeType": "ExpressionStatement",
												"src": "40358:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 936,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 930,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "40443:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 931,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "40443:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 934,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "40465:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
																			"typeString": "contract IUniswapV3Pool"
																		}
																	],
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "40457:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 932,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "40457:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 935,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40457:13:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "40443:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 929,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "40435:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40435:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "40435:36:0"
											}
										]
									},
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "39958:236:0",
										"text": "@notice Returns the address of a valid Uniswap V3 Pool\n @param factory The contract address of the Uniswap V3 factory\n @param poolKey The identifying key of the V3 pool\n @return pool The V3 pool contract address"
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallback",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "factory",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "40223:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40223:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "poolKey",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "40240:34:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
													"typeString": "struct PoolAddress.PoolKey"
												},
												"typeName": {
													"id": 913,
													"name": "PoolAddress.PoolKey",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 12,
													"src": "40240:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PoolKey_$12_storage_ptr",
														"typeString": "struct PoolAddress.PoolKey"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40222:53:0"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 917,
												"mutability": "mutable",
												"name": "pool",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "40323:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 916,
													"name": "IUniswapV3Pool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 882,
													"src": "40323:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40322:21:0"
									},
									"scope": 941,
									"src": "40199:279:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2005,
							"src": "39244:1236:0"
						},
						{
							"id": 942,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "40543:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 943,
								"nodeType": "StructuredDocumentation",
								"src": "40569:235:0",
								"text": "@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"
							},
							"fullyImplemented": true,
							"id": 1475,
							"linearizedBaseContracts": [
								1475
							],
							"name": "TickMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"documentation": {
										"id": 944,
										"nodeType": "StructuredDocumentation",
										"src": "40827:108:0",
										"text": "@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"
									},
									"id": 948,
									"mutability": "constant",
									"name": "MIN_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 1475,
									"src": "40940:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 945,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "40940:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 947,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "40975:7:0",
										"subExpression": {
											"hexValue": "383837323732",
											"id": 946,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "40976:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_887272_by_1",
												"typeString": "int_const 887272"
											},
											"value": "887272"
										},
										"typeDescriptions": {
											"typeIdentifier": "t_rational_minus_887272_by_1",
											"typeString": "int_const -887272"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 949,
										"nodeType": "StructuredDocumentation",
										"src": "40988:107:0",
										"text": "@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"
									},
									"id": 953,
									"mutability": "constant",
									"name": "MAX_TICK",
									"nodeType": "VariableDeclaration",
									"scope": 1475,
									"src": "41100:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_int24",
										"typeString": "int24"
									},
									"typeName": {
										"id": 950,
										"name": "int24",
										"nodeType": "ElementaryTypeName",
										"src": "41100:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"value": {
										"id": 952,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"nodeType": "UnaryOperation",
										"operator": "-",
										"prefix": true,
										"src": "41135:9:0",
										"subExpression": {
											"id": 951,
											"name": "MIN_TICK",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 948,
											"src": "41136:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_int24",
												"typeString": "int24"
											}
										},
										"typeDescriptions": {
											"typeIdentifier": "t_int24",
											"typeString": "int24"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 954,
										"nodeType": "StructuredDocumentation",
										"src": "41151:116:0",
										"text": "@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"
									},
									"id": 957,
									"mutability": "constant",
									"name": "MIN_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 1475,
									"src": "41272:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 955,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "41272:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "34323935313238373339",
										"id": 956,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "41315:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_4295128739_by_1",
											"typeString": "int_const 4295128739"
										},
										"value": "4295128739"
									},
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "41331:116:0",
										"text": "@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"
									},
									"id": 961,
									"mutability": "constant",
									"name": "MAX_SQRT_RATIO",
									"nodeType": "VariableDeclaration",
									"scope": 1475,
									"src": "41452:92:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint160",
										"typeString": "uint160"
									},
									"typeName": {
										"id": 959,
										"name": "uint160",
										"nodeType": "ElementaryTypeName",
										"src": "41452:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint160",
											"typeString": "uint160"
										}
									},
									"value": {
										"hexValue": "31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432",
										"id": 960,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "41495:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461446703485210103287273052203988822378723970342_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...0342"
										},
										"value": "1461446703485210103287273052203988822378723970342"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1334,
										"nodeType": "Block",
										"src": "41938:2495:0",
										"statements": [
											{
												"assignments": [
													970
												],
												"declarations": [
													{
														"constant": false,
														"id": 970,
														"mutability": "mutable",
														"name": "absTick",
														"nodeType": "VariableDeclaration",
														"scope": 1334,
														"src": "41948:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 969,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "41948:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 990,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"id": 973,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 971,
															"name": "tick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 964,
															"src": "41966:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"hexValue": "30",
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41973:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "41966:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 986,
																		"name": "tick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 964,
																		"src": "42017:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "42010:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_int256_$",
																		"typeString": "type(int256)"
																	},
																	"typeName": {
																		"id": 984,
																		"name": "int256",
																		"nodeType": "ElementaryTypeName",
																		"src": "42010:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 987,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42010:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 983,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "42002:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 982,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "42002:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 988,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42002:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "41966:57:0",
													"trueExpression": {
														"arguments": [
															{
																"id": 980,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "41985:13:0",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 978,
																			"name": "tick",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 964,
																			"src": "41993:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 977,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "41986:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 976,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "41986:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 979,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41986:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "41977:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 974,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "41977:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 981,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "41977:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41948:75:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 997,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 992,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "42041:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 995,
																		"name": "MAX_TICK",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 953,
																		"src": "42060:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int24",
																			"typeString": "int24"
																		}
																	],
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "42052:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 993,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "42052:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42052:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "42041:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54",
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42071:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															},
															"value": "T"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc",
																"typeString": "literal_string \"T\""
															}
														],
														"id": 991,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42033:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42033:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1000,
												"nodeType": "ExpressionStatement",
												"src": "42033:42:0"
											},
											{
												"assignments": [
													1002
												],
												"declarations": [
													{
														"constant": false,
														"id": 1002,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 1334,
														"src": "42086:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1001,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "42086:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1011,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1007,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1003,
																"name": "absTick",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 970,
																"src": "42102:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"hexValue": "307831",
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42112:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "0x1"
															},
															"src": "42102:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42119:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "42102:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "3078313030303030303030303030303030303030303030303030303030303030303030",
														"id": 1009,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42160:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340282366920938463463374607431768211456_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...1456"
														},
														"value": "0x100000000000000000000000000000000"
													},
													"id": 1010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "42102:93:0",
													"trueExpression": {
														"hexValue": "30786666666362393333626436666164333761613264313632643161353934303031",
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42123:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_340265354078544963557816517032075149313_by_1",
															"typeString": "int_const 3402...(31 digits omitted)...9313"
														},
														"value": "0xfffcb933bd6fad37aa2d162d1a594001"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42086:109:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1012,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "42209:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832",
															"id": 1013,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42219:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "0x2"
														},
														"src": "42209:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1015,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42226:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "42209:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1026,
												"nodeType": "IfStatement",
												"src": "42205:83:0",
												"trueBody": {
													"expression": {
														"id": 1024,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1017,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "42229:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1020,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1018,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "42238:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663937323732333733643431333235396134363939303538306532313361",
																			"id": 1019,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42246:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340248342086729790484326174814286782778_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...2778"
																			},
																			"value": "0xfff97272373d413259a46990580e213a"
																		},
																		"src": "42238:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1021,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42237:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1022,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42285:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "42237:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "42229:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1025,
													"nodeType": "ExpressionStatement",
													"src": "42229:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1029,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1027,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "42302:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834",
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42312:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4_by_1",
																"typeString": "int_const 4"
															},
															"value": "0x4"
														},
														"src": "42302:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1030,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42319:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "42302:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1041,
												"nodeType": "IfStatement",
												"src": "42298:83:0",
												"trueBody": {
													"expression": {
														"id": 1039,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1032,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "42322:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1038,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1035,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1033,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "42331:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666663265353066356636353639333265663132333537636633633766646363",
																			"id": 1034,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42339:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340214320654664324051920982716015181260_by_1",
																				"typeString": "int_const 3402...(31 digits omitted)...1260"
																			},
																			"value": "0xfff2e50f5f656932ef12357cf3c7fdcc"
																		},
																		"src": "42331:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1036,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42330:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1037,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42378:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "42330:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "42322:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1040,
													"nodeType": "ExpressionStatement",
													"src": "42322:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1044,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1042,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "42395:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838",
															"id": 1043,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42405:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8_by_1",
																"typeString": "int_const 8"
															},
															"value": "0x8"
														},
														"src": "42395:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1045,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42412:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "42395:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1056,
												"nodeType": "IfStatement",
												"src": "42391:83:0",
												"trueBody": {
													"expression": {
														"id": 1054,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1047,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "42415:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1053,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1050,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1048,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "42424:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666653563616361376531306534653631633336323465616130393431636430",
																			"id": 1049,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42432:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340146287995602323631171512101879684304_by_1",
																				"typeString": "int_const 3401...(31 digits omitted)...4304"
																			},
																			"value": "0xffe5caca7e10e4e61c3624eaa0941cd0"
																		},
																		"src": "42424:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1051,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42423:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42471:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "42423:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "42415:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1055,
													"nodeType": "ExpressionStatement",
													"src": "42415:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1057,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "42488:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130",
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42498:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16_by_1",
																"typeString": "int_const 16"
															},
															"value": "0x10"
														},
														"src": "42488:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42506:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "42488:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1071,
												"nodeType": "IfStatement",
												"src": "42484:84:0",
												"trueBody": {
													"expression": {
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1062,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "42509:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1065,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1063,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "42518:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666636239383433643630663631353963396462353838333563393236363434",
																			"id": 1064,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42526:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_340010263488231146823593991679159461444_by_1",
																				"typeString": "int_const 3400...(31 digits omitted)...1444"
																			},
																			"value": "0xffcb9843d60f6159c9db58835c926644"
																		},
																		"src": "42518:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1066,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42517:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42565:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "42517:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "42509:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1070,
													"nodeType": "ExpressionStatement",
													"src": "42509:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1074,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1072,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "42582:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230",
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42592:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32_by_1",
																"typeString": "int_const 32"
															},
															"value": "0x20"
														},
														"src": "42582:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1075,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42600:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "42582:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1086,
												"nodeType": "IfStatement",
												"src": "42578:84:0",
												"trueBody": {
													"expression": {
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1077,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "42603:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1080,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1078,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "42612:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666393733623431666139386330383134373265363839366466623235346330",
																			"id": 1079,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42620:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339738377640345403697157401104375502016_by_1",
																				"typeString": "int_const 3397...(31 digits omitted)...2016"
																			},
																			"value": "0xff973b41fa98c081472e6896dfb254c0"
																		},
																		"src": "42612:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1081,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42611:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1082,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42659:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "42611:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "42603:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1085,
													"nodeType": "ExpressionStatement",
													"src": "42603:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1089,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1087,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "42676:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430",
															"id": 1088,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42686:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_64_by_1",
																"typeString": "int_const 64"
															},
															"value": "0x40"
														},
														"src": "42676:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1090,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42694:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "42676:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1101,
												"nodeType": "IfStatement",
												"src": "42672:84:0",
												"trueBody": {
													"expression": {
														"id": 1099,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1092,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "42697:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1098,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1095,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1093,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "42706:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786666326561313634363663393661333834336563373862333236623532383631",
																			"id": 1094,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42714:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_339195258003219555707034227454543997025_by_1",
																				"typeString": "int_const 3391...(31 digits omitted)...7025"
																			},
																			"value": "0xff2ea16466c96a3843ec78b326b52861"
																		},
																		"src": "42706:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1096,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42705:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1097,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42753:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "42705:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "42697:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1100,
													"nodeType": "ExpressionStatement",
													"src": "42697:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1102,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "42770:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830",
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42780:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_128_by_1",
																"typeString": "int_const 128"
															},
															"value": "0x80"
														},
														"src": "42770:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42788:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "42770:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1116,
												"nodeType": "IfStatement",
												"src": "42766:84:0",
												"trueBody": {
													"expression": {
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1107,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "42791:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1108,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "42800:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786665356465653034366139396132613831316334363166313936396333303533",
																			"id": 1109,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42808:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_338111622100601834656805679988414885971_by_1",
																				"typeString": "int_const 3381...(31 digits omitted)...5971"
																			},
																			"value": "0xfe5dee046a99a2a811c461f1969c3053"
																		},
																		"src": "42800:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1111,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42799:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42847:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "42799:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "42791:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1115,
													"nodeType": "ExpressionStatement",
													"src": "42791:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1119,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1117,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "42864:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078313030",
															"id": 1118,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42874:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_256_by_1",
																"typeString": "int_const 256"
															},
															"value": "0x100"
														},
														"src": "42864:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1120,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42883:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "42864:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1131,
												"nodeType": "IfStatement",
												"src": "42860:85:0",
												"trueBody": {
													"expression": {
														"id": 1129,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1122,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "42886:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1128,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1123,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "42895:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786663626538366337393030613838616564636666633833623437396161336134",
																			"id": 1124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42903:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_335954724994790223023589805789778977700_by_1",
																				"typeString": "int_const 3359...(31 digits omitted)...7700"
																			},
																			"value": "0xfcbe86c7900a88aedcffc83b479aa3a4"
																		},
																		"src": "42895:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1126,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42894:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1127,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "42942:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "42894:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "42886:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1130,
													"nodeType": "ExpressionStatement",
													"src": "42886:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1132,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "42959:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078323030",
															"id": 1133,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42969:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_512_by_1",
																"typeString": "int_const 512"
															},
															"value": "0x200"
														},
														"src": "42959:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1135,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "42978:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "42959:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1146,
												"nodeType": "IfStatement",
												"src": "42955:85:0",
												"trueBody": {
													"expression": {
														"id": 1144,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1137,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "42981:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1143,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1140,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1138,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "42990:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786639383761373235336163343133313736663262303734636637383135653534",
																			"id": 1139,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "42998:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_331682121138379247127172139078559817300_by_1",
																				"typeString": "int_const 3316...(31 digits omitted)...7300"
																			},
																			"value": "0xf987a7253ac413176f2b074cf7815e54"
																		},
																		"src": "42990:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1141,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "42989:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1142,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43037:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "42989:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "42981:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1145,
													"nodeType": "ExpressionStatement",
													"src": "42981:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1147,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "43054:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078343030",
															"id": 1148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43064:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1024_by_1",
																"typeString": "int_const 1024"
															},
															"value": "0x400"
														},
														"src": "43054:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43073:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "43054:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1161,
												"nodeType": "IfStatement",
												"src": "43050:85:0",
												"trueBody": {
													"expression": {
														"id": 1159,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1152,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "43076:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1158,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1153,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "43085:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786633333932623038323262373030303539343063376133393865346237306633",
																			"id": 1154,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "43093:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_323299236684853023288211250268160618739_by_1",
																				"typeString": "int_const 3232...(31 digits omitted)...8739"
																			},
																			"value": "0xf3392b0822b70005940c7a398e4b70f3"
																		},
																		"src": "43085:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1156,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43084:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1157,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43132:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "43084:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "43076:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1160,
													"nodeType": "ExpressionStatement",
													"src": "43076:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1162,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "43149:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "3078383030",
															"id": 1163,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43159:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2048_by_1",
																"typeString": "int_const 2048"
															},
															"value": "0x800"
														},
														"src": "43149:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1165,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43168:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "43149:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1176,
												"nodeType": "IfStatement",
												"src": "43145:85:0",
												"trueBody": {
													"expression": {
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1167,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "43171:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1170,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1168,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "43180:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786537313539343735613263323962373434336232396337666136653838396439",
																			"id": 1169,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "43188:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_307163716377032989948697243942600083929_by_1",
																				"typeString": "int_const 3071...(31 digits omitted)...3929"
																			},
																			"value": "0xe7159475a2c29b7443b29c7fa6e889d9"
																		},
																		"src": "43180:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1171,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43179:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43227:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "43179:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "43171:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1175,
													"nodeType": "ExpressionStatement",
													"src": "43171:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1177,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "43244:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307831303030",
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43254:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_4096_by_1",
																"typeString": "int_const 4096"
															},
															"value": "0x1000"
														},
														"src": "43244:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43264:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "43244:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1191,
												"nodeType": "IfStatement",
												"src": "43240:86:0",
												"trueBody": {
													"expression": {
														"id": 1189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1182,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "43267:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1188,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1185,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1183,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "43276:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786430393766336264666432303232623838343561643866373932616135383235",
																			"id": 1184,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "43284:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_277268403626896220162999269216087595045_by_1",
																				"typeString": "int_const 2772...(31 digits omitted)...5045"
																			},
																			"value": "0xd097f3bdfd2022b8845ad8f792aa5825"
																		},
																		"src": "43276:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1186,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43275:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1187,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43323:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "43275:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "43267:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1190,
													"nodeType": "ExpressionStatement",
													"src": "43267:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1194,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1192,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "43340:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307832303030",
															"id": 1193,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43350:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_8192_by_1",
																"typeString": "int_const 8192"
															},
															"value": "0x2000"
														},
														"src": "43340:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1195,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43360:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "43340:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1206,
												"nodeType": "IfStatement",
												"src": "43336:86:0",
												"trueBody": {
													"expression": {
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1197,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "43363:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1198,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "43372:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30786139663734363436326438373066646638613635646331663930653036316535",
																			"id": 1199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "43380:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_225923453940442621947126027127485391333_by_1",
																				"typeString": "int_const 2259...(31 digits omitted)...1333"
																			},
																			"value": "0xa9f746462d870fdf8a65dc1f90e061e5"
																		},
																		"src": "43372:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1201,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43371:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1202,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43419:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "43371:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "43363:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1205,
													"nodeType": "ExpressionStatement",
													"src": "43363:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1209,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1207,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "43436:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307834303030",
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43446:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_16384_by_1",
																"typeString": "int_const 16384"
															},
															"value": "0x4000"
														},
														"src": "43436:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43456:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "43436:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1221,
												"nodeType": "IfStatement",
												"src": "43432:86:0",
												"trueBody": {
													"expression": {
														"id": 1219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1212,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "43459:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1218,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1213,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "43468:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783730643836396131353664326131623839306262336466363262616633326637",
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "43476:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_149997214084966997727330242082538205943_by_1",
																				"typeString": "int_const 1499...(31 digits omitted)...5943"
																			},
																			"value": "0x70d869a156d2a1b890bb3df62baf32f7"
																		},
																		"src": "43468:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1216,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43467:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43515:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "43467:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "43459:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1220,
													"nodeType": "ExpressionStatement",
													"src": "43459:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1224,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1222,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "43532:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "307838303030",
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43542:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_32768_by_1",
																"typeString": "int_const 32768"
															},
															"value": "0x8000"
														},
														"src": "43532:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1225,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43552:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "43532:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1236,
												"nodeType": "IfStatement",
												"src": "43528:86:0",
												"trueBody": {
													"expression": {
														"id": 1234,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1227,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "43555:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1230,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1228,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "43564:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783331626531333566393764303866643938313233313530353534326663666136",
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "43572:34:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_66119101136024775622716233608466517926_by_1",
																				"typeString": "int_const 6611...(30 digits omitted)...7926"
																			},
																			"value": "0x31be135f97d08fd981231505542fcfa6"
																		},
																		"src": "43564:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1231,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43563:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43611:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "43563:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "43555:59:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1235,
													"nodeType": "ExpressionStatement",
													"src": "43555:59:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1239,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1237,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "43628:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783130303030",
															"id": 1238,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_65536_by_1",
																"typeString": "int_const 65536"
															},
															"value": "0x10000"
														},
														"src": "43628:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43649:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "43628:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1251,
												"nodeType": "IfStatement",
												"src": "43624:86:0",
												"trueBody": {
													"expression": {
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1242,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "43652:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1243,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "43661:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307839616135303862356237613834653163363737646535346633653939626339",
																			"id": 1244,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "43669:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_12847376061809297530290974190478138313_by_1",
																				"typeString": "int_const 1284...(30 digits omitted)...8313"
																			},
																			"value": "0x9aa508b5b7a84e1c677de54f3e99bc9"
																		},
																		"src": "43661:41:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1246,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43660:43:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43707:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "43660:50:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "43652:58:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1250,
													"nodeType": "ExpressionStatement",
													"src": "43652:58:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1252,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "43724:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783230303030",
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43734:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_131072_by_1",
																"typeString": "int_const 131072"
															},
															"value": "0x20000"
														},
														"src": "43724:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43745:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "43724:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1266,
												"nodeType": "IfStatement",
												"src": "43720:85:0",
												"trueBody": {
													"expression": {
														"id": 1264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1257,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "43748:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1260,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1258,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "43757:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3078356436616638646564623831313936363939633332393232356565363034",
																			"id": 1259,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "43765:32:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_485053260817066172746253684029974020_by_1",
																				"typeString": "int_const 4850...(28 digits omitted)...4020"
																			},
																			"value": "0x5d6af8dedb81196699c329225ee604"
																		},
																		"src": "43757:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1261,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43756:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43802:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "43756:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "43748:57:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1265,
													"nodeType": "ExpressionStatement",
													"src": "43748:57:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1269,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1267,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "43819:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783430303030",
															"id": 1268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43829:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_262144_by_1",
																"typeString": "int_const 262144"
															},
															"value": "0x40000"
														},
														"src": "43819:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43840:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "43819:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1281,
												"nodeType": "IfStatement",
												"src": "43815:83:0",
												"trueBody": {
													"expression": {
														"id": 1279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1272,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "43843:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1278,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1273,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "43852:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "307832323136653538346635666131656139323630343162656466653938",
																			"id": 1274,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "43860:30:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_691415978906521570653435304214168_by_1",
																				"typeString": "int_const 6914...(25 digits omitted)...4168"
																			},
																			"value": "0x2216e584f5fa1ea926041bedfe98"
																		},
																		"src": "43852:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1276,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43851:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1277,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43895:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "43851:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "43843:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1280,
													"nodeType": "ExpressionStatement",
													"src": "43843:55:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1284,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1282,
															"name": "absTick",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 970,
															"src": "43912:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&",
														"rightExpression": {
															"hexValue": "30783830303030",
															"id": 1283,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "43922:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_524288_by_1",
																"typeString": "int_const 524288"
															},
															"value": "0x80000"
														},
														"src": "43912:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "43933:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "43912:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1296,
												"nodeType": "IfStatement",
												"src": "43908:78:0",
												"trueBody": {
													"expression": {
														"id": 1294,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1287,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "43936:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1290,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1288,
																			"name": "ratio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1002,
																			"src": "43945:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "30783438613137303339316637646334323434346538666132",
																			"id": 1289,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "43953:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1404880482679654955896180642_by_1",
																				"typeString": "int_const 1404880482679654955896180642"
																			},
																			"value": "0x48a170391f7dc42444e8fa2"
																		},
																		"src": "43945:33:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1291,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "43944:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1292,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "43983:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "43944:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "43936:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1295,
													"nodeType": "ExpressionStatement",
													"src": "43936:50:0"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													},
													"id": 1299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1297,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 964,
														"src": "44001:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1298,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "44008:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "44001:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1310,
												"nodeType": "IfStatement",
												"src": "43997:47:0",
												"trueBody": {
													"expression": {
														"id": 1308,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1300,
															"name": "ratio",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1002,
															"src": "44011:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1303,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "44024:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			},
																			"typeName": {
																				"id": 1302,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "44024:7:0",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_uint256_$",
																				"typeString": "type(uint256)"
																			}
																		],
																		"id": 1301,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "44019:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1304,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "44019:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_uint256",
																		"typeString": "type(uint256)"
																	}
																},
																"id": 1305,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "44019:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1306,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1002,
																"src": "44039:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "44019:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "44011:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1309,
													"nodeType": "ExpressionStatement",
													"src": "44011:33:0"
												}
											},
											{
												"expression": {
													"id": 1332,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1311,
														"name": "sqrtPriceX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "44354:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1330,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1316,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1314,
																				"name": "ratio",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1002,
																				"src": "44378:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1315,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "44387:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "44378:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1317,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "44377:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"components": [
																		{
																			"condition": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1323,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1318,
																						"name": "ratio",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1002,
																						"src": "44394:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "%",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								},
																								"id": 1321,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"leftExpression": {
																									"hexValue": "31",
																									"id": 1319,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "44403:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "3332",
																									"id": 1320,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "44408:2:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_32_by_1",
																										"typeString": "int_const 32"
																									},
																									"value": "32"
																								},
																								"src": "44403:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_4294967296_by_1",
																									"typeString": "int_const 4294967296"
																								}
																							}
																						],
																						"id": 1322,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "44402:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_4294967296_by_1",
																							"typeString": "int_const 4294967296"
																						}
																					},
																					"src": "44394:17:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 1324,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "44415:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "44394:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"falseExpression": {
																				"hexValue": "31",
																				"id": 1327,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "44423:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "Conditional",
																			"src": "44394:30:0",
																			"trueExpression": {
																				"hexValue": "30",
																				"id": 1326,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "44419:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		}
																	],
																	"id": 1329,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "44393:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	}
																},
																"src": "44377:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "44369:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint160_$",
																"typeString": "type(uint160)"
															},
															"typeName": {
																"id": 1312,
																"name": "uint160",
																"nodeType": "ElementaryTypeName",
																"src": "44369:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1331,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "44369:57:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "44354:72:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"id": 1333,
												"nodeType": "ExpressionStatement",
												"src": "44354:72:0"
											}
										]
									},
									"documentation": {
										"id": 962,
										"nodeType": "StructuredDocumentation",
										"src": "41551:297:0",
										"text": "@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"
									},
									"id": 1335,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getSqrtRatioAtTick",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 964,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "41881:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 963,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "41881:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41880:12:0"
									},
									"returnParameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1335,
												"src": "41916:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 966,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "41916:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41915:22:0"
									},
									"scope": 1475,
									"src": "41853:2580:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1473,
										"nodeType": "Block",
										"src": "44937:4196:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1344,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "45054:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">=",
																"rightExpression": {
																	"id": 1345,
																	"name": "MIN_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 957,
																	"src": "45070:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "45054:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 1349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1347,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "45088:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1348,
																	"name": "MAX_SQRT_RATIO",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 961,
																	"src": "45103:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "45088:29:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "45054:63:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "52",
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "45119:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															},
															"value": "R"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2",
																"typeString": "literal_string \"R\""
															}
														],
														"id": 1343,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "45046:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45046:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1353,
												"nodeType": "ExpressionStatement",
												"src": "45046:77:0"
											},
											{
												"assignments": [
													1355
												],
												"declarations": [
													{
														"constant": false,
														"id": 1355,
														"mutability": "mutable",
														"name": "ratio",
														"nodeType": "VariableDeclaration",
														"scope": 1473,
														"src": "45133:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1354,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "45133:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1362,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1358,
																"name": "sqrtPriceX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1338,
																"src": "45157:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 1357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "45149:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1356,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "45149:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 1359,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "45149:21:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1360,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "45174:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "45149:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45133:43:0"
											},
											{
												"assignments": [
													1364
												],
												"declarations": [
													{
														"constant": false,
														"id": 1364,
														"mutability": "mutable",
														"name": "r",
														"nodeType": "VariableDeclaration",
														"scope": 1473,
														"src": "45187:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1363,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "45187:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1366,
												"initialValue": {
													"id": 1365,
													"name": "ratio",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1355,
													"src": "45199:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45187:17:0"
											},
											{
												"assignments": [
													1368
												],
												"declarations": [
													{
														"constant": false,
														"id": 1368,
														"mutability": "mutable",
														"name": "msb",
														"nodeType": "VariableDeclaration",
														"scope": 1473,
														"src": "45214:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1367,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "45214:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1370,
												"initialValue": {
													"hexValue": "30",
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "45228:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45214:15:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "45249:139:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "45263:58:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "45276:1:0",
																		"type": "",
																		"value": "7"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "45282:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "45285:34:0",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "45279:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "45279:41:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "45272:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45272:49:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "45267:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "45334:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "45344:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "45349:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "45341:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45341:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "45334:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "45364:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "45373:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "45376:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "45369:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45369:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "45364:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "45334:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "45344:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45282:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45364:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45376:1:0",
														"valueSize": 1
													}
												],
												"id": 1371,
												"nodeType": "InlineAssembly",
												"src": "45240:148:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "45406:123:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "45420:42:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "45433:1:0",
																		"type": "",
																		"value": "6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "45439:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "45442:18:0",
																				"type": "",
																				"value": "0xFFFFFFFFFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "45436:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "45436:25:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "45429:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45429:33:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "45424:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "45475:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "45485:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "45490:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "45482:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45482:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "45475:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "45505:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "45514:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "45517:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "45510:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45510:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "45505:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "45475:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "45485:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45439:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45505:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45517:1:0",
														"valueSize": 1
													}
												],
												"id": 1372,
												"nodeType": "InlineAssembly",
												"src": "45397:132:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "45547:115:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "45561:34:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "45574:1:0",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "45580:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "45583:10:0",
																				"type": "",
																				"value": "0xFFFFFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "45577:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "45577:17:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "45570:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45570:25:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "45565:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "45608:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "45618:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "45623:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "45615:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45615:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "45608:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "45638:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "45647:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "45650:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "45643:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45643:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "45638:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "45608:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "45618:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45580:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45638:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45650:1:0",
														"valueSize": 1
													}
												],
												"id": 1373,
												"nodeType": "InlineAssembly",
												"src": "45538:124:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "45680:111:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "45694:30:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "45707:1:0",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "45713:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "45716:6:0",
																				"type": "",
																				"value": "0xFFFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "45710:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "45710:13:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "45703:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45703:21:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "45698:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "45737:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "45747:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "45752:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "45744:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45744:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "45737:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "45767:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "45776:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "45779:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "45772:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45772:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "45767:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "45737:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "45747:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45713:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45767:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45779:1:0",
														"valueSize": 1
													}
												],
												"id": 1374,
												"nodeType": "InlineAssembly",
												"src": "45671:120:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "45809:109:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "45823:28:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "45836:1:0",
																		"type": "",
																		"value": "3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "45842:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "45845:4:0",
																				"type": "",
																				"value": "0xFF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "45839:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "45839:11:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "45832:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45832:19:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "45827:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "45864:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "45874:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "45879:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "45871:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45871:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "45864:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "45894:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "45903:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "45906:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "45899:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45899:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "45894:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "45864:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "45874:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45842:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45894:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45906:1:0",
														"valueSize": 1
													}
												],
												"id": 1375,
												"nodeType": "InlineAssembly",
												"src": "45800:118:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "45936:108:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "45950:27:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "45963:1:0",
																		"type": "",
																		"value": "2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "45969:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "45972:3:0",
																				"type": "",
																				"value": "0xF"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "45966:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "45966:10:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "45959:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45959:18:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "45954:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "45990:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "46000:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "46005:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "45997:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "45997:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "45990:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "46020:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "46029:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "46032:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "46025:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46025:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "46020:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "45990:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "46000:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "45969:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46020:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46032:1:0",
														"valueSize": 1
													}
												],
												"id": 1376,
												"nodeType": "InlineAssembly",
												"src": "45927:117:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "46062:108:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "46076:27:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "46089:1:0",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "46095:1:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "46098:3:0",
																				"type": "",
																				"value": "0x3"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "46092:2:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "46092:10:0"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nodeType": "YulIdentifier",
																	"src": "46085:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46085:18:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "46080:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "46116:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "46126:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "46131:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "46123:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46123:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "46116:3:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "46146:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "46155:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "46158:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "46151:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46151:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "46146:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "46116:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "46126:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46095:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46146:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46158:1:0",
														"valueSize": 1
													}
												],
												"id": 1377,
												"nodeType": "InlineAssembly",
												"src": "46053:117:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "46188:73:0",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "46202:19:0",
															"value": {
																"arguments": [
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "46214:1:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "46217:3:0",
																		"type": "",
																		"value": "0x1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "46211:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46211:10:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "46206:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "46234:17:0",
															"value": {
																"arguments": [
																	{
																		"name": "msb",
																		"nodeType": "YulIdentifier",
																		"src": "46244:3:0"
																	},
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "46249:1:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "46241:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46241:10:0"
															},
															"variableNames": [
																{
																	"name": "msb",
																	"nodeType": "YulIdentifier",
																	"src": "46234:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "46234:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1368,
														"isOffset": false,
														"isSlot": false,
														"src": "46244:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46214:1:0",
														"valueSize": 1
													}
												],
												"id": 1378,
												"nodeType": "InlineAssembly",
												"src": "46179:82:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1379,
														"name": "msb",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1368,
														"src": "46275:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"hexValue": "313238",
														"id": 1380,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46282:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_128_by_1",
															"typeString": "int_const 128"
														},
														"value": "128"
													},
													"src": "46275:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"id": 1398,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1391,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "46326:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1392,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "46330:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<<",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "313237",
																			"id": 1393,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "46340:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1394,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "46346:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "46340:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1396,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "46339:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46330:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "46326:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1399,
													"nodeType": "ExpressionStatement",
													"src": "46326:24:0"
												},
												"id": 1400,
												"nodeType": "IfStatement",
												"src": "46271:79:0",
												"trueBody": {
													"expression": {
														"id": 1389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1382,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1364,
															"src": "46287:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1388,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1383,
																"name": "ratio",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1355,
																"src": "46291:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1386,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1384,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "46301:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "313237",
																			"id": 1385,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "46307:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_127_by_1",
																				"typeString": "int_const 127"
																			},
																			"value": "127"
																		},
																		"src": "46301:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1387,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "46300:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "46291:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "46287:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1390,
													"nodeType": "ExpressionStatement",
													"src": "46287:24:0"
												}
											},
											{
												"assignments": [
													1402
												],
												"declarations": [
													{
														"constant": false,
														"id": 1402,
														"mutability": "mutable",
														"name": "log_2",
														"nodeType": "VariableDeclaration",
														"scope": 1473,
														"src": "46361:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1401,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "46361:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1412,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1411,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1408,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1405,
																			"name": "msb",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1368,
																			"src": "46384:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "46377:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1403,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "46377:6:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1406,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "46377:11:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "46391:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "46377:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1409,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "46376:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 1410,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "46399:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "46376:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46361:40:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "46421:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "46435:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "46444:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "46453:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "46456:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "46449:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "46449:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "46440:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46440:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "46435:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "46472:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "46485:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "46490:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "46481:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46481:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "46476:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "46505:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "46517:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "46528:2:0",
																				"type": "",
																				"value": "63"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "46532:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "46524:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "46524:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "46514:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46514:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "46505:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "46548:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "46557:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "46560:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "46553:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46553:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "46548:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "46505:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "46517:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46435:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46453:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46456:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46490:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46548:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46560:1:0",
														"valueSize": 1
													}
												],
												"id": 1413,
												"nodeType": "InlineAssembly",
												"src": "46412:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "46590:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "46604:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "46613:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "46622:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "46625:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "46618:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "46618:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "46609:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46609:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "46604:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "46641:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "46654:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "46659:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "46650:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46650:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "46645:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "46674:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "46686:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "46697:2:0",
																				"type": "",
																				"value": "62"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "46701:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "46693:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "46693:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "46683:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46683:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "46674:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "46717:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "46726:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "46729:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "46722:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46722:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "46717:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "46674:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "46686:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46604:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46622:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46625:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46659:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46717:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46729:1:0",
														"valueSize": 1
													}
												],
												"id": 1414,
												"nodeType": "InlineAssembly",
												"src": "46581:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "46759:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "46773:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "46782:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "46791:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "46794:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "46787:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "46787:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "46778:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46778:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "46773:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "46810:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "46823:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "46828:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "46819:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46819:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "46814:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "46843:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "46855:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "46866:2:0",
																				"type": "",
																				"value": "61"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "46870:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "46862:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "46862:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "46852:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46852:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "46843:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "46886:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "46895:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "46898:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "46891:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46891:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "46886:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "46843:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "46855:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46773:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46791:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46794:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46828:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46886:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46898:1:0",
														"valueSize": 1
													}
												],
												"id": 1415,
												"nodeType": "InlineAssembly",
												"src": "46750:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "46928:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "46942:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "46951:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "46960:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "46963:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "46956:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "46956:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "46947:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46947:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "46942:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "46979:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "46992:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "46997:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "46988:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "46988:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "46983:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "47012:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "47024:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "47035:2:0",
																				"type": "",
																				"value": "60"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "47039:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "47031:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "47031:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "47021:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47021:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "47012:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "47055:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "47064:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "47067:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47060:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47060:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "47055:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "47012:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "47024:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46942:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46960:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46963:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "46997:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47055:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47067:1:0",
														"valueSize": 1
													}
												],
												"id": 1416,
												"nodeType": "InlineAssembly",
												"src": "46919:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "47097:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "47111:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "47120:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "47129:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "47132:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "47125:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "47125:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47116:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47116:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "47111:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "47148:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "47161:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "47166:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47157:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47157:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "47152:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "47181:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "47193:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "47204:2:0",
																				"type": "",
																				"value": "59"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "47208:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "47200:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "47200:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "47190:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47190:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "47181:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "47224:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "47233:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "47236:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47229:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47229:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "47224:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "47181:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "47193:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47111:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47129:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47132:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47166:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47224:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47236:1:0",
														"valueSize": 1
													}
												],
												"id": 1417,
												"nodeType": "InlineAssembly",
												"src": "47088:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "47266:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "47280:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "47289:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "47298:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "47301:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "47294:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "47294:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47285:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47285:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "47280:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "47317:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "47330:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "47335:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47326:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47326:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "47321:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "47350:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "47362:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "47373:2:0",
																				"type": "",
																				"value": "58"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "47377:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "47369:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "47369:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "47359:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47359:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "47350:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "47393:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "47402:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "47405:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47398:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47398:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "47393:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "47350:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "47362:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47280:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47298:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47301:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47335:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47393:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47405:1:0",
														"valueSize": 1
													}
												],
												"id": 1418,
												"nodeType": "InlineAssembly",
												"src": "47257:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "47435:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "47449:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "47458:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "47467:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "47470:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "47463:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "47463:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47454:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47454:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "47449:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "47486:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "47499:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "47504:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47495:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47495:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "47490:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "47519:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "47531:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "47542:2:0",
																				"type": "",
																				"value": "57"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "47546:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "47538:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "47538:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "47528:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47528:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "47519:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "47562:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "47571:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "47574:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47567:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47567:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "47562:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "47519:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "47531:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47449:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47467:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47470:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47504:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47562:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47574:1:0",
														"valueSize": 1
													}
												],
												"id": 1419,
												"nodeType": "InlineAssembly",
												"src": "47426:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "47604:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "47618:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "47627:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "47636:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "47639:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "47632:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "47632:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47623:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47623:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "47618:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "47655:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "47668:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "47673:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47664:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47664:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "47659:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "47688:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "47700:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "47711:2:0",
																				"type": "",
																				"value": "56"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "47715:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "47707:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "47707:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "47697:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47697:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "47688:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "47731:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "47740:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "47743:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47736:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47736:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "47731:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "47688:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "47700:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47618:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47636:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47639:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47673:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47731:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47743:1:0",
														"valueSize": 1
													}
												],
												"id": 1420,
												"nodeType": "InlineAssembly",
												"src": "47595:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "47773:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "47787:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "47796:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "47805:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "47808:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "47801:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "47801:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47792:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47792:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "47787:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "47824:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "47837:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "47842:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47833:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47833:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "47828:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "47857:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "47869:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "47880:2:0",
																				"type": "",
																				"value": "55"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "47884:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "47876:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "47876:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "47866:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47866:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "47857:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "47900:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "47909:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "47912:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47905:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47905:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "47900:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "47857:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "47869:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47787:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47805:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47808:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47842:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47900:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47912:1:0",
														"valueSize": 1
													}
												],
												"id": 1421,
												"nodeType": "InlineAssembly",
												"src": "47764:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "47942:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "47956:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "47965:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "47974:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "47977:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "47970:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "47970:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "47961:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "47961:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "47956:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "47993:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "48006:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "48011:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "48002:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48002:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "47997:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "48026:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "48038:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "48049:2:0",
																				"type": "",
																				"value": "54"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "48053:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "48045:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "48045:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "48035:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48035:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "48026:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "48069:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "48078:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "48081:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "48074:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48074:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "48069:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "48026:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "48038:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47956:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47974:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "47977:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48011:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48069:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48081:1:0",
														"valueSize": 1
													}
												],
												"id": 1422,
												"nodeType": "InlineAssembly",
												"src": "47933:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "48111:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "48125:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "48134:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "48143:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "48146:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "48139:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "48139:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "48130:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48130:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "48125:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "48162:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "48175:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "48180:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "48171:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48171:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "48166:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "48195:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "48207:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "48218:2:0",
																				"type": "",
																				"value": "53"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "48222:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "48214:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "48214:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "48204:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48204:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "48195:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "48238:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "48247:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "48250:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "48243:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48243:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "48238:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "48195:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "48207:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48125:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48143:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48146:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48180:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48238:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48250:1:0",
														"valueSize": 1
													}
												],
												"id": 1423,
												"nodeType": "InlineAssembly",
												"src": "48102:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "48280:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "48294:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "48303:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "48312:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "48315:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "48308:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "48308:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "48299:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48299:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "48294:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "48331:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "48344:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "48349:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "48340:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48340:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "48335:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "48364:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "48376:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "48387:2:0",
																				"type": "",
																				"value": "52"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "48391:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "48383:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "48383:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "48373:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48373:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "48364:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "48407:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "48416:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "48419:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "48412:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48412:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "48407:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "48364:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "48376:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48294:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48312:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48315:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48349:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48407:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48419:1:0",
														"valueSize": 1
													}
												],
												"id": 1424,
												"nodeType": "InlineAssembly",
												"src": "48271:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "48449:151:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "48463:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "48472:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "48481:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "48484:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "48477:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "48477:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "48468:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48468:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "48463:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "48500:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "48513:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "48518:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "48509:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48509:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "48504:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "48533:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "48545:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "48556:2:0",
																				"type": "",
																				"value": "51"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "48560:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "48552:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "48552:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "48542:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48542:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "48533:5:0"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "48576:14:0",
															"value": {
																"arguments": [
																	{
																		"name": "f",
																		"nodeType": "YulIdentifier",
																		"src": "48585:1:0"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "48588:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "48581:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48581:9:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "48576:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "48533:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "48545:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48463:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48481:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48484:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48518:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48576:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48588:1:0",
														"valueSize": 1
													}
												],
												"id": 1425,
												"nodeType": "InlineAssembly",
												"src": "48440:160:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "48618:124:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "48632:24:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "48641:3:0",
																		"type": "",
																		"value": "127"
																	},
																	{
																		"arguments": [
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "48650:1:0"
																			},
																			{
																				"name": "r",
																				"nodeType": "YulIdentifier",
																				"src": "48653:1:0"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "48646:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "48646:9:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "48637:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48637:19:0"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "48632:1:0"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "48669:20:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "48682:3:0",
																		"type": "",
																		"value": "128"
																	},
																	{
																		"name": "r",
																		"nodeType": "YulIdentifier",
																		"src": "48687:1:0"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "48678:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48678:11:0"
															},
															"variables": [
																{
																	"name": "f",
																	"nodeType": "YulTypedName",
																	"src": "48673:1:0",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "48702:30:0",
															"value": {
																"arguments": [
																	{
																		"name": "log_2",
																		"nodeType": "YulIdentifier",
																		"src": "48714:5:0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "48725:2:0",
																				"type": "",
																				"value": "50"
																			},
																			{
																				"name": "f",
																				"nodeType": "YulIdentifier",
																				"src": "48729:1:0"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "48721:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "48721:10:0"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "48711:2:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "48711:21:0"
															},
															"variableNames": [
																{
																	"name": "log_2",
																	"nodeType": "YulIdentifier",
																	"src": "48702:5:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "48702:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1402,
														"isOffset": false,
														"isSlot": false,
														"src": "48714:5:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48632:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48650:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48653:1:0",
														"valueSize": 1
													},
													{
														"declaration": 1364,
														"isOffset": false,
														"isSlot": false,
														"src": "48687:1:0",
														"valueSize": 1
													}
												],
												"id": 1426,
												"nodeType": "InlineAssembly",
												"src": "48609:133:0"
											},
											{
												"assignments": [
													1428
												],
												"declarations": [
													{
														"constant": false,
														"id": 1428,
														"mutability": "mutable",
														"name": "log_sqrt10001",
														"nodeType": "VariableDeclaration",
														"scope": 1473,
														"src": "48752:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1427,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "48752:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1432,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1429,
														"name": "log_2",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1402,
														"src": "48775:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"hexValue": "323535373338393538393939363033383236333437313431",
														"id": 1430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48783:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_255738958999603826347141_by_1",
															"typeString": "int_const 255738958999603826347141"
														},
														"value": "255738958999603826347141"
													},
													"src": "48775:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48752:55:0"
											},
											{
												"assignments": [
													1434
												],
												"declarations": [
													{
														"constant": false,
														"id": 1434,
														"mutability": "mutable",
														"name": "tickLow",
														"nodeType": "VariableDeclaration",
														"scope": 1473,
														"src": "48836:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 1433,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "48836:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1444,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1439,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1437,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "48859:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "33343032393932393536383039313332343138353936313430313030363630323437323130",
																			"id": 1438,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48875:37:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3402992956809132418596140100660247210_by_1",
																				"typeString": "int_const 3402...(29 digits omitted)...7210"
																			},
																			"value": "3402992956809132418596140100660247210"
																		},
																		"src": "48859:53:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 1440,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "48858:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "48917:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "48858:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1436,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "48852:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 1435,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "48852:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48852:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48836:85:0"
											},
											{
												"assignments": [
													1446
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "tickHi",
														"nodeType": "VariableDeclaration",
														"scope": 1473,
														"src": "48931:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														},
														"typeName": {
															"id": 1445,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "48931:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1456,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1449,
																			"name": "log_sqrt10001",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1428,
																			"src": "48953:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "323931333339343634373731393839363232393037303237363231313533333938303838343935",
																			"id": 1450,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48969:39:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_291339464771989622907027621153398088495_by_1",
																				"typeString": "int_const 2913...(31 digits omitted)...8495"
																			},
																			"value": "291339464771989622907027621153398088495"
																		},
																		"src": "48953:55:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"id": 1452,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "48952:57:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"hexValue": "313238",
																"id": 1453,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49013:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_128_by_1",
																	"typeString": "int_const 128"
																},
																"value": "128"
															},
															"src": "48952:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 1448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "48946:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int24_$",
															"typeString": "type(int24)"
														},
														"typeName": {
															"id": 1447,
															"name": "int24",
															"nodeType": "ElementaryTypeName",
															"src": "48946:5:0",
															"typeDescriptions": {}
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "48946:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "48931:86:0"
											},
											{
												"expression": {
													"id": 1471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1457,
														"name": "tick",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1341,
														"src": "49028:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"condition": {
															"commonType": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															},
															"id": 1460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1458,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "49035:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1459,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "49046:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"src": "49035:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"falseExpression": {
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 1466,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1463,
																			"name": "tickHi",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1446,
																			"src": "49084:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_int24",
																				"typeString": "int24"
																			}
																		],
																		"id": 1462,
																		"name": "getSqrtRatioAtTick",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1335,
																		"src": "49065:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_int24_$returns$_t_uint160_$",
																			"typeString": "function (int24) pure returns (uint160)"
																		}
																	},
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "49065:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<=",
																"rightExpression": {
																	"id": 1465,
																	"name": "sqrtPriceX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1338,
																	"src": "49095:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"src": "49065:42:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 1468,
																"name": "tickLow",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1434,
																"src": "49119:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"id": 1469,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "49065:61:0",
															"trueExpression": {
																"id": 1467,
																"name": "tickHi",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1446,
																"src": "49110:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int24",
																	"typeString": "int24"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"id": 1470,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "Conditional",
														"src": "49035:91:0",
														"trueExpression": {
															"id": 1461,
															"name": "tickLow",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1434,
															"src": "49055:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int24",
																"typeString": "int24"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "49028:98:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 1472,
												"nodeType": "ExpressionStatement",
												"src": "49028:98:0"
											}
										]
									},
									"documentation": {
										"id": 1336,
										"nodeType": "StructuredDocumentation",
										"src": "44439:408:0",
										"text": "@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"
									},
									"id": 1474,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTickAtSqrtRatio",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1338,
												"mutability": "mutable",
												"name": "sqrtPriceX96",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "44880:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1337,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "44880:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44879:22:0"
									},
									"returnParameters": {
										"id": 1342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1341,
												"mutability": "mutable",
												"name": "tick",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "44925:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 1340,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "44925:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44924:12:0"
									},
									"scope": 1475,
									"src": "44852:4281:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2005,
							"src": "40804:8331:0"
						},
						{
							"id": 1476,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "49198:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1477,
								"nodeType": "StructuredDocumentation",
								"src": "49224:94:0",
								"text": "@title Safe casting methods\n @notice Contains methods for safely casting between types"
							},
							"fullyImplemented": true,
							"id": 1544,
							"linearizedBaseContracts": [
								1544
							],
							"name": "SafeCast",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "49574:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1494,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 1491,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1486,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1483,
																			"src": "49593:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1489,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "49605:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1488,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "49597:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint160_$",
																					"typeString": "type(uint160)"
																				},
																				"typeName": {
																					"id": 1487,
																					"name": "uint160",
																					"nodeType": "ElementaryTypeName",
																					"src": "49597:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1490,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "49597:10:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"src": "49593:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 1492,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "49592:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1493,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1480,
																"src": "49612:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "49592:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1485,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49584:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49584:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1496,
												"nodeType": "ExpressionStatement",
												"src": "49584:30:0"
											}
										]
									},
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "49341:164:0",
										"text": "@notice Cast a uint256 to a uint160, revert on overflow\n @param y The uint256 to be downcasted\n @return z The downcasted integer, now type uint160"
									},
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "49529:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "49529:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49528:11:0"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "49563:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1482,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "49563:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49562:11:0"
									},
									"scope": 1544,
									"src": "49510:111:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1518,
										"nodeType": "Block",
										"src": "49866:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"id": 1512,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1507,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1504,
																			"src": "49885:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"arguments": [
																				{
																					"id": 1510,
																					"name": "y",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1501,
																					"src": "49896:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"id": 1509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "49889:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_int128_$",
																					"typeString": "type(int128)"
																				},
																				"typeName": {
																					"id": 1508,
																					"name": "int128",
																					"nodeType": "ElementaryTypeName",
																					"src": "49889:6:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 1511,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "49889:9:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_int128",
																				"typeString": "int128"
																			}
																		},
																		"src": "49885:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int128",
																			"typeString": "int128"
																		}
																	}
																],
																"id": 1513,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "49884:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int128",
																	"typeString": "int128"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 1514,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1501,
																"src": "49903:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"src": "49884:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1506,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "49876:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49876:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1517,
												"nodeType": "ExpressionStatement",
												"src": "49876:29:0"
											}
										]
									},
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "49627:173:0",
										"text": "@notice Cast a int256 to a int128, revert on overflow or underflow\n @param y The int256 to be downcasted\n @return z The downcasted integer, now type int128"
									},
									"id": 1519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "49823:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1500,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "49823:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49822:10:0"
									},
									"returnParameters": {
										"id": 1505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1504,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "49856:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 1503,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "49856:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49855:10:0"
									},
									"scope": 1544,
									"src": "49805:107:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1542,
										"nodeType": "Block",
										"src": "50139:59:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1528,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "50157:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50161:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "323535",
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "50164:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_255_by_1",
																		"typeString": "int_const 255"
																	},
																	"value": "255"
																},
																"src": "50161:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_57896044618658097711785492504343953926634992332820282019728792003956564819968_by_1",
																	"typeString": "int_const 5789...(69 digits omitted)...9968"
																}
															},
															"src": "50157:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1527,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "50149:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50149:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1534,
												"nodeType": "ExpressionStatement",
												"src": "50149:19:0"
											},
											{
												"expression": {
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1535,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "50178:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1538,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1522,
																"src": "50189:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50182:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int256_$",
																"typeString": "type(int256)"
															},
															"typeName": {
																"id": 1536,
																"name": "int256",
																"nodeType": "ElementaryTypeName",
																"src": "50182:6:0",
																"typeDescriptions": {}
															}
														},
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50182:9:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "50178:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"id": 1541,
												"nodeType": "ExpressionStatement",
												"src": "50178:13:0"
											}
										]
									},
									"documentation": {
										"id": 1520,
										"nodeType": "StructuredDocumentation",
										"src": "49918:154:0",
										"text": "@notice Cast a uint256 to a int256, revert on overflow\n @param y The uint256 to be casted\n @return z The casted integer, now type int256"
									},
									"id": 1543,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1522,
												"mutability": "mutable",
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "50095:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50095:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50094:11:0"
									},
									"returnParameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1525,
												"mutability": "mutable",
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 1543,
												"src": "50129:8:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1524,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "50129:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50128:10:0"
									},
									"scope": 1544,
									"src": "50077:121:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2005,
							"src": "49318:882:0"
						},
						{
							"id": 1545,
							"literals": [
								"solidity",
								"=",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "50239:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1547,
										"name": "IQuoter",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 440,
										"src": "50605:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IQuoter_$440",
											"typeString": "contract IQuoter"
										}
									},
									"id": 1548,
									"nodeType": "InheritanceSpecifier",
									"src": "50605:7:0"
								},
								{
									"baseName": {
										"id": 1549,
										"name": "IUniswapV3SwapCallback",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 453,
										"src": "50614:22:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IUniswapV3SwapCallback_$453",
											"typeString": "contract IUniswapV3SwapCallback"
										}
									},
									"id": 1550,
									"nodeType": "InheritanceSpecifier",
									"src": "50614:22:0"
								},
								{
									"baseName": {
										"id": 1551,
										"name": "PeripheryImmutableState",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 384,
										"src": "50638:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_PeripheryImmutableState_$384",
											"typeString": "contract PeripheryImmutableState"
										}
									},
									"id": 1552,
									"nodeType": "InheritanceSpecifier",
									"src": "50638:23:0"
								}
							],
							"contractDependencies": [
								355,
								384,
								440,
								453
							],
							"contractKind": "contract",
							"documentation": {
								"id": 1546,
								"nodeType": "StructuredDocumentation",
								"src": "50273:313:0",
								"text": "@title Provides quotes for swaps\n @notice Allows getting the expected amount out or amount in for a given swap without executing the swap\n @dev These functions are not gas efficient and should _not_ be called on chain. Instead, optimistically execute\n the swap and check the amounts in the callback."
							},
							"fullyImplemented": true,
							"id": 2004,
							"linearizedBaseContracts": [
								2004,
								384,
								355,
								453,
								440
							],
							"name": "Quoter",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1555,
									"libraryName": {
										"id": 1553,
										"name": "Path",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 340,
										"src": "50674:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Path_$340",
											"typeString": "library Path"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "50668:21:0",
									"typeName": {
										"id": 1554,
										"name": "bytes",
										"nodeType": "ElementaryTypeName",
										"src": "50683:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes_storage_ptr",
											"typeString": "bytes"
										}
									}
								},
								{
									"id": 1558,
									"libraryName": {
										"id": 1556,
										"name": "SafeCast",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1544,
										"src": "50700:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeCast_$1544",
											"typeString": "library SafeCast"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "50694:27:0",
									"typeName": {
										"id": 1557,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "50713:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"documentation": {
										"id": 1559,
										"nodeType": "StructuredDocumentation",
										"src": "50727:91:0",
										"text": "@dev Transient storage variable used to check a safety condition in exact output swaps."
									},
									"id": 1561,
									"mutability": "mutable",
									"name": "amountOutCached",
									"nodeType": "VariableDeclaration",
									"scope": 2004,
									"src": "50823:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1560,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "50823:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1572,
										"nodeType": "Block",
										"src": "50949:2:0",
										"statements": []
									},
									"id": 1573,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 1568,
													"name": "_factory",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1563,
													"src": "50931:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												{
													"id": 1569,
													"name": "_WETH9",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1565,
													"src": "50941:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1570,
											"modifierName": {
												"id": 1567,
												"name": "PeripheryImmutableState",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 384,
												"src": "50907:23:0",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_PeripheryImmutableState_$384_$",
													"typeString": "type(contract PeripheryImmutableState)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "50907:41:0"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "_factory",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "50873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1565,
												"mutability": "mutable",
												"name": "_WETH9",
												"nodeType": "VariableDeclaration",
												"scope": 1573,
												"src": "50891:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1564,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50891:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50872:34:0"
									},
									"returnParameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50949:0:0"
									},
									"scope": 2004,
									"src": "50861:90:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1597,
										"nodeType": "Block",
										"src": "51086:120:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1587,
																	"name": "factory",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 363,
																	"src": "51145:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 1590,
																			"name": "tokenA",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1575,
																			"src": "51177:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1591,
																			"name": "tokenB",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1577,
																			"src": "51185:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1592,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1579,
																			"src": "51193:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		],
																		"expression": {
																			"id": 1588,
																			"name": "PoolAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 91,
																			"src": "51154:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_PoolAddress_$91_$",
																				"typeString": "type(library PoolAddress)"
																			}
																		},
																		"id": 1589,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "getPoolKey",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 43,
																		"src": "51154:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_uint24_$returns$_t_struct$_PoolKey_$12_memory_ptr_$",
																			"typeString": "function (address,address,uint24) pure returns (struct PoolAddress.PoolKey memory)"
																		}
																	},
																	"id": 1593,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "51154:43:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_struct$_PoolKey_$12_memory_ptr",
																		"typeString": "struct PoolAddress.PoolKey memory"
																	}
																],
																"expression": {
																	"id": 1585,
																	"name": "PoolAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "51118:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_PoolAddress_$91_$",
																		"typeString": "type(library PoolAddress)"
																	}
																},
																"id": 1586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "computeAddress",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 90,
																"src": "51118:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_address_$_t_struct$_PoolKey_$12_memory_ptr_$returns$_t_address_$",
																	"typeString": "function (address,struct PoolAddress.PoolKey memory) pure returns (address)"
																}
															},
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "51118:80:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1584,
														"name": "IUniswapV3Pool",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 882,
														"src": "51103:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IUniswapV3Pool_$882_$",
															"typeString": "type(contract IUniswapV3Pool)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51103:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"functionReturnParameters": 1583,
												"id": 1596,
												"nodeType": "Return",
												"src": "51096:103:0"
											}
										]
									},
									"id": 1598,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getPool",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "tokenA",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "50983:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50983:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "tokenB",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "51007:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51007:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "51031:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1578,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "51031:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50973:74:0"
									},
									"returnParameters": {
										"id": 1583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1598,
												"src": "51070:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
													"typeString": "contract IUniswapV3Pool"
												},
												"typeName": {
													"id": 1581,
													"name": "IUniswapV3Pool",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 882,
													"src": "51070:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51069:16:0"
									},
									"scope": 2004,
									"src": "50957:249:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										452
									],
									"body": {
										"id": 1691,
										"nodeType": "Block",
										"src": "51400:1100:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1612,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1610,
																	"name": "amount0Delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1601,
																	"src": "51418:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51433:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "51418:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1613,
																	"name": "amount1Delta",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1603,
																	"src": "51438:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "51453:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "51438:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "51418:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1609,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "51410:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51410:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "51410:45:0"
											},
											{
												"assignments": [
													1620,
													1622,
													1624
												],
												"declarations": [
													{
														"constant": false,
														"id": 1620,
														"mutability": "mutable",
														"name": "tokenIn",
														"nodeType": "VariableDeclaration",
														"scope": 1691,
														"src": "51529:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1619,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "51529:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "tokenOut",
														"nodeType": "VariableDeclaration",
														"scope": 1691,
														"src": "51546:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1621,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "51546:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1624,
														"mutability": "mutable",
														"name": "fee",
														"nodeType": "VariableDeclaration",
														"scope": 1691,
														"src": "51564:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1623,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "51564:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1628,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1625,
															"name": "path",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1605,
															"src": "51578:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "decodeFirstPool",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 306,
														"src": "51578:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) pure returns (address,address,uint24)"
														}
													},
													"id": 1627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51578:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
														"typeString": "tuple(address,address,uint24)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51528:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1632,
															"name": "factory",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 363,
															"src": "51644:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1633,
															"name": "tokenIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1620,
															"src": "51653:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1634,
															"name": "tokenOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1622,
															"src": "51662:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1635,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1624,
															"src": "51672:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"expression": {
															"id": 1629,
															"name": "CallbackValidation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 941,
															"src": "51610:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_CallbackValidation_$941_$",
																"typeString": "type(library CallbackValidation)"
															}
														},
														"id": 1631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "verifyCallback",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 909,
														"src": "51610:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$882_$",
															"typeString": "function (address,address,address,uint24) view returns (contract IUniswapV3Pool)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51610:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
														"typeString": "contract IUniswapV3Pool"
													}
												},
												"id": 1637,
												"nodeType": "ExpressionStatement",
												"src": "51610:66:0"
											},
											{
												"assignments": [
													1639,
													1641,
													1643
												],
												"declarations": [
													{
														"constant": false,
														"id": 1639,
														"mutability": "mutable",
														"name": "isExactInput",
														"nodeType": "VariableDeclaration",
														"scope": 1691,
														"src": "51688:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1638,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "51688:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1641,
														"mutability": "mutable",
														"name": "amountToPay",
														"nodeType": "VariableDeclaration",
														"scope": 1691,
														"src": "51707:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1640,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "51707:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1643,
														"mutability": "mutable",
														"name": "amountReceived",
														"nodeType": "VariableDeclaration",
														"scope": 1691,
														"src": "51728:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1642,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "51728:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1674,
												"initialValue": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1644,
															"name": "amount0Delta",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1601,
															"src": "51766:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1645,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "51781:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "51766:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1660,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "51888:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1661,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "51899:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "51888:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1665,
																		"name": "amount1Delta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1603,
																		"src": "51916:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1664,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "51908:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1663,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "51908:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51908:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "51939:13:0",
																		"subExpression": {
																			"id": 1669,
																			"name": "amount0Delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1601,
																			"src": "51940:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1668,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "51931:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1667,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "51931:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1671,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51931:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1672,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "51887:67:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(bool,uint256,uint256)"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "51766:188:0",
													"trueExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1647,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1620,
																	"src": "51802:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 1648,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1622,
																	"src": "51812:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "51802:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1652,
																		"name": "amount0Delta",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1601,
																		"src": "51830:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1651,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "51822:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1650,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "51822:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51822:21:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"arguments": [
																	{
																		"id": 1657,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "51853:13:0",
																		"subExpression": {
																			"id": 1656,
																			"name": "amount1Delta",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1603,
																			"src": "51854:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 1655,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "51845:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1654,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "51845:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51845:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1659,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "51801:67:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
															"typeString": "tuple(bool,uint256,uint256)"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(bool,uint256,uint256)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "51687:267:0"
											},
											{
												"condition": {
													"id": 1675,
													"name": "isExactInput",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1639,
													"src": "51968:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1689,
													"nodeType": "Block",
													"src": "52151:343:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1680,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1678,
																	"name": "amountOutCached",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1561,
																	"src": "52270:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52289:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "52270:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1687,
															"nodeType": "IfStatement",
															"src": "52266:68:0",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1684,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1682,
																				"name": "amountReceived",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1643,
																				"src": "52300:14:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"id": 1683,
																				"name": "amountOutCached",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1561,
																				"src": "52318:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "52300:33:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		],
																		"id": 1681,
																		"name": "require",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967278,
																			4294967278
																		],
																		"referencedDeclaration": 4294967278,
																		"src": "52292:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
																			"typeString": "function (bool) pure"
																		}
																	},
																	"id": 1685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "52292:42:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1686,
																"nodeType": "ExpressionStatement",
																"src": "52292:42:0"
															}
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "52357:127:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "52375:22:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "52392:4:0",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "52386:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "52386:11:0"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "52379:3:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "52421:3:0"
																				},
																				{
																					"name": "amountToPay",
																					"nodeType": "YulIdentifier",
																					"src": "52426:11:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "52414:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "52414:24:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "52414:24:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "52462:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "52467:2:0",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "52455:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "52455:15:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "52455:15:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1641,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "52426:11:0",
																	"valueSize": 1
																}
															],
															"id": 1688,
															"nodeType": "InlineAssembly",
															"src": "52348:136:0"
														}
													]
												},
												"id": 1690,
												"nodeType": "IfStatement",
												"src": "51964:530:0",
												"trueBody": {
													"id": 1677,
													"nodeType": "Block",
													"src": "51982:163:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "52005:130:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "52023:22:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "52040:4:0",
																					"type": "",
																					"value": "0x40"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "52034:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "52034:11:0"
																		},
																		"variables": [
																			{
																				"name": "ptr",
																				"nodeType": "YulTypedName",
																				"src": "52027:3:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "52069:3:0"
																				},
																				{
																					"name": "amountReceived",
																					"nodeType": "YulIdentifier",
																					"src": "52074:14:0"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "52062:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "52062:27:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "52062:27:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "ptr",
																					"nodeType": "YulIdentifier",
																					"src": "52113:3:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "52118:2:0",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "52106:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "52106:15:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "52106:15:0"
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1643,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "52074:14:0",
																	"valueSize": 1
																}
															],
															"id": 1676,
															"nodeType": "InlineAssembly",
															"src": "51996:139:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1599,
										"nodeType": "StructuredDocumentation",
										"src": "51212:38:0",
										"text": "@inheritdoc IUniswapV3SwapCallback"
									},
									"functionSelector": "fa461e33",
									"id": 1692,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uniswapV3SwapCallback",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1607,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "51391:8:0"
									},
									"parameters": {
										"id": 1606,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1601,
												"mutability": "mutable",
												"name": "amount0Delta",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "51295:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1600,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "51295:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1603,
												"mutability": "mutable",
												"name": "amount1Delta",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "51324:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1602,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "51324:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1605,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1692,
												"src": "51353:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1604,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "51353:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51285:91:0"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51400:0:0"
									},
									"scope": 2004,
									"src": "51255:1245:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "52659:293:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1700,
															"name": "reason",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "52673:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "52673:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "3332",
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "52690:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_32_by_1",
															"typeString": "int_const 32"
														},
														"value": "32"
													},
													"src": "52673:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1725,
												"nodeType": "IfStatement",
												"src": "52669:231:0",
												"trueBody": {
													"id": 1724,
													"nodeType": "Block",
													"src": "52694:206:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1707,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 1704,
																		"name": "reason",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1695,
																		"src": "52712:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "52712:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"hexValue": "3638",
																	"id": 1706,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "52728:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_68_by_1",
																		"typeString": "int_const 68"
																	},
																	"value": "68"
																},
																"src": "52712:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1712,
															"nodeType": "IfStatement",
															"src": "52708:50:0",
															"trueBody": {
																"expression": {
																	"arguments": [
																		{
																			"hexValue": "556e6578706563746564206572726f72",
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "string",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "52739:18:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff",
																				"typeString": "literal_string \"Unexpected error\""
																			},
																			"value": "Unexpected error"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_stringliteral_9b951eb3fb3742579e39d15610bb1800acf108358e69a1cabf56fc48cbe86cff",
																				"typeString": "literal_string \"Unexpected error\""
																			}
																		],
																		"id": 1708,
																		"name": "revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			4294967277,
																			4294967277
																		],
																		"referencedDeclaration": 4294967277,
																		"src": "52732:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																			"typeString": "function (string memory) pure"
																		}
																	},
																	"id": 1710,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "52732:26:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1711,
																"nodeType": "ExpressionStatement",
																"src": "52732:26:0"
															}
														},
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "52781:59:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "52799:27:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "reason",
																					"nodeType": "YulIdentifier",
																					"src": "52813:6:0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "52821:4:0",
																					"type": "",
																					"value": "0x04"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "52809:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "52809:17:0"
																		},
																		"variableNames": [
																			{
																				"name": "reason",
																				"nodeType": "YulIdentifier",
																				"src": "52799:6:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "istanbul",
															"externalReferences": [
																{
																	"declaration": 1695,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "52799:6:0",
																	"valueSize": 1
																},
																{
																	"declaration": 1695,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "52813:6:0",
																	"valueSize": 1
																}
															],
															"id": 1713,
															"nodeType": "InlineAssembly",
															"src": "52772:68:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1717,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1695,
																				"src": "52871:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1719,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "52880:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																							"typeString": "type(string storage pointer)"
																						},
																						"typeName": {
																							"id": 1718,
																							"name": "string",
																							"nodeType": "ElementaryTypeName",
																							"src": "52880:6:0",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1720,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "52879:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																					"typeString": "type(string storage pointer)"
																				}
																			],
																			"expression": {
																				"id": 1715,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "52860:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1716,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "52860:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "52860:28:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 1714,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "52853:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52853:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1723,
															"nodeType": "ExpressionStatement",
															"src": "52853:36:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1728,
															"name": "reason",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1695,
															"src": "52927:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"components": [
																{
																	"id": 1730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "52936:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1729,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "52936:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"id": 1731,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "52935:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															}
														],
														"expression": {
															"id": 1726,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "52916:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberName": "decode",
														"nodeType": "MemberAccess",
														"src": "52916:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
															"typeString": "function () pure"
														}
													},
													"id": 1732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52916:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1699,
												"id": 1733,
												"nodeType": "Return",
												"src": "52909:36:0"
											}
										]
									},
									"documentation": {
										"id": 1693,
										"nodeType": "StructuredDocumentation",
										"src": "52506:69:0",
										"text": "@dev Parses a revert reason that should contain the numeric quote"
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "parseRevertReason",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "reason",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "52607:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1694,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "52607:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52606:21:0"
									},
									"returnParameters": {
										"id": 1699,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1698,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 1735,
												"src": "52650:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1697,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52650:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52649:9:0"
									},
									"scope": 2004,
									"src": "52580:372:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										413
									],
									"body": {
										"id": 1807,
										"nodeType": "Block",
										"src": "53199:605:0",
										"statements": [
											{
												"assignments": [
													1753
												],
												"declarations": [
													{
														"constant": false,
														"id": 1753,
														"mutability": "mutable",
														"name": "zeroForOne",
														"nodeType": "VariableDeclaration",
														"scope": 1807,
														"src": "53209:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1752,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "53209:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1757,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1754,
														"name": "tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1738,
														"src": "53227:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1755,
														"name": "tokenOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1740,
														"src": "53237:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53227:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "53209:36:0"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 1795,
															"nodeType": "Block",
															"src": "53710:2:0",
															"statements": []
														},
														"errorName": "",
														"id": 1796,
														"nodeType": "TryCatchClause",
														"src": "53710:2:0"
													},
													{
														"block": {
															"id": 1804,
															"nodeType": "Block",
															"src": "53741:57:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1801,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1798,
																				"src": "53780:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1800,
																			"name": "parseRevertReason",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "53762:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																				"typeString": "function (bytes memory) pure returns (uint256)"
																			}
																		},
																		"id": 1802,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "53762:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1751,
																	"id": 1803,
																	"nodeType": "Return",
																	"src": "53755:32:0"
																}
															]
														},
														"errorName": "",
														"id": 1805,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1799,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1798,
																	"mutability": "mutable",
																	"name": "reason",
																	"nodeType": "VariableDeclaration",
																	"scope": 1805,
																	"src": "53720:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1797,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "53720:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "53719:21:0"
														},
														"src": "53713:85:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1766,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "53334:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Quoter_$2004",
																		"typeString": "contract Quoter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Quoter_$2004",
																		"typeString": "contract Quoter"
																	}
																],
																"id": 1765,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53326:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1764,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53326:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53326:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1768,
															"name": "zeroForOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1753,
															"src": "53407:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 1769,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1744,
																	"src": "53435:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "toInt256",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1543,
																"src": "53435:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (int256)"
																}
															},
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53435:19:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 1774,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1772,
																	"name": "sqrtPriceLimitX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1746,
																	"src": "53472:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1773,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53493:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "53472:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 1786,
																"name": "sqrtPriceLimitX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1746,
																"src": "53612:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "53472:157:0",
															"trueExpression": {
																"components": [
																	{
																		"condition": {
																			"id": 1775,
																			"name": "zeroForOne",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1753,
																			"src": "53518:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 1783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1780,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1475,
																					"src": "53561:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$1475_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 1781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "MAX_SQRT_RATIO",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 961,
																				"src": "53561:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1782,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "53587:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "53561:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 1784,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "53518:70:0",
																		"trueExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 1779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1776,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1475,
																					"src": "53531:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$1475_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 1777,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "MIN_SQRT_RATIO",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 957,
																				"src": "53531:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1778,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "53557:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "53531:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 1785,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "53517:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"arguments": [
																{
																	"id": 1790,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "53664:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1791,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "53673:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 1792,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "53678:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1788,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "53647:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1789,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "53647:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53647:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1759,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1738,
																	"src": "53280:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1760,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1740,
																	"src": "53289:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1761,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1742,
																	"src": "53299:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																],
																"id": 1758,
																"name": "getPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1598,
																"src": "53272:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$882_$",
																	"typeString": "function (address,address,uint24) view returns (contract IUniswapV3Pool)"
																}
															},
															"id": 1762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53272:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 672,
														"src": "53272:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
															"typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
														}
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53272:429:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256)"
													}
												},
												"id": 1806,
												"nodeType": "TryStatement",
												"src": "53256:542:0"
											}
										]
									},
									"documentation": {
										"id": 1736,
										"nodeType": "StructuredDocumentation",
										"src": "52958:23:0",
										"text": "@inheritdoc IQuoter"
									},
									"functionSelector": "f7729d43",
									"id": 1808,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInputSingle",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1748,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "53162:8:0"
									},
									"parameters": {
										"id": 1747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1738,
												"mutability": "mutable",
												"name": "tokenIn",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "53026:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "tokenOut",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "53051:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53051:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1742,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "53077:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1741,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "53077:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1744,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "53097:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1743,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53097:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "53123:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1745,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "53123:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53016:138:0"
									},
									"returnParameters": {
										"id": 1751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1808,
												"src": "53180:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53180:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53179:19:0"
									},
									"scope": 2004,
									"src": "52986:818:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										397
									],
									"body": {
										"id": 1860,
										"nodeType": "Block",
										"src": "53946:552:0",
										"statements": [
											{
												"body": {
													"id": 1858,
													"nodeType": "Block",
													"src": "53969:523:0",
													"statements": [
														{
															"assignments": [
																1821
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1821,
																	"mutability": "mutable",
																	"name": "hasMultiplePools",
																	"nodeType": "VariableDeclaration",
																	"scope": 1858,
																	"src": "53983:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1820,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "53983:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1825,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1822,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1811,
																		"src": "54007:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1823,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "hasMultiplePools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 254,
																	"src": "54007:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (bool)"
																	}
																},
																"id": 1824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54007:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "53983:47:0"
														},
														{
															"assignments": [
																1827,
																1829,
																1831
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1827,
																	"mutability": "mutable",
																	"name": "tokenIn",
																	"nodeType": "VariableDeclaration",
																	"scope": 1858,
																	"src": "54046:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1826,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "54046:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1829,
																	"mutability": "mutable",
																	"name": "tokenOut",
																	"nodeType": "VariableDeclaration",
																	"scope": 1858,
																	"src": "54063:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1828,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "54063:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1831,
																	"mutability": "mutable",
																	"name": "fee",
																	"nodeType": "VariableDeclaration",
																	"scope": 1858,
																	"src": "54081:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	"typeName": {
																		"id": 1830,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "54081:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1835,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1832,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1811,
																		"src": "54095:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1833,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "decodeFirstPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 306,
																	"src": "54095:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (address,address,uint24)"
																	}
																},
																"id": 1834,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54095:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
																	"typeString": "tuple(address,address,uint24)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "54045:72:0"
														},
														{
															"expression": {
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1836,
																	"name": "amountIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "54211:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1838,
																			"name": "tokenIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1827,
																			"src": "54244:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1839,
																			"name": "tokenOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1829,
																			"src": "54253:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1840,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "54263:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		},
																		{
																			"id": 1841,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1813,
																			"src": "54268:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "30",
																			"id": 1842,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "54278:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1837,
																		"name": "quoteExactInputSingle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1808,
																		"src": "54222:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_uint256_$_t_uint160_$returns$_t_uint256_$",
																			"typeString": "function (address,address,uint24,uint256,uint160) returns (uint256)"
																		}
																	},
																	"id": 1843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "54222:58:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "54211:69:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1845,
															"nodeType": "ExpressionStatement",
															"src": "54211:69:0"
														},
														{
															"condition": {
																"id": 1846,
																"name": "hasMultiplePools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1821,
																"src": "54354:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1856,
																"nodeType": "Block",
																"src": "54434:48:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1854,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1813,
																			"src": "54459:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1818,
																		"id": 1855,
																		"nodeType": "Return",
																		"src": "54452:15:0"
																	}
																]
															},
															"id": 1857,
															"nodeType": "IfStatement",
															"src": "54350:132:0",
															"trueBody": {
																"id": 1853,
																"nodeType": "Block",
																"src": "54372:56:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1851,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1847,
																				"name": "path",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1811,
																				"src": "54390:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 1848,
																						"name": "path",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1811,
																						"src": "54397:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 1849,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "skipToken",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 339,
																					"src": "54397:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
																						"typeString": "function (bytes memory) pure returns (bytes memory)"
																					}
																				},
																				"id": 1850,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "54397:16:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"src": "54390:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1852,
																		"nodeType": "ExpressionStatement",
																		"src": "54390:23:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"hexValue": "74727565",
													"id": 1819,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "53963:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 1859,
												"nodeType": "WhileStatement",
												"src": "53956:536:0"
											}
										]
									},
									"documentation": {
										"id": 1809,
										"nodeType": "StructuredDocumentation",
										"src": "53810:23:0",
										"text": "@inheritdoc IQuoter"
									},
									"functionSelector": "cdca1753",
									"id": 1861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactInput",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1815,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "53909:8:0"
									},
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "53863:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1810,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "53863:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "53882:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1812,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53882:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53862:37:0"
									},
									"returnParameters": {
										"id": 1818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1861,
												"src": "53927:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "53927:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53926:19:0"
									},
									"scope": 2004,
									"src": "53838:660:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										439
									],
									"body": {
										"id": 1949,
										"nodeType": "Block",
										"src": "54746:860:0",
										"statements": [
											{
												"assignments": [
													1879
												],
												"declarations": [
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "zeroForOne",
														"nodeType": "VariableDeclaration",
														"scope": 1949,
														"src": "54756:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1878,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "54756:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1883,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1882,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1880,
														"name": "tokenIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1864,
														"src": "54774:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1881,
														"name": "tokenOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "54784:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54774:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54756:36:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													},
													"id": 1886,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1884,
														"name": "sqrtPriceLimitX96",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1872,
														"src": "54916:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1885,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "54937:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "54916:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1891,
												"nodeType": "IfStatement",
												"src": "54912:55:0",
												"trueBody": {
													"expression": {
														"id": 1889,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftHandSide": {
															"id": 1887,
															"name": "amountOutCached",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1561,
															"src": "54940:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "Assignment",
														"operator": "=",
														"rightHandSide": {
															"id": 1888,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "54958:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "54940:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1890,
													"nodeType": "ExpressionStatement",
													"src": "54940:27:0"
												}
											},
											{
												"clauses": [
													{
														"block": {
															"id": 1930,
															"nodeType": "Block",
															"src": "55433:2:0",
															"statements": []
														},
														"errorName": "",
														"id": 1931,
														"nodeType": "TryCatchClause",
														"src": "55433:2:0"
													},
													{
														"block": {
															"id": 1946,
															"nodeType": "Block",
															"src": "55464:136:0",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		},
																		"id": 1937,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1935,
																			"name": "sqrtPriceLimitX96",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1872,
																			"src": "55482:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1936,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "55503:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "55482:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1941,
																	"nodeType": "IfStatement",
																	"src": "55478:50:0",
																	"trueBody": {
																		"expression": {
																			"id": 1939,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "delete",
																			"prefix": true,
																			"src": "55506:22:0",
																			"subExpression": {
																				"id": 1938,
																				"name": "amountOutCached",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1561,
																				"src": "55513:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1940,
																		"nodeType": "ExpressionStatement",
																		"src": "55506:22:0"
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 1943,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1933,
																				"src": "55582:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 1942,
																			"name": "parseRevertReason",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1735,
																			"src": "55564:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint256_$",
																				"typeString": "function (bytes memory) pure returns (uint256)"
																			}
																		},
																		"id": 1944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55564:25:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1877,
																	"id": 1945,
																	"nodeType": "Return",
																	"src": "55557:32:0"
																}
															]
														},
														"errorName": "",
														"id": 1947,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1934,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1933,
																	"mutability": "mutable",
																	"name": "reason",
																	"nodeType": "VariableDeclaration",
																	"scope": 1947,
																	"src": "55443:19:0",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1932,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "55443:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "55442:21:0"
														},
														"src": "55436:164:0"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1900,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "55055:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Quoter_$2004",
																		"typeString": "contract Quoter"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Quoter_$2004",
																		"typeString": "contract Quoter"
																	}
																],
																"id": 1899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "55047:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1898,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "55047:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1901,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55047:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1902,
															"name": "zeroForOne",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "55128:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1906,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "-",
															"prefix": true,
															"src": "55156:21:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1903,
																		"name": "amountOut",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1870,
																		"src": "55157:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "toInt256",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1543,
																	"src": "55157:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_int256_$bound_to$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (int256)"
																	}
																},
																"id": 1905,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55157:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																},
																"id": 1909,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1907,
																	"name": "sqrtPriceLimitX96",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1872,
																	"src": "55195:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 1908,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "55216:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "55195:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseExpression": {
																"id": 1921,
																"name": "sqrtPriceLimitX96",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1872,
																"src": "55335:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"id": 1922,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "Conditional",
															"src": "55195:157:0",
															"trueExpression": {
																"components": [
																	{
																		"condition": {
																			"id": 1910,
																			"name": "zeroForOne",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1879,
																			"src": "55241:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 1918,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1915,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1475,
																					"src": "55284:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$1475_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 1916,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "MAX_SQRT_RATIO",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 961,
																				"src": "55284:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1917,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "55310:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "55284:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"id": 1919,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "55241:70:0",
																		"trueExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			},
																			"id": 1914,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 1911,
																					"name": "TickMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1475,
																					"src": "55254:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_TickMath_$1475_$",
																						"typeString": "type(library TickMath)"
																					}
																				},
																				"id": 1912,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "MIN_SQRT_RATIO",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 957,
																				"src": "55254:23:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint160",
																					"typeString": "uint160"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1913,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "55280:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "55254:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint160",
																				"typeString": "uint160"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"id": 1920,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "55240:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														},
														{
															"arguments": [
																{
																	"id": 1925,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "55387:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1926,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "55397:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																{
																	"id": 1927,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "55402:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 1923,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "55370:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1924,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "55370:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 1928,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "55370:40:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															},
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1893,
																	"name": "tokenIn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1864,
																	"src": "55001:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1894,
																	"name": "tokenOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1866,
																	"src": "55010:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1895,
																	"name": "fee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "55020:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																],
																"id": 1892,
																"name": "getPool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1598,
																"src": "54993:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_contract$_IUniswapV3Pool_$882_$",
																	"typeString": "function (address,address,uint24) view returns (contract IUniswapV3Pool)"
																}
															},
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54993:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IUniswapV3Pool_$882",
																"typeString": "contract IUniswapV3Pool"
															}
														},
														"id": 1897,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 672,
														"src": "54993:36:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bool_$_t_int256_$_t_uint160_$_t_bytes_memory_ptr_$returns$_t_int256_$_t_int256_$",
															"typeString": "function (address,bool,int256,uint160,bytes memory) external returns (int256,int256)"
														}
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54993:431:0",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_int256_$_t_int256_$",
														"typeString": "tuple(int256,int256)"
													}
												},
												"id": 1948,
												"nodeType": "TryStatement",
												"src": "54977:623:0"
											}
										]
									},
									"documentation": {
										"id": 1862,
										"nodeType": "StructuredDocumentation",
										"src": "54504:23:0",
										"text": "@inheritdoc IQuoter"
									},
									"functionSelector": "30d07f21",
									"id": 1950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutputSingle",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1874,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "54710:8:0"
									},
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1864,
												"mutability": "mutable",
												"name": "tokenIn",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "54573:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1863,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54573:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "tokenOut",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "54598:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "fee",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "54624:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1867,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "54624:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1870,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "54644:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54644:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1872,
												"mutability": "mutable",
												"name": "sqrtPriceLimitX96",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "54671:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 1871,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "54671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54563:139:0"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "54728:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54728:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54727:18:0"
									},
									"scope": 2004,
									"src": "54532:1074:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										423
									],
									"body": {
										"id": 2002,
										"nodeType": "Block",
										"src": "55749:556:0",
										"statements": [
											{
												"body": {
													"id": 2000,
													"nodeType": "Block",
													"src": "55772:527:0",
													"statements": [
														{
															"assignments": [
																1963
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1963,
																	"mutability": "mutable",
																	"name": "hasMultiplePools",
																	"nodeType": "VariableDeclaration",
																	"scope": 2000,
																	"src": "55786:21:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 1962,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "55786:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1967,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1964,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "55810:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1965,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "hasMultiplePools",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 254,
																	"src": "55810:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bool_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (bool)"
																	}
																},
																"id": 1966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55810:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "55786:47:0"
														},
														{
															"assignments": [
																1969,
																1971,
																1973
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1969,
																	"mutability": "mutable",
																	"name": "tokenOut",
																	"nodeType": "VariableDeclaration",
																	"scope": 2000,
																	"src": "55849:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1968,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "55849:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1971,
																	"mutability": "mutable",
																	"name": "tokenIn",
																	"nodeType": "VariableDeclaration",
																	"scope": 2000,
																	"src": "55867:15:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 1970,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "55867:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																},
																{
																	"constant": false,
																	"id": 1973,
																	"mutability": "mutable",
																	"name": "fee",
																	"nodeType": "VariableDeclaration",
																	"scope": 2000,
																	"src": "55884:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	},
																	"typeName": {
																		"id": 1972,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "55884:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1977,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 1974,
																		"name": "path",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1953,
																		"src": "55898:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 1975,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "decodeFirstPool",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 306,
																	"src": "55898:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_address_$_t_address_$_t_uint24_$bound_to$_t_bytes_memory_ptr_$",
																		"typeString": "function (bytes memory) pure returns (address,address,uint24)"
																	}
																},
																"id": 1976,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55898:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint24_$",
																	"typeString": "tuple(address,address,uint24)"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "55848:72:0"
														},
														{
															"expression": {
																"id": 1986,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1978,
																	"name": "amountOut",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1955,
																	"src": "56014:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 1980,
																			"name": "tokenIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1971,
																			"src": "56049:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1981,
																			"name": "tokenOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1969,
																			"src": "56058:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1982,
																			"name": "fee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1973,
																			"src": "56068:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			}
																		},
																		{
																			"id": 1983,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1955,
																			"src": "56073:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"hexValue": "30",
																			"id": 1984,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "56084:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint24",
																				"typeString": "uint24"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1979,
																		"name": "quoteExactOutputSingle",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1950,
																		"src": "56026:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint24_$_t_uint256_$_t_uint160_$returns$_t_uint256_$",
																			"typeString": "function (address,address,uint24,uint256,uint160) returns (uint256)"
																		}
																	},
																	"id": 1985,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "56026:60:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "56014:72:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1987,
															"nodeType": "ExpressionStatement",
															"src": "56014:72:0"
														},
														{
															"condition": {
																"id": 1988,
																"name": "hasMultiplePools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "56160:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1998,
																"nodeType": "Block",
																"src": "56240:49:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1996,
																			"name": "amountOut",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1955,
																			"src": "56265:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"functionReturnParameters": 1960,
																		"id": 1997,
																		"nodeType": "Return",
																		"src": "56258:16:0"
																	}
																]
															},
															"id": 1999,
															"nodeType": "IfStatement",
															"src": "56156:133:0",
															"trueBody": {
																"id": 1995,
																"nodeType": "Block",
																"src": "56178:56:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1993,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1989,
																				"name": "path",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1953,
																				"src": "56196:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"expression": {
																						"id": 1990,
																						"name": "path",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1953,
																						"src": "56203:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					},
																					"id": 1991,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "skipToken",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 339,
																					"src": "56203:14:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_bytes_memory_ptr_$",
																						"typeString": "function (bytes memory) pure returns (bytes memory)"
																					}
																				},
																				"id": 1992,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "56203:16:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"src": "56196:23:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1994,
																		"nodeType": "ExpressionStatement",
																		"src": "56196:23:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"hexValue": "74727565",
													"id": 1961,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "55766:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"id": 2001,
												"nodeType": "WhileStatement",
												"src": "55759:540:0"
											}
										]
									},
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "55612:23:0",
										"text": "@inheritdoc IQuoter"
									},
									"functionSelector": "2f80bb1d",
									"id": 2003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "quoteExactOutput",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1957,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "55713:8:0"
									},
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "path",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "55666:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1952,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "55666:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "55685:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1954,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55665:38:0"
									},
									"returnParameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "amountIn",
												"nodeType": "VariableDeclaration",
												"scope": 2003,
												"src": "55731:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55731:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55730:18:0"
									},
									"scope": 2004,
									"src": "55640:665:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2005,
							"src": "50586:5721:0"
						}
					],
					"src": "92:56216:0"
				},
				"id": 0
			}
		}
	}
}